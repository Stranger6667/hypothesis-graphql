{
    "Barcelona Urban Mobility API": "schema {\n  query: RootQuery\n}\n\n\"\"\"Root Query\"\"\"\ntype RootQuery {\n  \"\"\"Information about the metro stations of the city of Barcelona\"\"\"\n  metroStations(after: String, first: Int, before: String, last: Int, filterBy: FilterByInputTmb): MetroStationConnection\n\n  \"\"\"Returns the information about a metro station\"\"\"\n  metroStation(findBy: FindByInput!): MetroStationQueryResponse\n\n  \"\"\"Returns the information about a metro line\"\"\"\n  metroLine(findBy: FindByInput!): MetroLineQueryResponse\n\n  \"\"\"Information about the metro lines of the city of Barcelona\"\"\"\n  metroLines(after: String, first: Int, before: String, last: Int): MetroLineConnection\n\n  \"\"\"\n  Information about the public bike stations (SMOU) of the city of Barcelona\n  \"\"\"\n  bikeStations(after: String, first: Int, before: String, last: Int, filterBy: FilterByInputBike): BikeStationConnection\n\n  \"\"\"Returns the information about a bike station\"\"\"\n  bikeStation(findBy: FindByInput!): BikeStationQueryResponse\n\n  \"\"\"Returns the information about a bus stop\"\"\"\n  busStop(findBy: FindByInput!): BusStopQueryResponse\n\n  \"\"\"Information about the bus stops of the city of Barcelona\"\"\"\n  busStops(after: String, first: Int, before: String, last: Int, filterBy: FilterByInputTmb): BusStopConnection\n\n  \"\"\"Returns the information about a bus line\"\"\"\n  busLine(findBy: FindByInput!): BusLineQueryResponse\n\n  \"\"\"Information about the bus lines of the city of Barcelona\"\"\"\n  busLines(after: String, first: Int, before: String, last: Int): BusLineConnection\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype MetroStationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [MetroStationEdge]\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MetroStationEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: MetroStation\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"Metro station information\"\"\"\ntype MetroStation {\n  \"\"\"Unique ID of the station\"\"\"\n  id: ID\n\n  \"\"\"Name of the station\"\"\"\n  name: String\n\n  \"\"\"Location coordinates of the station\"\"\"\n  coordinates: CoordinatesOutput\n\n  \"\"\"Lines the station belongs to e.g. L1, L2\"\"\"\n  lines: [String]\n}\n\n\"\"\"Coordinates (Latitude, Longitude, Altitude), of a given station/stop\"\"\"\ntype CoordinatesOutput {\n  latitude: Float\n  longitude: Float\n  altitude: Float\n}\n\n\"\"\"\nInput for the filterBy argument of the metro and bus queries, which allows filtering a connection by some parameters (e.g. lineName or lineId)\n\"\"\"\ninput FilterByInputTmb {\n  lineId: Int\n  lineName: String\n}\n\nunion MetroStationQueryResponse = MetroStation | NotFoundError\n\ntype NotFoundError {\n  \"\"\"Search params that resulted in a not found error\"\"\"\n  params: JSON\n}\n\n\"\"\"\nThe `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).\n\"\"\"\nscalar JSON\n\n\"\"\"\nInput for the FindBy argument of the queries, which allows finding an entity by some parameters (e.g. name or id)\n\"\"\"\ninput FindByInput {\n  id: Int\n  name: String\n\n  \"\"\"Finds the closest station given some coordinates\"\"\"\n  closest: CoordinatesInput\n}\n\n\"\"\"Coordinates (Latitude, Longitude, Altitude), of a given station/stop\"\"\"\ninput CoordinatesInput {\n  latitude: Float\n  longitude: Float\n  altitude: Float\n}\n\nunion MetroLineQueryResponse = MetroLine | NotFoundError\n\n\"\"\"Metro line information\"\"\"\ntype MetroLine {\n  \"\"\"Numeric Code of the line\"\"\"\n  id: Int\n\n  \"\"\"Name of the line\"\"\"\n  name: String\n\n  \"\"\"Origin station of the line\"\"\"\n  originStation: MetroStation\n\n  \"\"\"Ending station of the line\"\"\"\n  endingStation: MetroStation\n\n  \"\"\"Stations of the line\"\"\"\n  stations(after: String, first: Int, before: String, last: Int): MetroStationConnection\n\n  \"\"\"Color of the line represented as a Hexadecimal string\"\"\"\n  color: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype MetroLineConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [MetroLineEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MetroLineEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: MetroLine\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BikeStationConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BikeStationEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BikeStationEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: BikeStation\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"Bike station information\"\"\"\ntype BikeStation {\n  \"\"\"Unique ID of the station\"\"\"\n  id: ID\n\n  \"\"\"Status of the station e.g. IN_SERVICE\"\"\"\n  status: BikeStationStatus\n\n  \"\"\"Last updated information timestamp (in ms since epoch)\"\"\"\n  lastUpdated: Int\n\n  \"\"\"Name of the station\"\"\"\n  name: String\n\n  \"\"\"Total number of bikes the station has\"\"\"\n  capacity: Int\n\n  \"\"\"Location coordinates of the station\"\"\"\n  coordinates: CoordinatesOutput\n\n  \"\"\"Information about the available bikes and docks of the station\"\"\"\n  available: BikeStationAvailabilityInfo\n}\n\nenum BikeStationStatus {\n  IN_SERVICE\n  MAINTENANCE\n  CLOSED\n}\n\n\"\"\"Information about the available bikes and docks of the station\"\"\"\ntype BikeStationAvailabilityInfo {\n  \"\"\"Number of available bikes in the station by type\"\"\"\n  bikes: BikeAvailabilityInfo\n\n  \"\"\"Number of available docks in the station\"\"\"\n  docks: Int\n}\n\n\"\"\"Information of the bike availability of a station by type\"\"\"\ntype BikeAvailabilityInfo {\n  \"\"\"Number of available electrical bikes in the station\"\"\"\n  electrical: Int\n\n  \"\"\"Number of available mechanical bikes in the station\"\"\"\n  mechanical: Int\n\n  \"\"\"Total number of available bikes in the station\"\"\"\n  total: Int\n}\n\n\"\"\"\nInput for the filterBy argument of the bikes queries, which allows filtering a connection by some parameters (e.g. only with available bikes)\n\"\"\"\ninput FilterByInputBike {\n  only: OnlyFilterByInputBike\n}\n\ninput OnlyFilterByInputBike {\n  hasAvailableBikes: Boolean\n  hasAvailableElectricalBikes: Boolean\n  isInService: Boolean\n  hasAvailableDocks: Boolean\n}\n\nunion BikeStationQueryResponse = BikeStation | NotFoundError\n\nunion BusStopQueryResponse = BusStop | NotFoundError\n\n\"\"\"Bus stop information\"\"\"\ntype BusStop {\n  \"\"\"Unique ID of the stop\"\"\"\n  id: ID\n\n  \"\"\"Name of the stop\"\"\"\n  name: String\n\n  \"\"\"Location of the stop\"\"\"\n  location: Location\n}\n\n\"\"\"Location of a stop/station\"\"\"\ntype Location {\n  address: String\n  city: String\n  district: String\n  street: String\n  coordinates: CoordinatesOutput\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BusStopConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BusStopEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BusStopEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: BusStop\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\nunion BusLineQueryResponse = BusLine | NotFoundError\n\n\"\"\"Bus line information\"\"\"\ntype BusLine {\n  \"\"\"Numeric Code of the line\"\"\"\n  id: Int\n\n  \"\"\"Name of the line\"\"\"\n  name: String\n\n  \"\"\"Origin stop of the line\"\"\"\n  originStop: BusStop\n\n  \"\"\"Ending stop of the line\"\"\"\n  endingStop: BusStop\n\n  \"\"\"Stops of the line\"\"\"\n  stops(after: String, first: Int, before: String, last: Int): BusStopConnection\n\n  \"\"\"Color of the line represented as a Hexadecimal string\"\"\"\n  color: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype BusLineConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [BusLineEdge]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BusLineEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: BusLine\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}",
    "Bitquery": "\"\"\"Account\"\"\"\ntype Account {\n  \"\"\"Account ID\"\"\"\n  id: String!\n\n  \"\"\"Account number, the equivalent of a human-friendly public key\"\"\"\n  num: Int!\n\n  \"\"\"Realm number \"\"\"\n  realmId: Int!\n\n  \"\"\"Shard number\"\"\"\n  shardId: Int!\n}\n\n\"\"\"Blockchain address\"\"\"\ntype Address {\n  \"\"\"String address representation\"\"\"\n  address: String!\n\n  \"\"\"Annotations ( tags ), if exists\"\"\"\n  annotation: String\n}\n\n\"\"\"Address selector\"\"\"\ninput AddressSelector {\n  \"\"\"Equal to Address\"\"\"\n  is: String\n\n  \"\"\"Not Equal to Address\"\"\"\n  not: String\n\n  \"\"\"In the list of Addresses\"\"\"\n  in: String\n\n  \"\"\"Not in the list of Addresses\"\"\"\n  notIn: String\n}\n\n\"\"\"Address selector\"\"\"\ninput AddressSelectorIn {\n  \"\"\"Equal to Address\"\"\"\n  is: String\n\n  \"\"\"In the list of Addresses\"\"\"\n  in: String\n}\n\n\"\"\"Blockchain account with address and type\"\"\"\ntype AddressWithAccount {\n  \"\"\"Account ID\"\"\"\n  account: String!\n\n  \"\"\"String address representation\"\"\"\n  address: String!\n\n  \"\"\"Annotations ( tags ), if exists\"\"\"\n  annotation: String\n\n  \"\"\"Account type\"\"\"\n  type: String!\n}\n\n\"\"\"Algorand Blockchain\"\"\"\ntype Algorand {\n  \"\"\"Basic information about address ( or smart contract )\"\"\"\n  address(address: [AlgorandAddressSelector!]!): [AlgorandAddressInfo!]!\n\n  \"\"\"Arguments of Smart Contract Calls and Events\"\"\"\n  arguments(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, txType: TxTypeSelector, txFrom: [AlgorandAddressSelector!], caller: [AlgorandAddressSelector!], reference: [AlgorandAddressSelector!], value: [ArgumentValueSelector!], argument: [ArgumentSelector!], smartContractAddress: [AlgorandAddressSelector!], argindex: ArgumentIndexSelector, any: [AlgorandArgumentFilter!], options: QueryOptions): [AlgorandArguments!]\n\n  \"\"\"Blockchain Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, proposer: [AlgorandAddressSelector!], blockReward: [AmountSelector!], nextProtocol: StringIdSelector, currentProtocol: StringIdSelector, any: [AlgorandBlockFilter!], options: QueryOptions): [AlgorandBlocks!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: AlgorandAddressSelector, receiver: AlgorandAddressSelector, currency: [AlgorandCurrencySelector!], initialAddress: AlgorandAddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: CoinpathOptions): [AlgorandCoinpath!]\n\n  \"\"\"Smart Contract Calls\"\"\"\n  smartContractCalls(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, txSender: [AlgorandAddressSelector!], smartContractAddress: [AlgorandAddressSelector!], txType: TxTypeSelector, any: [AlgorandSmartContractCallFilter!], options: QueryOptions): [AlgorandSmartContractCalls!]\n\n  \"\"\"Blockchain Transactions\"\"\"\n  transactions(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [AlgorandAddressSelector!], txIndex: TxIndexSelector, txCurrency: [AlgorandCurrencySelector!], txType: TxTypeSelector, txSubtype: TxSubtypeSelector, any: [AlgorandTransactionFilter!], options: QueryOptions): [AlgorandTransactions!]\n\n  \"\"\"Currency Transfers\"\"\"\n  transfers(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [AlgorandAddressSelector!], txIndex: TxIndexSelector, sender: [AlgorandAddressSelector!], receiver: [AlgorandAddressSelector!], currency: [AlgorandCurrencySelector!], amount: [AmountSelector!], txType: TxTypeSelector, transferType: AlgorandTransferTypeSelector, any: [AlgorandTransferFilter!], options: QueryOptions): [AlgorandTransfers!]\n}\n\n\"\"\"Address detailed information for Algorand network\"\"\"\ntype AlgorandAddressInfo {\n  \"\"\"Address\"\"\"\n  address: Address\n\n  \"\"\"Smart Contract if exists on the address\"\"\"\n  smartContract: AlgorandSmartContract\n}\n\n\"\"\"Algorand Address\"\"\"\ninput AlgorandAddressSelector {\n  \"\"\"Equal to Address\"\"\"\n  is: String\n\n  \"\"\"Not Equal to Address\"\"\"\n  not: String\n\n  \"\"\"In the list of Addresses\"\"\"\n  in: [String!]\n\n  \"\"\"Not in the list of Addresses\"\"\"\n  notIn: [String!]\n}\n\ninput AlgorandArgumentFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txIndex: TxIndexSelector\n  txType: TxTypeSelector\n  txFrom: [AlgorandAddressSelector!]\n  caller: [AlgorandAddressSelector!]\n  reference: [AlgorandAddressSelector!]\n  value: [ArgumentValueSelector!]\n  argument: [ArgumentSelector!]\n  smartContractAddress: [AlgorandAddressSelector!]\n  argindex: ArgumentIndexSelector\n}\n\n\"\"\"Arguments of Smart Contract Calls\"\"\"\ntype AlgorandArguments {\n  any(of: AlgorandArgumentsMeasureable!): String\n\n  \"\"\"Sequential index of value in array ( multi-dimensional)\"\"\"\n  argindex: Int!\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Counts and other metrics\"\"\"\n  count(uniq: SmartContractCallsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, txType: TxTypeSelector, txFrom: [AlgorandAddressSelector!], caller: [AlgorandAddressSelector!], reference: [AlgorandAddressSelector!], value: [ArgumentValueSelector!], argument: [ArgumentSelector!], smartContractAddress: [AlgorandAddressSelector!], argindex: ArgumentIndexSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  firstRound: Int\n  genesisHash64: String\n  genesisId: String\n  lastRound: Int\n  maximum(of: AlgorandArgumentsMeasureable!, get: AlgorandArgumentsMeasureable): String\n  minimum(of: AlgorandArgumentsMeasureable!, get: AlgorandArgumentsMeasureable): String\n  note: String\n  poolerror: String\n\n  \"\"\"Smart contract being called\"\"\"\n  smartContract(smartContractAddress: [AlgorandAddressSelector!]): AlgorandSmartContract\n\n  \"\"\"Transaction where call happened\"\"\"\n  transaction(txHash: [HashSelector!], txFrom: [AlgorandAddressSelector!]): TransactionHashIndex\n\n  \"\"\"Transaction sender\"\"\"\n  txSender(txSender: [AlgorandAddressSelector!]): Address\n\n  \"\"\"Transaction type in which the transfer happened\"\"\"\n  txType(txType: [AlgorandTxType!]): AlgorandTxType\n\n  \"\"\"The Value of argument\"\"\"\n  value(value: [ArgumentValueSelector!]): String\n}\n\nenum AlgorandArgumentsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Transaction type\"\"\"\n  tx_type\n\n  \"\"\"Transaction Sender\"\"\"\n  tx_sender\n\n  \"\"\"Smart Contract\"\"\"\n  smart_contract\n\n  \"\"\"Argument value\"\"\"\n  argument_value\n\n  \"\"\"Argument index\"\"\"\n  argument_index\n}\n\ninput AlgorandBlockFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  blockHash: HashSelector\n  proposer: [AlgorandAddressSelector!]\n  blockReward: [AmountSelector!]\n  nextProtocol: StringIdSelector\n  currentProtocol: StringIdSelector\n}\n\n\"\"\"Blocks in Algorand blockchain\"\"\"\ntype AlgorandBlocks {\n  any(of: AlgorandBlocksMeasureable!): String\n  count(uniq: AlgorandBlocksUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, proposer: [AlgorandAddressSelector!], blockReward: [AmountSelector!], nextProtocol: StringIdSelector, currentProtocol: StringIdSelector): Int\n  currentProtocol: String\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  frac: BigInt!\n\n  \"\"\"Block hash\"\"\"\n  hash(blockHash: [HashSelector!]): String!\n\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n  maximum(of: AlgorandBlocksMeasureable!, get: AlgorandBlocksMeasureable): String\n  minimum(of: AlgorandBlocksMeasureable!, get: AlgorandBlocksMeasureable): String\n  nextProtocol: String\n  nextProtocolApprovals: BigInt\n  nextProtocolSwitchOn: BigInt\n  nextProtocolVoteBefore: BigInt\n\n  \"\"\"Previous block hash\"\"\"\n  previousBlockHash: String!\n\n  \"\"\"Block proposer\"\"\"\n  proposer(proposer: [AlgorandAddressSelector!]): Address\n  rate(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, proposer: [AlgorandAddressSelector!], blockReward: [AmountSelector!], nextProtocol: StringIdSelector, currentProtocol: StringIdSelector): Float\n  reward(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, proposer: [AlgorandAddressSelector!], blockReward: [AmountSelector!], nextProtocol: StringIdSelector, currentProtocol: StringIdSelector): Float\n  seed: String\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n  txnRoot: String!\n  upgradeApprove: Int\n  upgradePropose: String\n}\n\nenum AlgorandBlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_hash\n\n  \"\"\"Block Reward\"\"\"\n  block_reward\n\n  \"\"\"Block Proposer\"\"\"\n  proposer\n\n  \"\"\"Next protocol approvals\"\"\"\n  next_protocol_approvals\n}\n\nenum AlgorandBlocksUniq {\n  \"\"\"Unique proposer count\"\"\"\n  proposers\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\nenum AlgorandCallsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Transaction type\"\"\"\n  tx_type\n\n  \"\"\"Transaction Sender\"\"\"\n  tx_sender\n\n  \"\"\"Smart Contract\"\"\"\n  smart_contract\n}\n\n\"\"\"Coinpath\"\"\"\ntype AlgorandCoinpath {\n  \"\"\"Summary of transfered value\"\"\"\n  amount(in: BaseCurrencyEnum): Float\n  any(of: CoinpathMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block: Block\n\n  \"\"\"Count of transfers\"\"\"\n  count: Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"1-based hop depth of the graph\"\"\"\n  depth: Int\n  maximum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n  minimum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n\n  \"\"\"Receiver address\"\"\"\n  receiver: Address\n\n  \"\"\"Sender address\"\"\"\n  sender: Address\n\n  \"\"\"Transaction of transfer happened\"\"\"\n  transaction: TransactionHashValue\n}\n\n\"\"\"\nCurrency selector in Algorand blockchain.\n  Currency is selected by asset ID. To select ALGO use ID=0\n\"\"\"\ninput AlgorandCurrencySelector {\n  \"\"\"Currency is\"\"\"\n  is: Int\n\n  \"\"\"Currency not\"\"\"\n  not: Int\n\n  \"\"\"Currency in the list\"\"\"\n  in: [Int!]\n\n  \"\"\"Currency not in the list\"\"\"\n  notIn: [Int!]\n}\n\nenum AlgorandNetwork {\n  \"\"\"Algorand Mainnet (ALGO)\"\"\"\n  algorand\n\n  \"\"\"Algorand Testnet\"\"\"\n  algorand_testnet\n\n  \"\"\"Algorand Betanet\"\"\"\n  algorand_betanet\n}\n\n\"\"\"Algorand smart contract\"\"\"\ntype AlgorandSmartContract {\n  \"\"\"Smart Contract Address\"\"\"\n  address: Address!\n\n  \"\"\"Smart Contract byte code\"\"\"\n  bytecode: String\n\n  \"\"\"Smart Contract Deassembled source code\"\"\"\n  source: String\n}\n\ninput AlgorandSmartContractCallFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txIndex: TxIndexSelector\n  txSender: [AlgorandAddressSelector!]\n  smartContractAddress: [AlgorandAddressSelector!]\n  txType: TxTypeSelector\n}\n\n\"\"\"Smart Contract Calls\"\"\"\ntype AlgorandSmartContractCalls {\n  any(of: AlgorandCallsMeasureable!): String\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Counts and other metrics\"\"\"\n  count(uniq: SmartContractCallsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, txSender: [AlgorandAddressSelector!], smartContractAddress: [AlgorandAddressSelector!], txType: TxTypeSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Fee used in transaction call\"\"\"\n  fee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, txSender: [AlgorandAddressSelector!], smartContractAddress: [AlgorandAddressSelector!], txType: TxTypeSelector): Float\n  firstRound: Int\n  genesisHash64: String\n  genesisId: String\n  lastRound: Int\n  maximum(of: AlgorandCallsMeasureable!, get: AlgorandCallsMeasureable): String\n  minimum(of: AlgorandCallsMeasureable!, get: AlgorandCallsMeasureable): String\n  note: String\n  poolerror: String\n\n  \"\"\"Smart contract being called\"\"\"\n  smartContract(smartContractAddress: [AlgorandAddressSelector!]): AlgorandSmartContract\n\n  \"\"\"Transaction where call happened\"\"\"\n  transaction(txHash: [HashSelector!], txFrom: [AlgorandAddressSelector!]): TransactionHashIndex\n\n  \"\"\"Transaction sender\"\"\"\n  txSender(txSender: [AlgorandAddressSelector!]): Address\n\n  \"\"\"Transaction type in which the transfer happened\"\"\"\n  txType(txType: [AlgorandTxType!]): AlgorandTxType\n}\n\ninput AlgorandTransactionFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txSender: [AlgorandAddressSelector!]\n  txIndex: TxIndexSelector\n  txCurrency: [AlgorandCurrencySelector!]\n  txType: TxTypeSelector\n  txSubtype: TxSubtypeSelector\n}\n\n\"\"\"Transactions in Algorand blockchain\"\"\"\ntype AlgorandTransactions {\n  any(of: AlgorandTransactionsMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: AlgorandTransactionsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [AlgorandAddressSelector!], txIndex: TxIndexSelector, txCurrency: [AlgorandCurrencySelector!], txType: TxTypeSelector, txSubtype: TxSubtypeSelector): Int\n\n  \"\"\"Asset related to transaction\"\"\"\n  currency(txCurrency: [AlgorandCurrencySelector!]): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  fee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [AlgorandAddressSelector!], txIndex: TxIndexSelector, txCurrency: [AlgorandCurrencySelector!], txType: TxTypeSelector, txSubtype: TxSubtypeSelector): Float\n  firstRound: Int\n  genesisHash: String\n  genesisId: String\n\n  \"\"\"Hash hex representation\"\"\"\n  hash(txHash: [HashSelector!]): String!\n\n  \"\"\"Transaction index in block, 0 based\"\"\"\n  index(txIndex: [TxIndexSelector!]): Int\n  lastRound: Int\n  maximum(of: AlgorandTransactionsMeasureable!, get: AlgorandTransactionsMeasureable): String\n  minimum(of: AlgorandTransactionsMeasureable!, get: AlgorandTransactionsMeasureable): String\n  note: String\n  poolerror: String\n\n  \"\"\"Transaction sender\"\"\"\n  sender(txSender: [AlgorandAddressSelector!]): Address\n\n  \"\"\"Transaction sub type\"\"\"\n  subtype(txType: TxSubtypeSelector): AlgorandTxSubType\n\n  \"\"\"Transaction type\"\"\"\n  type(txType: TxTypeSelector): AlgorandTxType\n}\n\nenum AlgorandTransactionsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Fee value\"\"\"\n  fee\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Transaction Sender\"\"\"\n  tx_sender\n}\n\nenum AlgorandTransactionsUniq {\n  \"\"\"Unique TX senders count\"\"\"\n  senders\n\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique currencies\"\"\"\n  currencies\n}\n\ninput AlgorandTransferFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txSender: [AlgorandAddressSelector!]\n  txIndex: TxIndexSelector\n  sender: [AlgorandAddressSelector!]\n  receiver: [AlgorandAddressSelector!]\n  currency: [AlgorandCurrencySelector!]\n  amount: [AmountSelector!]\n  txType: TxTypeSelector\n  transferType: AlgorandTransferTypeSelector\n}\n\nenum AlgorandTransferType {\n  \"\"\"Genesis Block\"\"\"\n  genesis\n\n  \"\"\"Create Asset\"\"\"\n  create\n\n  \"\"\"Send\"\"\"\n  send\n\n  \"\"\"Close\"\"\"\n  close\n\n  \"\"\"Reward\"\"\"\n  reward\n\n  \"\"\"Asset Freeze\"\"\"\n  freeze\n\n  \"\"\"Asset Unfreeze\"\"\"\n  unfreeze\n}\n\n\"\"\"Select transfers by type\"\"\"\ninput AlgorandTransferTypeSelector {\n  \"\"\"Transfer Type is\"\"\"\n  is: AlgorandTransferType\n\n  \"\"\"Transfer Type not\"\"\"\n  not: AlgorandTransferType\n\n  \"\"\"Transfer Type in the list\"\"\"\n  in: [AlgorandTransferType!]\n\n  \"\"\"Transfer Type not in the list\"\"\"\n  notIn: [AlgorandTransferType!]\n}\n\n\"\"\"Currency transfers from/to addresses in crypto currencies\"\"\"\ntype AlgorandTransfers {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [AlgorandAddressSelector!], txIndex: TxIndexSelector, sender: [AlgorandAddressSelector!], receiver: [AlgorandAddressSelector!], currency: [AlgorandCurrencySelector!], amount: [AmountSelector!], txType: TxTypeSelector, transferType: AlgorandTransferTypeSelector): Float\n  any(of: AlgorandTransfersMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: TransfersUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [AlgorandAddressSelector!], txIndex: TxIndexSelector, sender: [AlgorandAddressSelector!], receiver: [AlgorandAddressSelector!], currency: [AlgorandCurrencySelector!], amount: [AmountSelector!], txType: TxTypeSelector, transferType: AlgorandTransferTypeSelector): Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: [AlgorandCurrencySelector!]): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  firstRound: Int\n  lastRound: Int\n  maximum(of: AlgorandTransfersMeasureable!, get: AlgorandTransfersMeasureable): String\n  memo: String\n  minimum(of: AlgorandTransfersMeasureable!, get: AlgorandTransfersMeasureable): String\n\n  \"\"\"Transfer receiver\"\"\"\n  receiver(receiver: [AlgorandAddressSelector!]): Address\n\n  \"\"\"Transfer sender\"\"\"\n  sender(sender: [AlgorandAddressSelector!]): Address\n\n  \"\"\"Transaction where transfer happened\"\"\"\n  transaction(txHash: [HashSelector!]): TransactionHashIndex\n\n  \"\"\"Transfer Type\"\"\"\n  transferType(transferType: [AlgorandTransferType!]): AlgorandTransferType\n\n  \"\"\"Transfer transaction sender\"\"\"\n  txSender(txSender: [AlgorandAddressSelector!]): Address\n\n  \"\"\"Transaction type in which the transfer happened\"\"\"\n  txType(txType: [AlgorandTxType!]): AlgorandTxType\n}\n\nenum AlgorandTransfersMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"TX Sender\"\"\"\n  tx_sender\n\n  \"\"\"Sender\"\"\"\n  sender\n\n  \"\"\"Receiver\"\"\"\n  receiver\n\n  \"\"\"Currency symbol\"\"\"\n  currency_symbol\n\n  \"\"\"Currency Asset ID\"\"\"\n  asset_id\n\n  \"\"\"Transaction type\"\"\"\n  tx_type\n\n  \"\"\"Transfer type\"\"\"\n  transfer_type\n}\n\nenum AlgorandTxSubType {\n  \"\"\"Send\"\"\"\n  send\n\n  \"\"\"Close\"\"\"\n  close\n\n  \"\"\"Create\"\"\"\n  create\n\n  \"\"\"Asset Configuration\"\"\"\n  configure\n\n  \"\"\"Asset Freeze\"\"\"\n  freeze\n\n  \"\"\"Asset Unfreeze\"\"\"\n  unfreeze\n\n  \"\"\"Key Reg\"\"\"\n  keyreg\n\n  \"\"\"None\"\"\"\n  none\n}\n\nenum AlgorandTxType {\n  \"\"\"Genesis Block\"\"\"\n  genesis\n\n  \"\"\"Pay\"\"\"\n  pay\n\n  \"\"\"Key Reg\"\"\"\n  keyreg\n\n  \"\"\"Asset Configuration\"\"\"\n  acfg\n\n  \"\"\"Asset Transfer\"\"\"\n  axfer\n\n  \"\"\"Asset Freeze or Unfreeze\"\"\"\n  afrz\n\n  \"\"\"Application Call\"\"\"\n  appl\n}\n\nenum AmountAggregateFunction {\n  \"\"\"Maximum\"\"\"\n  maximum\n\n  \"\"\"Minimum\"\"\"\n  minimum\n\n  \"\"\"Sum (total)\"\"\"\n  sum\n\n  \"\"\"Average\"\"\"\n  average\n\n  \"\"\"Median\"\"\"\n  median\n\n  \"\"\"Unique estimate fast\"\"\"\n  unique\n\n  \"\"\"Unique exact\"\"\"\n  uniqueExact\n\n  \"\"\"Any value\"\"\"\n  any\n\n  \"\"\"Last value\"\"\"\n  anyLast\n}\n\n\"\"\"Select by amount\"\"\"\ninput AmountSelector {\n  \"\"\"Amount is\"\"\"\n  is: Float\n\n  \"\"\"Amount not\"\"\"\n  not: Float\n\n  \"\"\"Amount in the list\"\"\"\n  in: [Float!]\n\n  \"\"\"Amount not in the list\"\"\"\n  notIn: [Float!]\n\n  \"\"\"Amount greater than\"\"\"\n  gt: Float\n\n  \"\"\"Amount less than\"\"\"\n  lt: Float\n\n  \"\"\"Amount less or equal than\"\"\"\n  lteq: Float\n\n  \"\"\"Amount greater or equal than\"\"\"\n  gteq: Float\n\n  \"\"\"Amount in range\"\"\"\n  between: [Float!]\n}\n\n\"\"\"Selector of index of argument in call\"\"\"\ninput ArgumentIndexSelector {\n  \"\"\"Tx index is\"\"\"\n  is: Int\n\n  \"\"\"Tx index not\"\"\"\n  not: Int\n\n  \"\"\"Tx index in the list\"\"\"\n  in: [Int!]\n\n  \"\"\"Tx index not in the list\"\"\"\n  notIn: [Int!]\n}\n\n\"\"\"Argument of Smart contract method or event\"\"\"\ntype ArgumentName {\n  \"\"\"Name\"\"\"\n  name: String!\n\n  \"\"\"Type\"\"\"\n  type: String!\n}\n\n\"\"\"Argument name and value of smart contract call or event\"\"\"\ntype ArgumentNameValue {\n  \"\"\"Argument name\"\"\"\n  argument: String!\n\n  \"\"\"Argument data type\"\"\"\n  argumentType: String!\n\n  \"\"\"Sequential index of value in array ( multi-dimensional)\"\"\"\n  index: String!\n\n  \"\"\"Value as String\"\"\"\n  value: String!\n}\n\n\"\"\"Selector of argument for smart contract method or event\"\"\"\ninput ArgumentSelector {\n  \"\"\"Argument is\"\"\"\n  is: String\n\n  \"\"\"Argument not\"\"\"\n  not: String\n\n  \"\"\"Argument in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Argument not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Selector of argument type for smart contract method or event\"\"\"\ninput ArgumentTypeSelector {\n  \"\"\"Argument type is\"\"\"\n  is: String\n\n  \"\"\"Argument type not\"\"\"\n  not: String\n\n  \"\"\"Argument type in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Argument type not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Argument value of smart contract call or event\"\"\"\ntype ArgumentValue {\n  \"\"\"Value as Address\"\"\"\n  address: EthereumAddressInfo\n\n  \"\"\"Value as String\"\"\"\n  value: String!\n}\n\n\"\"\"Selector of value of argument for smart contract method or event\"\"\"\ninput ArgumentValueSelector {\n  \"\"\"Value is\"\"\"\n  is: String\n\n  \"\"\"Value not\"\"\"\n  not: String\n\n  \"\"\"Value in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Value not in the list\"\"\"\n  notIn: [String!]\n}\n\nenum BaseCurrencyEnum {\n  \"\"\"Dollar\"\"\"\n  USD\n\n  \"\"\"Ethereum\"\"\"\n  ETH\n\n  \"\"\"Tether USDT\"\"\"\n  USDT\n\n  \"\"\"Bitcoin\"\"\"\n  BTC\n}\n\n\"\"\"\nRepresents non-fractional signed whole numeric values. Since the value may exceed the size of a 32-bit integer, it's encoded as a string.\n\"\"\"\nscalar BigInt\n\n\"\"\"Binance DEX\"\"\"\ntype Binance {\n  \"\"\"Binance DEX Network Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockId: StringIdSelector, validatorMoniker: StringIdSelector, validatorFeeAddr: BinanceAddressSelector, validatorOperatorAddress: BinanceAddressSelector, validatorOperahraddress: BinanceAddressSelector, any: [BinanceBlockFilter!], options: QueryOptions): [BinanceBlock!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: BinanceAddressSelector, receiver: BinanceAddressSelector, currency: [BinanceCurrencySelector!], initialAddress: BinanceAddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: CoinpathOptions): [BinanceCoinpath!]\n\n  \"\"\"Binance DEX Network Exchange Orders\"\"\"\n  orders(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, orderOwner: [BinanceAddressSelector!], orderId: [OrderIdSelector!], baseCurrency: [BinanceCurrencySelector!], quoteCurrency: [BinanceCurrencySelector!], quoteAmount: [AmountSelector!], baseAmount: [AmountSelector!], price: [AmountSelector!], orderStatus: [OrderStatusSelector!], orderType: [OrderTypeSelector!], orderSide: [OrderSideSelector!], orderTimeInForce: [OrderTimeInForceSelector!], any: [BinanceOrderFilter!], options: QueryOptions): [BinanceOrders!]\n\n  \"\"\"Binance DEX Network Trades between currencies\"\"\"\n  trades(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: [BinanceAddressSelector!], seller: [BinanceAddressSelector!], sellOrderId: [OrderIdSelector!], buyOrderId: [OrderIdSelector!], tradeId: [TradeIdSelector!], baseCurrency: [BinanceCurrencySelector!], quoteCurrency: [BinanceCurrencySelector!], quoteAmount: [AmountSelector!], baseAmount: [AmountSelector!], price: [AmountSelector!], any: [BinanceTradeFilter!], options: QueryOptions): [BinanceTrades!]\n\n  \"\"\"Binance DEX Network Transactions\"\"\"\n  transactions(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, transactionType: BinanceTransactionTypeSelector, proposalId: StringIdSelector, currency: [BinanceCurrencySelector!], transactionCode: IntIdSelector, transactionSource: IntIdSelector, deposit: [AmountSelector!], any: [BinanceTransactionFilter!], options: QueryOptions): [BinanceTransactions!]\n\n  \"\"\"Binance DEX Network Currency Transfers\"\"\"\n  transfers(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, sender: [BinanceAddressSelector!], receiver: [BinanceAddressSelector!], currency: [BinanceCurrencySelector!], transferType: [BinanceTransferTypeSelector!], orderId: [OrderIdSelector!], tradeId: [TradeIdSelector!], amount: [AmountSelector!], outputIndex: [OutputIndexSelector!], any: [BinanceTransferFilter!], options: QueryOptions): [BinanceTransfers!]\n}\n\n\"\"\"Binance Address should start with bnb and contain 42 chars.\"\"\"\ninput BinanceAddressSelector {\n  \"\"\"Equal to Address\"\"\"\n  is: String\n\n  \"\"\"Not Equal to Address\"\"\"\n  not: String\n\n  \"\"\"In the list of Addresses\"\"\"\n  in: String\n\n  \"\"\"Not in the list of Addresses\"\"\"\n  notIn: String\n}\n\n\"\"\"Block\"\"\"\ntype BinanceBlock {\n  any(of: BinanceBlocksMeasureable!): String\n\n  \"\"\"Block ID\"\"\"\n  blockId(blockId: StringIdSelector): String\n  count(uniq: BinanceBlockUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockId: StringIdSelector, validatorMoniker: StringIdSelector, validatorFeeAddr: BinanceAddressSelector, validatorOperatorAddress: BinanceAddressSelector, validatorOperahraddress: BinanceAddressSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n  maximum(of: BinanceBlocksMeasureable!, get: BinanceBlocksMeasureable): String\n  minimum(of: BinanceBlocksMeasureable!, get: BinanceBlocksMeasureable): String\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n\n  \"\"\"Validator consensus pubkey\"\"\"\n  validatorConsensusPubkey(validatorConsensusPubkey: StringIdSelector): String\n\n  \"\"\"Validator fee address\"\"\"\n  validatorFeeAddr(validatorFeeAddr: BinanceAddressSelector): Address\n\n  \"\"\"Validator moniker\"\"\"\n  validatorMoniker(validatorMoniker: StringIdSelector): String\n\n  \"\"\"Validator operator HR address\"\"\"\n  validatorOperaHrAddress(validatorOperaHrAddress: BinanceAddressSelector): Address\n\n  \"\"\"Validator operator address\"\"\"\n  validatorOperatorAddress(validatorOperatorAddress: BinanceAddressSelector): Address\n}\n\ninput BinanceBlockFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  blockId: StringIdSelector\n  validatorMoniker: StringIdSelector\n  validatorFeeAddr: BinanceAddressSelector\n  validatorOperatorAddress: BinanceAddressSelector\n  validatorOperahraddress: BinanceAddressSelector\n}\n\nenum BinanceBlockUniq {\n  \"\"\"Validator operators\"\"\"\n  validator_operator_addresses\n\n  \"\"\"Validator fee addresses\"\"\"\n  validator_fee_addresses\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\nenum BinanceBlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_hash\n\n  \"\"\"Validator moniker\"\"\"\n  validator_moniker\n}\n\n\"\"\"Coinpath\"\"\"\ntype BinanceCoinpath {\n  \"\"\"Summary of transfered value\"\"\"\n  amount(in: BaseCurrencyEnum): Float\n  any(of: CoinpathMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block: Block\n\n  \"\"\"Count of transfers\"\"\"\n  count: Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"1-based hop depth of the graph\"\"\"\n  depth: Int\n  maximum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n  minimum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n\n  \"\"\"Receiver address\"\"\"\n  receiver: Address\n\n  \"\"\"Sender address\"\"\"\n  sender: Address\n\n  \"\"\"Transaction of transfer happened\"\"\"\n  transaction: TransactionHashValue\n}\n\n\"\"\"\nBinance token selector by tokenId.\n    Native binance token has BNB symbol.\n    Note that most Binance symbols has two dash separated parts, for example: 'TROY-9B8_BNB'\n\"\"\"\ninput BinanceCurrencySelector {\n  \"\"\"Currency is\"\"\"\n  is: String\n\n  \"\"\"Currency not\"\"\"\n  not: String\n\n  \"\"\"Currency in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Currency not in the list\"\"\"\n  notIn: [String!]\n}\n\ninput BinanceOrderFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  orderOwner: [BinanceAddressSelector!]\n  orderId: [OrderIdSelector!]\n  baseCurrency: [BinanceCurrencySelector!]\n  quoteCurrency: [BinanceCurrencySelector!]\n  quoteAmount: [AmountSelector!]\n  baseAmount: [AmountSelector!]\n  price: [AmountSelector!]\n  orderStatus: [OrderStatusSelector!]\n  orderType: [OrderTypeSelector!]\n  orderSide: [OrderSideSelector!]\n  orderTimeInForce: [OrderTimeInForceSelector!]\n}\n\nenum BinanceOrderSide {\n  \"\"\"Sell Side\"\"\"\n  sell\n\n  \"\"\"Buy Side\"\"\"\n  buy\n}\n\nenum BinanceOrderStatus {\n  \"\"\"Ack\"\"\"\n  Ack\n\n  \"\"\"Canceled\"\"\"\n  Canceled\n\n  \"\"\"Fully Fill\"\"\"\n  FullyFill\n\n  \"\"\"Partial Fill\"\"\"\n  PartialFill\n\n  \"\"\"Expired\"\"\"\n  Expired\n\n  \"\"\"Failed Blocking\"\"\"\n  FailedBlocking\n\n  \"\"\"Ioc No Fill\"\"\"\n  IocNoFill\n\n  \"\"\"Ioc Expire\"\"\"\n  IocExpire\n}\n\nenum BinanceOrderTimeInForce {\n  \"\"\"Good Till Expiry\"\"\"\n  GTE\n\n  \"\"\"Immediate Or Cancel\"\"\"\n  IOC\n}\n\nenum BinanceOrderType {\n  \"\"\"Limit Order\"\"\"\n  LimitOrder\n}\n\n\"\"\"Binance DEX Order\"\"\"\ntype BinanceOrders {\n  any(of: BinanceOrdersMeasureable!): String\n  baseAmount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, orderOwner: [BinanceAddressSelector!], orderId: [OrderIdSelector!], baseCurrency: [BinanceCurrencySelector!], quoteCurrency: [BinanceCurrencySelector!], quoteAmount: [AmountSelector!], baseAmount: [AmountSelector!], price: [AmountSelector!], orderStatus: [OrderStatusSelector!], orderType: [OrderTypeSelector!], orderSide: [OrderSideSelector!], orderTimeInForce: [OrderTimeInForceSelector!]): Float\n  baseCurrency(baseCurrency: [BinanceCurrencySelector!]): Currency\n\n  \"\"\"Block where order transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: BinanceOrdersUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, orderOwner: [BinanceAddressSelector!], orderId: [OrderIdSelector!], baseCurrency: [BinanceCurrencySelector!], quoteCurrency: [BinanceCurrencySelector!], quoteAmount: [AmountSelector!], baseAmount: [AmountSelector!], price: [AmountSelector!], orderStatus: [OrderStatusSelector!], orderType: [OrderTypeSelector!], orderSide: [OrderSideSelector!], orderTimeInForce: [OrderTimeInForceSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  maximum(of: BinanceOrdersMeasureable!, get: BinanceOrdersMeasureable): String\n  minimum(of: BinanceOrdersMeasureable!, get: BinanceOrdersMeasureable): String\n\n  \"\"\"Order ID\"\"\"\n  orderId(orderId: [OrderIdSelector!]): String\n\n  \"\"\"Order owner address\"\"\"\n  orderOwner(owner: [BinanceAddressSelector!]): Address\n\n  \"\"\"Order Side\"\"\"\n  orderSide(orderSide: [OrderSideSelector!]): BinanceOrderSide\n\n  \"\"\"Order Status\"\"\"\n  orderStatus(orderStatus: [OrderStatusSelector!]): BinanceOrderStatus\n\n  \"\"\"Order Time In Force\"\"\"\n  orderTimeInForce(orderTimeInForce: [OrderTimeInForceSelector!]): BinanceOrderTimeInForce\n\n  \"\"\"Order Type\"\"\"\n  orderType(orderType: [OrderTypeSelector!]): BinanceOrderType\n  price: Float\n  quoteAmount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, orderOwner: [BinanceAddressSelector!], orderId: [OrderIdSelector!], baseCurrency: [BinanceCurrencySelector!], quoteCurrency: [BinanceCurrencySelector!], quoteAmount: [AmountSelector!], baseAmount: [AmountSelector!], price: [AmountSelector!], orderStatus: [OrderStatusSelector!], orderType: [OrderTypeSelector!], orderSide: [OrderSideSelector!], orderTimeInForce: [OrderTimeInForceSelector!]): Float\n  quoteCurrency(quoteCurrency: [BinanceCurrencySelector!]): Currency\n\n  \"\"\"Transaction where order created\"\"\"\n  transaction(txHash: [HashSelector!]): TransactionHash\n}\n\nenum BinanceOrdersMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Order owner\"\"\"\n  order_owner\n\n  \"\"\"Order status\"\"\"\n  order_status\n\n  \"\"\"Order ID\"\"\"\n  order_id\n\n  \"\"\"Order side\"\"\"\n  order_side\n\n  \"\"\"Base currency\"\"\"\n  base_currency\n\n  \"\"\"Quote currency\"\"\"\n  quote_currency\n\n  \"\"\"Quote Amount\"\"\"\n  quote_amount\n\n  \"\"\"Base Amount\"\"\"\n  base_amount\n\n  \"\"\"Price\"\"\"\n  price\n}\n\nenum BinanceOrdersUniq {\n  \"\"\"Unique Transactions\"\"\"\n  txs\n\n  \"\"\"Unique order owners\"\"\"\n  owners\n\n  \"\"\"Unique base currencies\"\"\"\n  base_currencies\n\n  \"\"\"Unique quote currencies\"\"\"\n  quote_currencies\n\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique order ID count\"\"\"\n  orders\n}\n\ninput BinanceTradeFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  buyer: [BinanceAddressSelector!]\n  seller: [BinanceAddressSelector!]\n  sellOrderId: [OrderIdSelector!]\n  buyOrderId: [OrderIdSelector!]\n  tradeId: [TradeIdSelector!]\n  baseCurrency: [BinanceCurrencySelector!]\n  quoteCurrency: [BinanceCurrencySelector!]\n  quoteAmount: [AmountSelector!]\n  baseAmount: [AmountSelector!]\n  price: [AmountSelector!]\n}\n\n\"\"\"Binance DEX Trades\"\"\"\ntype BinanceTrades {\n  any(of: BinanceTradesMeasureable!): String\n  baseAmount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: [BinanceAddressSelector!], seller: [BinanceAddressSelector!], sellOrderId: [OrderIdSelector!], buyOrderId: [OrderIdSelector!], tradeId: [TradeIdSelector!], baseCurrency: [BinanceCurrencySelector!], quoteCurrency: [BinanceCurrencySelector!], quoteAmount: [AmountSelector!], baseAmount: [AmountSelector!], price: [AmountSelector!]): Float\n  baseCurrency(baseCurrency: [BinanceCurrencySelector!]): Currency\n\n  \"\"\"Block where trade transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Buy Order ID\"\"\"\n  buyOrderId(buyOrderId: [OrderIdSelector!]): String\n\n  \"\"\"Trade buyer address\"\"\"\n  buyer(buyer: [BinanceAddressSelector!]): Address\n  count(uniq: BinanceTradesUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: [BinanceAddressSelector!], seller: [BinanceAddressSelector!], sellOrderId: [OrderIdSelector!], buyOrderId: [OrderIdSelector!], tradeId: [TradeIdSelector!], baseCurrency: [BinanceCurrencySelector!], quoteCurrency: [BinanceCurrencySelector!], quoteAmount: [AmountSelector!], baseAmount: [AmountSelector!], price: [AmountSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  maximum(of: BinanceTradesMeasureable!, get: BinanceTradesMeasureable): String\n  minimum(of: BinanceTradesMeasureable!, get: BinanceTradesMeasureable): String\n  price: Float\n  quoteAmount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: [BinanceAddressSelector!], seller: [BinanceAddressSelector!], sellOrderId: [OrderIdSelector!], buyOrderId: [OrderIdSelector!], tradeId: [TradeIdSelector!], baseCurrency: [BinanceCurrencySelector!], quoteCurrency: [BinanceCurrencySelector!], quoteAmount: [AmountSelector!], baseAmount: [AmountSelector!], price: [AmountSelector!]): Float\n  quoteCurrency(quoteCurrency: [BinanceCurrencySelector!]): Currency\n\n  \"\"\"Sell Order ID\"\"\"\n  sellOrderId(sellOrderId: [OrderIdSelector!]): String\n\n  \"\"\"Trade seller address\"\"\"\n  seller(seller: [BinanceAddressSelector!]): Address\n\n  \"\"\"Trade ID\"\"\"\n  tradeId(tradeId: [TradeIdSelector!]): String\n\n  \"\"\"Transaction where trade happened\"\"\"\n  transaction(txHash: [HashSelector!]): TransactionHashIndex\n}\n\nenum BinanceTradesMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Buyer\"\"\"\n  buyer\n\n  \"\"\"Seller\"\"\"\n  seller\n\n  \"\"\"Trade ID\"\"\"\n  trade_id\n\n  \"\"\"Buy Order ID\"\"\"\n  buy_order_id\n\n  \"\"\"Sell Order ID\"\"\"\n  sell_order_id\n\n  \"\"\"Base currency\"\"\"\n  base_currency\n\n  \"\"\"Quote currency\"\"\"\n  quote_currency\n\n  \"\"\"Quote Amount\"\"\"\n  quote_amount\n\n  \"\"\"Base Amount\"\"\"\n  base_amount\n\n  \"\"\"Price\"\"\"\n  price\n}\n\nenum BinanceTradesUniq {\n  \"\"\"Trades\"\"\"\n  trades\n\n  \"\"\"Sell Orders\"\"\"\n  sell_orders\n\n  \"\"\"Buy Orders\"\"\"\n  buy_orders\n\n  \"\"\"Unique Transactions\"\"\"\n  txs\n\n  \"\"\"Unique buyers count\"\"\"\n  buyers\n\n  \"\"\"Unique sellers count\"\"\"\n  sellers\n\n  \"\"\"Unique base currencies\"\"\"\n  base_currencies\n\n  \"\"\"Unique quote currencies\"\"\"\n  quote_currencies\n\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\ninput BinanceTransactionFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  transactionType: BinanceTransactionTypeSelector\n  proposalId: StringIdSelector\n  currency: [BinanceCurrencySelector!]\n  transactionCode: IntIdSelector\n  transactionSource: IntIdSelector\n  deposit: [AmountSelector!]\n}\n\nenum BinanceTransactionType {\n  \"\"\"New Order\"\"\"\n  NEW_ORDER\n\n  \"\"\"Cancel Order\"\"\"\n  CANCEL_ORDER\n\n  \"\"\"Transfer\"\"\"\n  TRANSFER\n\n  \"\"\"Vote\"\"\"\n  VOTE\n\n  \"\"\"Unfreeze Token\"\"\"\n  UNFREEZE_TOKEN\n\n  \"\"\"Burn\"\"\"\n  BURN\n\n  \"\"\"Freeze Token\"\"\"\n  FREEZE_TOKEN\n\n  \"\"\"Submit Proposal\"\"\"\n  SUBMIT_PROPOSAL\n\n  \"\"\"Listing\"\"\"\n  LISTING\n\n  \"\"\"Issue\"\"\"\n  ISSUE\n\n  \"\"\"Deposit\"\"\"\n  DEPOSIT\n\n  \"\"\"Mint\"\"\"\n  MINT\n\n  \"\"\"Time Lock\"\"\"\n  TimeLock\n\n  \"\"\"Time Unlock\"\"\"\n  TimeUnlock\n\n  \"\"\"Time Relock\"\"\"\n  TimeRelock\n\n  \"\"\"Set Account Flag\"\"\"\n  SetAccountFlag\n\n  \"\"\"Hash Timer Locked Transfer\"\"\"\n  HTL_TRANSFER\n\n  \"\"\"Hash Timer Locked Deposit\"\"\"\n  DEPOSIT_HTL\n\n  \"\"\"Hash Timer Locked Claim\"\"\"\n  CLAIM_HTL\n\n  \"\"\"Hash Timer Locked  Refund\"\"\"\n  REFUND_HTL\n\n  \"\"\"Tiny Token Issue\"\"\"\n  TINY_TOKEN_ISSUE\n\n  \"\"\"Mini Token Issue\"\"\"\n  MINI_TOKEN_ISSUE\n\n  \"\"\"Tiny Token Listing\"\"\"\n  TINY_TOKEN_LIST\n\n  \"\"\"Mini Token Listing\"\"\"\n  MINI_TOKEN_LIST\n\n  \"\"\"Tiny Token Set URI\"\"\"\n  TINY_TOKEN_SET_URI\n\n  \"\"\"Mini Token Set URI\"\"\"\n  MINI_TOKEN_SET_URI\n\n  \"\"\"Create sidechain validator\"\"\"\n  CREATE_SIDECHAIN_VALIDATOR\n\n  \"\"\"Edit sidechain validator\"\"\"\n  EDIT_SIDECHAIN_VALIDATOR\n\n  \"\"\"Delegate for sidechain\"\"\"\n  SIDECHAIN_DELEGATE\n\n  \"\"\"ReDelegate for sidechain\"\"\"\n  SIDECHAIN_REDELEGATE\n\n  \"\"\"Unbond from sidechain\"\"\"\n  SIDECHAIN_UNBOND\n\n  \"\"\"Unjail from sidechain\"\"\"\n  SIDECHAIN_UNJAIL\n\n  \"\"\"Side chain submit poroposal\"\"\"\n  SIDE_SUBMIT_PROPOSAL\n\n  \"\"\"Side chain deposit\"\"\"\n  SIDE_DEPOSIT\n\n  \"\"\"Side chain vote\"\"\"\n  SIDE_VOTE\n\n  \"\"\"Cross chain transfer\"\"\"\n  TRANSFER_OUT\n\n  \"\"\"Submit evidence\"\"\"\n  BSC_SUBMIT_EVIDENCE\n\n  \"\"\"Cross chain claim\"\"\"\n  CLAIM\n\n  \"\"\"Bind\"\"\"\n  BIND\n\n  \"\"\"UnBind\"\"\"\n  UNBIND\n}\n\n\"\"\"Select by transaction type\"\"\"\ninput BinanceTransactionTypeSelector {\n  \"\"\"Transaction Type is\"\"\"\n  is: BinanceTransactionType\n\n  \"\"\"Transaction Type not\"\"\"\n  not: BinanceTransactionType\n\n  \"\"\"Transaction Type in the list\"\"\"\n  in: [BinanceTransactionType!]\n\n  \"\"\"Transaction Type not in the list\"\"\"\n  notIn: [BinanceTransactionType!]\n}\n\n\"\"\"Transaction\"\"\"\ntype BinanceTransactions {\n  any(of: BinanceTransactionsMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: BinanceTransactionsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, transactionType: BinanceTransactionTypeSelector, proposalId: StringIdSelector, currency: [BinanceCurrencySelector!], transactionCode: IntIdSelector, transactionSource: IntIdSelector, deposit: [AmountSelector!]): Int\n\n  \"\"\"Currency issued in transaction\"\"\"\n  currency(currency: [BinanceCurrencySelector!]): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Deposit amount in transaction\"\"\"\n  deposit(deposit: [AmountSelector!]): Float\n\n  \"\"\"Transaction Description\"\"\"\n  description: String\n\n  \"\"\"Hash hex representation\"\"\"\n  hash(txHash: [HashSelector!]): String!\n\n  \"\"\"TX index in block, 0 based\"\"\"\n  index: Int\n\n  \"\"\"Transaction Log\"\"\"\n  log: String\n  maximum(of: BinanceTransactionsMeasureable!, get: BinanceTransactionsMeasureable): String\n\n  \"\"\"Transaction Memo\"\"\"\n  memo: String\n  minimum(of: BinanceTransactionsMeasureable!, get: BinanceTransactionsMeasureable): String\n\n  \"\"\"Proposal ID\"\"\"\n  proposalId(proposalId: [IntIdSelector!]): Int\n\n  \"\"\"Transaction Type\"\"\"\n  transactionCode(transactionCode: IntIdSelector): Int\n\n  \"\"\"Transaction Source\"\"\"\n  transactionSource(transactionSource: IntIdSelector): TransactionSource\n\n  \"\"\"Transaction Type\"\"\"\n  transactionType(transactionType: [BinanceTransactionTypeSelector!]): BinanceTransactionType\n}\n\nenum BinanceTransactionsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Transaction Source Name\"\"\"\n  transaction_source_name\n\n  \"\"\"Transaction Source Code\"\"\"\n  transaction_source_code\n\n  \"\"\"Transaction Code\"\"\"\n  transaction_code\n\n  \"\"\"Transaction Type\"\"\"\n  transaction_type\n\n  \"\"\"Transaction Memo\"\"\"\n  transaction_memo\n\n  \"\"\"Currency\"\"\"\n  currency_symbol\n}\n\nenum BinanceTransactionsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique transaction source count\"\"\"\n  transaction_sources\n}\n\ninput BinanceTransferFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  sender: [BinanceAddressSelector!]\n  receiver: [BinanceAddressSelector!]\n  currency: [BinanceCurrencySelector!]\n  transferType: [BinanceTransferTypeSelector!]\n  orderId: [OrderIdSelector!]\n  tradeId: [TradeIdSelector!]\n  amount: [AmountSelector!]\n  outputIndex: [OutputIndexSelector!]\n}\n\nenum BinanceTransferType {\n  \"\"\"Reward for block\"\"\"\n  BLOCK_REWARD\n\n  \"\"\"Burning amount\"\"\"\n  BURN\n\n  \"\"\"Claiming Hash Timer Locked Transfer\"\"\"\n  CLAIM_HTL\n\n  \"\"\"Deposit for Hash Timer Locked Transfer\"\"\"\n  DEPOSIT_HTL\n\n  \"\"\"Fee for DEX orders\"\"\"\n  DEX_FEE\n\n  \"\"\"Genesis declaration\"\"\"\n  GENESIS_DELEGATION\n\n  \"\"\"Genesis supply declaration\"\"\"\n  GENESIS_SUPPLY\n\n  \"\"\"Tiny Token Issue\"\"\"\n  TINY_TOKEN_ISSUE\n\n  \"\"\"Mini Token Issue\"\"\"\n  MINI_TOKEN_ISSUE\n\n  \"\"\"Hash Timer Locked Transfer\"\"\"\n  HTL_TRANSFER\n\n  \"\"\"Issue token\"\"\"\n  ISSUE\n\n  \"\"\"Mint token\"\"\"\n  MINT\n\n  \"\"\"Trade buy side\"\"\"\n  TRADE_BUY\n\n  \"\"\"Trade sell side\"\"\"\n  TRADE_SELL\n\n  \"\"\"Transfer\"\"\"\n  TRANSFER\n\n  \"\"\"Transaction fee\"\"\"\n  TX_FEE\n\n  \"\"\"Create sidechain validator\"\"\"\n  CREATE_SIDECHAIN_VALIDATOR\n\n  \"\"\"Edit sidechain validator\"\"\"\n  EDIT_SIDECHAIN_VALIDATOR\n\n  \"\"\"Delegate for sidechain\"\"\"\n  SIDECHAIN_DELEGATE\n\n  \"\"\"ReDelegate for sidechain\"\"\"\n  SIDECHAIN_REDELEGATE\n\n  \"\"\"Unbond from sidechain\"\"\"\n  SIDECHAIN_UNBOND\n\n  \"\"\"Side chain submit poroposal\"\"\"\n  SIDE_SUBMIT_PROPOSAL\n\n  \"\"\"Side chain deposit\"\"\"\n  SIDE_DEPOSIT\n\n  \"\"\"Side chain vote\"\"\"\n  SIDE_VOTE\n\n  \"\"\"Cross chain transfer\"\"\"\n  TRANSFER_OUT\n\n  \"\"\"Submit evidence\"\"\"\n  BSC_SUBMIT_EVIDENCE\n\n  \"\"\"Cross chain claim\"\"\"\n  CLAIM\n\n  \"\"\"Bind\"\"\"\n  BIND\n\n  \"\"\"UnBind\"\"\"\n  UNBIND\n}\n\n\"\"\"Select transfer type(s)\"\"\"\ninput BinanceTransferTypeSelector {\n  \"\"\"Transfer type is\"\"\"\n  is: BinanceTransferType\n\n  \"\"\"Transfer type not\"\"\"\n  not: BinanceTransferType\n\n  \"\"\"Transfer type in the list\"\"\"\n  in: [BinanceTransferType!]\n\n  \"\"\"Transfer type not in the list\"\"\"\n  notIn: [BinanceTransferType!]\n}\n\n\"\"\"Currency transfers from/to addresses in crypto currencies\"\"\"\ntype BinanceTransfers {\n  \"\"\"Transfer amount\"\"\"\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, sender: [BinanceAddressSelector!], receiver: [BinanceAddressSelector!], currency: [BinanceCurrencySelector!], transferType: [BinanceTransferTypeSelector!], orderId: [OrderIdSelector!], tradeId: [TradeIdSelector!], amount: [AmountSelector!], outputIndex: [OutputIndexSelector!]): Float\n  any(of: BinanceTransfersMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Transfer count\"\"\"\n  count(uniq: TransfersUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, sender: [BinanceAddressSelector!], receiver: [BinanceAddressSelector!], currency: [BinanceCurrencySelector!], transferType: [BinanceTransferTypeSelector!], orderId: [OrderIdSelector!], tradeId: [TradeIdSelector!], amount: [AmountSelector!], outputIndex: [OutputIndexSelector!]): Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: [BinanceCurrencySelector!]): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  maximum(of: BinanceTransfersMeasureable!, get: BinanceTransfersMeasureable): String\n  minimum(of: BinanceTransfersMeasureable!, get: BinanceTransfersMeasureable): String\n\n  \"\"\"Order Id of trade where transfer happened\"\"\"\n  orderId(orderId: [OrderIdSelector!]): String\n\n  \"\"\"Index of the output for the transfer, 0-based\"\"\"\n  outputIndex(outputIndex: [OutputIndexSelector!]): Int\n\n  \"\"\"Transfer receiver\"\"\"\n  receiver(receiver: [BinanceAddressSelector!]): Address\n\n  \"\"\"Transfer sender\"\"\"\n  sender(sender: [BinanceAddressSelector!]): Address\n\n  \"\"\"Id of trade where transfer happened\"\"\"\n  tradeId(tradeId: [TradeIdSelector!]): String\n\n  \"\"\"Transaction where transfer happened\"\"\"\n  transaction(txHash: [HashSelector!]): TransactionHashIndex\n\n  \"\"\"Transfer type\"\"\"\n  transferType(transferType: [BinanceTransferTypeSelector!]): BinanceTransferType\n}\n\nenum BinanceTransfersMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Sender\"\"\"\n  sender\n\n  \"\"\"Receiver\"\"\"\n  receiver\n\n  \"\"\"Currency symbol\"\"\"\n  currency_symbol\n}\n\n\"\"\"Bitcoin and other UTXO type blockchains\"\"\"\ntype Bitcoin {\n  \"\"\"Blockchain Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: StringIdSelector, blockSize: IntegerSelector, blockWeight: IntegerSelector, blockVersion: IntegerSelector, transactionCount: IntegerSelector, blockStrippedSize: IntegerSelector, difficulty: FloatSelector, any: [BitcoinBlockFilter!], options: QueryOptions): [BitcoinBlock!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: AddressSelector, receiver: AddressSelector, initialAddress: AddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: BitcoinCoinpathOptions): [BitcoinCoinpath!]\n\n  \"\"\"Blockchain Transaction Inputs\"\"\"\n  inputs(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, inputIndex: IntegerSelector, inputAddress: AddressSelector, inOutputTxId: HashSelector, inOutputIndex: IntegerSelector, inputScriptType: BitcoinInputScriptTypeSelector, inputValue: FloatSelector, any: [BitcoinInputFilter!], options: QueryOptions): [BitcoinTransactionInput!]\n\n  \"\"\"Blockchain Transaction Outputs\"\"\"\n  outputs(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, outputIndex: IntegerSelector, outputAddress: AddressSelector, outputScriptType: BitcoinOutputScriptTypeSelector, outputDirection: BitcoinOutputDirectionSelector, outputValue: FloatSelector, any: [BitcoinOutputFilter!], options: QueryOptions): [BitcoinTransactionOutput!]\n\n  \"\"\"Blockchain Transactions\"\"\"\n  transactions(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, txSize: IntegerSelector, txVsize: IntegerSelector, txWeight: IntegerSelector, txVersion: IntegerSelector, txCoinbase: Boolean, inputCount: IntegerSelector, outputCount: IntegerSelector, inputValue: FloatSelector, outputValue: FloatSelector, feeValue: FloatSelector, minedValue: FloatSelector, txLocktime: IntegerSelector, any: [BitcoinTransactionFilter!], options: QueryOptions): [BitcoinTransaction!]\n}\n\n\"\"\"Block\"\"\"\ntype BitcoinBlock {\n  any(of: BitcoinBlocksMeasureable!): String\n\n  \"\"\"Block Hash\"\"\"\n  blockHash(blockHash: StringIdSelector): String\n\n  \"\"\"Block size\"\"\"\n  blockSize(blockSize: IntegerSelector): Int\n\n  \"\"\"Block stripped size\"\"\"\n  blockStrippedSize(blockStrippedSize: IntegerSelector): Int\n\n  \"\"\"Block version\"\"\"\n  blockVersion(blockVersion: IntegerSelector): Int\n\n  \"\"\"Block weight\"\"\"\n  blockWeight(blockWeight: IntegerSelector): Int\n\n  \"\"\"Block chainwork\"\"\"\n  chainwork: String\n  count(uniq: BitcoinBlockUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: StringIdSelector, blockSize: IntegerSelector, blockWeight: IntegerSelector, blockVersion: IntegerSelector, txCount: IntegerSelector, blockStrippedSize: IntegerSelector, difficulty: FloatSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Difficulty\"\"\"\n  difficulty(difficulty: FloatSelector): Float\n\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n  maximum(of: BitcoinBlocksMeasureable!, get: BitcoinBlocksMeasureable): String\n\n  \"\"\"Block median timestamp\"\"\"\n  medianTime: DateTime\n  minimum(of: BitcoinBlocksMeasureable!, get: BitcoinBlocksMeasureable): String\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n\n  \"\"\"Transaction count in block\"\"\"\n  transactionCount(transactionCount: IntegerSelector): Int\n}\n\ninput BitcoinBlockFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  blockHash: StringIdSelector\n  blockSize: IntegerSelector\n  blockWeight: IntegerSelector\n  blockVersion: IntegerSelector\n  transactionCount: IntegerSelector\n  blockStrippedSize: IntegerSelector\n  difficulty: FloatSelector\n}\n\nenum BitcoinBlockUniq {\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\nenum BitcoinBlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_hash\n\n  \"\"\"Tx Count\"\"\"\n  transaction_count\n}\n\n\"\"\"Coinpath\"\"\"\ntype BitcoinCoinpath {\n  \"\"\"Summary of transfered value\"\"\"\n  amount(in: BaseCurrencyEnum): Float\n  any(of: CoinpathMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block: Block\n\n  \"\"\"Count of transfers\"\"\"\n  count: Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"1-based hop depth of the graph\"\"\"\n  depth: Int\n  maximum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n  minimum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n\n  \"\"\"Receiver address\"\"\"\n  receiver: Address\n\n  \"\"\"Sender address\"\"\"\n  sender: Address\n\n  \"\"\"Transaction of transfer happened\"\"\"\n  transaction: TransactionHashIndexValues\n\n  \"\"\"Attributes of transaction included in Coinpath result\"\"\"\n  transactions: [CoinpathEntry!]\n}\n\nenum BitcoinCoinpathMethod {\n  \"\"\"Tracking money flow by amounts, ignoring coins (default)\"\"\"\n  moneyflow\n\n  \"\"\"Tracking coins by UTXO transactions\"\"\"\n  utxo\n}\n\n\"\"\"Limits, Ordering, Constraints, Coinpath Options\"\"\"\ninput BitcoinCoinpathOptions {\n  \"\"\"Limit number of results\"\"\"\n  limit: Int\n\n  \"\"\"Limit number of results by specific field\"\"\"\n  limitBy: LimitByOption\n\n  \"\"\"Offset of results, starting from 0\"\"\"\n  offset: Int\n\n  \"\"\"Ordering field(s) for ascending\"\"\"\n  asc: [String!]\n\n  \"\"\"Ordering field(s) for descending\"\"\"\n  desc: [String!]\n\n  \"\"\"Flow direction\"\"\"\n  direction: FlowDirection\n\n  \"\"\"Do not include transactions below this amount\"\"\"\n  minimumTxAmount: Float\n\n  \"\"\"Do not expand addresses having count transactions more than this\"\"\"\n  maximumAddressTxCount: Int\n\n  \"\"\"Maximum total transaction count returned\"\"\"\n  maximumTotalTxCount: Int\n\n  \"\"\"\n  Raise error if complexity ( currently measured in transaction count ) is higher than this option\n  \"\"\"\n  complexityLimit: Int\n\n  \"\"\"Invalidating cache seed\"\"\"\n  seed: Int\n\n  \"\"\"Method to use coinpath\"\"\"\n  coinpathMethod: BitcoinCoinpathMethod\n}\n\ninput BitcoinInputFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txIndex: IntegerSelector\n  inputIndex: IntegerSelector\n  inputAddress: AddressSelector\n  inOutputTxId: HashSelector\n  inOutputIndex: IntegerSelector\n  inputScriptType: BitcoinInputScriptTypeSelector\n  inputValue: FloatSelector\n}\n\nenum BitcoinInputScriptType {\n  \"\"\"Input Script Signature\"\"\"\n  scriptSig\n\n  \"\"\"Input Script TX Witness Script\"\"\"\n  txinwitness\n\n  \"\"\"Input Script Coinbase Script\"\"\"\n  coinbase\n}\n\n\"\"\"Selector of input script type\"\"\"\ninput BitcoinInputScriptTypeSelector {\n  \"\"\"Equal to Script Type\"\"\"\n  is: BitcoinInputScriptType\n\n  \"\"\"Not Equal to Script Type\"\"\"\n  not: BitcoinInputScriptType\n\n  \"\"\"In the list of Script Type\"\"\"\n  in: [BitcoinInputScriptType!]\n\n  \"\"\"Not in the list of Script Type\"\"\"\n  notIn: [BitcoinInputScriptType!]\n}\n\nenum BitcoinInputUniq {\n  \"\"\"Unique transactions count\"\"\"\n  transactions\n\n  \"\"\"Unique block count\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique addresses count\"\"\"\n  addresses\n}\n\nenum BitcoinInputsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Transaction index\"\"\"\n  tx_index\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Address\"\"\"\n  address\n\n  \"\"\"Input index\"\"\"\n  input_index\n}\n\nenum BitcoinNetwork {\n  \"\"\"Bitcoin ( BTC )\"\"\"\n  bitcoin\n\n  \"\"\"Bitcoin Cash ( BCH )\"\"\"\n  bitcash\n\n  \"\"\"Bitcoin SV ( BSV )\"\"\"\n  bitcoinsv\n\n  \"\"\"Litecoin ( LTC )\"\"\"\n  litecoin\n\n  \"\"\"Dash ( DASH )\"\"\"\n  dash\n\n  \"\"\"Dogecoin ( DOGE )\"\"\"\n  dogecoin\n\n  \"\"\"Cardano ( ADA )\"\"\"\n  cardano\n\n  \"\"\"ZCash ( ZCASH )\"\"\"\n  zcash\n}\n\nenum BitcoinOutputDirection {\n  \"\"\"Not defined\"\"\"\n  unknown\n\n  \"\"\"Not a change return\"\"\"\n  not_change\n\n  \"\"\"Change return\"\"\"\n  change\n\n  \"\"\"Likely Not a change return\"\"\"\n  likely_not_change\n\n  \"\"\"Likely Change return\"\"\"\n  likely_change\n\n  \"\"\"Mining\"\"\"\n  mining\n\n  \"\"\"Fee\"\"\"\n  fee\n\n  \"\"\"Minting\"\"\"\n  minting\n\n  \"\"\"Genesis\"\"\"\n  genesis\n}\n\n\"\"\"A guessed direction of output\"\"\"\ninput BitcoinOutputDirectionSelector {\n  \"\"\"Equal to direction\"\"\"\n  is: BitcoinOutputDirection\n\n  \"\"\"Not Equal to direction\"\"\"\n  not: BitcoinOutputDirection\n\n  \"\"\"In the list of direction\"\"\"\n  in: [BitcoinOutputDirection!]\n\n  \"\"\"Not in the list of direction\"\"\"\n  notIn: [BitcoinOutputDirection!]\n}\n\ninput BitcoinOutputFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txIndex: IntegerSelector\n  outputIndex: IntegerSelector\n  outputAddress: AddressSelector\n  outputScriptType: BitcoinOutputScriptTypeSelector\n  outputDirection: BitcoinOutputDirectionSelector\n  outputValue: FloatSelector\n}\n\nenum BitcoinOutputScriptType {\n  \"\"\"Output PubKey\"\"\"\n  pubkey\n\n  \"\"\"Output PubKey Hash\"\"\"\n  pubkeyhash\n\n  \"\"\"Output Script Hash\"\"\"\n  scripthash\n\n  \"\"\"Output Witness Key Hash\"\"\"\n  witness_v0_keyhash\n\n  \"\"\"Output nulldata\"\"\"\n  nulldata\n\n  \"\"\"Output Witness Script Hash\"\"\"\n  witness_v0_scripthash\n\n  \"\"\"Non standard output script\"\"\"\n  nonstandard\n\n  \"\"\"Output Multisignature Wallet\"\"\"\n  multisig\n\n  \"\"\"Output Witness Other\"\"\"\n  witness_unknown\n}\n\n\"\"\"Selector of output script type\"\"\"\ninput BitcoinOutputScriptTypeSelector {\n  \"\"\"Equal to Script Type\"\"\"\n  is: BitcoinOutputScriptType\n\n  \"\"\"Not Equal to Script Type\"\"\"\n  not: BitcoinOutputScriptType\n\n  \"\"\"In the list of Script Type\"\"\"\n  in: [BitcoinOutputScriptType!]\n\n  \"\"\"Not in the list of Script Type\"\"\"\n  notIn: [BitcoinOutputScriptType!]\n}\n\nenum BitcoinOutputUniq {\n  \"\"\"Unique transactions count\"\"\"\n  transactions\n\n  \"\"\"Unique block count\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique input addresses count\"\"\"\n  addresses\n}\n\nenum BitcoinOutputsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Transaction index\"\"\"\n  tx_index\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Address\"\"\"\n  address\n\n  \"\"\"Output index\"\"\"\n  output_index\n}\n\n\"\"\"Transaction\"\"\"\ntype BitcoinTransaction {\n  any(of: BitcoinTransactionsMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Transaction  count\"\"\"\n  count(uniq: BitcoinTransactionUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, txSize: IntegerSelector, txVsize: IntegerSelector, txWeight: IntegerSelector, txVersion: IntegerSelector, txCoinbase: Boolean, inputCount: IntegerSelector, outputCount: IntegerSelector, inputValue: FloatSelector, outputValue: FloatSelector, feeValue: FloatSelector, minedValue: FloatSelector, txLocktime: IntegerSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Transaction total fee value\"\"\"\n  feeValue(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, txSize: IntegerSelector, txVsize: IntegerSelector, txWeight: IntegerSelector, txVersion: IntegerSelector, txCoinbase: Boolean, inputCount: IntegerSelector, outputCount: IntegerSelector, inputValue: FloatSelector, outputValue: FloatSelector, feeValue: FloatSelector, minedValue: FloatSelector, txLocktime: IntegerSelector): Float\n\n  \"\"\"Hash hex representation\"\"\"\n  hash(txHash: StringIdSelector): String!\n\n  \"\"\"Transaction index in block, 0-based\"\"\"\n  index(txIndex: IntegerSelector): String!\n\n  \"\"\"Transaction total input count\"\"\"\n  inputCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, txSize: IntegerSelector, txVsize: IntegerSelector, txWeight: IntegerSelector, txVersion: IntegerSelector, txCoinbase: Boolean, inputCount: IntegerSelector, outputCount: IntegerSelector, inputValue: FloatSelector, outputValue: FloatSelector, feeValue: FloatSelector, minedValue: FloatSelector, txLocktime: IntegerSelector): Int\n\n  \"\"\"Transaction total input value\"\"\"\n  inputValue(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, txSize: IntegerSelector, txVsize: IntegerSelector, txWeight: IntegerSelector, txVersion: IntegerSelector, txCoinbase: Boolean, inputCount: IntegerSelector, outputCount: IntegerSelector, inputValue: FloatSelector, outputValue: FloatSelector, feeValue: FloatSelector, minedValue: FloatSelector, txLocktime: IntegerSelector): Float\n  maximum(of: BitcoinTransactionsMeasureable!, get: BitcoinTransactionsMeasureable): String\n\n  \"\"\"Transaction total mined value\"\"\"\n  minedValue(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, txSize: IntegerSelector, txVsize: IntegerSelector, txWeight: IntegerSelector, txVersion: IntegerSelector, txCoinbase: Boolean, inputCount: IntegerSelector, outputCount: IntegerSelector, inputValue: FloatSelector, outputValue: FloatSelector, feeValue: FloatSelector, minedValue: FloatSelector, txLocktime: IntegerSelector): Float\n  minimum(of: BitcoinTransactionsMeasureable!, get: BitcoinTransactionsMeasureable): String\n\n  \"\"\"Transaction total output count\"\"\"\n  outputCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, txSize: IntegerSelector, txVsize: IntegerSelector, txWeight: IntegerSelector, txVersion: IntegerSelector, txCoinbase: Boolean, inputCount: IntegerSelector, outputCount: IntegerSelector, inputValue: FloatSelector, outputValue: FloatSelector, feeValue: FloatSelector, minedValue: FloatSelector, txLocktime: IntegerSelector): Int\n\n  \"\"\"Transaction total output value\"\"\"\n  outputValue(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, txSize: IntegerSelector, txVsize: IntegerSelector, txWeight: IntegerSelector, txVersion: IntegerSelector, txCoinbase: Boolean, inputCount: IntegerSelector, outputCount: IntegerSelector, inputValue: FloatSelector, outputValue: FloatSelector, feeValue: FloatSelector, minedValue: FloatSelector, txLocktime: IntegerSelector): Float\n\n  \"\"\"Transaction is coinbase\"\"\"\n  txCoinbase(txCoinbase: Boolean): Boolean\n\n  \"\"\"Transaction locktime\"\"\"\n  txLocktime(txLocktime: IntegerSelector): BigInt\n\n  \"\"\"Transaction size\"\"\"\n  txSize(txSize: IntegerSelector): Int\n\n  \"\"\"Transaction version\"\"\"\n  txVersion(txVersion: IntegerSelector): Int\n\n  \"\"\"Transaction vsize\"\"\"\n  txVsize(txVsize: IntegerSelector): Int\n\n  \"\"\"Transaction weight\"\"\"\n  txWeight(txWeight: IntegerSelector): Int\n}\n\ninput BitcoinTransactionFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txIndex: IntegerSelector\n  txSize: IntegerSelector\n  txVsize: IntegerSelector\n  txWeight: IntegerSelector\n  txVersion: IntegerSelector\n  txCoinbase: Boolean\n  inputCount: IntegerSelector\n  outputCount: IntegerSelector\n  inputValue: FloatSelector\n  outputValue: FloatSelector\n  feeValue: FloatSelector\n  minedValue: FloatSelector\n  txLocktime: IntegerSelector\n}\n\n\"\"\"Transaction Input\"\"\"\ntype BitcoinTransactionInput {\n  any(of: BitcoinInputsMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Input count\"\"\"\n  count(uniq: BitcoinInputUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, inputIndex: IntegerSelector, inputAddress: AddressSelector, inOutputTxId: HashSelector, inOutputIndex: IntegerSelector, inputScriptType: BitcoinInputScriptTypeSelector, inputValue: FloatSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Input address\"\"\"\n  inputAddress(inputAddress: AddressSelector): Address\n\n  \"\"\"Input index\"\"\"\n  inputIndex(inputIndex: IntegerSelector): Int\n\n  \"\"\"Input script\"\"\"\n  inputScript: String\n\n  \"\"\"Input script type and attributes\"\"\"\n  inputScriptType(inputScriptType: BitcoinInputScriptTypeSelector): InputScript\n  maximum(of: BitcoinInputsMeasureable!, get: BitcoinInputsMeasureable): String\n  minimum(of: BitcoinInputsMeasureable!, get: BitcoinInputsMeasureable): String\n\n  \"\"\"Output Transaction for this input\"\"\"\n  outputTransaction(inOutputTxId: StringIdSelector, inOutputIndex: IntegerSelector): TransactionHashIndex\n\n  \"\"\"Transaction ID Hash\"\"\"\n  transaction(txId: StringIdSelector, txIndex: IntegerSelector): TransactionHashIndex\n\n  \"\"\"Input value\"\"\"\n  value(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, inputIndex: IntegerSelector, inputAddress: AddressSelector, inOutputTxId: HashSelector, inOutputIndex: IntegerSelector, inputScriptType: BitcoinInputScriptTypeSelector, inputValue: FloatSelector): Float\n}\n\n\"\"\"Transaction Output\"\"\"\ntype BitcoinTransactionOutput {\n  any(of: BitcoinOutputsMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Output count\"\"\"\n  count(uniq: BitcoinOutputUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, outputIndex: IntegerSelector, outputAddress: AddressSelector, outputScriptType: BitcoinOutputScriptTypeSelector, outputDirection: BitcoinOutputDirectionSelector, outputValue: FloatSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  maximum(of: BitcoinOutputsMeasureable!, get: BitcoinOutputsMeasureable): String\n  minimum(of: BitcoinOutputsMeasureable!, get: BitcoinOutputsMeasureable): String\n\n  \"\"\"Output address\"\"\"\n  outputAddress(outputAddress: AddressSelector): Address\n\n  \"\"\"Output guessed direction\"\"\"\n  outputDirection(outputDirection: BitcoinOutputDirectionSelector): BitcoinOutputDirection\n\n  \"\"\"Output index\"\"\"\n  outputIndex(outputIndex: IntegerSelector): Int\n\n  \"\"\"Output script\"\"\"\n  outputScript: String\n\n  \"\"\"Output script type and attributes\"\"\"\n  outputScriptType(inputScriptType: BitcoinOutputScriptTypeSelector): OutputScript\n  reqSigs: Int\n\n  \"\"\"Transaction ID Hash\"\"\"\n  transaction(txId: StringIdSelector, txIndex: IntegerSelector): TransactionHashIndex\n\n  \"\"\"Output value\"\"\"\n  value(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: IntegerSelector, outputIndex: IntegerSelector, outputAddress: AddressSelector, outputScriptType: BitcoinOutputScriptTypeSelector, outputDirection: BitcoinOutputDirectionSelector, outputValue: FloatSelector): Float\n}\n\nenum BitcoinTransactionUniq {\n  \"\"\"Unique block count\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\nenum BitcoinTransactionsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Transaction index\"\"\"\n  tx_index\n\n  \"\"\"Input count\"\"\"\n  input_count\n\n  \"\"\"Output count\"\"\"\n  output_count\n\n  \"\"\"Transaction size\"\"\"\n  tx_size\n\n  \"\"\"Transaction input value\"\"\"\n  input_value\n\n  \"\"\"Transaction output value\"\"\"\n  output_value\n}\n\n\"\"\"Block\"\"\"\ntype Block {\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height: Int!\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp: DateTime\n}\n\n\"\"\"BlockExtended\"\"\"\ntype BlockExtended {\n  \"\"\"Hash hex representation\"\"\"\n  hash: String!\n\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height: Int!\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp: DateTime\n}\n\n\"\"\"ConfluxBlock\"\"\"\ntype BlockInfo {\n  \"\"\"Block hash\"\"\"\n  hash: String\n\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height: Int!\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp: DateTime\n}\n\n\"\"\"Select block by height ( sequence number)\"\"\"\ninput BlockSelector {\n  \"\"\"Block height is\"\"\"\n  is: Int\n\n  \"\"\"Block height not\"\"\"\n  not: Int\n\n  \"\"\"Block height in the list\"\"\"\n  in: [Int!]\n\n  \"\"\"Block height not in the list\"\"\"\n  notIn: [Int!]\n\n  \"\"\"Block height greater than\"\"\"\n  gt: Int\n\n  \"\"\"Block height less than\"\"\"\n  lt: Int\n\n  \"\"\"Block height less or equal than\"\"\"\n  lteq: Int\n\n  \"\"\"Block height greater or equal than\"\"\"\n  gteq: Int\n\n  \"\"\"Block height in range\"\"\"\n  between: [Int!]\n}\n\n\"\"\"Select block by height ( sequence number)\"\"\"\ninput BlockSelectorRange {\n  \"\"\"Block height less or equal than\"\"\"\n  lteq: Int\n\n  \"\"\"Block height greater or equal than\"\"\"\n  gteq: Int\n\n  \"\"\"Block height in range\"\"\"\n  between: [Int!]\n}\n\n\"\"\"Blockchain network\"\"\"\ntype BlockchainNetwork {\n  \"\"\"Network name\"\"\"\n  network: Network!\n\n  \"\"\"Network protocol type\"\"\"\n  protocol: Protocol!\n}\n\n\"\"\"Transaction attributes in coinpath\"\"\"\ntype CoinpathEntry {\n  \"\"\"Amount involved in the flow\"\"\"\n  amount: Float!\n\n  \"\"\"Block of transaction\"\"\"\n  height: Int!\n\n  \"\"\"Time of transaction in ISO 8601 format\"\"\"\n  timestamp: ISO8601DateTime!\n\n  \"\"\"Hash of transaction\"\"\"\n  txHash: String!\n\n  \"\"\"Amount transfered in transaction\"\"\"\n  txValue: Float!\n}\n\nenum CoinpathMeasureable {\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Sender\"\"\"\n  sender\n\n  \"\"\"Receiver\"\"\"\n  receiver\n\n  \"\"\"Depth\"\"\"\n  depth\n}\n\n\"\"\"Limits, Ordering, Constraints, Coinpath Options\"\"\"\ninput CoinpathOptions {\n  \"\"\"Limit number of results\"\"\"\n  limit: Int\n\n  \"\"\"Limit number of results by specific field\"\"\"\n  limitBy: LimitByOption\n\n  \"\"\"Offset of results, starting from 0\"\"\"\n  offset: Int\n\n  \"\"\"Ordering field(s) for ascending\"\"\"\n  asc: [String!]\n\n  \"\"\"Ordering field(s) for descending\"\"\"\n  desc: [String!]\n\n  \"\"\"Flow direction\"\"\"\n  direction: FlowDirection\n\n  \"\"\"Do not include transactions below this amount\"\"\"\n  minimumTxAmount: Float\n\n  \"\"\"Do not expand addresses having count transactions more than this\"\"\"\n  maximumAddressTxCount: Int\n\n  \"\"\"Maximum total transaction count returned\"\"\"\n  maximumTotalTxCount: Int\n\n  \"\"\"\n  Raise error if complexity ( currently measured in transaction count ) is higher than this option\n  \"\"\"\n  complexityLimit: Int\n\n  \"\"\"Invalidating cache seed\"\"\"\n  seed: Int\n}\n\n\"\"\"Conflux Chain\"\"\"\ntype Conflux {\n  \"\"\"Basic information about address ( or smart contract )\"\"\"\n  address(address: [EthereumAddressSelectorIn!]!): [EthereumAddressInfoWithBalance!]!\n\n  \"\"\"Arguments of Smart Contract Calls and Events\"\"\"\n  arguments(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], reference: [EthereumAddressSelector!], value: [ArgumentValueSelector!], argument: [ArgumentSelector!], argumentType: [ArgumentTypeSelector!], signatureType: SignatureTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractEvent: EventSelector, external: Boolean, any: [EthereumArgumentFilter!], options: QueryOptions): [EthereumArguments!]\n\n  \"\"\"Blockchain Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, epoch: BlockSelector, pivot: Boolean, blockHash: HashSelector, referenceBlockHash: HashSelector, miner: [EthereumAddressSelector!], refereeCount: [IntegerSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!], any: [ConfluxBlockFilter!], options: QueryOptions): [ConfluxBlocks!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: EthereumAddressSelector, receiver: EthereumAddressSelector, currency: [EthereumCurrencySelector!], initialAddress: EthereumAddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: CoinpathOptions): [EthereumCoinpath!]\n\n  \"\"\"Trades on Ethereum DEX Smart Contracts\"\"\"\n  dexTrades(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], protocol: [StringSelector!], smartContractAddress: [EthereumAddressSelector!], exchangeAddress: [EthereumAddressSelector!], exchangeName: [StringSelector!], sellCurrency: [EthereumCurrencySelector!], buyCurrency: [EthereumCurrencySelector!], baseCurrency: [EthereumCurrencySelector!], quoteCurrency: [EthereumCurrencySelector!], maker: [EthereumAddressSelector!], makerSmartContractType: [SmartContractTypeSelector!], taker: [EthereumAddressSelector!], takerSmartContractType: [SmartContractTypeSelector!], makerOrTaker: [EthereumAddressSelector!], tradeIndex: [StringSelector!], buyAmount: [AmountSelector!], sellAmount: [AmountSelector!], price: [AmountSelector!], priceAsymmetry: [FloatSelector!], tradeAmountUsd: [FloatSelector!], any: [EthereumDexTradeFilter!], options: QueryOptions): [EthereumDexTrades!]\n\n  \"\"\"Smart Contract Calls\"\"\"\n  smartContractCalls(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractType: SmartContractTypeSelector, external: Boolean, success: [Boolean!], any: [EthereumSmartContractCallFilter!], options: QueryOptions): [EthereumSmartContractCalls!]\n\n  \"\"\"Smart Contract Events\"\"\"\n  smartContractEvents(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], smartContractType: SmartContractTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractEvent: EventSelector, any: [EthereumSmartContractEventFilter!], options: QueryOptions): [EthereumSmartContractEvent!]\n\n  \"\"\"Blockchain Transactions\"\"\"\n  transactions(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], blockHash: HashSelector, any: [ConfluxTransactionFilter!], options: QueryOptions): [ConfluxTransactions!]\n\n  \"\"\"Currency Transfers\"\"\"\n  transfers(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], entityId: EntitySelector, sender: [EthereumAddressSelector!], receiver: [EthereumAddressSelector!], currency: [EthereumCurrencySelector!], external: Boolean, amount: [AmountSelector!], any: [EthereumTransferFilter!], options: QueryOptions): [EthereumTransfers!]\n}\n\ninput ConfluxBlockFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  epoch: BlockSelector\n  pivot: Boolean\n  blockHash: HashSelector\n  referenceBlockHash: HashSelector\n  miner: [EthereumAddressSelector!]\n  refereeCount: [IntegerSelector!]\n  transactionCount: [IntegerSelector!]\n  uncleCount: [IntegerSelector!]\n  size: [IntegerSelector!]\n}\n\n\"\"\"Blocks in Conflux blockchain\"\"\"\ntype ConfluxBlocks {\n  \"\"\"Block is adaptive\"\"\"\n  adaptive: Boolean!\n  any(of: ConfluxBlocksMeasureable!): String\n\n  \"\"\"Blame\"\"\"\n  blame: Int!\n\n  \"\"\"Block index in epoch\"\"\"\n  blockPosition: Int!\n  count(uniq: EthereumBlocksUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, epoch: BlockSelector, pivot: Boolean, blockHash: HashSelector, referenceBlockHash: HashSelector, miner: [EthereumAddressSelector!], refereeCount: [IntegerSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Epoch in blockchain\"\"\"\n  epoch(height: BlockSelector): Int!\n\n  \"\"\"Block hash\"\"\"\n  hash(blockHash: [HashSelector!]): String!\n\n  \"\"\"Block height in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n  maximum(of: ConfluxBlocksMeasureable!, get: ConfluxBlocksMeasureable): String\n\n  \"\"\"Block miner\"\"\"\n  miner(miner: [EthereumAddressSelector!]): EthereumAddressInfo\n  minimum(of: ConfluxBlocksMeasureable!, get: ConfluxBlocksMeasureable): String\n\n  \"\"\"Block nonce\"\"\"\n  nonce: Int!\n\n  \"\"\"Parent block hash\"\"\"\n  parentHash: String!\n\n  \"\"\"Block is pivot\"\"\"\n  pivot: Boolean!\n\n  \"\"\"Power Quality\"\"\"\n  powerQuality: BigInt!\n  refereeCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, epoch: BlockSelector, pivot: Boolean, blockHash: HashSelector, referenceBlockHash: HashSelector, miner: [EthereumAddressSelector!], refereeCount: [IntegerSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Int\n\n  \"\"\"Reference Block hash\"\"\"\n  referenceBlockHash(referenceBlockHash: [HashSelector!]): String!\n  size(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, epoch: BlockSelector, pivot: Boolean, blockHash: HashSelector, referenceBlockHash: HashSelector, miner: [EthereumAddressSelector!], refereeCount: [IntegerSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Int\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n  totalDifficulty(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, epoch: BlockSelector, pivot: Boolean, blockHash: HashSelector, referenceBlockHash: HashSelector, miner: [EthereumAddressSelector!], refereeCount: [IntegerSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Float\n  transactionCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, epoch: BlockSelector, pivot: Boolean, blockHash: HashSelector, referenceBlockHash: HashSelector, miner: [EthereumAddressSelector!], refereeCount: [IntegerSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Int\n\n  \"\"\"Hash of Transaction included in block\"\"\"\n  txHash(txHash: [HashSelector!]): String!\n  uncleCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, epoch: BlockSelector, pivot: Boolean, blockHash: HashSelector, referenceBlockHash: HashSelector, miner: [EthereumAddressSelector!], refereeCount: [IntegerSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Int\n}\n\nenum ConfluxBlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_hash\n\n  \"\"\"Block Miner\"\"\"\n  miner\n\n  \"\"\"Block Referee Count\"\"\"\n  referee_count\n\n  \"\"\"Block TX Count\"\"\"\n  transaction_count\n}\n\nenum ConfluxNetwork {\n  \"\"\"Conflux Oceanus\"\"\"\n  conflux_oceanus\n\n  \"\"\"Conflux Tethys\"\"\"\n  conflux_tethys\n}\n\ninput ConfluxTransactionFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txSender: [EthereumAddressSelector!]\n  txTo: [EthereumAddressSelector!]\n  txCreates: [EthereumAddressSelector!]\n  txIndex: TxIndexSelector\n  success: Boolean\n  amount: [AmountSelector!]\n  gasCurrency: [EthereumCurrencySelector!]\n  blockHash: HashSelector\n}\n\n\"\"\"Transactions in Conflux blockchain\"\"\"\ntype ConfluxTransactions {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], blockHash: HashSelector): Float\n  any(of: ConfluxTransactionsMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(blockHash: HashSelector, height: BlockSelector, time: DateTimeSelector): BlockInfo\n  count(uniq: EthereumTransactionsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], blockHash: HashSelector): Int\n\n  \"\"\"Created smart contract\"\"\"\n  creates(txCreates: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Currency of amount\"\"\"\n  currency: Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Error message if any\"\"\"\n  error: String\n  gas(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], blockHash: HashSelector): Int\n\n  \"\"\"Currency of gas\"\"\"\n  gasCurrency(gasCurrency: [EthereumCurrencySelector!]): Currency\n\n  \"\"\"Gas price in Gwei\"\"\"\n  gasPrice(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], blockHash: HashSelector): Float!\n  gasValue(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], blockHash: HashSelector): Float\n\n  \"\"\"Hash hex representation\"\"\"\n  hash(txHash: [HashSelector!]): String!\n\n  \"\"\"Transaction index in block, 0 based\"\"\"\n  index(txIndex: [TxIndexSelector!]): Int\n  maximum(of: ConfluxTransactionsMeasureable!, get: ConfluxTransactionsMeasureable): String\n  minimum(of: ConfluxTransactionsMeasureable!, get: ConfluxTransactionsMeasureable): String\n\n  \"\"\"Transaction nonce\"\"\"\n  nonce: Int\n\n  \"\"\"Transaction sender\"\"\"\n  sender(txSender: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Transaction receiver\"\"\"\n  to(txTo: [EthereumAddressSelector!]): EthereumAddressInfo\n}\n\nenum ConfluxTransactionsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Transaction Sender\"\"\"\n  tx_sender\n\n  \"\"\"Gas value\"\"\"\n  gas_value\n\n  \"\"\"Gas price\"\"\"\n  gas_price\n\n  \"\"\"Gas used\"\"\"\n  gas\n}\n\nenum Continent {\n  \"\"\"Africa\"\"\"\n  Africa\n\n  \"\"\"Asia\"\"\"\n  Asia\n\n  \"\"\"Europe\"\"\"\n  Europe\n\n  \"\"\"North America\"\"\"\n  North_America\n\n  \"\"\"Oceania\"\"\"\n  Oceania\n\n  \"\"\"South America\"\"\"\n  South_America\n\n  \"\"\"Antarctica\"\"\"\n  Antarctica\n}\n\n\"\"\"Continent selector\"\"\"\ninput ContinentSelector {\n  \"\"\"Country code is\"\"\"\n  is: Continent\n\n  \"\"\"Country code not\"\"\"\n  not: Continent\n\n  \"\"\"Country code in the list\"\"\"\n  in: [Continent!]\n\n  \"\"\"Country code not in the list\"\"\"\n  notIn: [Continent!]\n}\n\nenum CountryCode {\n  \"\"\"Afghanistan\"\"\"\n  AF\n\n  \"\"\"Albania\"\"\"\n  AL\n\n  \"\"\"Algeria\"\"\"\n  DZ\n\n  \"\"\"American Samoa\"\"\"\n  AS\n\n  \"\"\"Andorra\"\"\"\n  AD\n\n  \"\"\"Angola\"\"\"\n  AO\n\n  \"\"\"Anguilla\"\"\"\n  AI\n\n  \"\"\"Antarctica\"\"\"\n  AQ\n\n  \"\"\"Antigua and Barbuda\"\"\"\n  AG\n\n  \"\"\"Argentina\"\"\"\n  AR\n\n  \"\"\"Armenia\"\"\"\n  AM\n\n  \"\"\"Aruba\"\"\"\n  AW\n\n  \"\"\"Australia\"\"\"\n  AU\n\n  \"\"\"Austria\"\"\"\n  AT\n\n  \"\"\"Azerbaijan\"\"\"\n  AZ\n\n  \"\"\"Bahamas\"\"\"\n  BS\n\n  \"\"\"Bahrain\"\"\"\n  BH\n\n  \"\"\"Bangladesh\"\"\"\n  BD\n\n  \"\"\"Barbados\"\"\"\n  BB\n\n  \"\"\"Belarus\"\"\"\n  BY\n\n  \"\"\"Belgium\"\"\"\n  BE\n\n  \"\"\"Belize\"\"\"\n  BZ\n\n  \"\"\"Benin\"\"\"\n  BJ\n\n  \"\"\"Bermuda\"\"\"\n  BM\n\n  \"\"\"Bhutan\"\"\"\n  BT\n\n  \"\"\"Bolivia\"\"\"\n  BO\n\n  \"\"\"Bosnia and Herzegovina\"\"\"\n  BA\n\n  \"\"\"Botswana\"\"\"\n  BW\n\n  \"\"\"Brazil\"\"\"\n  BR\n\n  \"\"\"British Indian Ocean Territory\"\"\"\n  IO\n\n  \"\"\"British Virgin Islands\"\"\"\n  VG\n\n  \"\"\"Brunei\"\"\"\n  BN\n\n  \"\"\"Bulgaria\"\"\"\n  BG\n\n  \"\"\"Burkina Faso\"\"\"\n  BF\n\n  \"\"\"Burundi\"\"\"\n  BI\n\n  \"\"\"Cambodia\"\"\"\n  KH\n\n  \"\"\"Cameroon\"\"\"\n  CM\n\n  \"\"\"Canada\"\"\"\n  CA\n\n  \"\"\"Cape Verde\"\"\"\n  CV\n\n  \"\"\"Cayman Islands\"\"\"\n  KY\n\n  \"\"\"Central African Republic\"\"\"\n  CF\n\n  \"\"\"Chad\"\"\"\n  TD\n\n  \"\"\"Chile\"\"\"\n  CL\n\n  \"\"\"China\"\"\"\n  CN\n\n  \"\"\"Christmas Island\"\"\"\n  CX\n\n  \"\"\"Cocos Islands\"\"\"\n  CC\n\n  \"\"\"Colombia\"\"\"\n  CO\n\n  \"\"\"Comoros\"\"\"\n  KM\n\n  \"\"\"Cook Islands\"\"\"\n  CK\n\n  \"\"\"Costa Rica\"\"\"\n  CR\n\n  \"\"\"Croatia\"\"\"\n  HR\n\n  \"\"\"Cuba\"\"\"\n  CU\n\n  \"\"\"Curacao\"\"\"\n  CW\n\n  \"\"\"Cyprus\"\"\"\n  CY\n\n  \"\"\"Czech Republic\"\"\"\n  CZ\n\n  \"\"\"Democratic Republic of the Congo\"\"\"\n  CD\n\n  \"\"\"Denmark\"\"\"\n  DK\n\n  \"\"\"Djibouti\"\"\"\n  DJ\n\n  \"\"\"Dominica\"\"\"\n  DM\n\n  \"\"\"Dominican Republic\"\"\"\n  DO\n\n  \"\"\"East Timor\"\"\"\n  TL\n\n  \"\"\"Ecuador\"\"\"\n  EC\n\n  \"\"\"Egypt\"\"\"\n  EG\n\n  \"\"\"El Salvador\"\"\"\n  SV\n\n  \"\"\"Equatorial Guinea\"\"\"\n  GQ\n\n  \"\"\"Eritrea\"\"\"\n  ER\n\n  \"\"\"Estonia\"\"\"\n  EE\n\n  \"\"\"Ethiopia\"\"\"\n  ET\n\n  \"\"\"Falkland Islands\"\"\"\n  FK\n\n  \"\"\"Faroe Islands\"\"\"\n  FO\n\n  \"\"\"Fiji\"\"\"\n  FJ\n\n  \"\"\"Finland\"\"\"\n  FI\n\n  \"\"\"France\"\"\"\n  FR\n\n  \"\"\"French Polynesia\"\"\"\n  PF\n\n  \"\"\"Gabon\"\"\"\n  GA\n\n  \"\"\"Gambia\"\"\"\n  GM\n\n  \"\"\"Georgia\"\"\"\n  GE\n\n  \"\"\"Germany\"\"\"\n  DE\n\n  \"\"\"Ghana\"\"\"\n  GH\n\n  \"\"\"Gibraltar\"\"\"\n  GI\n\n  \"\"\"Greece\"\"\"\n  GR\n\n  \"\"\"Greenland\"\"\"\n  GL\n\n  \"\"\"Grenada\"\"\"\n  GD\n\n  \"\"\"Guam\"\"\"\n  GU\n\n  \"\"\"Guatemala\"\"\"\n  GT\n\n  \"\"\"Guernsey\"\"\"\n  GG\n\n  \"\"\"Guinea\"\"\"\n  GN\n\n  \"\"\"Guinea-Bissau\"\"\"\n  GW\n\n  \"\"\"Guyana\"\"\"\n  GY\n\n  \"\"\"Haiti\"\"\"\n  HT\n\n  \"\"\"Honduras\"\"\"\n  HN\n\n  \"\"\"Hong Kong\"\"\"\n  HK\n\n  \"\"\"Hungary\"\"\"\n  HU\n\n  \"\"\"Iceland\"\"\"\n  IS\n\n  \"\"\"India\"\"\"\n  IN\n\n  \"\"\"Indonesia\"\"\"\n  ID\n\n  \"\"\"Iran\"\"\"\n  IR\n\n  \"\"\"Iraq\"\"\"\n  IQ\n\n  \"\"\"Ireland\"\"\"\n  IE\n\n  \"\"\"Isle of Man\"\"\"\n  IM\n\n  \"\"\"Israel\"\"\"\n  IL\n\n  \"\"\"Italy\"\"\"\n  IT\n\n  \"\"\"Ivory Coast\"\"\"\n  CI\n\n  \"\"\"Jamaica\"\"\"\n  JM\n\n  \"\"\"Japan\"\"\"\n  JP\n\n  \"\"\"Jersey\"\"\"\n  JE\n\n  \"\"\"Jordan\"\"\"\n  JO\n\n  \"\"\"Kazakhstan\"\"\"\n  KZ\n\n  \"\"\"Kenya\"\"\"\n  KE\n\n  \"\"\"Kiribati\"\"\"\n  KI\n\n  \"\"\"Kosovo\"\"\"\n  XK\n\n  \"\"\"Kuwait\"\"\"\n  KW\n\n  \"\"\"Kyrgyzstan\"\"\"\n  KG\n\n  \"\"\"Laos\"\"\"\n  LA\n\n  \"\"\"Latvia\"\"\"\n  LV\n\n  \"\"\"Lebanon\"\"\"\n  LB\n\n  \"\"\"Lesotho\"\"\"\n  LS\n\n  \"\"\"Liberia\"\"\"\n  LR\n\n  \"\"\"Libya\"\"\"\n  LY\n\n  \"\"\"Liechtenstein\"\"\"\n  LI\n\n  \"\"\"Lithuania\"\"\"\n  LT\n\n  \"\"\"Luxembourg\"\"\"\n  LU\n\n  \"\"\"Macau\"\"\"\n  MO\n\n  \"\"\"Macedonia\"\"\"\n  MK\n\n  \"\"\"Madagascar\"\"\"\n  MG\n\n  \"\"\"Malawi\"\"\"\n  MW\n\n  \"\"\"Malaysia\"\"\"\n  MY\n\n  \"\"\"Maldives\"\"\"\n  MV\n\n  \"\"\"Mali\"\"\"\n  ML\n\n  \"\"\"Malta\"\"\"\n  MT\n\n  \"\"\"Marshall Islands\"\"\"\n  MH\n\n  \"\"\"Mauritania\"\"\"\n  MR\n\n  \"\"\"Mauritius\"\"\"\n  MU\n\n  \"\"\"Mayotte\"\"\"\n  YT\n\n  \"\"\"Mexico\"\"\"\n  MX\n\n  \"\"\"Micronesia\"\"\"\n  FM\n\n  \"\"\"Moldova\"\"\"\n  MD\n\n  \"\"\"Monaco\"\"\"\n  MC\n\n  \"\"\"Mongolia\"\"\"\n  MN\n\n  \"\"\"Montenegro\"\"\"\n  ME\n\n  \"\"\"Montserrat\"\"\"\n  MS\n\n  \"\"\"Morocco\"\"\"\n  MA\n\n  \"\"\"Mozambique\"\"\"\n  MZ\n\n  \"\"\"Myanmar\"\"\"\n  MM\n\n  \"\"\"Namibia\"\"\"\n  NA\n\n  \"\"\"Nauru\"\"\"\n  NR\n\n  \"\"\"Nepal\"\"\"\n  NP\n\n  \"\"\"Netherlands\"\"\"\n  NL\n\n  \"\"\"Netherlands Antilles\"\"\"\n  AN\n\n  \"\"\"New Caledonia\"\"\"\n  NC\n\n  \"\"\"New Zealand\"\"\"\n  NZ\n\n  \"\"\"Nicaragua\"\"\"\n  NI\n\n  \"\"\"Niger\"\"\"\n  NE\n\n  \"\"\"Nigeria\"\"\"\n  NG\n\n  \"\"\"Niue\"\"\"\n  NU\n\n  \"\"\"North Korea\"\"\"\n  KP\n\n  \"\"\"Northern Mariana Islands\"\"\"\n  MP\n\n  \"\"\"Norway\"\"\"\n  NO\n\n  \"\"\"Oman\"\"\"\n  OM\n\n  \"\"\"Pakistan\"\"\"\n  PK\n\n  \"\"\"Palau\"\"\"\n  PW\n\n  \"\"\"Palestine\"\"\"\n  PS\n\n  \"\"\"Panama\"\"\"\n  PA\n\n  \"\"\"Papua New Guinea\"\"\"\n  PG\n\n  \"\"\"Paraguay\"\"\"\n  PY\n\n  \"\"\"Peru\"\"\"\n  PE\n\n  \"\"\"Philippines\"\"\"\n  PH\n\n  \"\"\"Pitcairn\"\"\"\n  PN\n\n  \"\"\"Poland\"\"\"\n  PL\n\n  \"\"\"Portugal\"\"\"\n  PT\n\n  \"\"\"Puerto Rico\"\"\"\n  PR\n\n  \"\"\"Qatar\"\"\"\n  QA\n\n  \"\"\"Republic of the Congo\"\"\"\n  CG\n\n  \"\"\"Reunion\"\"\"\n  RE\n\n  \"\"\"Romania\"\"\"\n  RO\n\n  \"\"\"Russia\"\"\"\n  RU\n\n  \"\"\"Rwanda\"\"\"\n  RW\n\n  \"\"\"Saint Barthelemy\"\"\"\n  BL\n\n  \"\"\"Saint Helena\"\"\"\n  SH\n\n  \"\"\"Saint Kitts and Nevis\"\"\"\n  KN\n\n  \"\"\"Saint Lucia\"\"\"\n  LC\n\n  \"\"\"Saint Martin\"\"\"\n  MF\n\n  \"\"\"Saint Pierre and Miquelon\"\"\"\n  PM\n\n  \"\"\"Saint Vincent and the Grenadines\"\"\"\n  VC\n\n  \"\"\"Samoa\"\"\"\n  WS\n\n  \"\"\"San Marino\"\"\"\n  SM\n\n  \"\"\"Sao Tome and Principe\"\"\"\n  ST\n\n  \"\"\"Saudi Arabia\"\"\"\n  SA\n\n  \"\"\"Senegal\"\"\"\n  SN\n\n  \"\"\"Serbia\"\"\"\n  RS\n\n  \"\"\"Seychelles\"\"\"\n  SC\n\n  \"\"\"Sierra Leone\"\"\"\n  SL\n\n  \"\"\"Singapore\"\"\"\n  SG\n\n  \"\"\"Sint Maarten\"\"\"\n  SX\n\n  \"\"\"Slovakia\"\"\"\n  SK\n\n  \"\"\"Slovenia\"\"\"\n  SI\n\n  \"\"\"Solomon Islands\"\"\"\n  SB\n\n  \"\"\"Somalia\"\"\"\n  SO\n\n  \"\"\"South Africa\"\"\"\n  ZA\n\n  \"\"\"South Korea\"\"\"\n  KR\n\n  \"\"\"South Sudan\"\"\"\n  SS\n\n  \"\"\"Spain\"\"\"\n  ES\n\n  \"\"\"Sri Lanka\"\"\"\n  LK\n\n  \"\"\"Sudan\"\"\"\n  SD\n\n  \"\"\"Suriname\"\"\"\n  SR\n\n  \"\"\"Svalbard and Jan Mayen\"\"\"\n  SJ\n\n  \"\"\"Swaziland\"\"\"\n  SZ\n\n  \"\"\"Sweden\"\"\"\n  SE\n\n  \"\"\"Switzerland\"\"\"\n  CH\n\n  \"\"\"Syria\"\"\"\n  SY\n\n  \"\"\"Taiwan\"\"\"\n  TW\n\n  \"\"\"Tajikistan\"\"\"\n  TJ\n\n  \"\"\"Tanzania\"\"\"\n  TZ\n\n  \"\"\"Thailand\"\"\"\n  TH\n\n  \"\"\"Togo\"\"\"\n  TG\n\n  \"\"\"Tokelau\"\"\"\n  TK\n\n  \"\"\"Tonga\"\"\"\n  TO\n\n  \"\"\"Trinidad and Tobago\"\"\"\n  TT\n\n  \"\"\"Tunisia\"\"\"\n  TN\n\n  \"\"\"Turkey\"\"\"\n  TR\n\n  \"\"\"Turkmenistan\"\"\"\n  TM\n\n  \"\"\"Turks and Caicos Islands\"\"\"\n  TC\n\n  \"\"\"Tuvalu\"\"\"\n  TV\n\n  \"\"\"U.S. Virgin Islands\"\"\"\n  VI\n\n  \"\"\"Uganda\"\"\"\n  UG\n\n  \"\"\"Ukraine\"\"\"\n  UA\n\n  \"\"\"United Arab Emirates\"\"\"\n  AE\n\n  \"\"\"United Kingdom\"\"\"\n  GB\n\n  \"\"\"United States\"\"\"\n  US\n\n  \"\"\"Uruguay\"\"\"\n  UY\n\n  \"\"\"Uzbekistan\"\"\"\n  UZ\n\n  \"\"\"Vanuatu\"\"\"\n  VU\n\n  \"\"\"Vatican\"\"\"\n  VA\n\n  \"\"\"Venezuela\"\"\"\n  VE\n\n  \"\"\"Vietnam\"\"\"\n  VN\n\n  \"\"\"Wallis and Futuna\"\"\"\n  WF\n\n  \"\"\"Western Sahara\"\"\"\n  EH\n\n  \"\"\"Yemen\"\"\"\n  YE\n\n  \"\"\"Zambia\"\"\"\n  ZM\n\n  \"\"\"Zimbabwe\"\"\"\n  ZW\n}\n\n\"\"\"Country selector by 3 digit ISO code\"\"\"\ninput CountrySelector {\n  \"\"\"Country code is\"\"\"\n  is: CountryCode\n\n  \"\"\"Country code not\"\"\"\n  not: CountryCode\n\n  \"\"\"Country code in the list\"\"\"\n  in: [CountryCode!]\n\n  \"\"\"Country code not in the list\"\"\"\n  notIn: [CountryCode!]\n}\n\n\"\"\"Country\"\"\"\ntype CovidCountry {\n  \"\"\"Area, km2\"\"\"\n  areaKm2: Float\n\n  \"\"\"Continent name\"\"\"\n  continent: Continent\n\n  \"\"\"Gross Domestic Product\"\"\"\n  gdp: Float\n\n  \"\"\"ISO 2 letter code\"\"\"\n  iso2: CountryCode\n\n  \"\"\"ISO 3 letter code\"\"\"\n  iso3: String\n\n  \"\"\"ISO numeric code\"\"\"\n  isoNumeric: Int\n\n  \"\"\"Location latitude\"\"\"\n  latitude: Float\n\n  \"\"\"Location longitude\"\"\"\n  longitude: Float\n\n  \"\"\"Country name\"\"\"\n  name: String\n\n  \"\"\"Population density in thousands per km2\"\"\"\n  populationPerKm2: Float\n\n  \"\"\"Population total in thousands\"\"\"\n  populationTotal: Float\n}\n\n\"\"\"Facts of Covid virus development\"\"\"\ntype CovidFact {\n  \"\"\"Count of confirmed cases\"\"\"\n  confirmed(date: DateSelector, country: CountrySelector, continent: ContinentSelector): Int\n\n  \"\"\"Country\"\"\"\n  country(country: CountrySelector, continent: ContinentSelector): CovidCountry\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Count of death cases\"\"\"\n  deaths(date: DateSelector, country: CountrySelector, continent: ContinentSelector): Int\n\n  \"\"\"Location\"\"\"\n  location: CovidLocation\n\n  \"\"\"Count of recovered cases\"\"\"\n  recovered(date: DateSelector, country: CountrySelector, continent: ContinentSelector): Int\n}\n\n\"\"\"Covid History\"\"\"\ntype CovidHistory {\n  \"\"\"COVID daily facts\"\"\"\n  facts(date: DateSelector, country: CountrySelector, continent: ContinentSelector, options: QueryOptions): [CovidFact!]\n}\n\n\"\"\"Geo Location\"\"\"\ntype CovidLocation {\n  \"\"\"Admin center name\"\"\"\n  adminCenter: String\n\n  \"\"\"FIPS code for USA\"\"\"\n  fipsCode: Int\n\n  \"\"\"Location latitude\"\"\"\n  latitude: Float\n\n  \"\"\"Location longitude\"\"\"\n  longitude: Float\n\n  \"\"\"Location Country name\"\"\"\n  name: String\n\n  \"\"\"Location Province / State name\"\"\"\n  province: String\n}\n\n\"\"\"Crypto currency ( token, coin, currency )\"\"\"\ntype Currency {\n  \"\"\"Token Smart Contract Address\"\"\"\n  address: String\n\n  \"\"\"Decimals\"\"\"\n  decimals: Int!\n\n  \"\"\"Currency name\"\"\"\n  name: String\n\n  \"\"\"Currency symbol\"\"\"\n  symbol: String!\n\n  \"\"\"Token ID\"\"\"\n  tokenId: String\n\n  \"\"\"Token Type\"\"\"\n  tokenType: String\n}\n\n\"\"\"Date\"\"\"\ntype Date {\n  \"\"\"String date representation with default format as YYYY-MM-DD\"\"\"\n  date(format: String): String!\n\n  \"\"\"Day of month (1-31)\"\"\"\n  dayOfMonth: Int!\n\n  \"\"\"Day of week  (Monday is 1, and Sunday is 7)\"\"\"\n  dayOfWeek: Int!\n\n  \"\"\"Month number (1-12)\"\"\"\n  month: Int!\n\n  \"\"\"\n  Returns start of date interval ,\n      date representation with default format as YYYY-MM-DD. Example is start of interval for 3 weeks each,\n    starting on wednesdays will read as: 'startOfInterval(unit: week, interval: 3, offset: 2)'\n  \"\"\"\n  startOfInterval(format: String, interval: Int, offset: Int, unit: DateInterval!): String!\n\n  \"\"\"Year number\"\"\"\n  year: Int!\n}\n\nenum DateInterval {\n  \"\"\"Year\"\"\"\n  year\n\n  \"\"\"Month\"\"\"\n  month\n\n  \"\"\"Week\"\"\"\n  week\n\n  \"\"\"Day\"\"\"\n  day\n}\n\n\"\"\"Selecting the date in a range, list or just date\"\"\"\ninput DateSelector {\n  \"\"\"Since date\"\"\"\n  since: ISO8601DateTime\n\n  \"\"\"Till date\"\"\"\n  till: ISO8601DateTime\n\n  \"\"\"Range of dates\"\"\"\n  between: [ISO8601DateTime!]\n\n  \"\"\"Before date\"\"\"\n  before: ISO8601DateTime\n\n  \"\"\"After date\"\"\"\n  after: ISO8601DateTime\n\n  \"\"\"In dates\"\"\"\n  in: [ISO8601DateTime!]\n\n  \"\"\"Not in dates\"\"\"\n  notIn: [ISO8601DateTime!]\n\n  \"\"\"Date equals\"\"\"\n  is: ISO8601DateTime\n\n  \"\"\"Date not equals\"\"\"\n  not: ISO8601DateTime\n}\n\n\"\"\"Date and Time\"\"\"\ntype DateTime {\n  \"\"\"Day of month (1-31)\"\"\"\n  dayOfMonth: Int!\n\n  \"\"\"Day of week  (Monday is 1, and Sunday is 7)\"\"\"\n  dayOfWeek: Int!\n\n  \"\"\"Hour (0-23)\"\"\"\n  hour: Int!\n\n  \"\"\"ISO8601 date time such as '2020-03-02T13:30:41+00:00'\"\"\"\n  iso8601: ISO8601DateTime!\n\n  \"\"\"Minute (0-59)\"\"\"\n  minute: Int!\n\n  \"\"\"Month number (1-12)\"\"\"\n  month: Int!\n\n  \"\"\"Second (0-59)\"\"\"\n  second: Int!\n\n  \"\"\"String date representation with default format as YYYY-MM-DD\"\"\"\n  time(format: String): String!\n\n  \"\"\"Unix timestamp\"\"\"\n  unixtime: Int!\n\n  \"\"\"Year number\"\"\"\n  year: Int!\n}\n\n\"\"\"Selecting the time in a range, list or just time\"\"\"\ninput DateTimeSelector {\n  \"\"\"Since time\"\"\"\n  since: ISO8601DateTime\n\n  \"\"\"Till time\"\"\"\n  till: ISO8601DateTime\n\n  \"\"\"Range of time\"\"\"\n  between: [ISO8601DateTime!]\n\n  \"\"\"Before time\"\"\"\n  before: ISO8601DateTime\n\n  \"\"\"After time\"\"\"\n  after: ISO8601DateTime\n\n  \"\"\"In times\"\"\"\n  in: [ISO8601DateTime!]\n\n  \"\"\"Not in times\"\"\"\n  notIn: [ISO8601DateTime!]\n\n  \"\"\"Time equals\"\"\"\n  is: ISO8601DateTime\n\n  \"\"\"Time not equals\"\"\"\n  not: ISO8601DateTime\n}\n\nenum DiemNetwork {\n  \"\"\"Diem Testnet\"\"\"\n  diem_testnet\n\n  \"\"\"Libra Testnet\"\"\"\n  libra_testnet\n}\n\n\"\"\"Entity\"\"\"\ntype Entity {\n  \"\"\"Entity ID\"\"\"\n  id(entityId: String): String!\n\n  \"\"\"Entity number\"\"\"\n  num: Int!\n\n  \"\"\"Entity realm ID\"\"\"\n  realmId: Int!\n\n  \"\"\"Entity shard ID\"\"\"\n  shardId: Int!\n\n  \"\"\"Entity Type\"\"\"\n  type: String!\n}\n\n\"\"\"Selector of entity ID for NFT  tokens\"\"\"\ninput EntitySelector {\n  \"\"\"EntityID is\"\"\"\n  is: String\n\n  \"\"\"EntityID not\"\"\"\n  not: String\n\n  \"\"\"EntityID in the list\"\"\"\n  in: [String!]\n\n  \"\"\"EntityID not in the list\"\"\"\n  notIn: [String!]\n}\n\nenum EntityTypeEnum {\n  \"\"\"account\"\"\"\n  account\n\n  \"\"\"contract\"\"\"\n  contract\n\n  \"\"\"file\"\"\"\n  file\n\n  \"\"\"topic\"\"\"\n  topic\n\n  \"\"\"token\"\"\"\n  token\n}\n\n\"\"\"Select by entity type\"\"\"\ninput EntityTypeSelector {\n  \"\"\"Type is\"\"\"\n  is: EntityTypeEnum\n\n  \"\"\"Type not\"\"\"\n  not: EntityTypeEnum\n\n  \"\"\"Type in the list\"\"\"\n  in: [EntityTypeEnum!]\n\n  \"\"\"Type not in the list\"\"\"\n  notIn: [EntityTypeEnum!]\n}\n\n\"\"\"EOS Chain\"\"\"\ntype Eos {\n  \"\"\"Basic information about address ( or smart contract )\"\"\"\n  address(address: [AddressSelectorIn!]!): [EosAddressInfo!]!\n\n  \"\"\"Blockchain Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, proposer: AddressSelector, any: [EosBlockFilter!], options: QueryOptions): [EosBlocks!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: AddressSelector, receiver: AddressSelector, currency: EosCurrencySelector, initialAddress: AddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: CoinpathOptions): [EosCoinpath!]\n\n  \"\"\"Smart Contract Calls\"\"\"\n  smartContractCalls(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractMethod: MethodSelector, external: Boolean, success: Boolean, scheduled: Boolean, any: [EosSmartContractCallFilter!], options: QueryOptions): [EosSmartContractCalls!]\n\n  \"\"\"Blockchain Transactions\"\"\"\n  transactions(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, scheduled: Boolean, any: [EosTransactionFilter!], options: QueryOptions): [EosTransactions!]\n\n  \"\"\"Currency Transfers\"\"\"\n  transfers(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: EosCurrencySelector, entityId: EntitySelector, external: Boolean, success: Boolean, amount: [AmountSelector!], any: [EosTransferFilter!], options: QueryOptions): [EosTransfers!]\n}\n\n\"\"\"Address detailed information for EOS network\"\"\"\ntype EosAddressInfo {\n  \"\"\"String address representation\"\"\"\n  address: String!\n\n  \"\"\"Annotations ( tags ), if exists\"\"\"\n  annotation: String\n\n  \"\"\"Smart Contract if exists on the address\"\"\"\n  smartContract: EosSmartContractInfo\n}\n\ninput EosBlockFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  blockHash: HashSelector\n  proposer: AddressSelector\n}\n\n\"\"\"Blocks in EOS blockchain\"\"\"\ntype EosBlocks {\n  any(of: EosBlocksMeasureable!): String\n  count(uniq: EosBlocksUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, proposer: AddressSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Block hash\"\"\"\n  hash(blockHash: [HashSelector!]): String!\n\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n  maximum(of: EosBlocksMeasureable!, get: EosBlocksMeasureable): String\n  minimum(of: EosBlocksMeasureable!, get: EosBlocksMeasureable): String\n\n  \"\"\"Block producer\"\"\"\n  producer(producer: AddressSelector): Address\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n}\n\nenum EosBlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_hash\n\n  \"\"\"Block Proposer\"\"\"\n  proposer\n}\n\nenum EosBlocksUniq {\n  \"\"\"Unique proposer count\"\"\"\n  proposers\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\nenum EosCallsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Sender\"\"\"\n  tx_sender\n\n  \"\"\"Action From\"\"\"\n  tx_from\n\n  \"\"\"Action To\"\"\"\n  tx_to\n\n  \"\"\"Smart Contract\"\"\"\n  smart_contract\n\n  \"\"\"Smart Contract Method Name\"\"\"\n  signature_name\n\n  \"\"\"Smart Contract Method Signature\"\"\"\n  signature\n\n  \"\"\"Smart Contract Method Signature Hash\"\"\"\n  signature_hash\n\n  \"\"\"Call depth\"\"\"\n  call_depth\n}\n\n\"\"\"Coinpath\"\"\"\ntype EosCoinpath {\n  \"\"\"Summary of transfered value\"\"\"\n  amount(in: BaseCurrencyEnum): Float\n  any(of: CoinpathMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block: Block\n\n  \"\"\"Count of transfers\"\"\"\n  count: Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"1-based hop depth of the graph\"\"\"\n  depth: Int\n  maximum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n  minimum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n\n  \"\"\"Receiver address\"\"\"\n  receiver: EosAddressInfo\n\n  \"\"\"Sender address\"\"\"\n  sender: EosAddressInfo\n\n  \"\"\"Transaction of transfer happened\"\"\"\n  transaction: TransactionHashValue\n}\n\n\"\"\"\nCurrency selector in EOS blockchain.\nToken identified by address of contract ( eosio.token for main EOS token ) \n\"\"\"\ninput EosCurrencySelector {\n  \"\"\"Currency is\"\"\"\n  is: String\n\n  \"\"\"Currency not\"\"\"\n  not: String\n\n  \"\"\"Currency in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Currency not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Eos smart contract\"\"\"\ntype EosSmartContract {\n  \"\"\"Smart Contract Address\"\"\"\n  address: Address!\n\n  \"\"\"Smart Contract Type\"\"\"\n  contractType: SmartContractType\n\n  \"\"\"Token implemented in this smart contract\"\"\"\n  currency: Currency\n\n  \"\"\"Smart Contract Protocol Type\"\"\"\n  protocolType: String\n}\n\ninput EosSmartContractCallFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txFrom: AddressSelector\n  txTo: AddressSelector\n  smartContractAddress: AddressSelector\n  smartContractMethod: MethodSelector\n  external: Boolean\n  success: Boolean\n  scheduled: Boolean\n}\n\n\"\"\"Smart Contract Calls\"\"\"\ntype EosSmartContractCalls {\n  \"\"\"Actors\"\"\"\n  actors: String\n  any(of: EosCallsMeasureable!): String\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"\n  Depth of the call. Empty string for external call, then counted as 0...N, and the next layer is added through '-'. For example 0-3-9.\n  \"\"\"\n  callDepth: String\n\n  \"\"\"Console\"\"\"\n  console: String\n\n  \"\"\"Counts and other metrics\"\"\"\n  count(uniq: SmartContractCallsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractMethod: MethodSelector, external: Boolean, success: Boolean, scheduled: Boolean): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Error Code\"\"\"\n  errorCode(errorCode: IntIdSelector): Int\n\n  \"\"\"\n  External call executed explicitly by tx sender. Internal calls executed by smart contracts.\n  \"\"\"\n  external(external: Boolean): Boolean\n  maximum(of: EosCallsMeasureable!, get: EosCallsMeasureable): String\n  minimum(of: EosCallsMeasureable!, get: EosCallsMeasureable): String\n\n  \"\"\"Permissions\"\"\"\n  permissions: String\n\n  \"\"\"Receivers\"\"\"\n  receivers: String\n\n  \"\"\"True if call scheduled\"\"\"\n  scheduled(scheduled: [Boolean!]): Boolean\n\n  \"\"\"Smart contract being called\"\"\"\n  smartContract(smartContractAddress: AddressSelector): EosSmartContract\n\n  \"\"\"Contract method invoked\"\"\"\n  smartContractMethod(smartContractMethod: MethodSelector): Method\n\n  \"\"\"\n  True if call succeeded, false if error happened. Note, that by default only successfull calls are returned in API.\n  \"\"\"\n  success(success: [Boolean!]): Boolean\n\n  \"\"\"Action from address\"\"\"\n  txFrom(txFrom: AddressSelector): Address\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  txHash(txHash: HashSelector): String\n\n  \"\"\"Action to address\"\"\"\n  txTo(txTo: AddressSelector): Address\n}\n\n\"\"\"Blockchain smart contract\"\"\"\ntype EosSmartContractInfo {\n  \"\"\"Smart Contract Type\"\"\"\n  contractType: SmartContractType\n\n  \"\"\"Token implemented in this smart contract\"\"\"\n  currency: Currency\n\n  \"\"\"Smart Contract Protocol Type\"\"\"\n  protocolType: String\n}\n\ninput EosTransactionFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txIndex: TxIndexSelector\n  success: Boolean\n  scheduled: Boolean\n}\n\n\"\"\"Transactions in EOS blockchain\"\"\"\ntype EosTransactions {\n  any(of: EosTransactionsMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: EosTransactionsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, scheduled: Boolean): Int\n  cpuUsageUs(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, scheduled: Boolean): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Hash hex representation\"\"\"\n  hash(txHash: [HashSelector!]): String!\n\n  \"\"\"Transaction index in block, 0 based\"\"\"\n  index(txIndex: [TxIndexSelector!]): Int\n  maximum(of: EosTransactionsMeasureable!, get: EosTransactionsMeasureable): String\n  minimum(of: EosTransactionsMeasureable!, get: EosTransactionsMeasureable): String\n  netUsageWords(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, scheduled: Boolean): Int\n\n  \"\"\"Success\"\"\"\n  scheduled(scheduled: Boolean): Boolean\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n}\n\nenum EosTransactionsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"CPU Usage\"\"\"\n  cpu_usage_us\n\n  \"\"\"Net Usage\"\"\"\n  net_usage_words\n}\n\nenum EosTransactionsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\ninput EosTransferFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txFrom: AddressSelector\n  txTo: AddressSelector\n  sender: AddressSelector\n  receiver: AddressSelector\n  currency: EosCurrencySelector\n  entityId: EntitySelector\n  external: Boolean\n  success: Boolean\n  amount: [AmountSelector!]\n}\n\n\"\"\"Currency transfers from/to addresses in crypto currencies\"\"\"\ntype EosTransfers {\n  \"\"\"Actors\"\"\"\n  actors: String\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: EosCurrencySelector, entityId: EntitySelector, external: Boolean, success: Boolean, amount: [AmountSelector!]): Float\n  any(of: EosTransfersMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: TransfersUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: EosCurrencySelector, entityId: EntitySelector, external: Boolean, success: Boolean, amount: [AmountSelector!]): Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: EosCurrencySelector): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Entity identifier ( for ERC-721 NFT tokens )\"\"\"\n  entityId(entityId: EntitySelector): String\n\n  \"\"\"\n  External transfer executed explicitly by tx sender. Internal transfers executed by smart contracts.\n  \"\"\"\n  external(external: Boolean): Boolean\n  maximum(of: EosTransfersMeasureable!, get: EosTransfersMeasureable): String\n\n  \"\"\"Memo\"\"\"\n  memo: String\n  minimum(of: EosTransfersMeasureable!, get: EosTransfersMeasureable): String\n\n  \"\"\"Transfer receiver\"\"\"\n  receiver(receiver: AddressSelector): Address\n\n  \"\"\"Transfer sender\"\"\"\n  sender(sender: AddressSelector): Address\n\n  \"\"\"Transfer succeeded\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Action from address\"\"\"\n  txFrom(txFrom: AddressSelector): Address\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  txHash(txHash: HashSelector): String\n\n  \"\"\"Action to address\"\"\"\n  txTo(txTo: AddressSelector): Address\n}\n\nenum EosTransfersMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Sender\"\"\"\n  sender\n\n  \"\"\"Receiver\"\"\"\n  receiver\n\n  \"\"\"Currency symbol\"\"\"\n  currency_symbol\n\n  \"\"\"Token address\"\"\"\n  currency_address\n}\n\n\"\"\"Ethereum Chain\"\"\"\ntype Ethereum {\n  \"\"\"Basic information about address ( or smart contract )\"\"\"\n  address(address: [EthereumAddressSelectorIn!]!): [EthereumAddressInfoWithBalance!]!\n\n  \"\"\"Arguments of Smart Contract Calls and Events\"\"\"\n  arguments(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], reference: [EthereumAddressSelector!], value: [ArgumentValueSelector!], argument: [ArgumentSelector!], argumentType: [ArgumentTypeSelector!], signatureType: SignatureTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractEvent: EventSelector, external: Boolean, any: [EthereumArgumentFilter!], options: QueryOptions): [EthereumArguments!]\n\n  \"\"\"Blockchain Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [EthereumAddressSelector!], blockReward: [AmountSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!], any: [EthereumBlockFilter!], options: QueryOptions): [EthereumBlocks!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: EthereumAddressSelector, receiver: EthereumAddressSelector, currency: [EthereumCurrencySelector!], initialAddress: EthereumAddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: CoinpathOptions): [EthereumCoinpath!]\n\n  \"\"\"Trades on Ethereum DEX Smart Contracts\"\"\"\n  dexTrades(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], protocol: [StringSelector!], smartContractAddress: [EthereumAddressSelector!], exchangeAddress: [EthereumAddressSelector!], exchangeName: [StringSelector!], sellCurrency: [EthereumCurrencySelector!], buyCurrency: [EthereumCurrencySelector!], baseCurrency: [EthereumCurrencySelector!], quoteCurrency: [EthereumCurrencySelector!], maker: [EthereumAddressSelector!], makerSmartContractType: [SmartContractTypeSelector!], taker: [EthereumAddressSelector!], takerSmartContractType: [SmartContractTypeSelector!], makerOrTaker: [EthereumAddressSelector!], tradeIndex: [StringSelector!], buyAmount: [AmountSelector!], sellAmount: [AmountSelector!], price: [AmountSelector!], priceAsymmetry: [FloatSelector!], tradeAmountUsd: [FloatSelector!], any: [EthereumDexTradeFilter!], options: QueryOptions): [EthereumDexTrades!]\n\n  \"\"\"Smart Contract Calls\"\"\"\n  smartContractCalls(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractType: SmartContractTypeSelector, external: Boolean, success: [Boolean!], any: [EthereumSmartContractCallFilter!], options: QueryOptions): [EthereumSmartContractCalls!]\n\n  \"\"\"Smart Contract Events\"\"\"\n  smartContractEvents(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], smartContractType: SmartContractTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractEvent: EventSelector, any: [EthereumSmartContractEventFilter!], options: QueryOptions): [EthereumSmartContractEvent!]\n\n  \"\"\"Blockchain Transactions\"\"\"\n  transactions(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], gasValue: [AmountSelector!], any: [EthereumTransactionFilter!], options: QueryOptions): [EthereumTransactions!]\n\n  \"\"\"Currency Transfers\"\"\"\n  transfers(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], entityId: EntitySelector, sender: [EthereumAddressSelector!], receiver: [EthereumAddressSelector!], currency: [EthereumCurrencySelector!], external: Boolean, amount: [AmountSelector!], any: [EthereumTransferFilter!], options: QueryOptions): [EthereumTransfers!]\n}\n\n\"\"\"Ethereum v 2.0 Baecon Chain\"\"\"\ntype Ethereum2 {\n  \"\"\"Attestations in block\"\"\"\n  attestations(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], validatorIndex: [IntegerSelector!], committeeIndex: [IntegerSelector!], attestationSlot: [IntegerSelector!], attestationEpoch: [IntegerSelector!], any: [Ethereum2Filter!], options: QueryOptions): [Ethereum2Attestation!]\n\n  \"\"\"Attester Slashings\"\"\"\n  attesterSlashings(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], validatorIndex: [IntegerSelector!], attestationSlot: [IntegerSelector!], attestationEpoch: [IntegerSelector!], any: [Ethereum2Filter!], options: QueryOptions): [Ethereum2AttesterSlashing!]\n\n  \"\"\"Blockchain Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], any: [Ethereum2Filter!], options: QueryOptions): [Ethereum2Blocks!]\n\n  \"\"\"Attestations of blocks\"\"\"\n  deposits(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], validatorIndex: [IntegerSelector!], any: [Ethereum2Filter!], options: QueryOptions): [Ethereum2Deposit!]\n\n  \"\"\"Proposer Slashings\"\"\"\n  proposerSlashings(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], slashingProposerIndex: [IntegerSelector!], slashingSlot: [IntegerSelector!], slashingEpoch: [IntegerSelector!], any: [Ethereum2Filter!], options: QueryOptions): [Ethereum2ProposerSlashing!]\n\n  \"\"\"Voluntary Exits\"\"\"\n  voluntaryExits(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], validatorIndex: [IntegerSelector!], voluntaryExitEpoch: [IntegerSelector!], any: [Ethereum2Filter!], options: QueryOptions): [Ethereum2VoluntaryExit!]\n}\n\n\"\"\"Attestations in Ethereum v2.0 blockchain\"\"\"\ntype Ethereum2Attestation {\n  aggregationBits: String!\n  any(of: Ethereum2AttestationsMeasureable!): String\n  attestation: Ethereum2AttestationInfo!\n\n  \"\"\"Attestation Index (0 based ) in block\"\"\"\n  attestationIndex: Int!\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Block root hash\"\"\"\n  blockRoot(blockRootHash: [HashSelector!]): String!\n\n  \"\"\"Committee index for attestation\"\"\"\n  committeeIndex: Int!\n  count(uniq: Ethereum2AttestationsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], validatorIndex: [IntegerSelector!], committeeIndex: [IntegerSelector!], attestationSlot: [IntegerSelector!], attestationEpoch: [IntegerSelector!]): BigInt\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Block Eth1 information\"\"\"\n  eth1: Ethereum2Eth1Info!\n  maximum(of: Ethereum2AttestationsMeasureable!, get: Ethereum2AttestationsMeasureable): String\n  minimum(of: Ethereum2AttestationsMeasureable!, get: Ethereum2AttestationsMeasureable): String\n\n  \"\"\"Block parent hash\"\"\"\n  parentRoot: String!\n\n  \"\"\"Block proposer\"\"\"\n  proposer(blockProposerIndex: [IntegerSelector!]): Ethereum2ValidatorInfo\n\n  \"\"\"Block state root hash\"\"\"\n  stateRoot: String!\n\n  \"\"\"Validator\"\"\"\n  validator: Ethereum2ValidatorInfo!\n\n  \"\"\"Sequential index of validator in committee ( 0-based)\"\"\"\n  validatorInCommitteeIndex: Int!\n}\n\n\"\"\"AttestationFieldInfo for Ethereum v 2.0 network\"\"\"\ntype Ethereum2AttestationFieldInfo {\n  epoch: Int!\n\n  \"\"\"Root Hash\"\"\"\n  root: String!\n}\n\n\"\"\"AttestationInfo for Ethereum v 2.0 network\"\"\"\ntype Ethereum2AttestationInfo {\n  beaconBlockRoot: String!\n  epoch: Int!\n  signature: String!\n  slot: Int!\n  source: Ethereum2AttestationFieldInfo!\n  target: Ethereum2AttestationFieldInfo!\n}\n\nenum Ethereum2AttestationsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_root_hash\n\n  \"\"\"Block Proposer\"\"\"\n  block_proposer\n\n  \"\"\"Committee Index\"\"\"\n  committee\n\n  \"\"\"Validator index\"\"\"\n  validator\n}\n\nenum Ethereum2AttestationsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique block proposers\"\"\"\n  block_proposers\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique commitees\"\"\"\n  committees\n\n  \"\"\"Unique validators\"\"\"\n  validators\n\n  \"\"\"Unique attestations\"\"\"\n  attestations\n\n  \"\"\"Unique attestation slots\"\"\"\n  attestation_slots\n\n  \"\"\"Unique attestation epochs\"\"\"\n  attestation_epochs\n}\n\n\"\"\"Attester Slashing in Ethereum v2.0 blockchain\"\"\"\ntype Ethereum2AttesterSlashing {\n  any(of: Ethereum2AttesterSlashingMeasureable!): String\n  attestation: Ethereum2AttestationInfo!\n\n  \"\"\"Attestation slashing sequential number\"\"\"\n  attestationOrder: Int!\n\n  \"\"\"Attester Slashing Index (0 based ) in block\"\"\"\n  attesterSlashingIndex: Int!\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Block root hash\"\"\"\n  blockRoot(blockRootHash: [HashSelector!]): String!\n  count(uniq: Ethereum2AttesterSlashingsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], validatorIndex: [IntegerSelector!], attestationSlot: [IntegerSelector!], attestationEpoch: [IntegerSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Block Eth1 information\"\"\"\n  eth1: Ethereum2Eth1Info!\n  maximum(of: Ethereum2AttesterSlashingMeasureable!, get: Ethereum2AttesterSlashingMeasureable): String\n  minimum(of: Ethereum2AttesterSlashingMeasureable!, get: Ethereum2AttesterSlashingMeasureable): String\n\n  \"\"\"Block parent hash\"\"\"\n  parentRoot: String!\n\n  \"\"\"Block proposer\"\"\"\n  proposer(blockProposerIndex: [IntegerSelector!]): Ethereum2ValidatorInfo\n\n  \"\"\"Block state root hash\"\"\"\n  stateRoot: String!\n\n  \"\"\"Validator\"\"\"\n  validator: Ethereum2ValidatorInfo!\n\n  \"\"\"Validator index in slashing sequential numbern\"\"\"\n  validatorInAttestationIndex: Int!\n}\n\nenum Ethereum2AttesterSlashingMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_root_hash\n\n  \"\"\"Block Proposer\"\"\"\n  block_proposer\n\n  \"\"\"Validator index\"\"\"\n  validator\n}\n\nenum Ethereum2AttesterSlashingsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique block proposers\"\"\"\n  block_proposers\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique validators\"\"\"\n  validators\n\n  \"\"\"Unique slashing slots\"\"\"\n  attestation_slots\n\n  \"\"\"Unique slashing epochs\"\"\"\n  attestation_epochs\n}\n\n\"\"\"Blocks in Ethereum v2.0 blockchain\"\"\"\ntype Ethereum2Blocks {\n  any(of: Ethereum2BlocksMeasureable!): String\n  attestationsCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!]): Int\n  attesterSlashingsCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!]): Int\n\n  \"\"\"Block root hash\"\"\"\n  blockRoot(blockRootHash: [HashSelector!]): String!\n  count(uniq: Ethereum2BlocksUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  depositsCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!]): Int\n\n  \"\"\"Block Eth1 information\"\"\"\n  eth1: Ethereum2Eth1Info!\n\n  \"\"\"Graffiti\"\"\"\n  graffiti: String!\n\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n  maximum(of: Ethereum2BlocksMeasureable!, get: Ethereum2BlocksMeasureable): String\n  minimum(of: Ethereum2BlocksMeasureable!, get: Ethereum2BlocksMeasureable): String\n\n  \"\"\"Block parent hash\"\"\"\n  parentRoot: String!\n\n  \"\"\"Block proposer\"\"\"\n  proposer(blockProposerIndex: [IntegerSelector!]): Ethereum2ValidatorInfo\n  proposerSlashingsCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!]): Int\n\n  \"\"\"Randao Reveal\"\"\"\n  randaoReveal: String!\n\n  \"\"\"Block signature\"\"\"\n  signature: String!\n\n  \"\"\"Block state root hash\"\"\"\n  stateRoot: String!\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n  voluntaryExitsCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!]): Int\n}\n\nenum Ethereum2BlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_root_hash\n\n  \"\"\"Block Miner\"\"\"\n  block_proposer\n}\n\nenum Ethereum2BlocksUniq {\n  \"\"\"Unique proposers\"\"\"\n  block_proposers\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\n\"\"\"Deposit in Ethereum v2.0 blockchain\"\"\"\ntype Ethereum2Deposit {\n  amount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], validatorIndex: [IntegerSelector!]): Float\n  any(of: Ethereum2DepositsMeasureable!): String\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Block root hash\"\"\"\n  blockRoot(blockRootHash: [HashSelector!]): String!\n  count(uniq: Ethereum2DepositsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Deposit Index (0 based ) in block\"\"\"\n  depositIndex: Int!\n\n  \"\"\"Block Eth1 information\"\"\"\n  eth1: Ethereum2Eth1Info!\n  maximum(of: Ethereum2DepositsMeasureable!, get: Ethereum2DepositsMeasureable): String\n  minimum(of: Ethereum2DepositsMeasureable!, get: Ethereum2DepositsMeasureable): String\n\n  \"\"\"Block parent hash\"\"\"\n  parentRoot: String!\n  proof: String!\n\n  \"\"\"Block proposer\"\"\"\n  proposer(blockProposerIndex: [IntegerSelector!]): Ethereum2ValidatorInfo\n  signature: String!\n\n  \"\"\"Block state root hash\"\"\"\n  stateRoot: String!\n\n  \"\"\"Validator\"\"\"\n  validator: Ethereum2ValidatorInfo!\n}\n\nenum Ethereum2DepositsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_root_hash\n\n  \"\"\"Block Proposer\"\"\"\n  block_proposer\n\n  \"\"\"Validator index\"\"\"\n  validator\n}\n\nenum Ethereum2DepositsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique block proposers\"\"\"\n  block_proposers\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique validators\"\"\"\n  validators\n}\n\n\"\"\"Eth1 attributes for Ethereum v 2.0 network\"\"\"\ntype Ethereum2Eth1Info {\n  \"\"\"Block Eth1 block hash\"\"\"\n  blockHash: String!\n\n  \"\"\"Block Eth1 deposit count\"\"\"\n  depositCount: Int!\n\n  \"\"\"Block Eth1 deposit root hash\"\"\"\n  depositRoot: String!\n}\n\ninput Ethereum2Filter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  blockRootHash: HashSelector\n  blockProposerIndex: [IntegerSelector!]\n}\n\nenum Ethereum2Network {\n  \"\"\"Beacon Chain Ethereum 2.0\"\"\"\n  eth2\n\n  \"\"\"Medalla Ethereum 2.0 Beacon Testnet\"\"\"\n  medalla\n}\n\n\"\"\"Proposer Slashing in Ethereum v2.0 blockchain\"\"\"\ntype Ethereum2ProposerSlashing {\n  any(of: Ethereum2ProposerSlashingMeasureable!): String\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Block root hash\"\"\"\n  blockRoot(blockRootHash: [HashSelector!]): String!\n  count(uniq: Ethereum2ProposerSlashingsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], slashingProposerIndex: [IntegerSelector!], slashingSlot: [IntegerSelector!], slashingEpoch: [IntegerSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Block Eth1 information\"\"\"\n  eth1: Ethereum2Eth1Info!\n\n  \"\"\"Header slashing sequential numbern\"\"\"\n  headerOrder: Int!\n  maximum(of: Ethereum2ProposerSlashingMeasureable!, get: Ethereum2ProposerSlashingMeasureable): String\n  minimum(of: Ethereum2ProposerSlashingMeasureable!, get: Ethereum2ProposerSlashingMeasureable): String\n\n  \"\"\"Block parent hash\"\"\"\n  parentRoot: String!\n\n  \"\"\"Block proposer\"\"\"\n  proposer(blockProposerIndex: [IntegerSelector!]): Ethereum2ValidatorInfo\n\n  \"\"\"Proposer Slashing Index (0 based ) in block\"\"\"\n  proposerSlashingIndex: Int!\n  slashing: Ethereum2SlashingInfo!\n\n  \"\"\"Block state root hash\"\"\"\n  stateRoot: String!\n}\n\nenum Ethereum2ProposerSlashingMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_root_hash\n\n  \"\"\"Block Proposer\"\"\"\n  block_proposer\n\n  \"\"\"Slashed Proposer\"\"\"\n  proposer\n}\n\nenum Ethereum2ProposerSlashingsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique block proposers\"\"\"\n  block_proposers\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique slashing slots\"\"\"\n  slashing_slots\n\n  \"\"\"Unique slashing epochs\"\"\"\n  slashing_epochs\n\n  \"\"\"Unique slashing proposers\"\"\"\n  slashing_proposers\n}\n\n\"\"\"SlashingInfo for Ethereum v 2.0 network\"\"\"\ntype Ethereum2SlashingInfo {\n  \"\"\"Block body hash\"\"\"\n  bodyRoot: String!\n  epoch: Int!\n\n  \"\"\"Block parent hash\"\"\"\n  parentRoot: String!\n\n  \"\"\"Block proposer\"\"\"\n  proposer: Ethereum2ValidatorInfo\n  signature: String!\n  slot: Int!\n\n  \"\"\"Block state root hash\"\"\"\n  stateRoot: String!\n}\n\n\"\"\"Validator attributes for Ethereum v 2.0 network\"\"\"\ntype Ethereum2ValidatorInfo {\n  \"\"\"Validator Index as Integer\"\"\"\n  index: Int!\n\n  \"\"\"Validator Pub Key\"\"\"\n  pubkey: String!\n\n  \"\"\"Validator Withdrawal\"\"\"\n  withdrawalCredentials: String!\n}\n\n\"\"\"Voluntary Exit in Ethereum v2.0 blockchain\"\"\"\ntype Ethereum2VoluntaryExit {\n  any(of: Ethereum2VoluntaryExitsMeasureable!): String\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Block root hash\"\"\"\n  blockRoot(blockRootHash: [HashSelector!]): String!\n  count(uniq: Ethereum2VoluntaryExitsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockRootHash: HashSelector, blockProposerIndex: [IntegerSelector!], validatorIndex: [IntegerSelector!], voluntaryExitEpoch: [IntegerSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Block Eth1 information\"\"\"\n  eth1: Ethereum2Eth1Info!\n  maximum(of: Ethereum2VoluntaryExitsMeasureable!, get: Ethereum2VoluntaryExitsMeasureable): String\n  minimum(of: Ethereum2VoluntaryExitsMeasureable!, get: Ethereum2VoluntaryExitsMeasureable): String\n\n  \"\"\"Block parent hash\"\"\"\n  parentRoot: String!\n\n  \"\"\"Block proposer\"\"\"\n  proposer(blockProposerIndex: [IntegerSelector!]): Ethereum2ValidatorInfo\n\n  \"\"\"Signature\"\"\"\n  signature: String!\n\n  \"\"\"Block state root hash\"\"\"\n  stateRoot: String!\n\n  \"\"\"Validator\"\"\"\n  validator: Ethereum2ValidatorInfo!\n  voluntaryExitEpoch: Int!\n\n  \"\"\"Voluntary Exit Index (0 based ) in block\"\"\"\n  voluntaryExitIndex: Int!\n}\n\nenum Ethereum2VoluntaryExitsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_root_hash\n\n  \"\"\"Block Proposer\"\"\"\n  block_proposer\n\n  \"\"\"Validator index\"\"\"\n  validator\n}\n\nenum Ethereum2VoluntaryExitsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique block proposers\"\"\"\n  block_proposers\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique validators\"\"\"\n  validators\n}\n\n\"\"\"Address detailed information for Ethereum network\"\"\"\ntype EthereumAddressInfo {\n  \"\"\"String address representation\"\"\"\n  address: String!\n\n  \"\"\"Annotations ( tags ), if exists\"\"\"\n  annotation: String\n\n  \"\"\"Smart Contract if exists on the address\"\"\"\n  smartContract: EthereumSmartContractInfo\n}\n\n\"\"\"Blockchain address\"\"\"\ntype EthereumAddressInfoWithBalance {\n  \"\"\"String address representation\"\"\"\n  address: String!\n\n  \"\"\"Annotations ( tags ), if exists\"\"\"\n  annotation: String\n\n  \"\"\"DEPRECATED Current address balance\"\"\"\n  balance: Float\n\n  \"\"\"DEPRECATED Balances by currencies for the address\"\"\"\n  balances(date: DateSelector, time: DateTimeSelector, currency: EthereumCurrencySelector, height: BlockSelectorRange): [EthereumBalance!]\n\n  \"\"\"Smart Contract if exists on the address\"\"\"\n  smartContract: EthereumSmartContractInfoWithAttributes\n}\n\n\"\"\"\nAddress should start from 0x and contain hex digits.\n  If digits are case sensitive, address is checked against checksum according to EIP-55.\n\"\"\"\ninput EthereumAddressSelector {\n  \"\"\"Equal to Address\"\"\"\n  is: String\n\n  \"\"\"Not Equal to Address\"\"\"\n  not: String\n\n  \"\"\"In the list of Addresses\"\"\"\n  in: [String!]\n\n  \"\"\"Not in the list of Addresses\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"\nAddress should start from 0x and contain hex digits.\n  If digits are case sensitive, address is checked against checksum according to EIP-55.\n\"\"\"\ninput EthereumAddressSelectorIn {\n  \"\"\"Equal to Address\"\"\"\n  is: String\n\n  \"\"\"In the list of Addresses\"\"\"\n  in: [String!]\n}\n\ninput EthereumArgumentFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txFrom: [EthereumAddressSelector!]\n  caller: [EthereumAddressSelector!]\n  reference: [EthereumAddressSelector!]\n  value: [ArgumentValueSelector!]\n  argument: [ArgumentSelector!]\n  argumentType: [ArgumentTypeSelector!]\n  signatureType: SignatureTypeSelector\n  smartContractAddress: [EthereumAddressSelector!]\n  smartContractMethod: MethodSelector\n  smartContractEvent: EventSelector\n  external: Boolean\n}\n\n\"\"\"Arguments of Smart Contract Calls and Events\"\"\"\ntype EthereumArguments {\n  any(of: EthereumArgumentsMeasureable!, as: EthereumArgumentsConvertable, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], reference: [EthereumAddressSelector!], value: [ArgumentValueSelector!], argument: [ArgumentSelector!], argumentType: [ArgumentTypeSelector!], signatureType: SignatureTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractEvent: EventSelector, external: Boolean): String\n\n  \"\"\"Method or event argument\"\"\"\n  argument(argument: [ArgumentSelector!], argumentType: String): ArgumentName\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"\n  Depth of the call. Empty string for external call, then counted as 0...N, and the next layer is added through '-'. For example 0-3-9.\n  \"\"\"\n  callDepth: String\n\n  \"\"\"\n  Caller of the method invocation ( tx sender or another smart contract )\n  \"\"\"\n  caller(caller: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Counts and other metrics\"\"\"\n  count(uniq: SmartContractArgumentsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], reference: [EthereumAddressSelector!], value: [ArgumentValueSelector!], argument: [ArgumentSelector!], argumentType: [ArgumentTypeSelector!], signatureType: SignatureTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractEvent: EventSelector, external: Boolean): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"\n  External call executed explicitly by tx sender. Internal calls executed by smart contracts.\n  \"\"\"\n  external(external: Boolean): Boolean\n\n  \"\"\"Sequential index of value in array ( multi-dimensional)\"\"\"\n  index: String!\n  maximum(of: EthereumArgumentsMeasureable!, get: EthereumArgumentsMeasureable, as: EthereumArgumentsConvertable, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], reference: [EthereumAddressSelector!], value: [ArgumentValueSelector!], argument: [ArgumentSelector!], argumentType: [ArgumentTypeSelector!], signatureType: SignatureTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractEvent: EventSelector, external: Boolean): String\n  minimum(of: EthereumArgumentsMeasureable!, get: EthereumArgumentsMeasureable, as: EthereumArgumentsConvertable, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], reference: [EthereumAddressSelector!], value: [ArgumentValueSelector!], argument: [ArgumentSelector!], argumentType: [ArgumentTypeSelector!], signatureType: SignatureTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractEvent: EventSelector, external: Boolean): String\n  number(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], reference: [EthereumAddressSelector!], value: [ArgumentValueSelector!], argument: [ArgumentSelector!], argumentType: [ArgumentTypeSelector!], signatureType: SignatureTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractEvent: EventSelector, external: Boolean): Float\n\n  \"\"\"Address value of method or event argument\"\"\"\n  reference(reference: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Smart contract being called\"\"\"\n  smartContract(smartContractAddress: [EthereumAddressSelector!]): EthereumSmartContract\n\n  \"\"\"Contract method or event\"\"\"\n  smartContractSignature(smartContractMethod: MethodSelector, smartContractEvent: EventSelector, signatureType: SignatureTypeSelector): Signature\n\n  \"\"\"\n  True if call succeeded, false if error happened. Note, that by default only successfull calls are returned in API.\n  \"\"\"\n  success(success: [Boolean!]): Boolean\n\n  \"\"\"Transaction where call happened\"\"\"\n  transaction(txHash: [HashSelector!], txFrom: [EthereumAddressSelector!]): EthereumTransactionInfo\n\n  \"\"\"The Value of method or event argument\"\"\"\n  value(value: [ArgumentValueSelector!]): ArgumentValue\n}\n\nenum EthereumArgumentsConvertable {\n  \"\"\"Token symbol\"\"\"\n  token_symbol\n\n  \"\"\"Token name\"\"\"\n  token_name\n}\n\nenum EthereumArgumentsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Caller\"\"\"\n  caller\n\n  \"\"\"Smart Contract\"\"\"\n  smart_contract\n\n  \"\"\"Smart Contract Method Name\"\"\"\n  signature_name\n\n  \"\"\"Smart Contract Method Signature\"\"\"\n  signature\n\n  \"\"\"Smart Contract Method Signature\"\"\"\n  signature_type\n\n  \"\"\"Smart Contract Method Signature Hash\"\"\"\n  signature_hash\n\n  \"\"\"Call depth\"\"\"\n  call_depth\n\n  \"\"\"Argument\"\"\"\n  argument\n\n  \"\"\"Argument type\"\"\"\n  argument_type\n\n  \"\"\"Argument value\"\"\"\n  argument_value\n\n  \"\"\"Argument index\"\"\"\n  argument_index\n}\n\n\"\"\"Balance in a currency\"\"\"\ntype EthereumBalance {\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"History of balance changes by currencies for the address\"\"\"\n  history(currency: [EthereumCurrencySelector!], height: BlockSelectorRange): [EthereumBalanceChange!]\n  value: Float\n}\n\n\"\"\"Change of balance in a currency\"\"\"\ntype EthereumBalanceChange {\n  \"\"\"Block number (height) in blockchain\"\"\"\n  block: Int!\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp: ISO8601DateTime\n\n  \"\"\"Transfer amount ( positive inbound, negative outbound)\"\"\"\n  transferAmount: Float\n  value: Float\n}\n\ninput EthereumBlockFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  blockHash: HashSelector\n  miner: [EthereumAddressSelector!]\n  blockReward: [AmountSelector!]\n  transactionCount: [IntegerSelector!]\n  uncleCount: [IntegerSelector!]\n  size: [IntegerSelector!]\n}\n\n\"\"\"Blocks in Ethereum blockchain\"\"\"\ntype EthereumBlocks {\n  any(of: EthereumBlocksMeasureable!): String\n  count(uniq: EthereumBlocksUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [EthereumAddressSelector!], blockReward: [AmountSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  difficulty(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [EthereumAddressSelector!], blockReward: [AmountSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Float\n\n  \"\"\"Block hash\"\"\"\n  hash(blockHash: [HashSelector!]): String!\n\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n  maximum(of: EthereumBlocksMeasureable!, get: EthereumBlocksMeasureable): String\n\n  \"\"\"Block miner\"\"\"\n  miner(miner: [EthereumAddressSelector!]): EthereumAddressInfo\n  minimum(of: EthereumBlocksMeasureable!, get: EthereumBlocksMeasureable): String\n\n  \"\"\"Block nonce\"\"\"\n  nonce: Int!\n\n  \"\"\"Parent block hash\"\"\"\n  parentHash: String!\n  reward(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [EthereumAddressSelector!], blockReward: [AmountSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Float\n\n  \"\"\"Currency of reward\"\"\"\n  rewardCurrency: Currency\n  size(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [EthereumAddressSelector!], blockReward: [AmountSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Int\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n  totalDifficulty(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [EthereumAddressSelector!], blockReward: [AmountSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Float\n  transactionCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [EthereumAddressSelector!], blockReward: [AmountSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Int\n  uncleCount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [EthereumAddressSelector!], blockReward: [AmountSelector!], transactionCount: [IntegerSelector!], uncleCount: [IntegerSelector!], size: [IntegerSelector!]): Int\n}\n\nenum EthereumBlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_hash\n\n  \"\"\"Block Reward\"\"\"\n  block_reward\n\n  \"\"\"Block Miner\"\"\"\n  miner\n}\n\nenum EthereumBlocksUniq {\n  \"\"\"Unique miner count\"\"\"\n  miners\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\nenum EthereumCallsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Caller\"\"\"\n  caller\n\n  \"\"\"Smart Contract\"\"\"\n  smart_contract\n\n  \"\"\"Smart Contract Method Name\"\"\"\n  signature_name\n\n  \"\"\"Smart Contract Method Signature\"\"\"\n  signature\n\n  \"\"\"Smart Contract Method Signature Hash\"\"\"\n  signature_hash\n\n  \"\"\"Call depth\"\"\"\n  call_depth\n}\n\n\"\"\"Coinpath\"\"\"\ntype EthereumCoinpath {\n  \"\"\"Summary of transfered value\"\"\"\n  amount(in: BaseCurrencyEnum): Float\n  any(of: CoinpathMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block: Block\n\n  \"\"\"Count of transfers\"\"\"\n  count: Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"1-based hop depth of the graph\"\"\"\n  depth: Int\n  maximum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n  minimum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n\n  \"\"\"Receiver address\"\"\"\n  receiver: EthereumAddressInfo\n\n  \"\"\"Sender address\"\"\"\n  sender: EthereumAddressInfo\n\n  \"\"\"Transaction of transfer happened\"\"\"\n  transaction: TransactionHashValue\n\n  \"\"\"Attributes of transaction included in Coinpath result\"\"\"\n  transactions: [CoinpathEntry!]\n}\n\n\"\"\"\nCurrency selector in Ethereum blockchain.\n  Currencies supported are native ( ETH / ETC ), ERC20, ERC721 tokens.\n  You can specify currency symbol or smart contract address. Symbols ETH/ETC are reserved for native currencies in Ethereum mainnet and classic.\n  Ethereum Smart contract address should start from 0x and contain 40 hex digits.\n  If digits are case sensitive, address is checked against checksum according to EIP-55.\n\"\"\"\ninput EthereumCurrencySelector {\n  \"\"\"Currency is\"\"\"\n  is: String\n\n  \"\"\"Currency not\"\"\"\n  not: String\n\n  \"\"\"Currency in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Currency not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Ethereum DEX attributes\"\"\"\ntype EthereumDex {\n  \"\"\"Address for DEX exchange identification\"\"\"\n  address: Address!\n\n  \"\"\"Full name ( name for known, Protocol for unknown )\"\"\"\n  fullName: String!\n\n  \"\"\"Full name ( name for known, Protocol / address for unknown )\"\"\"\n  fullNameWithId: String!\n\n  \"\"\"Name for known exchanges\"\"\"\n  name: String\n}\n\ninput EthereumDexTradeFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txSender: [EthereumAddressSelector!]\n  txTo: [EthereumAddressSelector!]\n  protocol: [StringSelector!]\n  smartContractAddress: [EthereumAddressSelector!]\n  exchangeAddress: [EthereumAddressSelector!]\n  exchangeName: [StringSelector!]\n  sellCurrency: [EthereumCurrencySelector!]\n  buyCurrency: [EthereumCurrencySelector!]\n  baseCurrency: [EthereumCurrencySelector!]\n  quoteCurrency: [EthereumCurrencySelector!]\n  maker: [EthereumAddressSelector!]\n  makerSmartContractType: [SmartContractTypeSelector!]\n  taker: [EthereumAddressSelector!]\n  takerSmartContractType: [SmartContractTypeSelector!]\n  makerOrTaker: [EthereumAddressSelector!]\n  tradeIndex: [StringSelector!]\n  buyAmount: [AmountSelector!]\n  sellAmount: [AmountSelector!]\n  price: [AmountSelector!]\n  priceAsymmetry: [FloatSelector!]\n  tradeAmountUsd: [FloatSelector!]\n}\n\n\"\"\"Trades on DEX smart contracts\"\"\"\ntype EthereumDexTrades {\n  \"\"\"Trader (maker or taker)\"\"\"\n  address(makerOrTaker: [EthereumAddressSelector!]): EthereumAddressInfo\n  any(of: EthereumDexTradesMeasureable!): String\n  baseAmount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum): Float\n\n  \"\"\"Base currency\"\"\"\n  baseCurrency(baseCurrency: [EthereumCurrencySelector!]): Currency\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): BlockExtended\n  buyAmount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum): Float\n\n  \"\"\"Maker buys this currency\"\"\"\n  buyCurrency(buyCurrency: [EthereumCurrencySelector!]): Currency\n  count(uniq: EthereumDexTradesUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], protocol: [StringSelector!], smartContractAddress: [EthereumAddressSelector!], exchangeAddress: [EthereumAddressSelector!], exchangeName: [StringSelector!], sellCurrency: [EthereumCurrencySelector!], buyCurrency: [EthereumCurrencySelector!], baseCurrency: [EthereumCurrencySelector!], quoteCurrency: [EthereumCurrencySelector!], maker: [EthereumAddressSelector!], makerSmartContractType: [SmartContractTypeSelector!], taker: [EthereumAddressSelector!], takerSmartContractType: [SmartContractTypeSelector!], makerOrTaker: [EthereumAddressSelector!], tradeIndex: [StringSelector!], buyAmount: [AmountSelector!], sellAmount: [AmountSelector!], price: [AmountSelector!], priceAsymmetry: [FloatSelector!], tradeAmountUsd: [FloatSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"\n  Identification of admin / manager / factory of smart contract, executing trades\n  \"\"\"\n  exchange(exchangeAddress: [EthereumAddressSelector!], exchangeName: [StringSelector!]): EthereumDex\n  gas(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], protocol: [StringSelector!], smartContractAddress: [EthereumAddressSelector!], exchangeAddress: [EthereumAddressSelector!], exchangeName: [StringSelector!], sellCurrency: [EthereumCurrencySelector!], buyCurrency: [EthereumCurrencySelector!], baseCurrency: [EthereumCurrencySelector!], quoteCurrency: [EthereumCurrencySelector!], maker: [EthereumAddressSelector!], makerSmartContractType: [SmartContractTypeSelector!], taker: [EthereumAddressSelector!], takerSmartContractType: [SmartContractTypeSelector!], makerOrTaker: [EthereumAddressSelector!], tradeIndex: [StringSelector!], buyAmount: [AmountSelector!], sellAmount: [AmountSelector!], price: [AmountSelector!], priceAsymmetry: [FloatSelector!], tradeAmountUsd: [FloatSelector!]): Float\n\n  \"\"\"Gas price in Gwei\"\"\"\n  gasPrice(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], protocol: [StringSelector!], smartContractAddress: [EthereumAddressSelector!], exchangeAddress: [EthereumAddressSelector!], exchangeName: [StringSelector!], sellCurrency: [EthereumCurrencySelector!], buyCurrency: [EthereumCurrencySelector!], baseCurrency: [EthereumCurrencySelector!], quoteCurrency: [EthereumCurrencySelector!], maker: [EthereumAddressSelector!], makerSmartContractType: [SmartContractTypeSelector!], taker: [EthereumAddressSelector!], takerSmartContractType: [SmartContractTypeSelector!], makerOrTaker: [EthereumAddressSelector!], tradeIndex: [StringSelector!], buyAmount: [AmountSelector!], sellAmount: [AmountSelector!], price: [AmountSelector!], priceAsymmetry: [FloatSelector!], tradeAmountUsd: [FloatSelector!]): Float!\n  gasValue(calculate: AmountAggregateFunction, in: BaseCurrencyEnum): Float\n\n  \"\"\"Trade 'maker' side\"\"\"\n  maker(maker: [EthereumAddressSelector!]): EthereumAddressInfo\n  maximum(of: EthereumDexTradesMeasureable!, get: EthereumDexTradesMeasureable): String\n  minimum(of: EthereumDexTradesMeasureable!, get: EthereumDexTradesMeasureable): String\n  price(calculate: PriceAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], protocol: [StringSelector!], smartContractAddress: [EthereumAddressSelector!], exchangeAddress: [EthereumAddressSelector!], exchangeName: [StringSelector!], sellCurrency: [EthereumCurrencySelector!], buyCurrency: [EthereumCurrencySelector!], baseCurrency: [EthereumCurrencySelector!], quoteCurrency: [EthereumCurrencySelector!], maker: [EthereumAddressSelector!], makerSmartContractType: [SmartContractTypeSelector!], taker: [EthereumAddressSelector!], takerSmartContractType: [SmartContractTypeSelector!], makerOrTaker: [EthereumAddressSelector!], tradeIndex: [StringSelector!], buyAmount: [AmountSelector!], sellAmount: [AmountSelector!], price: [AmountSelector!], priceAsymmetry: [FloatSelector!], tradeAmountUsd: [FloatSelector!]): Float\n\n  \"\"\"Protocol name of the smart contract\"\"\"\n  protocol(protocol: [StringSelector!]): String\n  quoteAmount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum): Float\n\n  \"\"\"Quote currency\"\"\"\n  quoteCurrency(quoteCurrency: [EthereumCurrencySelector!]): Currency\n  quotePrice(calculate: PriceAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], protocol: [StringSelector!], smartContractAddress: [EthereumAddressSelector!], exchangeAddress: [EthereumAddressSelector!], exchangeName: [StringSelector!], sellCurrency: [EthereumCurrencySelector!], buyCurrency: [EthereumCurrencySelector!], baseCurrency: [EthereumCurrencySelector!], quoteCurrency: [EthereumCurrencySelector!], maker: [EthereumAddressSelector!], makerSmartContractType: [SmartContractTypeSelector!], taker: [EthereumAddressSelector!], takerSmartContractType: [SmartContractTypeSelector!], makerOrTaker: [EthereumAddressSelector!], tradeIndex: [StringSelector!], buyAmount: [AmountSelector!], sellAmount: [AmountSelector!], price: [AmountSelector!], priceAsymmetry: [FloatSelector!], tradeAmountUsd: [FloatSelector!]): Float\n  sellAmount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum): Float\n\n  \"\"\"Maker sells this currency\"\"\"\n  sellCurrency(sellCurrency: [EthereumCurrencySelector!]): Currency\n\n  \"\"\"Side of trade ( SELL / BUY )\"\"\"\n  side: TradeSide\n\n  \"\"\"Smart contract being called\"\"\"\n  smartContract(smartContractAddress: [EthereumAddressSelector!]): EthereumSmartContract\n\n  \"\"\"Trade 'taker' side\"\"\"\n  taker(taker: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Time interval\"\"\"\n  timeInterval: TimeInterval\n  tradeAmount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum!): Float\n\n  \"\"\"Index of trade in transaction, used to separate trades in transaction\"\"\"\n  tradeIndex(tradeIndex: [StringSelector!]): String\n\n  \"\"\"Transaction of DexTrade\"\"\"\n  transaction(txHash: [HashSelector!], txSender: [EthereumAddressSelector!]): EthereumTransactionInfoExtended\n}\n\nenum EthereumDexTradesMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Buy Amount\"\"\"\n  buy_amount\n\n  \"\"\"Sell Amount\"\"\"\n  sell_amount\n\n  \"\"\"Price\"\"\"\n  price\n\n  \"\"\"Quote Price\"\"\"\n  quote_price\n\n  \"\"\"Maker\"\"\"\n  maker\n\n  \"\"\"Taker\"\"\"\n  taker\n\n  \"\"\"Buy Currency symbol\"\"\"\n  buy_currency_symbol\n\n  \"\"\"Buy Token address\"\"\"\n  buy_currency_address\n\n  \"\"\"Sell Currency symbol\"\"\"\n  sell_currency_symbol\n\n  \"\"\"Sell Token address\"\"\"\n  sell_currency_address\n}\n\nenum EthereumDexTradesUniq {\n  \"\"\"Unique TX senders count\"\"\"\n  senders\n\n  \"\"\"Unique makers count\"\"\"\n  makers\n\n  \"\"\"Unique makers count\"\"\"\n  takers\n\n  \"\"\"Unique makers & takers count\"\"\"\n  address\n\n  \"\"\"Buy currencies count\"\"\"\n  buy_currency\n\n  \"\"\"Sell currencies count\"\"\"\n  sell_currency\n\n  \"\"\"Base currencies count\"\"\"\n  base_currency\n\n  \"\"\"Quote currencies count\"\"\"\n  quote_currency\n\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique transactions count\"\"\"\n  txs\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique smart contract count\"\"\"\n  smart_contracts\n\n  \"\"\"Unique protocols count\"\"\"\n  protocols\n}\n\nenum EthereumEventsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Smart Contract\"\"\"\n  smart_contract\n\n  \"\"\"Smart Contract Event Name\"\"\"\n  signature_name\n\n  \"\"\"Smart Contract Event Signature\"\"\"\n  signature\n\n  \"\"\"Smart Contract Event Signature Hash\"\"\"\n  signature_hash\n}\n\nenum EthereumNetwork {\n  \"\"\"Ethereum Mainnet\"\"\"\n  ethereum\n\n  \"\"\"Ethereum Classic\"\"\"\n  ethclassic\n\n  \"\"\"Ethereum Classic ( no reorg from block 10904146)\"\"\"\n  ethclassic_reorg\n\n  \"\"\"Celo Alfajores Testnet\"\"\"\n  celo_alfajores\n\n  \"\"\"Celo Baklava Testnet\"\"\"\n  celo_baklava\n\n  \"\"\"Celo RC1\"\"\"\n  celo_rc1\n\n  \"\"\"Binance Smart Chain Mainnet\"\"\"\n  bsc\n\n  \"\"\"Binance Smart Chain Testnet\"\"\"\n  bsc_testnet\n\n  \"\"\"Goerli Ethereum Testnet\"\"\"\n  goerli\n}\n\n\"\"\"Ethereum smart contract\"\"\"\ntype EthereumSmartContract {\n  \"\"\"Smart Contract Address\"\"\"\n  address: Address!\n\n  \"\"\"Smart Contract Type\"\"\"\n  contractType: SmartContractType\n\n  \"\"\"Token implemented in this smart contract\"\"\"\n  currency: Currency\n\n  \"\"\"Smart Contract Protocol Type\"\"\"\n  protocolType: String\n}\n\ninput EthereumSmartContractCallFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txFrom: [EthereumAddressSelector!]\n  caller: [EthereumAddressSelector!]\n  smartContractAddress: [EthereumAddressSelector!]\n  smartContractMethod: MethodSelector\n  smartContractType: SmartContractTypeSelector\n  external: Boolean\n  success: [Boolean!]\n}\n\n\"\"\"Smart Contract Calls\"\"\"\ntype EthereumSmartContractCalls {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractType: SmartContractTypeSelector, external: Boolean, success: [Boolean!]): Float\n  any(of: EthereumCallsMeasureable!): String\n\n  \"\"\"Call arguments\"\"\"\n  arguments: [ArgumentNameValue!]\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"\n  Depth of the call. Empty string for external call, then counted as 0...N, and the next layer is added through '-'. For example 0-3-9.\n  \"\"\"\n  callDepth: String\n\n  \"\"\"\n  Caller of the method invocation ( tx sender or another smart contract )\n  \"\"\"\n  caller(caller: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Counts and other metrics\"\"\"\n  count(uniq: SmartContractCallsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractType: SmartContractTypeSelector, external: Boolean, success: [Boolean!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"\n  External call executed explicitly by tx sender. Internal calls executed by smart contracts.\n  \"\"\"\n  external(external: Boolean): Boolean\n\n  \"\"\"\n  Gas used for transaction in external call, or by methd in internal call\n  \"\"\"\n  gasValue(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], caller: [EthereumAddressSelector!], smartContractAddress: [EthereumAddressSelector!], smartContractMethod: MethodSelector, smartContractType: SmartContractTypeSelector, external: Boolean, success: [Boolean!]): Float\n  maximum(of: EthereumCallsMeasureable!, get: EthereumCallsMeasureable): String\n  minimum(of: EthereumCallsMeasureable!, get: EthereumCallsMeasureable): String\n\n  \"\"\"Smart contract being called\"\"\"\n  smartContract(smartContractAddress: [EthereumAddressSelector!]): EthereumSmartContract\n\n  \"\"\"Contract method invoked\"\"\"\n  smartContractMethod(smartContractMethod: MethodSelector): Method\n\n  \"\"\"\n  True if call succeeded, false if error happened. Note, that by default only successfull calls are returned in API.\n  \"\"\"\n  success(success: [Boolean!]): Boolean\n\n  \"\"\"Transaction where call happened\"\"\"\n  transaction(txHash: [HashSelector!], txFrom: [EthereumAddressSelector!]): EthereumTransactionInfo\n}\n\n\"\"\"Smart Contract Events\"\"\"\ntype EthereumSmartContractEvent {\n  any(of: EthereumEventsMeasureable!): String\n\n  \"\"\"Event arguments\"\"\"\n  arguments: [ArgumentNameValue!]\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Counts and other metrics\"\"\"\n  count(uniq: SmartContractCallsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], smartContractType: SmartContractTypeSelector, smartContractAddress: [EthereumAddressSelector!], smartContractEvent: EventSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Event index\"\"\"\n  eventIndex: String\n  maximum(of: EthereumEventsMeasureable!, get: EthereumEventsMeasureable): String\n  minimum(of: EthereumEventsMeasureable!, get: EthereumEventsMeasureable): String\n\n  \"\"\"Smart contract being called\"\"\"\n  smartContract(smartContractAddress: [EthereumAddressSelector!]): EthereumSmartContract\n\n  \"\"\"Contract event logged\"\"\"\n  smartContractEvent(smartContractEvent: EventSelector): Event\n\n  \"\"\"Transaction where event happened\"\"\"\n  transaction(txHash: [HashSelector!], txFrom: [EthereumAddressSelector!]): EthereumTransactionInfo\n}\n\ninput EthereumSmartContractEventFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txFrom: [EthereumAddressSelector!]\n  smartContractType: SmartContractTypeSelector\n  smartContractAddress: [EthereumAddressSelector!]\n  smartContractEvent: EventSelector\n}\n\n\"\"\"Blockchain smart contract\"\"\"\ntype EthereumSmartContractInfo {\n  \"\"\"Smart Contract Type\"\"\"\n  contractType: SmartContractType\n\n  \"\"\"Token implemented in this smart contract\"\"\"\n  currency: Currency\n\n  \"\"\"Smart Contract Protocol Type\"\"\"\n  protocolType: String\n}\n\n\"\"\"Blockchain smart contract\"\"\"\ntype EthereumSmartContractInfoWithAttributes {\n  \"\"\"Attributes from readonly methods\"\"\"\n  attributes: [SmartContractReadonlyAttribute!]\n\n  \"\"\"Smart Contract Type\"\"\"\n  contractType: SmartContractType\n\n  \"\"\"Token implemented in this smart contract\"\"\"\n  currency: Currency\n\n  \"\"\"Smart Contract Protocol Type\"\"\"\n  protocolType: String\n}\n\ninput EthereumTransactionFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txSender: [EthereumAddressSelector!]\n  txTo: [EthereumAddressSelector!]\n  txCreates: [EthereumAddressSelector!]\n  txIndex: TxIndexSelector\n  success: Boolean\n  amount: [AmountSelector!]\n  gasCurrency: [EthereumCurrencySelector!]\n  gasValue: [AmountSelector!]\n}\n\n\"\"\"Blockchain transaction info\"\"\"\ntype EthereumTransactionInfo {\n  \"\"\"Gas consumed\"\"\"\n  gas: Int!\n\n  \"\"\"Gas price in Gwei\"\"\"\n  gasPrice: Float!\n\n  \"\"\"Gas value cost\"\"\"\n  gasValue: Float!\n\n  \"\"\"Hash hex representation\"\"\"\n  hash: String!\n\n  \"\"\"Transaction from address\"\"\"\n  txFrom: EthereumAddressInfo!\n}\n\n\"\"\"Blockchain Transaction Extended info\"\"\"\ntype EthereumTransactionInfoExtended {\n  \"\"\"Gas consumed\"\"\"\n  gas: Int!\n\n  \"\"\"Gas price in Gwei\"\"\"\n  gasPrice: Float!\n\n  \"\"\"Gas value cost\"\"\"\n  gasValue: Float!\n\n  \"\"\"Hash hex representation\"\"\"\n  hash: String!\n\n  \"\"\"Transaction index in block, 0 based\"\"\"\n  index: Int\n\n  \"\"\"Transaction nonce\"\"\"\n  nonce: Int\n\n  \"\"\"Transaction receiver\"\"\"\n  to: EthereumAddressInfo\n\n  \"\"\"Transaction from address\"\"\"\n  txFrom: EthereumAddressInfo!\n}\n\n\"\"\"Transactions in Ethereum blockchain\"\"\"\ntype EthereumTransactions {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], gasValue: [AmountSelector!]): Float\n  any(of: EthereumTransactionsMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: EthereumTransactionsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], gasValue: [AmountSelector!]): Int\n\n  \"\"\"Created smart contract\"\"\"\n  creates(txCreates: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Currency of amount\"\"\"\n  currency: Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Error message if any\"\"\"\n  error: String\n  gas(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], gasValue: [AmountSelector!]): Float\n\n  \"\"\"Currency of gas\"\"\"\n  gasCurrency(gasCurrency: [EthereumCurrencySelector!]): Currency\n\n  \"\"\"Gas price in Gwei\"\"\"\n  gasPrice(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], gasValue: [AmountSelector!]): Float!\n  gasValue(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txSender: [EthereumAddressSelector!], txTo: [EthereumAddressSelector!], txCreates: [EthereumAddressSelector!], txIndex: TxIndexSelector, success: Boolean, amount: [AmountSelector!], gasCurrency: [EthereumCurrencySelector!], gasValue: [AmountSelector!]): Float\n\n  \"\"\"Hash hex representation\"\"\"\n  hash(txHash: [HashSelector!]): String!\n\n  \"\"\"Transaction index in block, 0 based\"\"\"\n  index(txIndex: [TxIndexSelector!]): Int\n  maximum(of: EthereumTransactionsMeasureable!, get: EthereumTransactionsMeasureable): String\n  minimum(of: EthereumTransactionsMeasureable!, get: EthereumTransactionsMeasureable): String\n\n  \"\"\"Transaction nonce\"\"\"\n  nonce: Int\n\n  \"\"\"Transaction sender\"\"\"\n  sender(txSender: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Transaction receiver\"\"\"\n  to(txTo: [EthereumAddressSelector!]): EthereumAddressInfo\n}\n\nenum EthereumTransactionsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Transaction Sender\"\"\"\n  tx_sender\n\n  \"\"\"Gas value\"\"\"\n  gas_value\n\n  \"\"\"Gas price\"\"\"\n  gas_price\n\n  \"\"\"Gas used\"\"\"\n  gas\n}\n\nenum EthereumTransactionsUniq {\n  \"\"\"Unique TX senders count\"\"\"\n  senders\n\n  \"\"\"Unique TX receivers count\"\"\"\n  receivers\n\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\ninput EthereumTransferFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txFrom: [EthereumAddressSelector!]\n  entityId: EntitySelector\n  sender: [EthereumAddressSelector!]\n  receiver: [EthereumAddressSelector!]\n  currency: [EthereumCurrencySelector!]\n  external: Boolean\n  amount: [AmountSelector!]\n}\n\n\"\"\"Currency transfers from/to addresses in crypto currencies\"\"\"\ntype EthereumTransfers {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], entityId: EntitySelector, sender: [EthereumAddressSelector!], receiver: [EthereumAddressSelector!], currency: [EthereumCurrencySelector!], external: Boolean, amount: [AmountSelector!]): Float\n  any(of: EthereumTransfersMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: TransfersUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], entityId: EntitySelector, sender: [EthereumAddressSelector!], receiver: [EthereumAddressSelector!], currency: [EthereumCurrencySelector!], external: Boolean, amount: [AmountSelector!]): Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: [EthereumCurrencySelector!]): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Entity identifier ( for ERC-721 NFT tokens )\"\"\"\n  entityId(entityId: EntitySelector): String\n\n  \"\"\"\n  External transfer executed explicitly by tx sender. Internal transfers executed by smart contracts.\n  \"\"\"\n  external(external: Boolean): Boolean\n  gasValue(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: [EthereumAddressSelector!], entityId: EntitySelector, sender: [EthereumAddressSelector!], receiver: [EthereumAddressSelector!], currency: [EthereumCurrencySelector!], external: Boolean, amount: [AmountSelector!]): Float\n  maximum(of: EthereumTransfersMeasureable!, get: EthereumTransfersMeasureable): String\n  minimum(of: EthereumTransfersMeasureable!, get: EthereumTransfersMeasureable): String\n\n  \"\"\"Transfer receiver\"\"\"\n  receiver(receiver: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Transfer sender\"\"\"\n  sender(sender: [EthereumAddressSelector!]): EthereumAddressInfo\n\n  \"\"\"Transaction where transfer happened\"\"\"\n  transaction(txHash: [HashSelector!], txFrom: [EthereumAddressSelector!]): EthereumTransactionInfo\n}\n\nenum EthereumTransfersMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Sender\"\"\"\n  sender\n\n  \"\"\"Receiver\"\"\"\n  receiver\n\n  \"\"\"Currency symbol\"\"\"\n  currency_symbol\n\n  \"\"\"Token address\"\"\"\n  currency_address\n\n  \"\"\"Entity ID\"\"\"\n  entity_id\n}\n\n\"\"\"Smart contract event\"\"\"\ntype Event {\n  \"\"\"Name\"\"\"\n  name: String\n\n  \"\"\"Signature\"\"\"\n  signature: String\n\n  \"\"\"Signature Hash\"\"\"\n  signatureHash: String!\n}\n\n\"\"\"\nSmart contract event. In selector you can use the name, signature or hex hash\n\"\"\"\ninput EventSelector {\n  \"\"\"Event signature is\"\"\"\n  is: String\n\n  \"\"\"Event signature not\"\"\"\n  not: String\n\n  \"\"\"Event signature in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Event signature not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Filecoin\"\"\"\ntype Filecoin {\n  \"\"\"Filecoin Network Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [AddressSelector!], blockIndex: IntegerSelector, any: [FilecoinBlockFilter!], options: QueryOptions): [FilecoinBlock!]\n\n  \"\"\"Filecoin Network Calls\"\"\"\n  calls(date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, amount: AmountSelector, messageMethod: IntegerSelector, any: [FilecoinCallFilter!], options: QueryOptions): [FilecoinCalls!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: AddressSelector, receiver: AddressSelector, initialAddress: AddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: CoinpathOptions): [FilecoinCoinpath!]\n\n  \"\"\"Filecoin Network Messages ( blocks, transfers, ... )\"\"\"\n  messages(date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector, any: [FilecoinMessageFilter!], options: QueryOptions): [FilecoinMessages!]\n\n  \"\"\"Filecoin Network Currency Transfers\"\"\"\n  transfers(date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, amount: AmountSelector, transferType: TransferTypeSelector, messageMethod: IntegerSelector, any: [FilecoinTransferFilter!], options: QueryOptions): [FilecoinTransfers!]\n}\n\n\"\"\"Block\"\"\"\ntype FilecoinBlock {\n  any(of: FilecoinBlocksMeasureable!): String\n  blockSig: NameWithId\n  blsAggregate: NameWithId\n  count(uniq: FilecoinBlockUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [AddressSelector!], blockIndex: IntegerSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  electionProof: String\n  forkSignalling: BigInt\n\n  \"\"\"Block hash\"\"\"\n  hash(blockHash: [HashSelector!]): String!\n\n  \"\"\"Block round in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n\n  \"\"\"Block index on height\"\"\"\n  index(blockIndex: IntegerSelector): Int\n  maximum(of: FilecoinBlocksMeasureable!, get: FilecoinBlocksMeasureable): String\n  messageCount(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [AddressSelector!], blockIndex: IntegerSelector): Int\n  messages: String\n\n  \"\"\"Miner\"\"\"\n  miner(miner: AddressSelector): Address\n  minerTips(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [AddressSelector!], blockIndex: IntegerSelector): Float\n  minimum(of: FilecoinBlocksMeasureable!, get: FilecoinBlocksMeasureable): String\n  parentMessageReceipts: String\n  parentStateRoot: String\n  parentWeight: BigInt\n  reward(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [AddressSelector!], blockIndex: IntegerSelector): Float\n  ticket: String\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n  totalReward(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [AddressSelector!], blockIndex: IntegerSelector): Float\n  winCount(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, miner: [AddressSelector!], blockIndex: IntegerSelector): Int\n  wincount: Int\n}\n\ninput FilecoinBlockFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  blockHash: HashSelector\n  miner: [AddressSelector!]\n  blockIndex: IntegerSelector\n}\n\nenum FilecoinBlockUniq {\n  \"\"\"Miner\"\"\"\n  miners\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique block height count\"\"\"\n  heights\n\n  \"\"\"Unique block count\"\"\"\n  blocks\n}\n\nenum FilecoinBlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_hash\n\n  \"\"\"Block Miner\"\"\"\n  miner\n}\n\ninput FilecoinCallFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  hash: HashSelector\n  sender: AddressSelector\n  receiver: AddressSelector\n  method: IntegerSelector\n  amount: AmountSelector\n  messageMethod: IntegerSelector\n}\n\n\"\"\"Calls in Filecoin blockchain\"\"\"\ntype FilecoinCalls {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, amount: AmountSelector, messageMethod: IntegerSelector): Float\n  any(of: FilecoinCallsMeasureable!): String\n\n  \"\"\"Block where transfer Message is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Call hash\"\"\"\n  callHash: String\n\n  \"\"\"Call hash\"\"\"\n  callPath: String\n  count(uniq: FilecoinMessagesUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, amount: AmountSelector, messageMethod: IntegerSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  exitCode: BigInt\n  gas(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Int\n  gasFeeCap: BigInt\n  gasLimit: BigInt\n  gasPremium: Float\n\n  \"\"\"Message hash\"\"\"\n  hash(hash: HashSelector): String\n  maximum(of: FilecoinCallsMeasureable!, get: FilecoinCallsMeasureable): String\n\n  \"\"\"Message Method\"\"\"\n  messageMethod(messageMethod: IntegerSelector): NameWithId\n\n  \"\"\"Method\"\"\"\n  method(method: IntegerSelector): NameWithId\n  minedBlock: FilecoinMinedBlock\n  minimum(of: FilecoinCallsMeasureable!, get: FilecoinCallsMeasureable): String\n  nonce: BigInt\n\n  \"\"\"Message receiver\"\"\"\n  receiver(receiver: AddressSelector): AddressWithAccount\n  returnValue: String\n\n  \"\"\"Message sender\"\"\"\n  sender(sender: AddressSelector): AddressWithAccount\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n}\n\nenum FilecoinCallsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Message hash\"\"\"\n  message_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Gas value\"\"\"\n  gas_value\n\n  \"\"\"Gas limit\"\"\"\n  gas_limit\n\n  \"\"\"Gas used\"\"\"\n  gas\n}\n\n\"\"\"Coinpath\"\"\"\ntype FilecoinCoinpath {\n  \"\"\"Summary of transfered value\"\"\"\n  amount(in: BaseCurrencyEnum): Float\n  any(of: CoinpathMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block: Block\n\n  \"\"\"Count of transfers\"\"\"\n  count: BigInt\n\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"1-based hop depth of the graph\"\"\"\n  depth: Int\n  maximum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n\n  \"\"\"Message of transfer happened\"\"\"\n  message: TransactionHashValue\n  minimum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n\n  \"\"\"Receiver address\"\"\"\n  receiver: Address\n\n  \"\"\"Sender address\"\"\"\n  sender: Address\n}\n\ninput FilecoinMessageFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  hash: HashSelector\n  index: IntegerSelector\n  sender: AddressSelector\n  receiver: AddressSelector\n  method: IntegerSelector\n  success: Boolean\n  amount: AmountSelector\n}\n\n\"\"\"Messages in Filecoin blockchain\"\"\"\ntype FilecoinMessages {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Float\n  any(of: FilecoinMessagesMeasureable!): String\n  baseFeeBurn(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Float\n\n  \"\"\"Block where transfer Message is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  burned(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Float\n  count(uniq: FilecoinMessagesUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  exitCode: BigInt\n  gas(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Int\n  gasFeeCap: BigInt\n  gasLimit: BigInt\n  gasPremium: Float\n\n  \"\"\"Message hash\"\"\"\n  hash(hash: HashSelector): String\n  maximum(of: FilecoinMessagesMeasureable!, get: FilecoinMessagesMeasureable): String\n\n  \"\"\"Method\"\"\"\n  method(method: IntegerSelector): NameWithId\n  minedBlock: FilecoinMinedBlock\n  minerPenalty(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Float\n  minerTip(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Float\n  minimum(of: FilecoinMessagesMeasureable!, get: FilecoinMessagesMeasureable): String\n  nonce: BigInt\n  overEstimationBurn(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Float\n\n  \"\"\"Message receiver\"\"\"\n  receiver(receiver: AddressSelector): AddressWithAccount\n  refund(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Float\n  returnValue: String\n\n  \"\"\"Message sender\"\"\"\n  sender(sender: AddressSelector): AddressWithAccount\n  signature: String\n  signatureType: String\n\n  \"\"\"Signed Message hash\"\"\"\n  signedHash: String\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n  totalCost(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, index: IntegerSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, success: Boolean, amount: AmountSelector): Float\n}\n\nenum FilecoinMessagesMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Message hash\"\"\"\n  message_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Gas value\"\"\"\n  gas_value\n\n  \"\"\"Gas limit\"\"\"\n  gas_limit\n\n  \"\"\"Gas used\"\"\"\n  gas\n}\n\nenum FilecoinMessagesUniq {\n  \"\"\"Unique block heights\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique Message senders\"\"\"\n  senders\n\n  \"\"\"Unique Message receivers\"\"\"\n  receivers\n}\n\n\"\"\"Filecoin Mined Block\"\"\"\ntype FilecoinMinedBlock {\n  \"\"\"Hash\"\"\"\n  hash: String\n\n  \"\"\"Index on height\"\"\"\n  index: Int\n\n  \"\"\"Miner\"\"\"\n  miner: Address\n}\n\nenum FilecoinNetwork {\n  \"\"\"Filecoin Mainnet\"\"\"\n  filecoin\n}\n\ninput FilecoinTransferFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  hash: HashSelector\n  sender: AddressSelector\n  receiver: AddressSelector\n  method: IntegerSelector\n  amount: AmountSelector\n  transferType: TransferTypeSelector\n  messageMethod: IntegerSelector\n}\n\nenum FilecoinTransferType {\n  \"\"\"Send (transfer)\"\"\"\n  send\n\n  \"\"\"Miner Tip\"\"\"\n  miner\n\n  \"\"\"Reward\"\"\"\n  reward\n\n  \"\"\"Burn\"\"\"\n  burn\n\n  \"\"\"Rebalance\"\"\"\n  rebalance\n\n  \"\"\"Genesis\"\"\"\n  genesis\n}\n\n\"\"\"Transfers in Filecoin blockchain\"\"\"\ntype FilecoinTransfers {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, amount: AmountSelector, transferType: TransferTypeSelector, messageMethod: IntegerSelector): Float\n  any(of: FilecoinTransfersMeasureable!): String\n\n  \"\"\"Block where transfer Transfer is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): BlockExtended\n\n  \"\"\"Call hash\"\"\"\n  callHash: String\n\n  \"\"\"Call hash\"\"\"\n  callPath: String\n  count(uniq: FilecoinMessagesUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, hash: HashSelector, sender: AddressSelector, receiver: AddressSelector, method: IntegerSelector, amount: AmountSelector, transferType: TransferTypeSelector, messageMethod: IntegerSelector): Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Message hash\"\"\"\n  hash(hash: HashSelector): String\n  maximum(of: FilecoinTransfersMeasureable!, get: FilecoinTransfersMeasureable): String\n\n  \"\"\"Message Method\"\"\"\n  messageMethod(messageMethod: IntegerSelector): NameWithId\n\n  \"\"\"Method\"\"\"\n  method(method: IntegerSelector): NameWithId\n  minimum(of: FilecoinTransfersMeasureable!, get: FilecoinTransfersMeasureable): String\n\n  \"\"\"Transfer receiver\"\"\"\n  receiver(receiver: AddressSelector): Address\n\n  \"\"\"Transfer sender\"\"\"\n  sender(sender: AddressSelector): Address\n\n  \"\"\"Transfer timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n\n  \"\"\"Type of transfer\"\"\"\n  transferType(transferType: TransferTypeSelector): FilecoinTransferType\n}\n\nenum FilecoinTransfersMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_hash\n\n  \"\"\"Transfer hash\"\"\"\n  tx_hash\n\n  \"\"\"Value\"\"\"\n  value\n\n  \"\"\"Gas value\"\"\"\n  gas_value\n\n  \"\"\"Gas limit\"\"\"\n  gas_limit\n\n  \"\"\"Gas used\"\"\"\n  gas\n}\n\n\"\"\"Select by number\"\"\"\ninput FloatSelector {\n  \"\"\"is\"\"\"\n  is: Float\n\n  \"\"\"not\"\"\"\n  not: Float\n\n  \"\"\"in the list\"\"\"\n  in: [Float!]\n\n  \"\"\"not in the list\"\"\"\n  notIn: [Float!]\n\n  \"\"\"greater than\"\"\"\n  gt: Float\n\n  \"\"\"less than\"\"\"\n  lt: Float\n\n  \"\"\"less or equal than\"\"\"\n  lteq: Float\n\n  \"\"\"greater or equal than\"\"\"\n  gteq: Float\n\n  \"\"\"in range\"\"\"\n  between: [Float!]\n}\n\nenum FlowDirection {\n  \"\"\"Inbound transfers\"\"\"\n  inbound\n\n  \"\"\"Outbound transfers\"\"\"\n  outbound\n}\n\n\"\"\"Select by hash\"\"\"\ninput HashSelector {\n  \"\"\"Hash is\"\"\"\n  is: String\n\n  \"\"\"Hash not\"\"\"\n  not: String\n\n  \"\"\"Hash in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Hash not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Hedera Chain\"\"\"\ntype Hedera {\n  \"\"\"Blockchain Arguments\"\"\"\n  arguments(date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, smartContractEntity: StringSelector, transactionHash: HashSelector, result: HashSelector, success: Boolean, any: [HederaArgumentFilter!], options: QueryOptions): [HederaArgument!]\n\n  \"\"\"Blockhain Calls\"\"\"\n  calls(date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, smartContractEntity: StringSelector, transactionHash: HashSelector, result: HashSelector, callInput: HashSelector, callResult: HashSelector, success: Boolean, any: [HederaCallFilter!], options: QueryOptions): [HederaCall!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: AddressSelector, receiver: AddressSelector, initialAddress: AddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: CoinpathOptions): [HederaCoinpath!]\n\n  \"\"\"Blockhain Inputs\"\"\"\n  inputs(date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean, amount: [AmountSelector!], any: [HederaInputFilter!], options: QueryOptions): [HederaInput!]\n\n  \"\"\"Blockhain Messages\"\"\"\n  messages(date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, transactionRunningHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean, any: [HederaMessageFilter!], options: QueryOptions): [HederaMessage!]\n\n  \"\"\"Blockchain Outputs\"\"\"\n  outputs(date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean, any: [HederaOutputFilter!], options: QueryOptions): [HederaOutput!]\n\n  \"\"\"Blockchain Transactions\"\"\"\n  transactions(date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean, any: [HederaTransactionFilter!], options: QueryOptions): [HederaTransaction!]\n}\n\n\"\"\"Blockchain accounts\"\"\"\ntype HederaAccount {\n  \"\"\"Account\"\"\"\n  account: String!\n}\n\n\"\"\"Arguments in Hedera blockchain\"\"\"\ntype HederaArgument {\n  any(of: HederaArgumentsMeasureable!): String\n\n  \"\"\"Argument type\"\"\"\n  argtype: String\n\n  \"\"\"Argument\"\"\"\n  argument: String\n  chargedTxFee: BigInt\n  consensusTimestamp: Timestamp\n  count(uniq: HederaArgumentsUniq): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Currency of transfer\"\"\"\n  feeCurrency: Currency\n  initialBalance(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, smartContractEntity: StringSelector, transactionHash: HashSelector, result: HashSelector, success: Boolean): Float\n  maxFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, smartContractEntity: StringSelector, transactionHash: HashSelector, result: HashSelector, success: Boolean): Float\n  maximum(of: HederaArgumentsMeasureable!, get: HederaArgumentsMeasureable): String\n  memo: String\n  minimum(of: HederaArgumentsMeasureable!, get: HederaArgumentsMeasureable): String\n\n  \"\"\"\n  Used to reference a specific\n        account of the node the transaction is being sent to\n  \"\"\"\n  nodeAccount: Account\n\n  \"\"\"\n  Used to\n        reference a specific account in transactions\n  \"\"\"\n  payerAccount: Account\n\n  \"\"\"Transaction result\"\"\"\n  result(result: HashSelector): TransactionResult\n\n  \"\"\"Smart contract\"\"\"\n  smartContractEntity: Account\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n  transactionBytes: String\n  transactionFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, smartContractEntity: StringSelector, transactionHash: HashSelector, result: HashSelector, success: Boolean): Float\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  transactionHash(transactionHash: HashSelector): String\n  transactionValidDurationInSec: Int\n  validStart(time: DateTimeSelector, nanoseconds: BigInt): Timestamp\n\n  \"\"\"Value\"\"\"\n  value: String\n}\n\ninput HederaArgumentFilter {\n  date: DateSelector\n  nodeAccount: StringSelector\n  payerAccount: StringSelector\n  smartContractEntity: StringSelector\n  transactionHash: HashSelector\n  result: HashSelector\n  success: Boolean\n}\n\nenum HederaArgumentsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Valid start\"\"\"\n  valid_start\n\n  \"\"\"Valid duration\"\"\"\n  valid_duration\n\n  \"\"\"Transaction Hash\"\"\"\n  transaction_hash\n\n  \"\"\"Max Fee\"\"\"\n  max_fee\n\n  \"\"\"Charged Fee\"\"\"\n  transaction_fee\n}\n\nenum HederaArgumentsUniq {\n  \"\"\"Unique time\"\"\"\n  times\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique consensus time\"\"\"\n  consensus_times\n\n  \"\"\"Unique payer account\"\"\"\n  payer_account\n\n  \"\"\"Unique node account\"\"\"\n  node_account\n\n  \"\"\"Unique node account\"\"\"\n  smart_contract_entity\n\n  \"\"\"Unique initial balance\"\"\"\n  initial_balance\n}\n\n\"\"\"Calls in Hedera blockchain\"\"\"\ntype HederaCall {\n  any(of: HederaCallsMeasureable!): String\n\n  \"\"\"Call input\"\"\"\n  callInput(callInput: HashSelector): String\n\n  \"\"\"Call input\"\"\"\n  callResult(callResult: HashSelector): String\n  chargedTxFee: BigInt\n  consensusTimestamp: Timestamp\n  count(uniq: HederaCallsUniq): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Currency of transfer\"\"\"\n  feeCurrency: Currency\n  gas(calculate: AmountAggregateFunction, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, smartContractEntity: StringSelector, transactionHash: HashSelector, result: HashSelector, callInput: HashSelector, callResult: HashSelector, success: Boolean): Int\n  initialBalance(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, smartContractEntity: StringSelector, transactionHash: HashSelector, result: HashSelector, success: Boolean): Float\n  maxFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, smartContractEntity: StringSelector, transactionHash: HashSelector, result: HashSelector, success: Boolean): Float\n  maximum(of: HederaCallsMeasureable!, get: HederaCallsMeasureable): String\n  memo: String\n  minimum(of: HederaCallsMeasureable!, get: HederaCallsMeasureable): String\n\n  \"\"\"\n  Used to reference a specific\n        account of the node the transaction is being sent to\n  \"\"\"\n  nodeAccount: Account\n\n  \"\"\"\n  Used to\n        reference a specific account in transactions\n  \"\"\"\n  payerAccount: Account\n\n  \"\"\"Transaction result\"\"\"\n  result(result: HashSelector): TransactionResult\n\n  \"\"\"Smart contract\"\"\"\n  smartContractEntity: Account\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n  transactionBytes: String\n  transactionFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, smartContractEntity: StringSelector, transactionHash: HashSelector, result: HashSelector, success: Boolean): Float\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  transactionHash(transactionHash: HashSelector): String\n  transactionValidDurationInSec: Int\n  validStart(time: DateTimeSelector, nanoseconds: BigInt): Timestamp\n}\n\ninput HederaCallFilter {\n  date: DateSelector\n  nodeAccount: StringSelector\n  payerAccount: StringSelector\n  smartContractEntity: StringSelector\n  transactionHash: HashSelector\n  result: HashSelector\n  callInput: HashSelector\n  callResult: HashSelector\n  success: Boolean\n}\n\nenum HederaCallsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Valid start\"\"\"\n  valid_start\n\n  \"\"\"Valid duration\"\"\"\n  valid_duration\n\n  \"\"\"Transaction Hash\"\"\"\n  transaction_hash\n\n  \"\"\"Max Fee\"\"\"\n  max_fee\n\n  \"\"\"Charged Fee\"\"\"\n  transaction_fee\n}\n\nenum HederaCallsUniq {\n  \"\"\"Unique time\"\"\"\n  times\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique consensus time\"\"\"\n  consensus_times\n\n  \"\"\"Unique payer account\"\"\"\n  payer_account\n\n  \"\"\"Unique node account\"\"\"\n  node_account\n\n  \"\"\"Unique node account\"\"\"\n  smart_contract_entity\n\n  \"\"\"Unique initial balance\"\"\"\n  initial_balance\n}\n\n\"\"\"Coinpath\"\"\"\ntype HederaCoinpath {\n  \"\"\"Summary of transfered value\"\"\"\n  amount(in: BaseCurrencyEnum): Float\n  any(of: CoinpathMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block: Block\n\n  \"\"\"Count of transfers\"\"\"\n  count: Int\n\n  \"\"\"1-based hop depth of the graph\"\"\"\n  depth: Int\n  maximum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n  minimum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n\n  \"\"\"Receiver address\"\"\"\n  receiver: Address\n\n  \"\"\"Sender address\"\"\"\n  sender: Address\n\n  \"\"\"Attributes of transaction included in Coinpath result\"\"\"\n  transactions: [CoinpathEntry!]\n}\n\n\"\"\"Currency selector in Hedera blockchain.\"\"\"\ninput HederaCurrencySelector {\n  \"\"\"Currency is\"\"\"\n  is: String\n\n  \"\"\"Currency not\"\"\"\n  not: String\n\n  \"\"\"Currency in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Currency not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Inputs in Hedera blockchain\"\"\"\ntype HederaInput {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean, amount: [AmountSelector!]): Float\n  any(of: HederaInputMeasureable!): String\n  consensusTimestamp: Timestamp\n  count(uniq: HederaInputsUniq): Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: HederaCurrencySelector): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Entity\"\"\"\n  entity(entityType: EntityTypeSelector): Entity\n\n  \"\"\"Currency of transfer\"\"\"\n  feeCurrency: Currency\n  initialBalance(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean, amount: [AmountSelector!]): Float\n  maxFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean, amount: [AmountSelector!]): Float\n  maximum(of: HederaInputMeasureable!, get: HederaInputMeasureable): String\n  memo: String\n  minimum(of: HederaInputMeasureable!, get: HederaInputMeasureable): String\n\n  \"\"\"\n  Used to reference a specific\n        account of the node the transaction is being sent to\n  \"\"\"\n  nodeAccount: Account\n\n  \"\"\"\n  Used to\n        reference a specific account in transactions\n  \"\"\"\n  payerAccount: Account\n\n  \"\"\"Transaction result\"\"\"\n  result(result: HashSelector): TransactionResult\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Calendar time\"\"\"\n  time: DateTime\n  transactionFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean, amount: [AmountSelector!]): Float\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  transactionHash(transactionHash: HashSelector): String\n  transactionValidDurationInSec: Int\n\n  \"\"\"Transfer Account\"\"\"\n  transferEntity: Account\n  validStart(time: DateTimeSelector, nanoseconds: BigInt): Timestamp\n}\n\ninput HederaInputFilter {\n  date: DateSelector\n  transferEntity: StringSelector\n  nodeAccount: StringSelector\n  payerAccount: StringSelector\n  transactionHash: HashSelector\n  result: HashSelector\n  entityType: EntityTypeSelector\n  success: Boolean\n  amount: [AmountSelector!]\n}\n\nenum HederaInputMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Valid start\"\"\"\n  valid_start\n\n  \"\"\"Valid duration\"\"\"\n  valid_duration\n\n  \"\"\"Transaction Hash\"\"\"\n  transaction_hash\n\n  \"\"\"Max Fee\"\"\"\n  max_fee\n\n  \"\"\"Charged Fee\"\"\"\n  transaction_fee\n\n  \"\"\"Amount\"\"\"\n  amount\n}\n\nenum HederaInputsUniq {\n  \"\"\"Unique time\"\"\"\n  times\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique consensus time\"\"\"\n  consensus_times\n\n  \"\"\"Unique payer account\"\"\"\n  payer_account\n\n  \"\"\"Unique node account\"\"\"\n  node_account\n\n  \"\"\"Unique entity id\"\"\"\n  entity_id\n\n  \"\"\"Unique entity type\"\"\"\n  entity_type\n\n  \"\"\"Unique initial balance\"\"\"\n  initial_balance\n}\n\n\"\"\"Messages in Hedera blockchain\"\"\"\ntype HederaMessage {\n  any(of: HederaMessageMeasureable!): String\n  consensusTimestamp: Timestamp\n  count(uniq: HederaMessagesUniq): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Entity\"\"\"\n  entity(entityType: EntityTypeSelector): Entity\n\n  \"\"\"Currency of transfer\"\"\"\n  feeCurrency: Currency\n  initialBalance(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, transactionRunningHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean): Float\n  maxFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, transactionRunningHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean): Float\n  maximum(of: HederaMessageMeasureable!, get: HederaMessageMeasureable): String\n  memo: String\n  message: String\n  minimum(of: HederaMessageMeasureable!, get: HederaMessageMeasureable): String\n\n  \"\"\"\n  Used to reference a specific\n        account of the node the transaction is being sent to\n  \"\"\"\n  nodeAccount: Account\n\n  \"\"\"\n  Used to\n        reference a specific account in transactions\n  \"\"\"\n  payerAccount: Account\n\n  \"\"\"Transaction result\"\"\"\n  result(result: HashSelector): TransactionResult\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Calendar date time\"\"\"\n  time: DateTime\n\n  \"\"\"Transaction running hash\"\"\"\n  topicRunningHash(topicRunningHash: StringSelector): String\n\n  \"\"\"Transaction running hash\"\"\"\n  topicSequenceNumber(topicSequenceNumber: HashSelector): String\n  transactionFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, transactionRunningHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean): Float\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  transactionHash(transactionHash: HashSelector): String\n  transactionValidDurationInSec: Int\n  validStart(time: DateTimeSelector, nanoseconds: BigInt): Timestamp\n}\n\ninput HederaMessageFilter {\n  date: DateSelector\n  nodeAccount: StringSelector\n  payerAccount: StringSelector\n  transactionHash: HashSelector\n  transactionRunningHash: HashSelector\n  result: HashSelector\n  entityType: EntityTypeSelector\n  success: Boolean\n}\n\nenum HederaMessageMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Valid start\"\"\"\n  valid_start\n\n  \"\"\"Valid duration\"\"\"\n  valid_duration\n\n  \"\"\"Transaction Hash\"\"\"\n  transaction_hash\n\n  \"\"\"Max Fee\"\"\"\n  max_fee\n\n  \"\"\"Charged Fee\"\"\"\n  transaction_fee\n}\n\nenum HederaMessagesUniq {\n  \"\"\"Unique time\"\"\"\n  times\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique consensus time\"\"\"\n  consensus_times\n\n  \"\"\"Unique payer account\"\"\"\n  payer_account\n\n  \"\"\"Unique node account\"\"\"\n  node_account\n\n  \"\"\"Unique entity id\"\"\"\n  entity_id\n\n  \"\"\"Unique entity type\"\"\"\n  entity_type\n\n  \"\"\"Unique initial balance\"\"\"\n  initial_balance\n}\n\nenum HederaNetwork {\n  \"\"\"The Hedera mainnet\"\"\"\n  hedera\n\n  \"\"\"The Hedera testnets\"\"\"\n  hedera_testnets\n}\n\n\"\"\"Outputs in Hedera blockchain\"\"\"\ntype HederaOutput {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean, amount: [AmountSelector!]): Float\n  any(of: HederaOutputMeasureable!): String\n  consensusTimestamp: Timestamp\n  count(uniq: HederaOutputUniq): Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: HederaCurrencySelector): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Entity\"\"\"\n  entity(entityType: EntityTypeSelector): Entity\n\n  \"\"\"Currency of transfer\"\"\"\n  feeCurrency: Currency\n  initialBalance(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean): Float\n  maxFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean): Float\n  maximum(of: HederaOutputMeasureable!, get: HederaOutputMeasureable): String\n  memo: String\n  minimum(of: HederaOutputMeasureable!, get: HederaOutputMeasureable): String\n\n  \"\"\"\n  Used to reference a specific\n        account of the node the transaction is being sent to\n  \"\"\"\n  nodeAccount: Account\n\n  \"\"\"\n  Used to\n        reference a specific account in transactions\n  \"\"\"\n  payerAccount: Account\n\n  \"\"\"Transaction result\"\"\"\n  result(result: HashSelector): TransactionResult\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Calendar time\"\"\"\n  time: DateTime\n  transactionFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, transferEntity: StringSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean): Float\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  transactionHash(transactionHash: HashSelector): String\n  transactionValidDurationInSec: Int\n\n  \"\"\"Transfer Account\"\"\"\n  transferEntity: Account\n  validStart(time: DateTimeSelector, nanoseconds: BigInt): Timestamp\n}\n\ninput HederaOutputFilter {\n  date: DateSelector\n  transferEntity: StringSelector\n  nodeAccount: StringSelector\n  payerAccount: StringSelector\n  transactionHash: HashSelector\n  result: HashSelector\n  entityType: EntityTypeSelector\n  success: Boolean\n}\n\nenum HederaOutputMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Valid start\"\"\"\n  valid_start\n\n  \"\"\"Valid duration\"\"\"\n  valid_duration\n\n  \"\"\"Transaction Hash\"\"\"\n  transaction_hash\n\n  \"\"\"Max Fee\"\"\"\n  max_fee\n\n  \"\"\"Charged Fee\"\"\"\n  transaction_fee\n\n  \"\"\"Amount\"\"\"\n  amount\n}\n\nenum HederaOutputUniq {\n  \"\"\"Unique time\"\"\"\n  times\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique consensus time\"\"\"\n  consensus_times\n\n  \"\"\"Unique Transfer entity\"\"\"\n  transfer_entity\n\n  \"\"\"Unique payer account\"\"\"\n  payer_account\n\n  \"\"\"Unique node account\"\"\"\n  node_account\n\n  \"\"\"Unique entity id\"\"\"\n  entity_id\n\n  \"\"\"Unique entity type\"\"\"\n  entity_type\n\n  \"\"\"Unique initial balance\"\"\"\n  initial_balance\n}\n\n\"\"\"Transactions in Hedera blockchain\"\"\"\ntype HederaTransaction {\n  any(of: HederaTransactionMeasureable!): String\n  consensusTimestamp: Timestamp\n  count(uniq: HederaTransactionsUniq): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Entity\"\"\"\n  entity(entityType: EntityTypeSelector): Entity\n\n  \"\"\"Currency of transfer\"\"\"\n  feeCurrency: Currency\n  initialBalance(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean): Float\n  maxFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean): Float\n  maximum(of: HederaTransactionMeasureable!, get: HederaTransactionMeasureable): String\n  memo: String\n  minimum(of: HederaTransactionMeasureable!, get: HederaTransactionMeasureable): String\n\n  \"\"\"\n  Used to reference a specific\n        account of the node the transaction is being sent to\n  \"\"\"\n  nodeAccount: Account\n\n  \"\"\"\n  Used to\n        reference a specific account in transactions\n  \"\"\"\n  payerAccount: Account\n\n  \"\"\"Transaction result\"\"\"\n  result(result: HashSelector): TransactionResult\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Calendar time\"\"\"\n  time: DateTime\n  transactionBytes: String\n  transactionFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, nodeAccount: StringSelector, payerAccount: StringSelector, transactionHash: HashSelector, result: HashSelector, entityType: EntityTypeSelector, success: Boolean): Float\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  transactionHash(transactionHash: HashSelector): String\n\n  \"\"\"Transaction Type\"\"\"\n  transactionType: String\n  transactionValidDurationInSec: Int\n  validStart(time: DateTimeSelector, nanoseconds: BigInt): Timestamp\n}\n\ninput HederaTransactionFilter {\n  date: DateSelector\n  nodeAccount: StringSelector\n  payerAccount: StringSelector\n  transactionHash: HashSelector\n  result: HashSelector\n  entityType: EntityTypeSelector\n  success: Boolean\n}\n\nenum HederaTransactionMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Valid start\"\"\"\n  valid_start\n\n  \"\"\"Valid duration\"\"\"\n  valid_duration\n\n  \"\"\"Transaction Hash\"\"\"\n  transaction_hash\n\n  \"\"\"Max Fee\"\"\"\n  max_fee\n\n  \"\"\"Charged Fee\"\"\"\n  transaction_fee\n}\n\nenum HederaTransactionsUniq {\n  \"\"\"Unique time\"\"\"\n  times\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique consensus time\"\"\"\n  consensus_times\n\n  \"\"\"Unique transaction type\"\"\"\n  transaction_type\n\n  \"\"\"Unique payer account\"\"\"\n  payer_account\n\n  \"\"\"Unique node account\"\"\"\n  node_account\n\n  \"\"\"Unique entity id\"\"\"\n  entity_id\n\n  \"\"\"Unique entity type\"\"\"\n  entity_type\n\n  \"\"\"Unique initial balance\"\"\"\n  initial_balance\n}\n\n\"\"\"An ISO 8601-encoded date\"\"\"\nscalar ISO8601Date\n\n\"\"\"An ISO 8601-encoded datetime\"\"\"\nscalar ISO8601DateTime\n\n\"\"\"Input Script Type of UTXO transaction input\"\"\"\ntype InputScript {\n  \"\"\"Script annotation\"\"\"\n  annotation: String\n\n  \"\"\"Long script pattern\"\"\"\n  pattern: String!\n\n  \"\"\"Short script pattern\"\"\"\n  shortPattern: String!\n\n  \"\"\"Simple script pattern\"\"\"\n  simplePattern: String!\n\n  \"\"\"Script type\"\"\"\n  type: BitcoinInputScriptType\n}\n\n\"\"\"Select by ID\"\"\"\ninput IntIdSelector {\n  \"\"\"ID is\"\"\"\n  is: Int\n\n  \"\"\"ID not\"\"\"\n  not: Int\n\n  \"\"\"ID in the list\"\"\"\n  in: [Int!]\n\n  \"\"\"ID not in the list\"\"\"\n  notIn: [Int!]\n\n  \"\"\"ID greater than\"\"\"\n  gt: Int\n\n  \"\"\"ID less than\"\"\"\n  lt: Int\n\n  \"\"\"ID less or equal than\"\"\"\n  lteq: Int\n\n  \"\"\"ID greater or equal than\"\"\"\n  gteq: Int\n\n  \"\"\"ID in range\"\"\"\n  between: [Int!]\n}\n\n\"\"\"Select limited upper number\"\"\"\ninput IntegerLimitedSelector {\n  \"\"\"is\"\"\"\n  is: Int\n\n  \"\"\"in the list\"\"\"\n  in: [Int!]\n\n  \"\"\"less than\"\"\"\n  lt: Int\n\n  \"\"\"less or equal than\"\"\"\n  lteq: Int\n\n  \"\"\"in range\"\"\"\n  between: [Int!]\n}\n\n\"\"\"Select by number\"\"\"\ninput IntegerSelector {\n  \"\"\"is\"\"\"\n  is: Int\n\n  \"\"\"not\"\"\"\n  not: Int\n\n  \"\"\"in the list\"\"\"\n  in: [Int!]\n\n  \"\"\"not in the list\"\"\"\n  notIn: [Int!]\n\n  \"\"\"greater than\"\"\"\n  gt: Int\n\n  \"\"\"less than\"\"\"\n  lt: Int\n\n  \"\"\"less or equal than\"\"\"\n  lteq: Int\n\n  \"\"\"greater or equal than\"\"\"\n  gteq: Int\n\n  \"\"\"in range\"\"\"\n  between: [Int!]\n}\n\n\"\"\"Libra\"\"\"\ntype Libra {\n  \"\"\"Libra Network Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, proposer: [AddressSelector!], metadata: StringSelector, any: [LibraBlockFilter!], options: QueryOptions): [LibraBlock!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: AddressSelector, receiver: AddressSelector, currency: [LibraCurrencySelector!], initialAddress: AddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: CoinpathOptions): [LibraCoinpath!]\n\n  \"\"\"Libra Network Currency Minting\"\"\"\n  mints(date: DateSelector, time: DateTimeSelector, block: BlockSelector, version: IntegerSelector, minter: AddressSelector, currency: [LibraCurrencySelector!], amount: [AmountSelector!], any: [LibraMintFilter!], options: QueryOptions): [LibraMints!]\n\n  \"\"\"Libra Network Transactions\"\"\"\n  transactions(date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, scriptType: ScriptTypeSelectorSelector, success: Boolean, gasCurrency: [LibraCurrencySelector!], scriptHash: StringSelector, any: [LibraTransactionFilter!], options: QueryOptions): [LibraTransactions!]\n\n  \"\"\"Libra Network Currency Transfers\"\"\"\n  transfers(date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: [LibraCurrencySelector!], gasCurrency: [LibraCurrencySelector!], amount: [AmountSelector!], scriptType: ScriptTypeSelectorSelector, scriptHash: StringSelector, any: [LibraTransferFilter!], options: QueryOptions): [LibraTransfers!]\n}\n\n\"\"\"Block\"\"\"\ntype LibraBlock {\n  any(of: LibraBlocksMeasureable!): String\n  count(uniq: LibraBlockUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, proposer: [AddressSelector!], metadata: StringSelector): BigInt\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  gasUsed(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, proposer: [AddressSelector!], metadata: StringSelector): Float\n\n  \"\"\"Block round in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n\n  \"\"\"Key\"\"\"\n  key: String\n  maximum(of: LibraBlocksMeasureable!, get: LibraBlocksMeasureable): String\n\n  \"\"\"Metadata\"\"\"\n  metadata(metadata: StringSelector): String\n  minimum(of: LibraBlocksMeasureable!, get: LibraBlocksMeasureable): String\n\n  \"\"\"Proposer\"\"\"\n  proposer(proposer: AddressSelector): Address\n\n  \"\"\"Sequence number\"\"\"\n  sequenceNumber: Int\n\n  \"\"\"Status Name\"\"\"\n  statusName: String\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n\n  \"\"\"Version of transaction for this block\"\"\"\n  version(version: IntegerSelector): Int!\n\n  \"\"\"Version hash of transaction for this block\"\"\"\n  versionHash: String!\n\n  \"\"\"VM Status\"\"\"\n  vmStatus: Int\n}\n\ninput LibraBlockFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  version: IntegerSelector\n  proposer: [AddressSelector!]\n  metadata: StringSelector\n}\n\nenum LibraBlockUniq {\n  \"\"\"Proposer\"\"\"\n  proposer\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\nenum LibraBlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block round\"\"\"\n  block\n\n  \"\"\"Version\"\"\"\n  version\n\n  \"\"\"Proposer\"\"\"\n  proposer\n\n  \"\"\"Gas Used\"\"\"\n  gas_used\n}\n\n\"\"\"Coinpath\"\"\"\ntype LibraCoinpath {\n  \"\"\"Summary of transfered value\"\"\"\n  amount(in: BaseCurrencyEnum): Float\n  any(of: LibraCoinpathMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block: Block\n\n  \"\"\"Count of transfers\"\"\"\n  count: BigInt\n\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"1-based hop depth of the graph\"\"\"\n  depth: Int\n  maximum(of: LibraCoinpathMeasureable!, get: LibraCoinpathMeasureable): String\n  minimum(of: LibraCoinpathMeasureable!, get: LibraCoinpathMeasureable): String\n\n  \"\"\"Receiver address\"\"\"\n  receiver: Address\n\n  \"\"\"Sender address\"\"\"\n  sender: Address\n\n  \"\"\"Transaction of transfer happened\"\"\"\n  transaction: LibraTransactionValue\n}\n\nenum LibraCoinpathMeasureable {\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Version\"\"\"\n  version\n\n  \"\"\"Sender\"\"\"\n  sender\n\n  \"\"\"Receiver\"\"\"\n  receiver\n\n  \"\"\"Depth\"\"\"\n  depth\n}\n\n\"\"\"\nCurrency selector in Libra blockchain.\nLibra has native chain currency (LBR) and a number of others ( Coin1/Coin2 ) for Testnet.\nUse name of currency for selection\n\"\"\"\ninput LibraCurrencySelector {\n  \"\"\"Currency is\"\"\"\n  is: String\n\n  \"\"\"Currency not\"\"\"\n  not: String\n\n  \"\"\"Currency in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Currency not in the list\"\"\"\n  notIn: [String!]\n}\n\ninput LibraMintFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  block: BlockSelector\n  version: IntegerSelector\n  minter: AddressSelector\n  currency: [LibraCurrencySelector!]\n  amount: [AmountSelector!]\n}\n\n\"\"\"Mints in Libra blockchain\"\"\"\ntype LibraMints {\n  amount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, block: BlockSelector, version: IntegerSelector, minter: AddressSelector, currency: [LibraCurrencySelector!], amount: [AmountSelector!]): Float\n  any(of: LibraMintsMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: LibraMintsUniq, date: DateSelector, time: DateTimeSelector, block: BlockSelector, version: IntegerSelector, minter: AddressSelector, currency: [LibraCurrencySelector!], amount: [AmountSelector!]): BigInt\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: [LibraCurrencySelector!]): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  maximum(of: LibraMintsMeasureable!, get: LibraMintsMeasureable): String\n  minimum(of: LibraMintsMeasureable!, get: LibraMintsMeasureable): String\n\n  \"\"\"Minter\"\"\"\n  minter(sender: AddressSelector): Address\n\n  \"\"\"Sequence number\"\"\"\n  sequenceNumber: Int\n\n  \"\"\"Status Name\"\"\"\n  statusName: String\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Mint timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n\n  \"\"\"Version of blockchain for this transaction\"\"\"\n  version(version: IntegerSelector): Int!\n\n  \"\"\"Version hash of blockchain for this transaction\"\"\"\n  versionHash: String!\n\n  \"\"\"VM Status\"\"\"\n  vmStatus: Int\n}\n\nenum LibraMintsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Version\"\"\"\n  version\n\n  \"\"\"Mint version hash\"\"\"\n  version_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Minter\"\"\"\n  minter\n\n  \"\"\"Currency symbol\"\"\"\n  currency_symbol\n}\n\nenum LibraMintsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique versions\"\"\"\n  versions\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique minters\"\"\"\n  minters\n\n  \"\"\"Unique currencies\"\"\"\n  currencies\n}\n\ninput LibraTransactionFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  version: IntegerSelector\n  txSender: AddressSelector\n  scriptType: ScriptTypeSelectorSelector\n  success: Boolean\n  gasCurrency: [LibraCurrencySelector!]\n  scriptHash: StringSelector\n}\n\n\"\"\"Blockchain transaction with value\"\"\"\ntype LibraTransactionValue {\n  \"\"\"Transaction value\"\"\"\n  value: Float!\n\n  \"\"\"Transaction version\"\"\"\n  version: Int!\n}\n\n\"\"\"Transactions in Libra blockchain\"\"\"\ntype LibraTransactions {\n  any(of: LibraTransactionsMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: LibraTransactionsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, scriptType: ScriptTypeSelectorSelector, success: Boolean, gasCurrency: [LibraCurrencySelector!], scriptHash: StringSelector): BigInt\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Expiration Time\"\"\"\n  expirationTime: DateTime\n  gas(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, scriptType: ScriptTypeSelectorSelector, success: Boolean, gasCurrency: [LibraCurrencySelector!], scriptHash: StringSelector): Int\n\n  \"\"\"Currency of gas\"\"\"\n  gasCurrency(gasCurrency: [LibraCurrencySelector!]): Currency\n\n  \"\"\"Gas unit price\"\"\"\n  gasPrice(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, scriptType: ScriptTypeSelectorSelector, success: Boolean, gasCurrency: [LibraCurrencySelector!], scriptHash: StringSelector): Float!\n  gasValue(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, scriptType: ScriptTypeSelectorSelector, success: Boolean, gasCurrency: [LibraCurrencySelector!], scriptHash: StringSelector): Float\n\n  \"\"\"Max gas amount\"\"\"\n  maxGasAmount: Int\n  maximum(of: LibraTransactionsMeasureable!, get: LibraTransactionsMeasureable): String\n  minimum(of: LibraTransactionsMeasureable!, get: LibraTransactionsMeasureable): String\n\n  \"\"\"Public key\"\"\"\n  publicKey: String\n\n  \"\"\"Script Hash\"\"\"\n  scriptHash(scriptHash: StringSelector): String\n\n  \"\"\"Script Type\"\"\"\n  scriptType: ScriptTypeSelectorSelector\n\n  \"\"\"Transaction sender\"\"\"\n  sender(txSender: AddressSelector): Address\n\n  \"\"\"Sequence number\"\"\"\n  sequenceNumber: Int\n\n  \"\"\"Signature\"\"\"\n  signature: String\n\n  \"\"\"Signature scheme\"\"\"\n  signatureScheme: String\n\n  \"\"\"Status Name\"\"\"\n  statusName: String\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Transaction timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n\n  \"\"\"Version of blockchain for this transaction\"\"\"\n  version(version: IntegerSelector): Int!\n\n  \"\"\"Version hash of blockchain for this transaction\"\"\"\n  versionHash: String!\n\n  \"\"\"VM Status\"\"\"\n  vmStatus: Int\n}\n\nenum LibraTransactionsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Version\"\"\"\n  version\n\n  \"\"\"Transaction Sender\"\"\"\n  tx_sender\n\n  \"\"\"Script Hash\"\"\"\n  script_hash\n\n  \"\"\"Gas price\"\"\"\n  gas_price\n\n  \"\"\"Gas used\"\"\"\n  gas\n}\n\nenum LibraTransactionsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique versions\"\"\"\n  versions\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique transaction senders\"\"\"\n  senders\n\n  \"\"\"Unique transaction script hashes\"\"\"\n  scripts\n}\n\ninput LibraTransferFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  version: IntegerSelector\n  txSender: AddressSelector\n  sender: AddressSelector\n  receiver: AddressSelector\n  currency: [LibraCurrencySelector!]\n  gasCurrency: [LibraCurrencySelector!]\n  amount: [AmountSelector!]\n  scriptType: ScriptTypeSelectorSelector\n  scriptHash: StringSelector\n}\n\n\"\"\"Transfers in Libra blockchain\"\"\"\ntype LibraTransfers {\n  amount(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: [LibraCurrencySelector!], gasCurrency: [LibraCurrencySelector!], amount: [AmountSelector!], scriptType: ScriptTypeSelectorSelector, scriptHash: StringSelector): Float\n  any(of: LibraTransfersMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n  count(uniq: TransfersUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: [LibraCurrencySelector!], gasCurrency: [LibraCurrencySelector!], amount: [AmountSelector!], scriptType: ScriptTypeSelectorSelector, scriptHash: StringSelector): BigInt\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: [LibraCurrencySelector!]): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Expiration Time\"\"\"\n  expirationTime: DateTime\n  gas(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: [LibraCurrencySelector!], gasCurrency: [LibraCurrencySelector!], amount: [AmountSelector!], scriptType: ScriptTypeSelectorSelector, scriptHash: StringSelector): Int\n\n  \"\"\"Currency of gas\"\"\"\n  gasCurrency(gasCurrency: [LibraCurrencySelector!]): Currency\n\n  \"\"\"Gas price\"\"\"\n  gasPrice: Float!\n  gasValue(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, version: IntegerSelector, txSender: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: [LibraCurrencySelector!], gasCurrency: [LibraCurrencySelector!], amount: [AmountSelector!], scriptType: ScriptTypeSelectorSelector, scriptHash: StringSelector): Float\n\n  \"\"\"Max gas amount\"\"\"\n  maxGasAmount: Int\n  maximum(of: LibraTransfersMeasureable!, get: LibraTransfersMeasureable): String\n  minimum(of: LibraTransfersMeasureable!, get: LibraTransfersMeasureable): String\n\n  \"\"\"Public key\"\"\"\n  publicKey: String\n\n  \"\"\"Transfer receiver\"\"\"\n  receiver(receiver: AddressSelector): Address\n\n  \"\"\"Script Hash\"\"\"\n  scriptHash(scriptHash: StringSelector): String\n\n  \"\"\"Script Type\"\"\"\n  scriptType: ScriptTypeSelectorSelector\n\n  \"\"\"Transfer sender\"\"\"\n  sender(sender: AddressSelector): Address\n\n  \"\"\"Sequence number\"\"\"\n  sequenceNumber: Int\n\n  \"\"\"Signature\"\"\"\n  signature: String\n\n  \"\"\"Signature scheme\"\"\"\n  signatureScheme: String\n\n  \"\"\"Status Name\"\"\"\n  statusName: String\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Transfer timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n\n  \"\"\"Transaction sender\"\"\"\n  txSender(txSender: AddressSelector): Address\n\n  \"\"\"Version of blockchain for this transaction\"\"\"\n  version(version: IntegerSelector): Int!\n\n  \"\"\"Version hash of blockchain for this transaction\"\"\"\n  versionHash: String!\n\n  \"\"\"VM Status\"\"\"\n  vmStatus: Int\n}\n\nenum LibraTransfersMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  height\n\n  \"\"\"Version\"\"\"\n  version\n\n  \"\"\"Version hash\"\"\"\n  version_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Transfer Sender\"\"\"\n  tx_sender\n\n  \"\"\"Sender\"\"\"\n  sender\n\n  \"\"\"Receiver\"\"\"\n  receiver\n\n  \"\"\"Script Hash\"\"\"\n  script_hash\n\n  \"\"\"Currency symbol\"\"\"\n  currency_symbol\n\n  \"\"\"Gas value\"\"\"\n  gas_value\n\n  \"\"\"Gas price\"\"\"\n  gas_price\n\n  \"\"\"Gas used\"\"\"\n  gas\n}\n\n\"\"\"Limit by definition\"\"\"\ninput LimitByOption {\n  \"\"\"Take limit for each combination of the field\"\"\"\n  each: String!\n\n  \"\"\"Limit number of results\"\"\"\n  limit: Int\n\n  \"\"\"Offset of results, starting from 0\"\"\"\n  offset: Int\n}\n\n\"\"\"Smart contract method\"\"\"\ntype Method {\n  \"\"\"Name\"\"\"\n  name: String\n\n  \"\"\"Signature\"\"\"\n  signature: String\n\n  \"\"\"Signature Hash\"\"\"\n  signatureHash: String!\n}\n\n\"\"\"\nSmart contract method. In selector you can use the name, signature or hex hash\n\"\"\"\ninput MethodSelector {\n  \"\"\"Method signature is\"\"\"\n  is: String\n\n  \"\"\"Method signature not\"\"\"\n  not: String\n\n  \"\"\"Method signature in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Method signature not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Name with an identifier\"\"\"\ntype NameWithId {\n  \"\"\"ID\"\"\"\n  id: Int\n\n  \"\"\"Name\"\"\"\n  name: String\n}\n\nenum Network {\n  \"\"\"Ethereum Mainnet\"\"\"\n  ethereum\n\n  \"\"\"Ethereum Classic\"\"\"\n  ethclassic\n\n  \"\"\"Ethereum Classic ( no reorg from block 10904146)\"\"\"\n  ethclassic_reorg\n\n  \"\"\"Binance DEX\"\"\"\n  binance\n\n  \"\"\"Celo Alfajores Testnet\"\"\"\n  celo_alfajores\n\n  \"\"\"Celo Baklava Testnet\"\"\"\n  celo_baklava\n\n  \"\"\"Celo RC1\"\"\"\n  celo_rc1\n\n  \"\"\"Bitcoin ( BTC )\"\"\"\n  bitcoin\n\n  \"\"\"Bitcoin Cash ( BCH )\"\"\"\n  bitcash\n\n  \"\"\"Bitcoin SV ( BSV )\"\"\"\n  bitcoinsv\n\n  \"\"\"Litecoin ( LTC )\"\"\"\n  litecoin\n\n  \"\"\"Dash ( DASH )\"\"\"\n  dash\n\n  \"\"\"Dogecoin ( DOGE )\"\"\"\n  dogecoin\n\n  \"\"\"Cardano ( ADA )\"\"\"\n  cardano\n\n  \"\"\"Zcash ( ZEC )\"\"\"\n  zcash\n\n  \"\"\"Algorand Mainnet (ALGO)\"\"\"\n  algorand\n\n  \"\"\"Algorand Testnet\"\"\"\n  algorand_testnet\n\n  \"\"\"Algorand Betanet\"\"\"\n  algorand_betanet\n\n  \"\"\"Conflux Oceanus\"\"\"\n  conflux_oceanus\n\n  \"\"\"Conflux Tethys\"\"\"\n  conflux_tethys\n\n  \"\"\"Libra Testnet\"\"\"\n  libra_testnet\n\n  \"\"\"Diem Testnet\"\"\"\n  diem_testnet\n\n  \"\"\"EOS Mainnet\"\"\"\n  eos\n\n  \"\"\"Tron Mainnet\"\"\"\n  tron\n\n  \"\"\"Binance Smart Chain Mainnet\"\"\"\n  bsc\n\n  \"\"\"Binance Smart Chain Testnet\"\"\"\n  bsc_testnet\n\n  \"\"\"Goerli Ethereum Testnet\"\"\"\n  goerli\n\n  \"\"\"Beacon Chain Ethereum 2.0\"\"\"\n  eth2\n\n  \"\"\"Medalla Ethereum 2.0 Beacon Testnet\"\"\"\n  medalla\n\n  \"\"\"Filecoin Mainnet\"\"\"\n  filecoin\n\n  \"\"\"Hedera Hashgraph\"\"\"\n  hedera\n}\n\n\"\"\"Offchain Data\"\"\"\ntype Offchain {\n  \"\"\"Historical COVID data\"\"\"\n  covid: CovidHistory\n}\n\n\"\"\"Select order by ID\"\"\"\ninput OrderIdSelector {\n  \"\"\"Order ID is\"\"\"\n  is: String\n\n  \"\"\"Order ID not\"\"\"\n  not: String\n\n  \"\"\"Order ID in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Order ID not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Select by order side\"\"\"\ninput OrderSideSelector {\n  \"\"\"Order Side is\"\"\"\n  is: BinanceOrderSide\n\n  \"\"\"Order Side not\"\"\"\n  not: BinanceOrderSide\n\n  \"\"\"Order Side in the list\"\"\"\n  in: [BinanceOrderSide!]\n\n  \"\"\"Order Side not in the list\"\"\"\n  notIn: [BinanceOrderSide!]\n}\n\n\"\"\"Select by order status\"\"\"\ninput OrderStatusSelector {\n  \"\"\"Order Status is\"\"\"\n  is: BinanceOrderStatus\n\n  \"\"\"Order Status not\"\"\"\n  not: BinanceOrderStatus\n\n  \"\"\"Order Status in the list\"\"\"\n  in: [BinanceOrderStatus!]\n\n  \"\"\"Order Status not in the list\"\"\"\n  notIn: [BinanceOrderStatus!]\n}\n\n\"\"\"Select by order time in force\"\"\"\ninput OrderTimeInForceSelector {\n  \"\"\"Order TimeInForce is\"\"\"\n  is: BinanceOrderTimeInForce\n\n  \"\"\"Order TimeInForce not\"\"\"\n  not: BinanceOrderTimeInForce\n\n  \"\"\"Order TimeInForce in the list\"\"\"\n  in: [BinanceOrderTimeInForce!]\n\n  \"\"\"Order TimeInForce not in the list\"\"\"\n  notIn: [BinanceOrderTimeInForce!]\n}\n\n\"\"\"Select by order type\"\"\"\ninput OrderTypeSelector {\n  \"\"\"Order Type is\"\"\"\n  is: BinanceOrderType\n\n  \"\"\"Order Type not\"\"\"\n  not: BinanceOrderType\n\n  \"\"\"Order Type in the list\"\"\"\n  in: [BinanceOrderType!]\n\n  \"\"\"Order Type not in the list\"\"\"\n  notIn: [BinanceOrderType!]\n}\n\n\"\"\"Select by output index ( o based )\"\"\"\ninput OutputIndexSelector {\n  \"\"\"Output index is\"\"\"\n  is: Int\n\n  \"\"\"Output index not\"\"\"\n  not: Int\n\n  \"\"\"Output index in the list\"\"\"\n  in: [Int!]\n\n  \"\"\"Output index not in the list\"\"\"\n  notIn: [Int!]\n\n  \"\"\"Output index greater than\"\"\"\n  gt: Int\n\n  \"\"\"Output index less than\"\"\"\n  lt: Int\n\n  \"\"\"Output index less or equal than\"\"\"\n  lteq: Int\n\n  \"\"\"Output index greater or equal than\"\"\"\n  gteq: Int\n\n  \"\"\"Output index in range\"\"\"\n  between: [Int!]\n}\n\n\"\"\"Output Script Type of UTXO transaction output\"\"\"\ntype OutputScript {\n  \"\"\"Script annotation\"\"\"\n  annotation: String\n\n  \"\"\"Long script pattern\"\"\"\n  pattern: String!\n\n  \"\"\"Short script pattern\"\"\"\n  short: String!\n\n  \"\"\"Simple script pattern\"\"\"\n  simplePattern: String!\n\n  \"\"\"Script type\"\"\"\n  type: BitcoinOutputScriptType\n}\n\nenum PriceAggregateFunction {\n  \"\"\"Maximum\"\"\"\n  maximum\n\n  \"\"\"Minimum\"\"\"\n  minimum\n\n  \"\"\"Aggregated over interval\"\"\"\n  sum\n\n  \"\"\"Average\"\"\"\n  average\n\n  \"\"\"Median\"\"\"\n  median\n\n  \"\"\"Any value\"\"\"\n  any\n\n  \"\"\"Last value\"\"\"\n  anyLast\n}\n\nenum Protocol {\n  \"\"\"Ethereum\"\"\"\n  ethereum\n\n  \"\"\"Binance DEX\"\"\"\n  binance\n\n  \"\"\"Bitcoin\"\"\"\n  bitcoin\n\n  \"\"\"Algorand\"\"\"\n  algorand\n\n  \"\"\"Libra\"\"\"\n  libra\n\n  \"\"\"EOS\"\"\"\n  eos\n\n  \"\"\"Tron\"\"\"\n  tron\n\n  \"\"\"Filecoin\"\"\"\n  filecoin\n\n  \"\"\"Hedera Hashgraph\"\"\"\n  hedera\n}\n\n\"\"\"Blockchain Unified GraphQL API\"\"\"\ntype Query {\n  \"\"\"Algorand Chains Dataset\"\"\"\n  algorand(network: AlgorandNetwork): Algorand\n\n  \"\"\"Binance DEX Chain Dataset\"\"\"\n  binance: Binance\n\n  \"\"\"Bitcoin and other UTXO Chains Dataset\"\"\"\n  bitcoin(network: BitcoinNetwork): Bitcoin\n\n  \"\"\"Conflux Chains Dataset\"\"\"\n  conflux(network: ConfluxNetwork): Conflux\n\n  \"\"\"Diem ( former Libra ) Testnet Dataset\"\"\"\n  diem(network: DiemNetwork): Libra\n\n  \"\"\"EOS Mainnet Dataset\"\"\"\n  eos: Eos\n\n  \"\"\"Ethereum Mainnet / Classic Chain Datasets\"\"\"\n  ethereum(network: EthereumNetwork): Ethereum\n\n  \"\"\"Ethereum v2.0 Beacon Chain Datasets\"\"\"\n  ethereum2(network: Ethereum2Network): Ethereum2\n\n  \"\"\"Filecoin Dataset\"\"\"\n  filecoin(network: FilecoinNetwork): Filecoin\n\n  \"\"\"Hedera Dataset\"\"\"\n  hedera(network: HederaNetwork): Hedera\n\n  \"\"\"Offchain data\"\"\"\n  offchain: Offchain\n\n  \"\"\"Search by query string\"\"\"\n  search(string: String!, limit: Int, offset: Int, network: Network): [Result!]\n\n  \"\"\"Tron Mainnet Dataset\"\"\"\n  tron: Tron\n}\n\n\"\"\"Limits, Ordering, Constraints\"\"\"\ninput QueryOptions {\n  \"\"\"Limit number of results\"\"\"\n  limit: Int\n\n  \"\"\"Limit number of results by specific field\"\"\"\n  limitBy: LimitByOption\n\n  \"\"\"Offset of results, starting from 0\"\"\"\n  offset: Int\n\n  \"\"\"Ordering field(s) for ascending\"\"\"\n  asc: [String!]\n\n  \"\"\"Ordering field(s) for descending\"\"\"\n  desc: [String!]\n}\n\n\"\"\"Search result item\"\"\"\ntype Result {\n  \"\"\"Blockchain where result is found\"\"\"\n  network: BlockchainNetwork!\n\n  \"\"\"Subject in blockchain\"\"\"\n  subject: Subject!\n}\n\nenum ScriptTypeSelectorSelector {\n  \"\"\"Unknown Transaction\"\"\"\n  unknown_transaction\n\n  \"\"\"Peer-to-peer\"\"\"\n  peer_to_peer_transaction\n}\n\n\"\"\"Smart contract method or event\"\"\"\nunion Signature = Event | Method\n\nenum SignatureTypeSelector {\n  \"\"\"Smart contract method\"\"\"\n  Function\n\n  \"\"\"Smart contract event\"\"\"\n  Event\n}\n\n\"\"\"Blockchain smart contract\"\"\"\ntype SmartContract {\n  \"\"\"String address representation\"\"\"\n  address: String!\n\n  \"\"\"Annotations ( tags ), if exists\"\"\"\n  annotation: String\n\n  \"\"\"Smart Contract Type\"\"\"\n  contractType: SmartContractType!\n\n  \"\"\"Smart Contract Protocol Type\"\"\"\n  protocol: String\n}\n\nenum SmartContractArgumentsUniq {\n  \"\"\"Unique signatures count\"\"\"\n  signatures\n\n  \"\"\"Unique values\"\"\"\n  values\n\n  \"\"\"Calls or events\"\"\"\n  calls\n\n  \"\"\"Unique transactions count\"\"\"\n  txs\n\n  \"\"\"Unique transaction senders\"\"\"\n  senders\n\n  \"\"\"Unique callers count\"\"\"\n  callers\n\n  \"\"\"Unique smart contracts count\"\"\"\n  smart_contracts\n\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\nenum SmartContractCallsUniq {\n  \"\"\"Calls\"\"\"\n  calls\n\n  \"\"\"Unique transactions count\"\"\"\n  txs\n\n  \"\"\"Unique transaction senders\"\"\"\n  senders\n\n  \"\"\"Unique callers count\"\"\"\n  callers\n\n  \"\"\"Unique smart contracts count\"\"\"\n  smart_contracts\n\n  \"\"\"Unique smart contract methods count\"\"\"\n  smart_contract_methods\n\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\ntype SmartContractReadonlyAttribute {\n  \"\"\"Value as address if applicable\"\"\"\n  address: EthereumAddressInfo\n\n  \"\"\"Method name\"\"\"\n  name: String!\n\n  \"\"\"Method return type\"\"\"\n  type: String!\n\n  \"\"\"Method return value\"\"\"\n  value: String!\n}\n\nenum SmartContractType {\n  \"\"\"Not A Smart contract\"\"\"\n  None\n\n  \"\"\"General Purpose Smart contract\"\"\"\n  Generic\n\n  \"\"\"Smart contract for token derivatives\"\"\"\n  MarginPositionToken\n\n  \"\"\"Multi signature wallet\"\"\"\n  Multisig\n\n  \"\"\"Token\"\"\"\n  Token\n\n  \"\"\"Token Sale\"\"\"\n  TokenSale\n\n  \"\"\"Decentralized exchange\"\"\"\n  DEX\n\n  \"\"\"Transaction Execution Approval Language\"\"\"\n  TEAL\n}\n\n\"\"\"Selector of smart contract type\"\"\"\ninput SmartContractTypeSelector {\n  \"\"\"Smart Contract type is\"\"\"\n  is: SmartContractType\n\n  \"\"\"Smart Contract type not\"\"\"\n  not: SmartContractType\n\n  \"\"\"Smart Contract type in the list\"\"\"\n  in: [SmartContractType!]\n\n  \"\"\"Smart Contract type not in the list\"\"\"\n  notIn: [SmartContractType!]\n}\n\n\"\"\"Select by ID\"\"\"\ninput StringIdSelector {\n  \"\"\"ID is\"\"\"\n  is: String\n\n  \"\"\"ID not\"\"\"\n  not: String\n\n  \"\"\"ID in the list\"\"\"\n  in: [String!]\n\n  \"\"\"ID not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Select by string\"\"\"\ninput StringSelector {\n  \"\"\"String is\"\"\"\n  is: String\n\n  \"\"\"String not\"\"\"\n  not: String\n\n  \"\"\"String in the list\"\"\"\n  in: [String!]\n\n  \"\"\"String not in the list\"\"\"\n  notIn: [String!]\n}\n\n\"\"\"Search result subject\"\"\"\nunion Subject = Address | Currency | HederaAccount | SmartContract | TransactionHash\n\n\"\"\"Time Interval\"\"\"\ntype TimeInterval {\n  day(count: Int, format: String): String!\n  hour(count: Int, format: String): String!\n  minute(count: Int, format: String): String!\n  month(count: Int, format: String): String!\n  second(count: Int, format: String): String!\n  year(count: Int, format: String): String!\n}\n\n\"\"\"Timestamp\"\"\"\ntype Timestamp {\n  \"\"\"Nanoseconds\"\"\"\n  nanoseconds: BigInt!\n  time: ISO8601Date!\n}\n\n\"\"\"Select trade by ID\"\"\"\ninput TradeIdSelector {\n  \"\"\"Trade ID is\"\"\"\n  is: String\n\n  \"\"\"Trade ID not\"\"\"\n  not: String\n\n  \"\"\"Trade ID in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Trade ID not in the list\"\"\"\n  notIn: [String!]\n}\n\nenum TradeSide {\n  \"\"\"Buy side\"\"\"\n  BUY\n\n  \"\"\"Sell side\"\"\"\n  SELL\n}\n\n\"\"\"Blockchain transaction\"\"\"\ntype TransactionHash {\n  \"\"\"Hash hex representation\"\"\"\n  hash: String!\n}\n\n\"\"\"Blockchain transaction\"\"\"\ntype TransactionHashIndex {\n  \"\"\"Hash hex representation\"\"\"\n  hash: String!\n\n  \"\"\"Transaction index in block, 0-based\"\"\"\n  index: String!\n}\n\n\"\"\"Blockchain transaction\"\"\"\ntype TransactionHashIndexValues {\n  \"\"\"Hash hex representation\"\"\"\n  hash: String!\n\n  \"\"\"Transaction index in block, 0-based\"\"\"\n  index: String!\n\n  \"\"\"Transaction value in input\"\"\"\n  valueIn: Float!\n\n  \"\"\"Transaction value in output\"\"\"\n  valueOut: Float!\n}\n\n\"\"\"Blockchain transaction with value\"\"\"\ntype TransactionHashValue {\n  \"\"\"Hash hex representation\"\"\"\n  hash: String!\n\n  \"\"\"Transaction value\"\"\"\n  value: Float!\n}\n\n\"\"\"Transaction result\"\"\"\ntype TransactionResult {\n  \"\"\"Result ID\"\"\"\n  id: Int!\n\n  \"\"\"Result name\"\"\"\n  name: String!\n}\n\n\"\"\"Identification of transaction source as client application\"\"\"\ntype TransactionSource {\n  \"\"\"ID numeric\"\"\"\n  code: Int!\n\n  \"\"\"Name\"\"\"\n  name: String!\n}\n\n\"\"\"Select by type of transfer\"\"\"\ninput TransferTypeSelector {\n  \"\"\"Transfer Type is\"\"\"\n  is: FilecoinTransferType\n\n  \"\"\"Transfer Type not\"\"\"\n  not: FilecoinTransferType\n\n  \"\"\"Transfer Type in the list\"\"\"\n  in: [FilecoinTransferType!]\n\n  \"\"\"Transfer Type not in the list\"\"\"\n  notIn: [FilecoinTransferType!]\n}\n\nenum TransfersUniq {\n  \"\"\"Transfers\"\"\"\n  transfers\n\n  \"\"\"Unique transactions count\"\"\"\n  txs\n\n  \"\"\"Unique senders count\"\"\"\n  senders\n\n  \"\"\"Unique receivers count\"\"\"\n  receivers\n\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Unique currencies\"\"\"\n  currencies\n}\n\n\"\"\"Tron Chain\"\"\"\ntype Tron {\n  \"\"\"Basic information about address ( or smart contract )\"\"\"\n  address(address: [AddressSelectorIn!]!): [TronAddressInfo!]!\n\n  \"\"\"Blockchain Blocks\"\"\"\n  blocks(date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, witness: AddressSelector, version: IntegerSelector, parentBlockHash: [HashSelector!], any: [TronBlockFilter!], options: QueryOptions): [TronBlocks!]\n\n  \"\"\"Money flow using Coinpath technology\"\"\"\n  coinpath(sender: AddressSelector, receiver: AddressSelector, currency: TronCurrencySelector, initialAddress: AddressSelector, initialDate: DateSelector, initialTime: DateTimeSelector, date: DateSelector, time: DateTimeSelector, depth: IntegerLimitedSelector, options: CoinpathOptions): [TronCoinpath!]\n\n  \"\"\"Blockchain Embedded Contracts\"\"\"\n  contracts(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txOwner: AddressSelector, contractType: TronContractTypeSelector, currency: TronCurrencySelector, success: Boolean, any: [TronContractFilter!], options: QueryOptions): [TronSmartContracts!]\n\n  \"\"\"Smart Contract Calls\"\"\"\n  smartContractCalls(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractMethod: MethodSelector, external: Boolean, success: Boolean, any: [TronSmartContractCallFilter!], options: QueryOptions): [TronSmartContractCalls!]\n\n  \"\"\"Smart Contract Events\"\"\"\n  smartContractEvents(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractEvent: EventSelector, any: [TronSmartContractEventFilter!], options: QueryOptions): [TronSmartContractEvents!]\n\n  \"\"\"Blockchain Embedded Contracts\"\"\"\n  trades(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: AddressSelector, seller: AddressSelector, buyCurrency: TronCurrencySelector, sellCurrency: TronCurrencySelector, contractType: TronContractTypeSelector, amountSell: [AmountSelector!], amountBuy: [AmountSelector!], exchangeId: IntIdSelector, success: Boolean, any: [TronTradeFilter!], options: QueryOptions): [TronTrades!]\n\n  \"\"\"Blockchain Transactions\"\"\"\n  transactions(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, refBlockHash: [HashSelector!], contractAddress: AddressSelector, any: [TronTransactionFilter!], options: QueryOptions): [TronTransactions!]\n\n  \"\"\"Currency Transfers\"\"\"\n  transfers(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: TronCurrencySelector, contractType: TronContractTypeSelector, entityId: EntitySelector, external: Boolean, success: Boolean, amount: [AmountSelector!], any: [TronTransferFilter!], options: QueryOptions): [TronTransfers!]\n}\n\n\"\"\"Address detailed information for Tron network\"\"\"\ntype TronAddressInfo {\n  \"\"\"String address representation\"\"\"\n  address: String!\n\n  \"\"\"Annotations ( tags ), if exists\"\"\"\n  annotation: String\n\n  \"\"\"Smart Contract if exists on the address\"\"\"\n  smartContract: TronSmartContractInfo\n}\n\ninput TronBlockFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  blockHash: HashSelector\n  witness: AddressSelector\n  version: IntegerSelector\n  parentBlockHash: [HashSelector!]\n}\n\n\"\"\"Blocks in Tron blockchain\"\"\"\ntype TronBlocks {\n  any(of: TronBlocksMeasureable!): String\n  count(uniq: TronBlocksUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, blockHash: HashSelector, witness: AddressSelector, version: IntegerSelector, parentBlockHash: [HashSelector!]): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n\n  \"\"\"Block hash\"\"\"\n  hash(blockHash: [HashSelector!]): String!\n\n  \"\"\"Block number (height) in blockchain\"\"\"\n  height(height: BlockSelector): Int!\n  maximum(of: TronBlocksMeasureable!, get: TronBlocksMeasureable): String\n  minimum(of: TronBlocksMeasureable!, get: TronBlocksMeasureable): String\n\n  \"\"\"Parent block hash\"\"\"\n  parentBlockHash(parentBlockHash: [HashSelector!]): String!\n\n  \"\"\"Block timestamp\"\"\"\n  timestamp(time: DateTimeSelector): DateTime\n\n  \"\"\"TX Trie Root Hash\"\"\"\n  txTrieRoot: String!\n\n  \"\"\"Block version\"\"\"\n  version(version: IntegerSelector): Int\n\n  \"\"\"Block witness\"\"\"\n  witness(witness: AddressSelector): Address\n\n  \"\"\"Witness signature\"\"\"\n  witnessSignature: String!\n}\n\nenum TronBlocksMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Block hash\"\"\"\n  block_hash\n\n  \"\"\"Block Witness address\"\"\"\n  witness\n\n  \"\"\"Block Version\"\"\"\n  version\n}\n\nenum TronBlocksUniq {\n  \"\"\"Unique witness count\"\"\"\n  witnesses\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\nenum TronCallsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Action From\"\"\"\n  tx_from\n\n  \"\"\"Action To\"\"\"\n  tx_to\n\n  \"\"\"Smart Contract\"\"\"\n  smart_contract\n\n  \"\"\"Smart Contract Method Name\"\"\"\n  signature_name\n\n  \"\"\"Smart Contract Method Signature\"\"\"\n  signature\n\n  \"\"\"Smart Contract Method Signature Hash\"\"\"\n  signature_hash\n\n  \"\"\"Call depth\"\"\"\n  call_depth\n}\n\n\"\"\"Coinpath\"\"\"\ntype TronCoinpath {\n  \"\"\"Summary of transfered value\"\"\"\n  amount(in: BaseCurrencyEnum): Float\n  any(of: CoinpathMeasureable!): String\n\n  \"\"\"Block where transaction is included\"\"\"\n  block: Block\n\n  \"\"\"Count of transfers\"\"\"\n  count: Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency: Currency\n\n  \"\"\"1-based hop depth of the graph\"\"\"\n  depth: Int\n  maximum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n  minimum(of: CoinpathMeasureable!, get: CoinpathMeasureable): String\n\n  \"\"\"Receiver address\"\"\"\n  receiver: TronAddressInfo\n\n  \"\"\"Sender address\"\"\"\n  sender: TronAddressInfo\n\n  \"\"\"Transaction of transfer happened\"\"\"\n  transaction: TransactionHashValue\n}\n\ninput TronContractFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txOwner: AddressSelector\n  contractType: TronContractTypeSelector\n  currency: TronCurrencySelector\n  success: Boolean\n}\n\nenum TronContractType {\n  \"\"\"Account Create\"\"\"\n  AccountCreate\n\n  \"\"\"Account Permission Update\"\"\"\n  AccountPermissionUpdate\n\n  \"\"\"Account Update\"\"\"\n  AccountUpdate\n\n  \"\"\"Asset Issue\"\"\"\n  AssetIssue\n\n  \"\"\"Clear ABI\"\"\"\n  ClearABI\n\n  \"\"\"Create Smart\"\"\"\n  CreateSmart\n\n  \"\"\"Exchange Create\"\"\"\n  ExchangeCreate\n\n  \"\"\"Exchange Inject\"\"\"\n  ExchangeInject\n\n  \"\"\"Exchange Transaction\"\"\"\n  ExchangeTransaction\n\n  \"\"\"Exchange Withdraw\"\"\"\n  ExchangeWithdraw\n\n  \"\"\"Freeze Balance\"\"\"\n  FreezeBalance\n\n  \"\"\"Participate Asset Issue\"\"\"\n  ParticipateAssetIssue\n\n  \"\"\"Proposal Approve\"\"\"\n  ProposalApprove\n\n  \"\"\"Proposal Create\"\"\"\n  ProposalCreate\n\n  \"\"\"Proposal Delete\"\"\"\n  ProposalDelete\n\n  \"\"\"Set Account Id\"\"\"\n  SetAccountId\n\n  \"\"\"Transfer\"\"\"\n  Transfer\n\n  \"\"\"Transfer Asset\"\"\"\n  TransferAsset\n\n  \"\"\"Trigger Smart\"\"\"\n  TriggerSmart\n\n  \"\"\"Unfreeze Asset\"\"\"\n  UnfreezeAsset\n\n  \"\"\"Unfreeze Balance\"\"\"\n  UnfreezeBalance\n\n  \"\"\"Update Asset\"\"\"\n  UpdateAsset\n\n  \"\"\"Update Brokerage\"\"\"\n  UpdateBrokerage\n\n  \"\"\"Update Energy Limit\"\"\"\n  UpdateEnergyLimit\n\n  \"\"\"Update Setting\"\"\"\n  UpdateSetting\n\n  \"\"\"Vote Witness\"\"\"\n  VoteWitness\n\n  \"\"\"Withdraw Balance\"\"\"\n  WithdrawBalance\n\n  \"\"\"Witness Create\"\"\"\n  WitnessCreate\n\n  \"\"\"Witness Update\"\"\"\n  WitnessUpdate\n}\n\n\"\"\"Select contract type(s)\"\"\"\ninput TronContractTypeSelector {\n  \"\"\"Contract type is\"\"\"\n  is: TronContractType\n\n  \"\"\"Contract type not\"\"\"\n  not: TronContractType\n\n  \"\"\"Contract type in the list\"\"\"\n  in: [TronContractType!]\n\n  \"\"\"Contract type not in the list\"\"\"\n  notIn: [TronContractType!]\n}\n\nenum TronContractsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Transaction owner\"\"\"\n  tx_owner\n\n  \"\"\"Contract\"\"\"\n  contract_type\n}\n\n\"\"\"\nCurrency selector in Tron blockchain.\nToken identified by address of contract for TRC20 tokens and token name (or numeric token ID )  for TRC10\n\"\"\"\ninput TronCurrencySelector {\n  \"\"\"Currency is\"\"\"\n  is: String\n\n  \"\"\"Currency not\"\"\"\n  not: String\n\n  \"\"\"Currency in the list\"\"\"\n  in: [String!]\n\n  \"\"\"Currency not in the list\"\"\"\n  notIn: [String!]\n}\n\nenum TronEventsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Action From\"\"\"\n  tx_from\n\n  \"\"\"Action To\"\"\"\n  tx_to\n\n  \"\"\"Smart Contract\"\"\"\n  smart_contract\n\n  \"\"\"Smart Contract Method Name\"\"\"\n  signature_name\n\n  \"\"\"Smart Contract Method Signature\"\"\"\n  signature\n\n  \"\"\"Smart Contract Method Signature Hash\"\"\"\n  signature_hash\n}\n\n\"\"\"Tron smart contract\"\"\"\ntype TronSmartContract {\n  \"\"\"Smart Contract Address\"\"\"\n  address: Address!\n\n  \"\"\"Smart Contract Type\"\"\"\n  contractType: SmartContractType\n\n  \"\"\"Token implemented in this smart contract\"\"\"\n  currency: Currency\n\n  \"\"\"Smart Contract Protocol Type\"\"\"\n  protocolType: String\n}\n\ninput TronSmartContractCallFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txFrom: AddressSelector\n  txTo: AddressSelector\n  smartContractAddress: AddressSelector\n  smartContractMethod: MethodSelector\n  external: Boolean\n  success: Boolean\n}\n\n\"\"\"Smart Contract Calls\"\"\"\ntype TronSmartContractCalls {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractMethod: MethodSelector, external: Boolean, success: Boolean): Float\n  any(of: TronCallsMeasureable!): String\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"\n  Depth of the call. Empty string for external call, then counted as 0...N, and the next layer is added through '-'. For example 0-3-9.\n  \"\"\"\n  callDepth: String\n\n  \"\"\"Counts and other metrics\"\"\"\n  count(uniq: SmartContractCallsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractMethod: MethodSelector, external: Boolean, success: Boolean): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  energyUsageTotal(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractMethod: MethodSelector, external: Boolean, success: Boolean): Float\n\n  \"\"\"\n  External call executed explicitly by caller. Internal calls executed by smart contracts.\n  \"\"\"\n  external(external: Boolean): Boolean\n  fee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractMethod: MethodSelector, external: Boolean, success: Boolean): Float\n  maximum(of: TronCallsMeasureable!, get: TronCallsMeasureable): String\n  minimum(of: TronCallsMeasureable!, get: TronCallsMeasureable): String\n  netUsage(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractMethod: MethodSelector, external: Boolean, success: Boolean): Float\n\n  \"\"\"Smart contract being called\"\"\"\n  smartContract(smartContractAddress: AddressSelector): TronSmartContract\n\n  \"\"\"Contract method invoked\"\"\"\n  smartContractMethod(smartContractMethod: MethodSelector): Method\n\n  \"\"\"\n  True if call succeeded, false if error happened. Note, that by default only successfull calls are returned in API.\n  \"\"\"\n  success(success: [Boolean!]): Boolean\n\n  \"\"\"Action from address\"\"\"\n  txFrom(txFrom: AddressSelector): Address\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  txHash(txHash: HashSelector): String\n\n  \"\"\"Action to address\"\"\"\n  txTo(txTo: AddressSelector): Address\n}\n\ninput TronSmartContractEventFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txFrom: AddressSelector\n  txTo: AddressSelector\n  smartContractAddress: AddressSelector\n  smartContractEvent: EventSelector\n}\n\n\"\"\"Smart Contract Events\"\"\"\ntype TronSmartContractEvents {\n  any(of: TronEventsMeasureable!): String\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Counts and other metrics\"\"\"\n  count(uniq: SmartContractCallsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, smartContractAddress: AddressSelector, smartContractEvent: EventSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  maximum(of: TronEventsMeasureable!, get: TronEventsMeasureable): String\n  minimum(of: TronEventsMeasureable!, get: TronEventsMeasureable): String\n\n  \"\"\"Smart contract being Evented\"\"\"\n  smartContract(smartContractAddress: AddressSelector): TronSmartContract\n\n  \"\"\"Contract method invoked\"\"\"\n  smartContractEvent(smartContractEvent: EventSelector): Event\n\n  \"\"\"Action from address\"\"\"\n  txFrom(txFrom: AddressSelector): Address\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  txHash(txHash: HashSelector): String\n\n  \"\"\"Action to address\"\"\"\n  txTo(txTo: AddressSelector): Address\n}\n\n\"\"\"Blockchain smart contract\"\"\"\ntype TronSmartContractInfo {\n  \"\"\"Smart Contract Type\"\"\"\n  contractType: SmartContractType\n\n  \"\"\"Token implemented in this smart contract\"\"\"\n  currency: Currency\n\n  \"\"\"Smart Contract Protocol Type\"\"\"\n  protocolType: String\n}\n\n\"\"\"Contracts\"\"\"\ntype TronSmartContracts {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txOwner: AddressSelector, contractType: TronContractTypeSelector, currency: TronCurrencySelector, success: Boolean): Float\n  any(of: TronContractsMeasureable!): String\n\n  \"\"\"Block in the blockchain\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Contract type\"\"\"\n  contractType(contractType: TronContractTypeSelector): TronContractType\n\n  \"\"\"Counts and other metrics\"\"\"\n  count(uniq: SmartContractCallsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txOwner: AddressSelector, contractType: TronContractTypeSelector, currency: TronCurrencySelector, success: Boolean): Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: TronCurrencySelector): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  energyUsageTotal(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txOwner: AddressSelector, contractType: TronContractTypeSelector, currency: TronCurrencySelector, success: Boolean): Float\n  fee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txOwner: AddressSelector, contractType: TronContractTypeSelector, currency: TronCurrencySelector, success: Boolean): Float\n  maximum(of: TronContractsMeasureable!, get: TronContractsMeasureable): String\n  minimum(of: TronContractsMeasureable!, get: TronContractsMeasureable): String\n  netUsage(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txOwner: AddressSelector, contractType: TronContractTypeSelector, currency: TronCurrencySelector, success: Boolean): Float\n\n  \"\"\"\n  True if call succeeded, false if error happened. Note, that by default only successfull calls are returned in API.\n  \"\"\"\n  success(success: [Boolean!]): Boolean\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  txHash(txHash: HashSelector): String\n\n  \"\"\"Transactio owner from address\"\"\"\n  txOwner(txOwner: AddressSelector): Address\n}\n\ninput TronTradeFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  buyer: AddressSelector\n  seller: AddressSelector\n  buyCurrency: TronCurrencySelector\n  sellCurrency: TronCurrencySelector\n  contractType: TronContractTypeSelector\n  amountSell: [AmountSelector!]\n  amountBuy: [AmountSelector!]\n  exchangeId: IntIdSelector\n  success: Boolean\n}\n\n\"\"\"Currency Trades from/to addresses in crypto currencies\"\"\"\ntype TronTrades {\n  amountBuy(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: AddressSelector, seller: AddressSelector, buyCurrency: TronCurrencySelector, sellCurrency: TronCurrencySelector, contractType: TronContractTypeSelector, amountSell: [AmountSelector!], amountBuy: [AmountSelector!], exchangeId: IntIdSelector, success: Boolean): Float\n  amountSell(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: AddressSelector, seller: AddressSelector, buyCurrency: TronCurrencySelector, sellCurrency: TronCurrencySelector, contractType: TronContractTypeSelector, amountSell: [AmountSelector!], amountBuy: [AmountSelector!], exchangeId: IntIdSelector, success: Boolean): Float\n  any(of: TronTradesMeasureable!): String\n\n  \"\"\"Block where Trade transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Buy Currency of Trade\"\"\"\n  buyCurrency(buyCurrency: TronCurrencySelector): Currency\n\n  \"\"\"Trade buyer\"\"\"\n  buyer(buyer: AddressSelector): Address\n\n  \"\"\"Contract type\"\"\"\n  contractType(contractType: TronContractTypeSelector): TronContractType\n  count(uniq: TronTradesUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: AddressSelector, seller: AddressSelector, buyCurrency: TronCurrencySelector, sellCurrency: TronCurrencySelector, contractType: TronContractTypeSelector, amountSell: [AmountSelector!], amountBuy: [AmountSelector!], exchangeId: IntIdSelector, success: Boolean): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  energyUsageTotal(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: AddressSelector, seller: AddressSelector, buyCurrency: TronCurrencySelector, sellCurrency: TronCurrencySelector, contractType: TronContractTypeSelector, amountSell: [AmountSelector!], amountBuy: [AmountSelector!], exchangeId: IntIdSelector, success: Boolean): Float\n\n  \"\"\"exchange_id\"\"\"\n  exchangeId(exchangeId: IntIdSelector): Int\n  fee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: AddressSelector, seller: AddressSelector, buyCurrency: TronCurrencySelector, sellCurrency: TronCurrencySelector, contractType: TronContractTypeSelector, amountSell: [AmountSelector!], amountBuy: [AmountSelector!], exchangeId: IntIdSelector, success: Boolean): Float\n  maximum(of: TronTradesMeasureable!, get: TronTradesMeasureable): String\n  minimum(of: TronTradesMeasureable!, get: TronTradesMeasureable): String\n  netUsage(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, buyer: AddressSelector, seller: AddressSelector, buyCurrency: TronCurrencySelector, sellCurrency: TronCurrencySelector, contractType: TronContractTypeSelector, amountSell: [AmountSelector!], amountBuy: [AmountSelector!], exchangeId: IntIdSelector, success: Boolean): Float\n\n  \"\"\"Sell Currency of Trade\"\"\"\n  sellCurrency(sellCurrency: TronCurrencySelector): Currency\n\n  \"\"\"Trade seller\"\"\"\n  seller(seller: AddressSelector): Address\n\n  \"\"\"Transfer succeeded\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Transaction hash where Trade happened\"\"\"\n  txHash(txHash: HashSelector): String\n}\n\nenum TronTradesMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Amount Sell\"\"\"\n  amount_sell\n\n  \"\"\"Amount Sell\"\"\"\n  amount_buy\n\n  \"\"\"Buyer\"\"\"\n  buyer\n\n  \"\"\"Seller\"\"\"\n  seller\n\n  \"\"\"Buy Currency symbol\"\"\"\n  buy_currency_symbol\n\n  \"\"\"Buy Currency name\"\"\"\n  buy_currency_name\n\n  \"\"\"Buy Token address\"\"\"\n  buy_currency_address\n\n  \"\"\"Buy Token address\"\"\"\n  buy_token_id\n\n  \"\"\"Buy Token type\"\"\"\n  buy_token_type\n\n  \"\"\"Buy Currency symbol\"\"\"\n  sell_currency_symbol\n\n  \"\"\"Buy Currency name\"\"\"\n  sell_currency_name\n\n  \"\"\"Buy Token address\"\"\"\n  sell_currency_address\n\n  \"\"\"Buy Token address\"\"\"\n  sell_token_id\n\n  \"\"\"Buy Token type\"\"\"\n  sell_token_type\n\n  \"\"\"Exchange ID\"\"\"\n  exchange_id\n\n  \"\"\"Contract Type\"\"\"\n  contract_type\n}\n\nenum TronTradesUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n\n  \"\"\"Sellers count\"\"\"\n  sellers\n\n  \"\"\"Buyers count\"\"\"\n  buyers\n\n  \"\"\"Buy currencies\"\"\"\n  buy_currencies\n\n  \"\"\"Sell currencies\"\"\"\n  sell_currencies\n\n  \"\"\"Exchange IDs\"\"\"\n  exchanges\n}\n\ninput TronTransactionFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txIndex: TxIndexSelector\n  success: Boolean\n  refBlockHash: [HashSelector!]\n  contractAddress: AddressSelector\n}\n\n\"\"\"Transactions in Tron blockchain\"\"\"\ntype TronTransactions {\n  any(of: TronTransactionsMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Contract Address\"\"\"\n  contractAddress(contractAddress: AddressSelector): Address\n  count(uniq: TronTransactionsUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, refBlockHash: [HashSelector!], contractAddress: AddressSelector): Int\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  energyFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, refBlockHash: [HashSelector!], contractAddress: AddressSelector): Float\n  energyUsageTotal(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, refBlockHash: [HashSelector!], contractAddress: AddressSelector): Float\n\n  \"\"\"Expiration\"\"\"\n  expiration: Int!\n  fee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, refBlockHash: [HashSelector!], contractAddress: AddressSelector): Float\n\n  \"\"\"Fee Limit\"\"\"\n  feeLimit: Int!\n\n  \"\"\"Hash hex representation\"\"\"\n  hash(txHash: [HashSelector!]): String!\n\n  \"\"\"Transaction index in block, 0 based\"\"\"\n  index(txIndex: [TxIndexSelector!]): Int\n  internalTransactionsCount(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, refBlockHash: [HashSelector!], contractAddress: AddressSelector): Int\n  logsCount(date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, refBlockHash: [HashSelector!], contractAddress: AddressSelector): Int\n  maximum(of: TronTransactionsMeasureable!, get: TronTransactionsMeasureable): String\n  minimum(of: TronTransactionsMeasureable!, get: TronTransactionsMeasureable): String\n  netFee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, refBlockHash: [HashSelector!], contractAddress: AddressSelector): Float\n  netUsage(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txIndex: TxIndexSelector, success: Boolean, refBlockHash: [HashSelector!], contractAddress: AddressSelector): Float\n\n  \"\"\"Ref block Hash hex representation\"\"\"\n  refBlockHash(refBlockHash: [HashSelector!]): String!\n\n  \"\"\"Result message\"\"\"\n  result: String\n\n  \"\"\"Signatures\"\"\"\n  signatures: String!\n\n  \"\"\"Success\"\"\"\n  success(success: Boolean): Boolean\n}\n\nenum TronTransactionsMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Fee\"\"\"\n  fee\n\n  \"\"\"Fee Limit\"\"\"\n  fee_limit\n\n  \"\"\"Energy Fee\"\"\"\n  energy_fee\n\n  \"\"\"Net usage\"\"\"\n  net_usage\n\n  \"\"\"Internal transactions count\"\"\"\n  internal_transactions_count\n}\n\nenum TronTransactionsUniq {\n  \"\"\"Unique blocks\"\"\"\n  blocks\n\n  \"\"\"Unique date count\"\"\"\n  dates\n}\n\ninput TronTransferFilter {\n  date: DateSelector\n  time: DateTimeSelector\n  height: BlockSelector\n  txHash: HashSelector\n  txFrom: AddressSelector\n  txTo: AddressSelector\n  sender: AddressSelector\n  receiver: AddressSelector\n  currency: TronCurrencySelector\n  contractType: TronContractTypeSelector\n  entityId: EntitySelector\n  external: Boolean\n  success: Boolean\n  amount: [AmountSelector!]\n}\n\n\"\"\"Currency transfers from/to addresses in crypto currencies\"\"\"\ntype TronTransfers {\n  amount(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: TronCurrencySelector, contractType: TronContractTypeSelector, entityId: EntitySelector, external: Boolean, success: Boolean, amount: [AmountSelector!]): Float\n  any(of: TronTransfersMeasureable!): String\n\n  \"\"\"Block where transfer transaction is included\"\"\"\n  block(height: BlockSelector, time: DateTimeSelector): Block\n\n  \"\"\"Contract type\"\"\"\n  contractType(contractType: TronContractTypeSelector): TronContractType\n  count(uniq: TransfersUniq, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: TronCurrencySelector, contractType: TronContractTypeSelector, entityId: EntitySelector, external: Boolean, success: Boolean, amount: [AmountSelector!]): Int\n\n  \"\"\"Currency of transfer\"\"\"\n  currency(currency: TronCurrencySelector): Currency\n\n  \"\"\"Calendar date\"\"\"\n  date: Date\n  energyUsageTotal(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: TronCurrencySelector, contractType: TronContractTypeSelector, entityId: EntitySelector, external: Boolean, success: Boolean, amount: [AmountSelector!]): Float\n\n  \"\"\"Entity identifier ( for ERC-721 NFT tokens )\"\"\"\n  entityId(entityId: EntitySelector): String\n\n  \"\"\"\n  External transfer executed explicitly by tx sender. Internal transfers executed by smart contracts.\n  \"\"\"\n  external(external: Boolean): Boolean\n  fee(calculate: AmountAggregateFunction, in: BaseCurrencyEnum, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: TronCurrencySelector, contractType: TronContractTypeSelector, entityId: EntitySelector, external: Boolean, success: Boolean, amount: [AmountSelector!]): Float\n  maximum(of: TronTransfersMeasureable!, get: TronTransfersMeasureable): String\n  minimum(of: TronTransfersMeasureable!, get: TronTransfersMeasureable): String\n  netUsage(calculate: AmountAggregateFunction, date: DateSelector, time: DateTimeSelector, height: BlockSelector, txHash: HashSelector, txFrom: AddressSelector, txTo: AddressSelector, sender: AddressSelector, receiver: AddressSelector, currency: TronCurrencySelector, contractType: TronContractTypeSelector, entityId: EntitySelector, external: Boolean, success: Boolean, amount: [AmountSelector!]): Float\n\n  \"\"\"Transfer receiver\"\"\"\n  receiver(receiver: AddressSelector): Address\n\n  \"\"\"Transfer sender\"\"\"\n  sender(sender: AddressSelector): Address\n\n  \"\"\"Transfer succeeded\"\"\"\n  success(success: Boolean): Boolean\n\n  \"\"\"Action from address\"\"\"\n  txFrom(txFrom: AddressSelector): Address\n\n  \"\"\"Transaction hash where transfer happened\"\"\"\n  txHash(txHash: HashSelector): String\n\n  \"\"\"Action to address\"\"\"\n  txTo(txTo: AddressSelector): Address\n}\n\nenum TronTransfersMeasureable {\n  \"\"\"Date\"\"\"\n  date\n\n  \"\"\"Time\"\"\"\n  time\n\n  \"\"\"Block\"\"\"\n  block\n\n  \"\"\"Transaction hash\"\"\"\n  tx_hash\n\n  \"\"\"Amount\"\"\"\n  amount\n\n  \"\"\"Sender\"\"\"\n  sender\n\n  \"\"\"Receiver\"\"\"\n  receiver\n\n  \"\"\"Currency symbol\"\"\"\n  currency_symbol\n\n  \"\"\"Token address\"\"\"\n  currency_address\n\n  \"\"\"Token ID\"\"\"\n  token_id\n\n  \"\"\"Token type\"\"\"\n  token_type\n}\n\n\"\"\"Selector of index of transaction in block\"\"\"\ninput TxIndexSelector {\n  \"\"\"Tx index is\"\"\"\n  is: Int\n\n  \"\"\"Tx index not\"\"\"\n  not: Int\n\n  \"\"\"Tx index in the list\"\"\"\n  in: [Int!]\n\n  \"\"\"Tx index not in the list\"\"\"\n  notIn: [Int!]\n}\n\n\"\"\"Select transactions by subtype\"\"\"\ninput TxSubtypeSelector {\n  \"\"\"Transaction SubType is\"\"\"\n  is: AlgorandTxSubType\n\n  \"\"\"Transaction SubType not\"\"\"\n  not: AlgorandTxSubType\n\n  \"\"\"Transaction SubType in the list\"\"\"\n  in: [AlgorandTxSubType!]\n\n  \"\"\"Transaction SubType not in the list\"\"\"\n  notIn: [AlgorandTxSubType!]\n}\n\n\"\"\"Select transactions by type\"\"\"\ninput TxTypeSelector {\n  \"\"\"Transaction Type is\"\"\"\n  is: AlgorandTxType\n\n  \"\"\"Transaction Type not\"\"\"\n  not: AlgorandTxType\n\n  \"\"\"Transaction Type in the list\"\"\"\n  in: [AlgorandTxType!]\n\n  \"\"\"Transaction Type not in the list\"\"\"\n  notIn: [AlgorandTxType!]\n}",
    "Catalysis-Hub.Org": "type Query {\n  \"\"\"The ID of the object\"\"\"\n  node(id: ID!): Node\n  information(name: String, value: String, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): InformationCountableConnection\n  systems(calculator: String, calculatorParameters: String, cell: Float, charge: Float, charges: Float, constraints: String, ctime: Float, data: String, dipole: Float, energy: Float, fmax: Float, forces: Float, freeEnergy: Float, id: Int, initialCharges: Float, initialMagmoms: Float, keyValuePairs: String, magmom: Float, magmoms: Float, mass: Float, masses: Float, momenta: Float, mtime: Float, natoms: Int, numbers: Int, pbc: Int, positions: Float, smax: Float, stress: Float, tags: Float, uniqueId: String, username: String, volume: Float, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): SystemCountableConnection\n  species(id: Int, n: Int, z: Int, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): SpeciesCountableConnection\n  key(id: Int, key: String, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): KeyCountableConnection\n  textKeys(id: Int, key: String, value: String, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): TextKeyValueCountableConnection\n  numberKeys(id: Int, key: String, value: Float, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): NumberKeyValueCountableConnection\n  reactions(activationEnergy: Float, chemicalComposition: String, coverages: String, dftCode: String, dftFunctional: String, facet: String, id: Int, products: String, pubId: String, reactants: String, reactionEnergy: Float, sites: String, surfaceComposition: String, textsearch: String, username: String, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): ReactionCountableConnection\n  reactionSystems(aseId: String, energyCorrection: Float, id: Int, name: String, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): ReactionSystemCountableConnection\n  publications(authors: String, doi: String, id: Int, journal: String, number: String, pages: String, pubId: String, publisher: String, pubtextsearch: String, stime: Float, tags: String, title: String, volume: String, year: Int, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): PublicationCountableConnection\n  logs(aseId: String, logfile: String, distinct: Boolean, op: String, search: String, jsonkey: String, order: String, before: String, after: String, first: Int, last: Int): LogCountableConnection\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n}\n\ntype InformationCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [InformationCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"\nThe Relay compliant `PageInfo` type, containing data necessary to paginate this connection.\n\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\n\"\"\"A Relay edge containing a `InformationCountable` and its cursor.\"\"\"\ntype InformationCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Information\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype Information implements Node {\n  name: String!\n  value: String\n\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n}\n\ntype SystemCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [SystemCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"A Relay edge containing a `SystemCountable` and its cursor.\"\"\"\ntype SystemCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: System\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype System implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n  uniqueId: String\n  ctime: Float\n  mtime: Float\n  username: String\n  numbers: [Int]\n  positions: [[Float]]\n  cell: [[Float]]\n  pbc: Int\n  initialMagmoms: [Float]\n  initialCharges: [Float]\n  masses: [Float]\n  tags: [Float]\n  momenta: [String]\n  constraints: String\n  calculator: String\n  calculatorParameters: String\n  energy: Float\n  freeEnergy: Float\n  forces: [[Float]]\n  stress: [Float]\n  dipole: [Float]\n  magmoms: [Float]\n  magmom: Float\n  charges: [Float]\n  keyValuePairs: JSONString\n  data: JSONString\n  natoms: Int\n  fmax: Float\n  smax: Float\n  volume: Float\n  mass: Float\n  charge: Float\n  Formula: String\n  Cifdata: String\n  Trajdata: String\n  Pbc: String\n  Ctime: String\n  Mtime: String\n  Adsorbate: String\n  Reaction: String\n  Username: String\n  Substrate: String\n  Facet: String\n  DftCode: String\n  DftFunctional: String\n  keys(before: String, after: String, first: Int, last: Int): KeyCountableConnection\n  species(before: String, after: String, first: Int, last: Int): SpeciesCountableConnection\n  textKeys(before: String, after: String, first: Int, last: Int): TextKeyValueCountableConnection\n  numberKeys(before: String, after: String, first: Int, last: Int): NumberKeyValueCountableConnection\n  reactionSystems(before: String, after: String, first: Int, last: Int): ReactionSystemCountableConnection\n  log: [Log]\n  publication: [Publication]\n  reactions(before: String, after: String, first: Int, last: Int): ReactionCountableConnection\n  InputFile(format: String): String\n}\n\n\"\"\"\nAllows use of a JSON String for input / output from the GraphQL schema.\n\nUse of this type is *not recommended* as you lose the benefits of having a defined, static\nschema (one of the key benefits of GraphQL).\n\"\"\"\nscalar JSONString\n\ntype KeyCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [KeyCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"A Relay edge containing a `KeyCountable` and its cursor.\"\"\"\ntype KeyCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Key\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype Key implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n  key: String!\n  systems: System\n}\n\ntype SpeciesCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [SpeciesCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"A Relay edge containing a `SpeciesCountable` and its cursor.\"\"\"\ntype SpeciesCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Species\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype Species implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n  z: ID!\n  n: ID!\n  systems: System\n}\n\ntype TextKeyValueCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [TextKeyValueCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"A Relay edge containing a `TextKeyValueCountable` and its cursor.\"\"\"\ntype TextKeyValueCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: TextKeyValue\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype TextKeyValue implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n  key: String!\n  value: String\n  systems: System\n}\n\ntype NumberKeyValueCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [NumberKeyValueCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"A Relay edge containing a `NumberKeyValueCountable` and its cursor.\"\"\"\ntype NumberKeyValueCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: NumberKeyValue\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype NumberKeyValue implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n  key: String!\n  value: Float\n  systems: System\n}\n\ntype ReactionSystemCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [ReactionSystemCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"A Relay edge containing a `ReactionSystemCountable` and its cursor.\"\"\"\ntype ReactionSystemCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: ReactionSystem\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype ReactionSystem implements Node {\n  name: String\n  energyCorrection: Float\n  aseId: String!\n\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n  reactions: Reaction\n  systems: System\n}\n\ntype Reaction implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n  chemicalComposition: String\n  surfaceComposition: String\n  facet: String\n  sites: JSONString\n  coverages: JSONString\n  reactants: JSONString\n  products: JSONString\n  reactionEnergy: Float\n  activationEnergy: Float\n  dftCode: String\n  dftFunctional: String\n  username: String\n  pubId: String\n  textsearch: JSONString\n  Equation: String\n  reactionSystems: [ReactionSystem]\n  systems: [System]\n  publication: Publication\n}\n\ntype Publication implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n  pubId: String\n  title: String\n  authors: JSONString\n  journal: String\n  volume: String\n  number: String\n  pages: String\n  year: Int\n  publisher: String\n  doi: String\n  tags: JSONString\n  pubtextsearch: JSONString\n  stime: Float\n  Stime: String\n  reactions: [Reaction]\n  systems: [System]\n}\n\ntype Log implements Node {\n  aseId: String!\n  logfile: String\n  Logtext: String\n  systems: System\n\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n}\n\ntype ReactionCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [ReactionCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"A Relay edge containing a `ReactionCountable` and its cursor.\"\"\"\ntype ReactionCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Reaction\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype PublicationCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [PublicationCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"A Relay edge containing a `PublicationCountable` and its cursor.\"\"\"\ntype PublicationCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Publication\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype LogCountableConnection {\n  \"\"\"Pagination data for this connection.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Contains the nodes in this connection.\"\"\"\n  edges: [LogCountableEdge]!\n  totalCount: Int\n}\n\n\"\"\"A Relay edge containing a `LogCountable` and its cursor.\"\"\"\ntype LogCountableEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Log\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}",
    "Contentful": "type Query {\n  asset(id: String!, preview: Boolean, locale: String): Asset\n  assetCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: AssetFilter, order: [AssetOrder]): AssetCollection\n  lesson(id: String!, preview: Boolean, locale: String): Lesson\n  lessonCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LessonFilter, order: [LessonOrder]): LessonCollection\n  lessonImage(id: String!, preview: Boolean, locale: String): LessonImage\n  lessonImageCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LessonImageFilter, order: [LessonImageOrder]): LessonImageCollection\n  lessonCopy(id: String!, preview: Boolean, locale: String): LessonCopy\n  lessonCopyCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LessonCopyFilter, order: [LessonCopyOrder]): LessonCopyCollection\n  layout(id: String!, preview: Boolean, locale: String): Layout\n  layoutCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LayoutFilter, order: [LayoutOrder]): LayoutCollection\n  lessonCodeSnippets(id: String!, preview: Boolean, locale: String): LessonCodeSnippets\n  lessonCodeSnippetsCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LessonCodeSnippetsFilter, order: [LessonCodeSnippetsOrder]): LessonCodeSnippetsCollection\n  course(id: String!, preview: Boolean, locale: String): Course\n  courseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: CourseFilter, order: [CourseOrder]): CourseCollection\n  layoutCopy(id: String!, preview: Boolean, locale: String): LayoutCopy\n  layoutCopyCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LayoutCopyFilter, order: [LayoutCopyOrder]): LayoutCopyCollection\n  layoutHeroImage(id: String!, preview: Boolean, locale: String): LayoutHeroImage\n  layoutHeroImageCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LayoutHeroImageFilter, order: [LayoutHeroImageOrder]): LayoutHeroImageCollection\n  layoutHighlightedCourse(id: String!, preview: Boolean, locale: String): LayoutHighlightedCourse\n  layoutHighlightedCourseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: LayoutHighlightedCourseFilter, order: [LayoutHighlightedCourseOrder]): LayoutHighlightedCourseCollection\n  category(id: String!, preview: Boolean, locale: String): Category\n  categoryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: CategoryFilter, order: [CategoryOrder]): CategoryCollection\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String, where: EntryFilter, order: [EntryOrder]): EntryCollection\n}\n\n\"\"\"Represents a binary file in a space. An asset can be any file type.\"\"\"\ntype Asset {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  title: String\n  description: String\n  contentType: String\n  fileName: String\n  size: Int\n  url(transform: ImageTransformOptions): String\n  width: Int\n  height: Int\n  linkedFrom(allowedLocales: [String]): AssetLinkingCollections\n}\n\ntype Sys {\n  id: String!\n  spaceId: String!\n  environmentId: String!\n  publishedAt: DateTime\n  firstPublishedAt: DateTime\n  publishedVersion: Int\n}\n\n\"\"\"\nA date-time string at UTC, such as 2007-12-03T10:15:30Z,\n    compliant with the 'date-time' format outlined in section 5.6 of\n    the RFC 3339 profile of the ISO 8601 standard for representation\n    of dates and times using the Gregorian calendar.\n\"\"\"\nscalar DateTime\n\ntype ContentfulMetadata {\n  tags: [ContentfulTag]!\n}\n\n\"\"\"\nRepresents a tag entity for finding and organizing content easily.\n    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags\n\"\"\"\ntype ContentfulTag {\n  id: String\n  name: String\n}\n\ninput ImageTransformOptions {\n  \"\"\"Desired width in pixels. Defaults to the original image width.\"\"\"\n  width: Dimension\n\n  \"\"\"Desired height in pixels. Defaults to the original image height.\"\"\"\n  height: Dimension\n\n  \"\"\"\n  Desired quality of the image in percents.\n          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.\n  \"\"\"\n  quality: Quality\n\n  \"\"\"\n  Desired corner radius in pixels.\n          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).\n          Defaults to `0`. Uses desired background color as padding color,\n          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.\n  \"\"\"\n  cornerRadius: Int\n\n  \"\"\"Desired resize strategy. Defaults to `FIT`.\"\"\"\n  resizeStrategy: ImageResizeStrategy\n\n  \"\"\"Desired resize focus area. Defaults to `CENTER`.\"\"\"\n  resizeFocus: ImageResizeFocus\n\n  \"\"\"\n  Desired background color, used with corner radius or `PAD` resize strategy.\n          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).\n  \"\"\"\n  backgroundColor: HexColor\n\n  \"\"\"Desired image format. Defaults to the original image format.\"\"\"\n  format: ImageFormat\n}\n\n\"\"\"\nThe 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.\n\"\"\"\nscalar Dimension\n\n\"\"\"\nThe 'Quality' type represents quality as whole numeric values between `1` and `100`.\n\"\"\"\nscalar Quality\n\nenum ImageResizeStrategy {\n  \"\"\"Resizes the image to fit into the specified dimensions.\"\"\"\n  FIT\n\n  \"\"\"\n  Resizes the image to the specified dimensions, padding the image if needed.\n          Uses desired background color as padding color.\n  \"\"\"\n  PAD\n\n  \"\"\"\n  Resizes the image to the specified dimensions, cropping the image if needed.\n  \"\"\"\n  FILL\n\n  \"\"\"\n  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.\n  \"\"\"\n  SCALE\n\n  \"\"\"\n  Crops a part of the original image to fit into the specified dimensions.\n  \"\"\"\n  CROP\n\n  \"\"\"Creates a thumbnail from the image.\"\"\"\n  THUMB\n}\n\nenum ImageResizeFocus {\n  \"\"\"Focus the resizing on the center.\"\"\"\n  CENTER\n\n  \"\"\"Focus the resizing on the top.\"\"\"\n  TOP\n\n  \"\"\"Focus the resizing on the top right.\"\"\"\n  TOP_RIGHT\n\n  \"\"\"Focus the resizing on the right.\"\"\"\n  RIGHT\n\n  \"\"\"Focus the resizing on the bottom right.\"\"\"\n  BOTTOM_RIGHT\n\n  \"\"\"Focus the resizing on the bottom.\"\"\"\n  BOTTOM\n\n  \"\"\"Focus the resizing on the bottom left.\"\"\"\n  BOTTOM_LEFT\n\n  \"\"\"Focus the resizing on the left.\"\"\"\n  LEFT\n\n  \"\"\"Focus the resizing on the top left.\"\"\"\n  TOP_LEFT\n\n  \"\"\"Focus the resizing on the largest face.\"\"\"\n  FACE\n\n  \"\"\"Focus the resizing on the area containing all the faces.\"\"\"\n  FACES\n}\n\n\"\"\"The 'HexColor' type represents color in `rgb:ffffff` string format.\"\"\"\nscalar HexColor\n\nenum ImageFormat {\n  \"\"\"JPG image format.\"\"\"\n  JPG\n\n  \"\"\"\n  Progressive JPG format stores multiple passes of an image in progressively higher detail.\n          When a progressive image is loading, the viewer will first see a lower quality pixelated version which\n          will gradually improve in detail, until the image is fully downloaded. This is to display an image as\n          early as possible to make the layout look as designed.\n  \"\"\"\n  JPG_PROGRESSIVE\n\n  \"\"\"PNG image format\"\"\"\n  PNG\n\n  \"\"\"\n  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.\n          The 8-bit PNG format is mostly used for simple images, such as icons or logos.\n  \"\"\"\n  PNG8\n\n  \"\"\"WebP image format.\"\"\"\n  WEBP\n}\n\ntype AssetLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  lessonImageCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonImageCollection\n  courseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseCollection\n  layoutHeroImageCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutHeroImageCollection\n}\n\ntype EntryCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [Entry]!\n}\n\ninterface Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n}\n\ntype LessonImageCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [LessonImage]!\n}\n\n\"\"\"\nAn image to be used as a module in a lesson. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/lessonImage)\n\"\"\"\ntype LessonImage implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): LessonImageLinkingCollections\n  title(locale: String): String\n  image(preview: Boolean, locale: String): Asset\n  caption(locale: String): String\n}\n\ntype LessonImageLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  lessonCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonCollection\n}\n\ntype LessonCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [Lesson]!\n}\n\n\"\"\"\nA educational lesson, representing one section of a course. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/lesson)\n\"\"\"\ntype Lesson implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): LessonLinkingCollections\n  title(locale: String): String\n  slug(locale: String): String\n  modulesCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonModulesCollection\n  enabled(locale: String): Boolean\n  publishDate(locale: String): DateTime\n}\n\ntype LessonLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  courseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseCollection\n}\n\ntype CourseCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [Course]!\n}\n\n\"\"\"\nA series of lessons designed to teach sets of concepts that enable students to master Contentful. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/course)\n\"\"\"\ntype Course implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): CourseLinkingCollections\n  title(locale: String): String\n  slug(locale: String): String\n  image(preview: Boolean, locale: String): Asset\n  shortDescription(locale: String): String\n  description(locale: String): String\n  duration(locale: String): Int\n  skillLevel(locale: String): String\n  lessonsCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseLessonsCollection\n  categoriesCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseCategoriesCollection\n}\n\ntype CourseLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  layoutHighlightedCourseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutHighlightedCourseCollection\n}\n\ntype LayoutHighlightedCourseCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [LayoutHighlightedCourse]!\n}\n\n\"\"\"\nA curated selection of highlighted courses. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/layoutHighlightedCourse)\n\"\"\"\ntype LayoutHighlightedCourse implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): LayoutHighlightedCourseLinkingCollections\n  title(locale: String): String\n  course(preview: Boolean, locale: String): Course\n}\n\ntype LayoutHighlightedCourseLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  layoutCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutCollection\n}\n\ntype LayoutCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [Layout]!\n}\n\n\"\"\"\nA page consisting of freely configurable and rearrangeable content modules. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/layout)\n\"\"\"\ntype Layout implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): LayoutLinkingCollections\n  title(locale: String): String\n  slug(locale: String): String\n  contentModulesCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutContentModulesCollection\n}\n\ntype LayoutLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n}\n\ntype LayoutContentModulesCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [LayoutContentModulesItem]!\n}\n\nunion LayoutContentModulesItem = LayoutCopy | LayoutHeroImage | LayoutHighlightedCourse\n\n\"\"\"\nA block of text with a headline and a call to action to be shown on the landing page. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/layoutCopy)\n\"\"\"\ntype LayoutCopy implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): LayoutCopyLinkingCollections\n  title(locale: String): String\n  headline(locale: String): String\n  copy(locale: String): String\n  ctaTitle(locale: String): String\n  ctaLink(locale: String): String\n  visualStyle(locale: String): String\n}\n\ntype LayoutCopyLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  layoutCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutCollection\n}\n\n\"\"\"\nA hero image and header text. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/layoutHeroImage)\n\"\"\"\ntype LayoutHeroImage implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): LayoutHeroImageLinkingCollections\n  title(locale: String): String\n  headline(locale: String): String\n  backgroundImage(preview: Boolean, locale: String): Asset\n}\n\ntype LayoutHeroImageLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  layoutCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LayoutCollection\n}\n\ntype CourseLessonsCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [Lesson]!\n}\n\ntype CourseCategoriesCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [Category]!\n}\n\n\"\"\"\nCategories can be applied to Courses and Lessons. Assigning Multiple categories is also possible. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/category)\n\"\"\"\ntype Category implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): CategoryLinkingCollections\n  title(locale: String): String\n  slug(locale: String): String\n}\n\ntype CategoryLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  courseCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): CourseCollection\n}\n\ntype LessonModulesCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [LessonModulesItem]!\n}\n\nunion LessonModulesItem = LessonCodeSnippets | LessonCopy | LessonImage\n\n\"\"\"\nA code snippet module supporting all platforms to be used in a lesson. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/lessonCodeSnippets)\n\"\"\"\ntype LessonCodeSnippets implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): LessonCodeSnippetsLinkingCollections\n  title(locale: String): String\n  curl(locale: String): String\n  dotNet(locale: String): String\n  javascript(locale: String): String\n  java(locale: String): String\n  javaAndroid(locale: String): String\n  php(locale: String): String\n  python(locale: String): String\n  ruby(locale: String): String\n  swift(locale: String): String\n}\n\ntype LessonCodeSnippetsLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  lessonCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonCollection\n}\n\n\"\"\"\nA markdown module to be used in a lesson. [See type definition](https://app.contentful.com/spaces/f8bqpb154z8p/content_types/lessonCopy)\n\"\"\"\ntype LessonCopy implements Entry {\n  sys: Sys!\n  contentfulMetadata: ContentfulMetadata!\n  linkedFrom(allowedLocales: [String]): LessonCopyLinkingCollections\n  title(locale: String): String\n  copy(locale: String): String\n}\n\ntype LessonCopyLinkingCollections {\n  entryCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): EntryCollection\n  lessonCollection(skip: Int = 0, limit: Int = 100, preview: Boolean, locale: String): LessonCollection\n}\n\ntype LayoutHeroImageCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [LayoutHeroImage]!\n}\n\ntype AssetCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [Asset]!\n}\n\ninput AssetFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  description_exists: Boolean\n  description: String\n  description_not: String\n  description_in: [String]\n  description_not_in: [String]\n  description_contains: String\n  description_not_contains: String\n  url_exists: Boolean\n  url: String\n  url_not: String\n  url_in: [String]\n  url_not_in: [String]\n  url_contains: String\n  url_not_contains: String\n  size_exists: Boolean\n  size: Int\n  size_not: Int\n  size_in: [Int]\n  size_not_in: [Int]\n  size_gt: Int\n  size_gte: Int\n  size_lt: Int\n  size_lte: Int\n  contentType_exists: Boolean\n  contentType: String\n  contentType_not: String\n  contentType_in: [String]\n  contentType_not_in: [String]\n  contentType_contains: String\n  contentType_not_contains: String\n  fileName_exists: Boolean\n  fileName: String\n  fileName_not: String\n  fileName_in: [String]\n  fileName_not_in: [String]\n  fileName_contains: String\n  fileName_not_contains: String\n  width_exists: Boolean\n  width: Int\n  width_not: Int\n  width_in: [Int]\n  width_not_in: [Int]\n  width_gt: Int\n  width_gte: Int\n  width_lt: Int\n  width_lte: Int\n  height_exists: Boolean\n  height: Int\n  height_not: Int\n  height_in: [Int]\n  height_not_in: [Int]\n  height_gt: Int\n  height_gte: Int\n  height_lt: Int\n  height_lte: Int\n  OR: [AssetFilter]\n  AND: [AssetFilter]\n}\n\ninput SysFilter {\n  id_exists: Boolean\n  id: String\n  id_not: String\n  id_in: [String]\n  id_not_in: [String]\n  id_contains: String\n  id_not_contains: String\n  publishedAt_exists: Boolean\n  publishedAt: DateTime\n  publishedAt_not: DateTime\n  publishedAt_in: [DateTime]\n  publishedAt_not_in: [DateTime]\n  publishedAt_gt: DateTime\n  publishedAt_gte: DateTime\n  publishedAt_lt: DateTime\n  publishedAt_lte: DateTime\n  firstPublishedAt_exists: Boolean\n  firstPublishedAt: DateTime\n  firstPublishedAt_not: DateTime\n  firstPublishedAt_in: [DateTime]\n  firstPublishedAt_not_in: [DateTime]\n  firstPublishedAt_gt: DateTime\n  firstPublishedAt_gte: DateTime\n  firstPublishedAt_lt: DateTime\n  firstPublishedAt_lte: DateTime\n  publishedVersion_exists: Boolean\n  publishedVersion: Float\n  publishedVersion_not: Float\n  publishedVersion_in: [Float]\n  publishedVersion_not_in: [Float]\n  publishedVersion_gt: Float\n  publishedVersion_gte: Float\n  publishedVersion_lt: Float\n  publishedVersion_lte: Float\n}\n\ninput ContentfulMetadataFilter {\n  tags_exists: Boolean\n  tags: ContentfulMetadataTagsFilter\n}\n\ninput ContentfulMetadataTagsFilter {\n  id_contains_all: [String]\n  id_contains_some: [String]\n  id_contains_none: [String]\n}\n\nenum AssetOrder {\n  url_ASC\n  url_DESC\n  size_ASC\n  size_DESC\n  contentType_ASC\n  contentType_DESC\n  fileName_ASC\n  fileName_DESC\n  width_ASC\n  width_DESC\n  height_ASC\n  height_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ninput LessonFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  slug_exists: Boolean\n  slug: String\n  slug_not: String\n  slug_in: [String]\n  slug_not_in: [String]\n  slug_contains: String\n  slug_not_contains: String\n  modulesCollection_exists: Boolean\n  enabled_exists: Boolean\n  enabled: Boolean\n  enabled_not: Boolean\n  publishDate_exists: Boolean\n  publishDate: DateTime\n  publishDate_not: DateTime\n  publishDate_in: [DateTime]\n  publishDate_not_in: [DateTime]\n  publishDate_gt: DateTime\n  publishDate_gte: DateTime\n  publishDate_lt: DateTime\n  publishDate_lte: DateTime\n  OR: [LessonFilter]\n  AND: [LessonFilter]\n}\n\nenum LessonOrder {\n  title_ASC\n  title_DESC\n  slug_ASC\n  slug_DESC\n  enabled_ASC\n  enabled_DESC\n  publishDate_ASC\n  publishDate_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ninput LessonImageFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  image_exists: Boolean\n  caption_exists: Boolean\n  caption: String\n  caption_not: String\n  caption_in: [String]\n  caption_not_in: [String]\n  caption_contains: String\n  caption_not_contains: String\n  OR: [LessonImageFilter]\n  AND: [LessonImageFilter]\n}\n\nenum LessonImageOrder {\n  title_ASC\n  title_DESC\n  caption_ASC\n  caption_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ntype LessonCopyCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [LessonCopy]!\n}\n\ninput LessonCopyFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  copy_exists: Boolean\n  copy: String\n  copy_not: String\n  copy_in: [String]\n  copy_not_in: [String]\n  copy_contains: String\n  copy_not_contains: String\n  OR: [LessonCopyFilter]\n  AND: [LessonCopyFilter]\n}\n\nenum LessonCopyOrder {\n  title_ASC\n  title_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ninput LayoutFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  slug_exists: Boolean\n  slug: String\n  slug_not: String\n  slug_in: [String]\n  slug_not_in: [String]\n  slug_contains: String\n  slug_not_contains: String\n  contentModulesCollection_exists: Boolean\n  OR: [LayoutFilter]\n  AND: [LayoutFilter]\n}\n\nenum LayoutOrder {\n  title_ASC\n  title_DESC\n  slug_ASC\n  slug_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ntype LessonCodeSnippetsCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [LessonCodeSnippets]!\n}\n\ninput LessonCodeSnippetsFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  curl_exists: Boolean\n  curl: String\n  curl_not: String\n  curl_in: [String]\n  curl_not_in: [String]\n  curl_contains: String\n  curl_not_contains: String\n  dotNet_exists: Boolean\n  dotNet: String\n  dotNet_not: String\n  dotNet_in: [String]\n  dotNet_not_in: [String]\n  dotNet_contains: String\n  dotNet_not_contains: String\n  javascript_exists: Boolean\n  javascript: String\n  javascript_not: String\n  javascript_in: [String]\n  javascript_not_in: [String]\n  javascript_contains: String\n  javascript_not_contains: String\n  java_exists: Boolean\n  java: String\n  java_not: String\n  java_in: [String]\n  java_not_in: [String]\n  java_contains: String\n  java_not_contains: String\n  javaAndroid_exists: Boolean\n  javaAndroid: String\n  javaAndroid_not: String\n  javaAndroid_in: [String]\n  javaAndroid_not_in: [String]\n  javaAndroid_contains: String\n  javaAndroid_not_contains: String\n  php_exists: Boolean\n  php: String\n  php_not: String\n  php_in: [String]\n  php_not_in: [String]\n  php_contains: String\n  php_not_contains: String\n  python_exists: Boolean\n  python: String\n  python_not: String\n  python_in: [String]\n  python_not_in: [String]\n  python_contains: String\n  python_not_contains: String\n  ruby_exists: Boolean\n  ruby: String\n  ruby_not: String\n  ruby_in: [String]\n  ruby_not_in: [String]\n  ruby_contains: String\n  ruby_not_contains: String\n  swift_exists: Boolean\n  swift: String\n  swift_not: String\n  swift_in: [String]\n  swift_not_in: [String]\n  swift_contains: String\n  swift_not_contains: String\n  OR: [LessonCodeSnippetsFilter]\n  AND: [LessonCodeSnippetsFilter]\n}\n\nenum LessonCodeSnippetsOrder {\n  title_ASC\n  title_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ninput CourseFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  slug_exists: Boolean\n  slug: String\n  slug_not: String\n  slug_in: [String]\n  slug_not_in: [String]\n  slug_contains: String\n  slug_not_contains: String\n  image_exists: Boolean\n  shortDescription_exists: Boolean\n  shortDescription: String\n  shortDescription_not: String\n  shortDescription_in: [String]\n  shortDescription_not_in: [String]\n  shortDescription_contains: String\n  shortDescription_not_contains: String\n  description_exists: Boolean\n  description: String\n  description_not: String\n  description_in: [String]\n  description_not_in: [String]\n  description_contains: String\n  description_not_contains: String\n  duration_exists: Boolean\n  duration: Int\n  duration_not: Int\n  duration_in: [Int]\n  duration_not_in: [Int]\n  duration_gt: Int\n  duration_gte: Int\n  duration_lt: Int\n  duration_lte: Int\n  skillLevel_exists: Boolean\n  skillLevel: String\n  skillLevel_not: String\n  skillLevel_in: [String]\n  skillLevel_not_in: [String]\n  skillLevel_contains: String\n  skillLevel_not_contains: String\n  lessonsCollection_exists: Boolean\n  categoriesCollection_exists: Boolean\n  OR: [CourseFilter]\n  AND: [CourseFilter]\n}\n\nenum CourseOrder {\n  title_ASC\n  title_DESC\n  slug_ASC\n  slug_DESC\n  shortDescription_ASC\n  shortDescription_DESC\n  duration_ASC\n  duration_DESC\n  skillLevel_ASC\n  skillLevel_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ntype LayoutCopyCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [LayoutCopy]!\n}\n\ninput LayoutCopyFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  headline_exists: Boolean\n  headline: String\n  headline_not: String\n  headline_in: [String]\n  headline_not_in: [String]\n  headline_contains: String\n  headline_not_contains: String\n  copy_exists: Boolean\n  copy: String\n  copy_not: String\n  copy_in: [String]\n  copy_not_in: [String]\n  copy_contains: String\n  copy_not_contains: String\n  ctaTitle_exists: Boolean\n  ctaTitle: String\n  ctaTitle_not: String\n  ctaTitle_in: [String]\n  ctaTitle_not_in: [String]\n  ctaTitle_contains: String\n  ctaTitle_not_contains: String\n  ctaLink_exists: Boolean\n  ctaLink: String\n  ctaLink_not: String\n  ctaLink_in: [String]\n  ctaLink_not_in: [String]\n  ctaLink_contains: String\n  ctaLink_not_contains: String\n  visualStyle_exists: Boolean\n  visualStyle: String\n  visualStyle_not: String\n  visualStyle_in: [String]\n  visualStyle_not_in: [String]\n  visualStyle_contains: String\n  visualStyle_not_contains: String\n  OR: [LayoutCopyFilter]\n  AND: [LayoutCopyFilter]\n}\n\nenum LayoutCopyOrder {\n  title_ASC\n  title_DESC\n  headline_ASC\n  headline_DESC\n  ctaTitle_ASC\n  ctaTitle_DESC\n  ctaLink_ASC\n  ctaLink_DESC\n  visualStyle_ASC\n  visualStyle_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ninput LayoutHeroImageFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  headline_exists: Boolean\n  headline: String\n  headline_not: String\n  headline_in: [String]\n  headline_not_in: [String]\n  headline_contains: String\n  headline_not_contains: String\n  backgroundImage_exists: Boolean\n  OR: [LayoutHeroImageFilter]\n  AND: [LayoutHeroImageFilter]\n}\n\nenum LayoutHeroImageOrder {\n  title_ASC\n  title_DESC\n  headline_ASC\n  headline_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ninput LayoutHighlightedCourseFilter {\n  course: cfCourseNestedFilter\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  course_exists: Boolean\n  OR: [LayoutHighlightedCourseFilter]\n  AND: [LayoutHighlightedCourseFilter]\n}\n\ninput cfCourseNestedFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  slug_exists: Boolean\n  slug: String\n  slug_not: String\n  slug_in: [String]\n  slug_not_in: [String]\n  slug_contains: String\n  slug_not_contains: String\n  image_exists: Boolean\n  shortDescription_exists: Boolean\n  shortDescription: String\n  shortDescription_not: String\n  shortDescription_in: [String]\n  shortDescription_not_in: [String]\n  shortDescription_contains: String\n  shortDescription_not_contains: String\n  description_exists: Boolean\n  description: String\n  description_not: String\n  description_in: [String]\n  description_not_in: [String]\n  description_contains: String\n  description_not_contains: String\n  duration_exists: Boolean\n  duration: Int\n  duration_not: Int\n  duration_in: [Int]\n  duration_not_in: [Int]\n  duration_gt: Int\n  duration_gte: Int\n  duration_lt: Int\n  duration_lte: Int\n  skillLevel_exists: Boolean\n  skillLevel: String\n  skillLevel_not: String\n  skillLevel_in: [String]\n  skillLevel_not_in: [String]\n  skillLevel_contains: String\n  skillLevel_not_contains: String\n  lessonsCollection_exists: Boolean\n  categoriesCollection_exists: Boolean\n  OR: [cfCourseNestedFilter]\n  AND: [cfCourseNestedFilter]\n}\n\nenum LayoutHighlightedCourseOrder {\n  title_ASC\n  title_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ntype CategoryCollection {\n  total: Int!\n  skip: Int!\n  limit: Int!\n  items: [Category]!\n}\n\ninput CategoryFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  title_exists: Boolean\n  title: String\n  title_not: String\n  title_in: [String]\n  title_not_in: [String]\n  title_contains: String\n  title_not_contains: String\n  slug_exists: Boolean\n  slug: String\n  slug_not: String\n  slug_in: [String]\n  slug_not_in: [String]\n  slug_contains: String\n  slug_not_contains: String\n  OR: [CategoryFilter]\n  AND: [CategoryFilter]\n}\n\nenum CategoryOrder {\n  title_ASC\n  title_DESC\n  slug_ASC\n  slug_DESC\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}\n\ninput EntryFilter {\n  sys: SysFilter\n  contentfulMetadata: ContentfulMetadataFilter\n  OR: [EntryFilter]\n  AND: [EntryFilter]\n}\n\nenum EntryOrder {\n  sys_id_ASC\n  sys_id_DESC\n  sys_publishedAt_ASC\n  sys_publishedAt_DESC\n  sys_firstPublishedAt_ASC\n  sys_firstPublishedAt_DESC\n  sys_publishedVersion_ASC\n  sys_publishedVersion_DESC\n}",
    "Countries": "\"\"\"\"\"\"\ndirective @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE\n\n\"\"\"\"\"\"\ntype Query {\n  \"\"\"\"\"\"\n  continents(filter: ContinentFilterInput): [Continent!]!\n\n  \"\"\"\"\"\"\n  continent(code: ID!): Continent\n\n  \"\"\"\"\"\"\n  countries(filter: CountryFilterInput): [Country!]!\n\n  \"\"\"\"\"\"\n  country(code: ID!): Country\n\n  \"\"\"\"\"\"\n  languages(filter: LanguageFilterInput): [Language!]!\n\n  \"\"\"\"\"\"\n  language(code: ID!): Language\n}\n\n\"\"\"\"\"\"\ninput ContinentFilterInput {\n  \"\"\"\"\"\"\n  code: StringQueryOperatorInput\n}\n\n\"\"\"\"\"\"\ninput StringQueryOperatorInput {\n  \"\"\"\"\"\"\n  eq: String\n\n  \"\"\"\"\"\"\n  ne: String\n\n  \"\"\"\"\"\"\n  in: [String]\n\n  \"\"\"\"\"\"\n  nin: [String]\n\n  \"\"\"\"\"\"\n  regex: String\n\n  \"\"\"\"\"\"\n  glob: String\n}\n\n\"\"\"\"\"\"\ntype Continent {\n  \"\"\"\"\"\"\n  code: ID!\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  countries: [Country!]!\n}\n\n\"\"\"\"\"\"\ntype Country {\n  \"\"\"\"\"\"\n  code: ID!\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  native: String!\n\n  \"\"\"\"\"\"\n  phone: String!\n\n  \"\"\"\"\"\"\n  continent: Continent!\n\n  \"\"\"\"\"\"\n  capital: String\n\n  \"\"\"\"\"\"\n  currency: String\n\n  \"\"\"\"\"\"\n  languages: [Language!]!\n\n  \"\"\"\"\"\"\n  emoji: String!\n\n  \"\"\"\"\"\"\n  emojiU: String!\n\n  \"\"\"\"\"\"\n  states: [State!]!\n}\n\n\"\"\"\"\"\"\ntype Language {\n  \"\"\"\"\"\"\n  code: ID!\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  native: String\n\n  \"\"\"\"\"\"\n  rtl: Boolean!\n}\n\n\"\"\"\"\"\"\ntype State {\n  \"\"\"\"\"\"\n  code: String\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  country: Country!\n}\n\n\"\"\"\"\"\"\ninput CountryFilterInput {\n  \"\"\"\"\"\"\n  code: StringQueryOperatorInput\n\n  \"\"\"\"\"\"\n  currency: StringQueryOperatorInput\n\n  \"\"\"\"\"\"\n  continent: StringQueryOperatorInput\n}\n\n\"\"\"\"\"\"\ninput LanguageFilterInput {\n  \"\"\"\"\"\"\n  code: StringQueryOperatorInput\n}\n\n\"\"\"\"\"\"\nenum CacheControlScope {\n  \"\"\"\"\"\"\n  PUBLIC\n\n  \"\"\"\"\"\"\n  PRIVATE\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload",
    "Countries v2": "directive @cypher(statement: String) on FIELD_DEFINITION\n\ndirective @relation(name: String, direction: _RelationDirections, from: String, to: String) on FIELD_DEFINITION | OBJECT\n\ndirective @additionalLabels(labels: [String]) on OBJECT\n\ndirective @MutationMeta(relationship: String, from: String, to: String) on FIELD_DEFINITION\n\ndirective @neo4j_ignore on FIELD_DEFINITION\n\nenum AreaUnit {\n  SQUARE_KILOMETERS\n  SQUARE_METERS\n  SQUARE_MILES\n}\n\nenum _CountryOrdering {\n  _id_asc\n  _id_desc\n  alpha2Code_asc\n  alpha2Code_desc\n  alpha3Code_asc\n  alpha3Code_desc\n  area_asc\n  area_desc\n  capital_asc\n  capital_desc\n  populationDensity_asc\n  populationDensity_desc\n  demonym_asc\n  demonym_desc\n  gini_asc\n  gini_desc\n  name_asc\n  name_desc\n  nativeName_asc\n  nativeName_desc\n  numericCode_asc\n  numericCode_desc\n  population_asc\n  population_desc\n}\n\ninput _CountryFilter {\n  AND: [_CountryFilter!]\n  OR: [_CountryFilter!]\n  alpha2Code: String\n  alpha2Code_not: String\n  alpha2Code_in: [String!]\n  alpha2Code_not_in: [String!]\n  alpha2Code_contains: String\n  alpha2Code_not_contains: String\n  alpha2Code_starts_with: String\n  alpha2Code_not_starts_with: String\n  alpha2Code_ends_with: String\n  alpha2Code_not_ends_with: String\n  alpha3Code: String\n  alpha3Code_not: String\n  alpha3Code_in: [String!]\n  alpha3Code_not_in: [String!]\n  alpha3Code_contains: String\n  alpha3Code_not_contains: String\n  alpha3Code_starts_with: String\n  alpha3Code_not_starts_with: String\n  alpha3Code_ends_with: String\n  alpha3Code_not_ends_with: String\n  area: Float\n  area_not: Float\n  area_in: [Float!]\n  area_not_in: [Float!]\n  area_lt: Float\n  area_lte: Float\n  area_gt: Float\n  area_gte: Float\n  capital: String\n  capital_not: String\n  capital_in: [String!]\n  capital_not_in: [String!]\n  capital_contains: String\n  capital_not_contains: String\n  capital_starts_with: String\n  capital_not_starts_with: String\n  capital_ends_with: String\n  capital_not_ends_with: String\n  demonym: String\n  demonym_not: String\n  demonym_in: [String!]\n  demonym_not_in: [String!]\n  demonym_contains: String\n  demonym_not_contains: String\n  demonym_starts_with: String\n  demonym_not_starts_with: String\n  demonym_ends_with: String\n  demonym_not_ends_with: String\n  gini: Float\n  gini_not: Float\n  gini_in: [Float!]\n  gini_not_in: [Float!]\n  gini_lt: Float\n  gini_lte: Float\n  gini_gt: Float\n  gini_gte: Float\n  location: _Neo4jPointInput\n  location_not: _Neo4jPointInput\n  location_distance: _Neo4jPointDistanceFilter\n  location_distance_lt: _Neo4jPointDistanceFilter\n  location_distance_lte: _Neo4jPointDistanceFilter\n  location_distance_gt: _Neo4jPointDistanceFilter\n  location_distance_gte: _Neo4jPointDistanceFilter\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  nameTranslations: _TranslationFilter\n  nameTranslations_not: _TranslationFilter\n  nameTranslations_in: [_TranslationFilter!]\n  nameTranslations_not_in: [_TranslationFilter!]\n  nameTranslations_some: _TranslationFilter\n  nameTranslations_none: _TranslationFilter\n  nameTranslations_single: _TranslationFilter\n  nameTranslations_every: _TranslationFilter\n  nativeName: String\n  nativeName_not: String\n  nativeName_in: [String!]\n  nativeName_not_in: [String!]\n  nativeName_contains: String\n  nativeName_not_contains: String\n  nativeName_starts_with: String\n  nativeName_not_starts_with: String\n  nativeName_ends_with: String\n  nativeName_not_ends_with: String\n  numericCode: String\n  numericCode_not: String\n  numericCode_in: [String!]\n  numericCode_not_in: [String!]\n  numericCode_contains: String\n  numericCode_not_contains: String\n  numericCode_starts_with: String\n  numericCode_not_starts_with: String\n  numericCode_ends_with: String\n  numericCode_not_ends_with: String\n  population: Float\n  population_not: Float\n  population_in: [Float!]\n  population_not_in: [Float!]\n  population_lt: Float\n  population_lte: Float\n  population_gt: Float\n  population_gte: Float\n  topLevelDomains: _TopLevelDomainFilter\n  topLevelDomains_not: _TopLevelDomainFilter\n  topLevelDomains_in: [_TopLevelDomainFilter!]\n  topLevelDomains_not_in: [_TopLevelDomainFilter!]\n  topLevelDomains_some: _TopLevelDomainFilter\n  topLevelDomains_none: _TopLevelDomainFilter\n  topLevelDomains_single: _TopLevelDomainFilter\n  topLevelDomains_every: _TopLevelDomainFilter\n  callingCodes: _CallingCodeFilter\n  callingCodes_not: _CallingCodeFilter\n  callingCodes_in: [_CallingCodeFilter!]\n  callingCodes_not_in: [_CallingCodeFilter!]\n  callingCodes_some: _CallingCodeFilter\n  callingCodes_none: _CallingCodeFilter\n  callingCodes_single: _CallingCodeFilter\n  callingCodes_every: _CallingCodeFilter\n  timezones: _TimezoneFilter\n  timezones_not: _TimezoneFilter\n  timezones_in: [_TimezoneFilter!]\n  timezones_not_in: [_TimezoneFilter!]\n  timezones_some: _TimezoneFilter\n  timezones_none: _TimezoneFilter\n  timezones_single: _TimezoneFilter\n  timezones_every: _TimezoneFilter\n  borders: _CountryFilter\n  borders_not: _CountryFilter\n  borders_in: [_CountryFilter!]\n  borders_not_in: [_CountryFilter!]\n  borders_some: _CountryFilter\n  borders_none: _CountryFilter\n  borders_single: _CountryFilter\n  borders_every: _CountryFilter\n  subregion: _SubregionFilter\n  subregion_not: _SubregionFilter\n  subregion_in: [_SubregionFilter!]\n  subregion_not_in: [_SubregionFilter!]\n  officialLanguages: _LanguageFilter\n  officialLanguages_not: _LanguageFilter\n  officialLanguages_in: [_LanguageFilter!]\n  officialLanguages_not_in: [_LanguageFilter!]\n  officialLanguages_some: _LanguageFilter\n  officialLanguages_none: _LanguageFilter\n  officialLanguages_single: _LanguageFilter\n  officialLanguages_every: _LanguageFilter\n  currencies: _CurrencyFilter\n  currencies_not: _CurrencyFilter\n  currencies_in: [_CurrencyFilter!]\n  currencies_not_in: [_CurrencyFilter!]\n  currencies_some: _CurrencyFilter\n  currencies_none: _CurrencyFilter\n  currencies_single: _CurrencyFilter\n  currencies_every: _CurrencyFilter\n  regionalBlocs: _RegionalBlocFilter\n  regionalBlocs_not: _RegionalBlocFilter\n  regionalBlocs_in: [_RegionalBlocFilter!]\n  regionalBlocs_not_in: [_RegionalBlocFilter!]\n  regionalBlocs_some: _RegionalBlocFilter\n  regionalBlocs_none: _RegionalBlocFilter\n  regionalBlocs_single: _RegionalBlocFilter\n  regionalBlocs_every: _RegionalBlocFilter\n  flag: _FlagFilter\n  flag_not: _FlagFilter\n  flag_in: [_FlagFilter!]\n  flag_not_in: [_FlagFilter!]\n  distanceToOtherCountries: _DistanceToOtherCountryFilter\n  distanceToOtherCountries_not: _DistanceToOtherCountryFilter\n  distanceToOtherCountries_in: [_DistanceToOtherCountryFilter!]\n  distanceToOtherCountries_not_in: [_DistanceToOtherCountryFilter!]\n  distanceToOtherCountries_some: _DistanceToOtherCountryFilter\n  distanceToOtherCountries_none: _DistanceToOtherCountryFilter\n  distanceToOtherCountries_single: _DistanceToOtherCountryFilter\n  distanceToOtherCountries_every: _DistanceToOtherCountryFilter\n  shortestPathToOtherCountry: _CountryFilter\n  shortestPathToOtherCountry_not: _CountryFilter\n  shortestPathToOtherCountry_in: [_CountryFilter!]\n  shortestPathToOtherCountry_not_in: [_CountryFilter!]\n  shortestPathToOtherCountry_some: _CountryFilter\n  shortestPathToOtherCountry_none: _CountryFilter\n  shortestPathToOtherCountry_single: _CountryFilter\n  shortestPathToOtherCountry_every: _CountryFilter\n}\n\ntype Country {\n  _id: String\n\n  \"\"\"\n  ISO 3166-1 alpha-2 codes are two-letter country codes defined in ISO 3166-1, part of the ISO 3166 standard published by the International Organization for Standardization (ISO), to represent countries, dependent territories, and special areas of geographical interest. https://en.m.wikipedia.org/wiki/ISO_3166-1_alpha-2\n  \"\"\"\n  alpha2Code: String!\n\n  \"\"\"\n  ISO 3166-1 alpha-3 codes are three-letter country codes defined in ISO 3166-1, part of the ISO 3166 standard published by the International Organization for Standardization (ISO), to represent countries, dependent territories, and special areas of geographical interest. https://en.m.wikipedia.org/wiki/ISO_3166-1_alpha-3\n  \"\"\"\n  alpha3Code: String!\n\n  \"\"\"\n  The area in square kilometer, you can convert the area unit and population density through the convertedArea property\n  \"\"\"\n  area: Float\n  capital: String!\n\n  \"\"\"The population per square kilometer\"\"\"\n  populationDensity: Float\n  convertedArea(areaUnit: AreaUnit = null): Area\n\n  \"\"\"\n  identifies residents or natives of a particular place, usually derived from the name of the place or that of an ethnic group. https://en.m.wikipedia.org/wiki/Demonym\n  \"\"\"\n  demonym: String!\n\n  \"\"\"\n  In economics, the Gini coefficient, sometimes called the Gini index or Gini ratio, is a measure of statistical dispersion intended to represent the income or wealth distribution of a nation's residents, and is the most commonly used measurement of inequality. https://en.m.wikipedia.org/wiki/Gini_coefficient\n  \"\"\"\n  gini: Float\n  location: _Neo4jPoint!\n  name: String!\n  nameTranslations(first: Int, offset: Int, orderBy: [_TranslationOrdering], filter: _TranslationFilter): [Translation]\n  nativeName: String!\n  numericCode: String\n  population: Float!\n\n  \"\"\"\n  A country code top-level domain (ccTLD) is an Internet top-level domain generally used or reserved for a country, sovereign state, or dependent territory identified with a country code. https://en.m.wikipedia.org/wiki/Country_code_top-level_domain\n  \"\"\"\n  topLevelDomains(first: Int, offset: Int, orderBy: [_TopLevelDomainOrdering], filter: _TopLevelDomainFilter): [TopLevelDomain]\n  callingCodes(first: Int, offset: Int, orderBy: [_CallingCodeOrdering], filter: _CallingCodeFilter): [CallingCode]\n  alternativeSpellings: [AlternativeSpelling]\n  timezones(first: Int, offset: Int, orderBy: [_TimezoneOrdering], filter: _TimezoneFilter): [Timezone]\n  borders(first: Int, offset: Int, orderBy: [_CountryOrdering]): [Country]\n  subregion(filter: _SubregionFilter): Subregion\n  officialLanguages(first: Int, offset: Int, orderBy: [_LanguageOrdering], filter: _LanguageFilter): [Language]\n  currencies(first: Int, offset: Int, orderBy: [_CurrencyOrdering], filter: _CurrencyFilter): [Currency]\n  regionalBlocs(first: Int, offset: Int, orderBy: [_RegionalBlocOrdering], filter: _RegionalBlocFilter): [RegionalBloc]\n  flag(filter: _FlagFilter): Flag\n  distanceToOtherCountries(first: Int, offset: Int, orderBy: [_DistanceToOtherCountryOrdering]): [DistanceToOtherCountry]\n\n  \"\"\"\n  Shortest path to go from one country to another with the least border crossing as possible\n  \"\"\"\n  shortestPathToOtherCountry(otherCountryAlpha2Code: String!, first: Int, offset: Int, orderBy: [_CountryOrdering]): [Country]\n}\n\nenum _TimezoneOrdering {\n  _id_asc\n  _id_desc\n  name_asc\n  name_desc\n}\n\ninput _TimezoneFilter {\n  AND: [_TimezoneFilter!]\n  OR: [_TimezoneFilter!]\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  countries: _CountryFilter\n  countries_not: _CountryFilter\n  countries_in: [_CountryFilter!]\n  countries_not_in: [_CountryFilter!]\n  countries_some: _CountryFilter\n  countries_none: _CountryFilter\n  countries_single: _CountryFilter\n  countries_every: _CountryFilter\n}\n\ntype Timezone {\n  _id: String\n  name: String!\n  countries(first: Int, offset: Int, orderBy: [_CountryOrdering], filter: _CountryFilter): [Country]\n}\n\nenum _SubregionOrdering {\n  _id_asc\n  _id_desc\n  name_asc\n  name_desc\n}\n\ninput _SubregionFilter {\n  AND: [_SubregionFilter!]\n  OR: [_SubregionFilter!]\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  region: _RegionFilter\n  region_not: _RegionFilter\n  region_in: [_RegionFilter!]\n  region_not_in: [_RegionFilter!]\n  countries: _CountryFilter\n  countries_not: _CountryFilter\n  countries_in: [_CountryFilter!]\n  countries_not_in: [_CountryFilter!]\n  countries_some: _CountryFilter\n  countries_none: _CountryFilter\n  countries_single: _CountryFilter\n  countries_every: _CountryFilter\n}\n\ntype Subregion {\n  _id: String\n  name: String!\n  region(filter: _RegionFilter): Region\n  countries(first: Int, offset: Int, orderBy: [_CountryOrdering], filter: _CountryFilter): [Country]\n}\n\nenum _RegionOrdering {\n  _id_asc\n  _id_desc\n  name_asc\n  name_desc\n}\n\ninput _RegionFilter {\n  AND: [_RegionFilter!]\n  OR: [_RegionFilter!]\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  subregions: _SubregionFilter\n  subregions_not: _SubregionFilter\n  subregions_in: [_SubregionFilter!]\n  subregions_not_in: [_SubregionFilter!]\n  subregions_some: _SubregionFilter\n  subregions_none: _SubregionFilter\n  subregions_single: _SubregionFilter\n  subregions_every: _SubregionFilter\n}\n\ntype Region {\n  _id: String\n  name: String!\n  subregions(first: Int, offset: Int, orderBy: [_SubregionOrdering], filter: _SubregionFilter): [Subregion]\n}\n\nenum _LanguageOrdering {\n  _id_asc\n  _id_desc\n  iso639_1_asc\n  iso639_1_desc\n  iso639_2_asc\n  iso639_2_desc\n  name_asc\n  name_desc\n  nativeName_asc\n  nativeName_desc\n}\n\ninput _LanguageFilter {\n  AND: [_LanguageFilter!]\n  OR: [_LanguageFilter!]\n  iso639_1: String\n  iso639_1_not: String\n  iso639_1_in: [String!]\n  iso639_1_not_in: [String!]\n  iso639_1_contains: String\n  iso639_1_not_contains: String\n  iso639_1_starts_with: String\n  iso639_1_not_starts_with: String\n  iso639_1_ends_with: String\n  iso639_1_not_ends_with: String\n  iso639_2: String\n  iso639_2_not: String\n  iso639_2_in: [String!]\n  iso639_2_not_in: [String!]\n  iso639_2_contains: String\n  iso639_2_not_contains: String\n  iso639_2_starts_with: String\n  iso639_2_not_starts_with: String\n  iso639_2_ends_with: String\n  iso639_2_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  nativeName: String\n  nativeName_not: String\n  nativeName_in: [String!]\n  nativeName_not_in: [String!]\n  nativeName_contains: String\n  nativeName_not_contains: String\n  nativeName_starts_with: String\n  nativeName_not_starts_with: String\n  nativeName_ends_with: String\n  nativeName_not_ends_with: String\n  countries: _CountryFilter\n  countries_not: _CountryFilter\n  countries_in: [_CountryFilter!]\n  countries_not_in: [_CountryFilter!]\n  countries_some: _CountryFilter\n  countries_none: _CountryFilter\n  countries_single: _CountryFilter\n  countries_every: _CountryFilter\n}\n\ntype Language {\n  _id: String\n  iso639_1: String!\n  iso639_2: String!\n  name: String!\n  nativeName: String!\n  countries(first: Int, offset: Int, orderBy: [_CountryOrdering], filter: _CountryFilter): [Country]\n}\n\nenum _CurrencyOrdering {\n  _id_asc\n  _id_desc\n  code_asc\n  code_desc\n  name_asc\n  name_desc\n  symbol_asc\n  symbol_desc\n}\n\ninput _CurrencyFilter {\n  AND: [_CurrencyFilter!]\n  OR: [_CurrencyFilter!]\n  code: String\n  code_not: String\n  code_in: [String!]\n  code_not_in: [String!]\n  code_contains: String\n  code_not_contains: String\n  code_starts_with: String\n  code_not_starts_with: String\n  code_ends_with: String\n  code_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  symbol: String\n  symbol_not: String\n  symbol_in: [String!]\n  symbol_not_in: [String!]\n  symbol_contains: String\n  symbol_not_contains: String\n  symbol_starts_with: String\n  symbol_not_starts_with: String\n  symbol_ends_with: String\n  symbol_not_ends_with: String\n  countries: _CountryFilter\n  countries_not: _CountryFilter\n  countries_in: [_CountryFilter!]\n  countries_not_in: [_CountryFilter!]\n  countries_some: _CountryFilter\n  countries_none: _CountryFilter\n  countries_single: _CountryFilter\n  countries_every: _CountryFilter\n}\n\ntype Currency {\n  _id: String\n  code: String!\n  name: String!\n  symbol: String!\n  countries(first: Int, offset: Int, orderBy: [_CountryOrdering], filter: _CountryFilter): [Country]\n}\n\nenum _RegionalBlocOrdering {\n  _id_asc\n  _id_desc\n  acronym_asc\n  acronym_desc\n  name_asc\n  name_desc\n}\n\ninput _RegionalBlocFilter {\n  AND: [_RegionalBlocFilter!]\n  OR: [_RegionalBlocFilter!]\n  acronym: String\n  acronym_not: String\n  acronym_in: [String!]\n  acronym_not_in: [String!]\n  acronym_contains: String\n  acronym_not_contains: String\n  acronym_starts_with: String\n  acronym_not_starts_with: String\n  acronym_ends_with: String\n  acronym_not_ends_with: String\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  countries: _CountryFilter\n  countries_not: _CountryFilter\n  countries_in: [_CountryFilter!]\n  countries_not_in: [_CountryFilter!]\n  countries_some: _CountryFilter\n  countries_none: _CountryFilter\n  countries_single: _CountryFilter\n  countries_every: _CountryFilter\n}\n\ntype RegionalBloc {\n  _id: String\n  acronym: String!\n  name: String!\n  otherAcronyms: [OtherAcronym]\n  otherNames: [OtherName]\n  countries(first: Int, offset: Int, orderBy: [_CountryOrdering], filter: _CountryFilter): [Country]\n}\n\ntype OtherAcronym {\n  _id: String!\n  name: String!\n  regionalBlocs(first: Int, offset: Int, orderBy: [_RegionalBlocOrdering], filter: _RegionalBlocFilter): [RegionalBloc]\n}\n\ntype OtherName {\n  _id: String!\n  name: String!\n  regionalBlocs(first: Int, offset: Int, orderBy: [_RegionalBlocOrdering], filter: _RegionalBlocFilter): [RegionalBloc]\n}\n\ntype Area {\n  value: Float\n  unit: String\n\n  \"\"\"The population per square <your selected unit>\"\"\"\n  populationDensity: Float\n}\n\nenum _TranslationOrdering {\n  _id_asc\n  _id_desc\n  languageCode_asc\n  languageCode_desc\n  value_asc\n  value_desc\n}\n\ninput _TranslationFilter {\n  AND: [_TranslationFilter!]\n  OR: [_TranslationFilter!]\n  languageCode: String\n  languageCode_not: String\n  languageCode_in: [String!]\n  languageCode_not_in: [String!]\n  languageCode_contains: String\n  languageCode_not_contains: String\n  languageCode_starts_with: String\n  languageCode_not_starts_with: String\n  languageCode_ends_with: String\n  languageCode_not_ends_with: String\n  value: String\n  value_not: String\n  value_in: [String!]\n  value_not_in: [String!]\n  value_contains: String\n  value_not_contains: String\n  value_starts_with: String\n  value_not_starts_with: String\n  value_ends_with: String\n  value_not_ends_with: String\n}\n\ntype Translation {\n  _id: String\n  languageCode: String!\n  value: String!\n}\n\nenum _FlagOrdering {\n  _id_asc\n  _id_desc\n  emoji_asc\n  emoji_desc\n  emojiUnicode_asc\n  emojiUnicode_desc\n  svgFile_asc\n  svgFile_desc\n}\n\ninput _FlagFilter {\n  AND: [_FlagFilter!]\n  OR: [_FlagFilter!]\n  emoji: String\n  emoji_not: String\n  emoji_in: [String!]\n  emoji_not_in: [String!]\n  emoji_contains: String\n  emoji_not_contains: String\n  emoji_starts_with: String\n  emoji_not_starts_with: String\n  emoji_ends_with: String\n  emoji_not_ends_with: String\n  emojiUnicode: String\n  emojiUnicode_not: String\n  emojiUnicode_in: [String!]\n  emojiUnicode_not_in: [String!]\n  emojiUnicode_contains: String\n  emojiUnicode_not_contains: String\n  emojiUnicode_starts_with: String\n  emojiUnicode_not_starts_with: String\n  emojiUnicode_ends_with: String\n  emojiUnicode_not_ends_with: String\n  svgFile: String\n  svgFile_not: String\n  svgFile_in: [String!]\n  svgFile_not_in: [String!]\n  svgFile_contains: String\n  svgFile_not_contains: String\n  svgFile_starts_with: String\n  svgFile_not_starts_with: String\n  svgFile_ends_with: String\n  svgFile_not_ends_with: String\n  country: _CountryFilter\n  country_not: _CountryFilter\n  country_in: [_CountryFilter!]\n  country_not_in: [_CountryFilter!]\n}\n\ntype Flag {\n  _id: String\n  emoji: String!\n  emojiUnicode: String!\n  svgFile: String!\n  country(filter: _CountryFilter): Country\n}\n\nenum _DistanceToOtherCountryOrdering {\n  distanceInKm_asc\n  distanceInKm_desc\n  countryName_asc\n  countryName_desc\n  _id_asc\n  _id_desc\n}\n\ninput _DistanceToOtherCountryFilter {\n  AND: [_DistanceToOtherCountryFilter!]\n  OR: [_DistanceToOtherCountryFilter!]\n  distanceInKm: Float\n  distanceInKm_not: Float\n  distanceInKm_in: [Float!]\n  distanceInKm_not_in: [Float!]\n  distanceInKm_lt: Float\n  distanceInKm_lte: Float\n  distanceInKm_gt: Float\n  distanceInKm_gte: Float\n  countryName: String\n  countryName_not: String\n  countryName_in: [String!]\n  countryName_not_in: [String!]\n  countryName_contains: String\n  countryName_not_contains: String\n  countryName_starts_with: String\n  countryName_not_starts_with: String\n  countryName_ends_with: String\n  countryName_not_ends_with: String\n}\n\ntype DistanceToOtherCountry {\n  distanceInKm: Float\n\n  \"\"\"Sorry can't return the full country type :/\"\"\"\n  countryName: String\n  _id: String\n}\n\nenum _TopLevelDomainOrdering {\n  _id_asc\n  _id_desc\n  name_asc\n  name_desc\n}\n\ninput _TopLevelDomainFilter {\n  AND: [_TopLevelDomainFilter!]\n  OR: [_TopLevelDomainFilter!]\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  countries: _CountryFilter\n  countries_not: _CountryFilter\n  countries_in: [_CountryFilter!]\n  countries_not_in: [_CountryFilter!]\n  countries_some: _CountryFilter\n  countries_none: _CountryFilter\n  countries_single: _CountryFilter\n  countries_every: _CountryFilter\n}\n\ntype TopLevelDomain {\n  _id: String\n  name: String!\n  countries(first: Int, offset: Int, orderBy: [_CountryOrdering], filter: _CountryFilter): [Country]\n}\n\nenum _CallingCodeOrdering {\n  _id_asc\n  _id_desc\n  name_asc\n  name_desc\n}\n\ninput _CallingCodeFilter {\n  AND: [_CallingCodeFilter!]\n  OR: [_CallingCodeFilter!]\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  countries: _CountryFilter\n  countries_not: _CountryFilter\n  countries_in: [_CountryFilter!]\n  countries_not_in: [_CountryFilter!]\n  countries_some: _CountryFilter\n  countries_none: _CountryFilter\n  countries_single: _CountryFilter\n  countries_every: _CountryFilter\n}\n\ntype CallingCode {\n  _id: String\n  name: String!\n  countries(first: Int, offset: Int, orderBy: [_CountryOrdering], filter: _CountryFilter): [Country]\n}\n\ntype AlternativeSpelling {\n  _id: String!\n  name: String!\n  countries(first: Int, offset: Int, orderBy: [_CountryOrdering], filter: _CountryFilter): [Country]\n}\n\ntype _Neo4jTime {\n  hour: Int\n  minute: Int\n  second: Int\n  millisecond: Int\n  microsecond: Int\n  nanosecond: Int\n  timezone: String\n  formatted: String\n}\n\ninput _Neo4jTimeInput {\n  hour: Int\n  minute: Int\n  second: Int\n  millisecond: Int\n  microsecond: Int\n  nanosecond: Int\n  timezone: String\n  formatted: String\n}\n\ntype _Neo4jDate {\n  year: Int\n  month: Int\n  day: Int\n  formatted: String\n}\n\ninput _Neo4jDateInput {\n  year: Int\n  month: Int\n  day: Int\n  formatted: String\n}\n\ntype _Neo4jDateTime {\n  year: Int\n  month: Int\n  day: Int\n  hour: Int\n  minute: Int\n  second: Int\n  millisecond: Int\n  microsecond: Int\n  nanosecond: Int\n  timezone: String\n  formatted: String\n}\n\ninput _Neo4jDateTimeInput {\n  year: Int\n  month: Int\n  day: Int\n  hour: Int\n  minute: Int\n  second: Int\n  millisecond: Int\n  microsecond: Int\n  nanosecond: Int\n  timezone: String\n  formatted: String\n}\n\ntype _Neo4jLocalTime {\n  hour: Int\n  minute: Int\n  second: Int\n  millisecond: Int\n  microsecond: Int\n  nanosecond: Int\n  formatted: String\n}\n\ninput _Neo4jLocalTimeInput {\n  hour: Int\n  minute: Int\n  second: Int\n  millisecond: Int\n  microsecond: Int\n  nanosecond: Int\n  formatted: String\n}\n\ntype _Neo4jLocalDateTime {\n  year: Int\n  month: Int\n  day: Int\n  hour: Int\n  minute: Int\n  second: Int\n  millisecond: Int\n  microsecond: Int\n  nanosecond: Int\n  formatted: String\n}\n\ninput _Neo4jLocalDateTimeInput {\n  year: Int\n  month: Int\n  day: Int\n  hour: Int\n  minute: Int\n  second: Int\n  millisecond: Int\n  microsecond: Int\n  nanosecond: Int\n  formatted: String\n}\n\ninput _Neo4jPointDistanceFilter {\n  point: _Neo4jPointInput!\n  distance: Float!\n}\n\ntype _Neo4jPoint {\n  x: Float\n  y: Float\n  z: Float\n  longitude: Float\n  latitude: Float\n  height: Float\n  crs: String\n  srid: Int\n}\n\ninput _Neo4jPointInput {\n  x: Float\n  y: Float\n  z: Float\n  longitude: Float\n  latitude: Float\n  height: Float\n  crs: String\n  srid: Int\n}\n\nenum _RelationDirections {\n  IN\n  OUT\n}\n\ntype Query {\n  Country(_id: String, alpha2Code: String, alpha3Code: String, area: Float, capital: String, populationDensity: Float, demonym: String, gini: Float, location: _Neo4jPointInput, name: String, nativeName: String, numericCode: String, population: Float, first: Int, offset: Int, orderBy: [_CountryOrdering], filter: _CountryFilter): [Country]\n  Timezone(_id: String, name: String, first: Int, offset: Int, orderBy: [_TimezoneOrdering], filter: _TimezoneFilter): [Timezone]\n  Subregion(_id: String, name: String, first: Int, offset: Int, orderBy: [_SubregionOrdering], filter: _SubregionFilter): [Subregion]\n  Region(_id: String, name: String, first: Int, offset: Int, orderBy: [_RegionOrdering], filter: _RegionFilter): [Region]\n  Language(_id: String, iso639_1: String, iso639_2: String, name: String, nativeName: String, first: Int, offset: Int, orderBy: [_LanguageOrdering], filter: _LanguageFilter): [Language]\n  Currency(_id: String, code: String, name: String, symbol: String, first: Int, offset: Int, orderBy: [_CurrencyOrdering], filter: _CurrencyFilter): [Currency]\n  RegionalBloc(_id: String, acronym: String, name: String, first: Int, offset: Int, orderBy: [_RegionalBlocOrdering], filter: _RegionalBlocFilter): [RegionalBloc]\n  Translation(_id: String, languageCode: String, value: String, first: Int, offset: Int, orderBy: [_TranslationOrdering], filter: _TranslationFilter): [Translation]\n  Flag(_id: String, emoji: String, emojiUnicode: String, svgFile: String, first: Int, offset: Int, orderBy: [_FlagOrdering], filter: _FlagFilter): [Flag]\n  DistanceToOtherCountry(distanceInKm: Float, countryName: String, _id: String, first: Int, offset: Int, orderBy: [_DistanceToOtherCountryOrdering], filter: _DistanceToOtherCountryFilter): [DistanceToOtherCountry]\n  TopLevelDomain(_id: String, name: String, first: Int, offset: Int, orderBy: [_TopLevelDomainOrdering], filter: _TopLevelDomainFilter): [TopLevelDomain]\n  CallingCode(_id: String, name: String, first: Int, offset: Int, orderBy: [_CallingCodeOrdering], filter: _CallingCodeFilter): [CallingCode]\n}",
    "C\u00e2mara dos deputados Brasil": "\"\"\"\"\"\"\ntype Query {\n  \"\"\"\"\"\"\n  blocos(id: [Int], idLegislatura: [Int], siglaPartido: [String], after: String, first: Int, ordem: String, ordenarPor: String): BlocoCursor\n\n  \"\"\"\"\"\"\n  bloco(id: ID!): Bloco\n\n  \"\"\"\"\"\"\n  deputados(id: [Int], nome: String, idLegislatura: [Int], siglaUf: [String], siglaPartido: [String], siglaSexo: String, after: String, first: Int, dataInicio: String, dataFim: String, ordem: String, ordenarPor: String): DeputadoSimplesCursor\n\n  \"\"\"\"\"\"\n  deputado(id: ID!): Deputado\n\n  \"\"\"\"\"\"\n  deputadoDespesas(id: ID!, idLegislatura: [Int], ano: [Int], mes: [Int], cnpjCpfFornecedor: String, after: String, first: Int, ordem: String, ordenarPor: String): DespesaCursor\n\n  \"\"\"\"\"\"\n  deputadoEventos(id: ID!, dataInicio: String, dataFim: String, after: String, first: Int, ordem: String, ordenarPor: String): EventoCursor\n\n  \"\"\"\"\"\"\n  deputadoOrgaos(id: ID!, dataInicio: String, dataFim: String, after: String, first: Int, ordem: String, ordenarPor: String): OrgaoCursor\n\n  \"\"\"\"\"\"\n  eventos(id: [Int], idTipoEvento: [Int], idSituacao: [Int], idTipoOrgao: [Int], idOrgao: [Int], dataInicio: String, dataFim: String, horaInicio: String, horaFim: String, after: String, first: Int, ordem: String, ordenarPor: String): EventoCursor\n\n  \"\"\"\"\"\"\n  evento(id: ID!): Evento\n\n  \"\"\"\"\"\"\n  eventoDeputados(id: ID!): [Deputado]\n\n  \"\"\"\"\"\"\n  eventoOrgaos(id: ID!): [Orgao]\n\n  \"\"\"\"\"\"\n  eventoPautas(id: ID!): [Pauta]\n\n  \"\"\"\"\"\"\n  eventoSituacoes: [Situacao]\n\n  \"\"\"\"\"\"\n  eventoTipos: [TipoEvento]\n\n  \"\"\"\"\"\"\n  legislaturas(id: [Int], data: String, after: String, first: Int, ordem: String, ordenarPor: String): LegislaturaCursor\n\n  \"\"\"\"\"\"\n  legislatura(id: ID!): Legislatura\n\n  \"\"\"\"\"\"\n  legislaturaMesa(id: String, dataInicio: String, dataFim: String): [Mesa]\n\n  \"\"\"\"\"\"\n  partidos(sigla: [String], dataInicio: String, dataFim: String, idLegislatura: [Int], after: String, first: Int, ordem: String, ordenarPor: String): PartidoCursor\n\n  \"\"\"\"\"\"\n  partido(id: ID!): Partido\n\n  \"\"\"\"\"\"\n  partidoMembros(id: ID!, dataInicio: String, dataFim: String, idLegislatura: [Int], ordenarPor: String, ordem: String, first: Int, after: String): [Deputado]\n\n  \"\"\"\"\"\"\n  proposicoes(id: [Int], siglaTipo: [String], numero: [Int], ano: [Int], idAutor: [Int], autor: String, siglaPartidoAutor: [String], idPartidoAutor: Int, siglaUfAutor: [String], keywords: [String], tramitacaoSenado: Boolean, dataInicio: String, dataFim: String, dataApresentacaoInicio: String, dataApresentacaoFim: String, idSituacao: [Int], after: String, first: Int, ordem: String, ordenarPor: String): ProposicaoCursor\n\n  \"\"\"\"\"\"\n  proposicao(id: ID!): Proposicao\n\n  \"\"\"\"\"\"\n  proposicaoAutores(id: ID!): [AutorProposicao]\n\n  \"\"\"\"\"\"\n  proposicaoTramitacoes(id: ID!, dataInicio: String, dataFim: String): [Tramitacao]\n\n  \"\"\"\"\"\"\n  proposicaoVotacoes(id: ID!): [Votacao]\n\n  \"\"\"\"\"\"\n  proposicaoSituacoes: [Situacao]\n\n  \"\"\"\"\"\"\n  orgaos(id: [Int], sigla: [String], idTipoOrgao: [Int], dataInicio: String, dataFim: String, after: String, first: Int, ordem: String, ordenarPor: String): OrgaoCursor\n\n  \"\"\"\"\"\"\n  orgao(id: ID!): Orgao\n\n  \"\"\"\"\"\"\n  orgaoEventos(id: ID!, idTipoEvento: [Int], dataInicio: String, dataFim: String, after: Int, first: Int, ordem: String, ordenarPor: String): EventoCursor\n\n  \"\"\"\"\"\"\n  orgaoMembros(id: ID!, dataInicio: String, dataFim: String, after: Int, first: Int): [MembroOrgao]\n\n  \"\"\"\"\"\"\n  orgaoSituacoes: [Situacao]\n\n  \"\"\"\"\"\"\n  votacao(id: ID!): Votacao\n\n  \"\"\"\"\"\"\n  votacaoVotos(id: ID!, after: String, first: Int!): VotoCursor\n}\n\n\"\"\"\"\"\"\ntype BlocoCursor {\n  \"\"\"\"\"\"\n  edges: [BlocoEdge]\n\n  \"\"\"\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\"\"\"\ntype BlocoEdge {\n  \"\"\"\"\"\"\n  node: Bloco\n\n  \"\"\"\"\"\"\n  cursor: String\n}\n\n\"\"\"\"\"\"\ntype Bloco {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  idLegislatura: String\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  uri: String\n}\n\n\"\"\"\"\"\"\ntype PageInfo {\n  \"\"\"\"\"\"\n  endCursor: String\n\n  \"\"\"\"\"\"\n  hasNextPage: Boolean\n}\n\n\"\"\"\"\"\"\ntype DeputadoSimplesCursor {\n  \"\"\"\"\"\"\n  edges: [DeputadoSimplesEdge]!\n\n  \"\"\"\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\"\"\"\ntype DeputadoSimplesEdge {\n  \"\"\"\"\"\"\n  node: DeputadoSimples\n\n  \"\"\"\"\"\"\n  cursor: String\n}\n\n\"\"\"\"\"\"\ntype DeputadoSimples {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  idLegislatura: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  siglaPartido: String\n\n  \"\"\"\"\"\"\n  siglaUf: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriPartido: String\n\n  \"\"\"\"\"\"\n  urlFoto: String\n}\n\n\"\"\"\"\"\"\ntype Deputado {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  cpf: String\n\n  \"\"\"\"\"\"\n  dataFalecimento: String\n\n  \"\"\"\"\"\"\n  dataNascimento: String\n\n  \"\"\"\"\"\"\n  escolaridade: String\n\n  \"\"\"\"\"\"\n  municipioNascimento: String\n\n  \"\"\"\"\"\"\n  nomeCivil: String\n\n  \"\"\"\"\"\"\n  redeSocial: [String]\n\n  \"\"\"\"\"\"\n  sexo: String\n\n  \"\"\"\"\"\"\n  ufNascimento: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  urlWebsite: String\n\n  \"\"\"\"\"\"\n  ultimoStatus: UltimoStatus\n}\n\n\"\"\"\"\"\"\ntype UltimoStatus {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  condicaoEleitoral: String\n\n  \"\"\"\"\"\"\n  data: String\n\n  \"\"\"\"\"\"\n  descricaoStatus: String\n\n  \"\"\"\"\"\"\n  gabinete: Gabinete\n\n  \"\"\"\"\"\"\n  idLegislatura: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  nomeEleitoral: String\n\n  \"\"\"\"\"\"\n  siglaPartido: String\n\n  \"\"\"\"\"\"\n  siglaUf: String\n\n  \"\"\"\"\"\"\n  situacao: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriPartido: String\n\n  \"\"\"\"\"\"\n  urlFoto: String\n}\n\n\"\"\"\"\"\"\ntype Gabinete {\n  \"\"\"\"\"\"\n  andar: String\n\n  \"\"\"\"\"\"\n  email: String\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  predio: String\n\n  \"\"\"\"\"\"\n  sala: String\n\n  \"\"\"\"\"\"\n  telefone: String\n}\n\n\"\"\"\"\"\"\ntype DespesaCursor {\n  \"\"\"\"\"\"\n  edges: [DespesaEdge]!\n\n  \"\"\"\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\"\"\"\ntype DespesaEdge {\n  \"\"\"\"\"\"\n  node: Despesa\n\n  \"\"\"\"\"\"\n  cursor: String\n}\n\n\"\"\"\"\"\"\ntype Despesa {\n  \"\"\"\"\"\"\n  ano: Int\n\n  \"\"\"\"\"\"\n  cnpjCpfFornecedor: String\n\n  \"\"\"\"\"\"\n  dataDocumento: String\n\n  \"\"\"\"\"\"\n  idDocumento: Int\n\n  \"\"\"\"\"\"\n  idLote: Int\n\n  \"\"\"\"\"\"\n  idTipoDocumento: Int\n\n  \"\"\"\"\"\"\n  mes: Int\n\n  \"\"\"\"\"\"\n  nomeFornecedor: String\n\n  \"\"\"\"\"\"\n  numDocumento: String\n\n  \"\"\"\"\"\"\n  numRessarcimento: String\n\n  \"\"\"\"\"\"\n  parcela: Int\n\n  \"\"\"\"\"\"\n  tipoDespesa: String\n\n  \"\"\"\"\"\"\n  tipoDocumento: String\n\n  \"\"\"\"\"\"\n  urlDocumento: String\n\n  \"\"\"\"\"\"\n  valorDocumento: Float\n\n  \"\"\"\"\"\"\n  valorGlosa: Float\n\n  \"\"\"\"\"\"\n  valorLiquido: Float\n}\n\n\"\"\"\"\"\"\ntype EventoCursor {\n  \"\"\"\"\"\"\n  pageInfo: PageInfo\n\n  \"\"\"\"\"\"\n  edges: [EventoEdge]\n}\n\n\"\"\"\"\"\"\ntype EventoEdge {\n  \"\"\"\"\"\"\n  node: Evento\n\n  \"\"\"\"\"\"\n  cursor: String\n}\n\n\"\"\"\"\"\"\ntype Evento {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  dataHoraFim: String\n\n  \"\"\"\"\"\"\n  dataHoraInicio: String\n\n  \"\"\"\"\"\"\n  descricaoSituacao: String\n\n  \"\"\"\"\"\"\n  descricaoTipo: String\n\n  \"\"\"\"\"\"\n  fases: String\n\n  \"\"\"\"\"\"\n  localCamara: LocalCamara\n\n  \"\"\"\"\"\"\n  localExterno: String\n\n  \"\"\"\"\"\"\n  orgaos: [OrgaoEvento]\n\n  \"\"\"\"\"\"\n  titulo: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriConvidados: String\n\n  \"\"\"\"\"\"\n  uriDeputados: String\n}\n\n\"\"\"\"\"\"\ntype LocalCamara {\n  \"\"\"\"\"\"\n  andar: String\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  predio: String\n\n  \"\"\"\"\"\"\n  sala: String\n}\n\n\"\"\"\"\"\"\ntype OrgaoEvento {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  apelido: String\n\n  \"\"\"\"\"\"\n  idTipoOrgao: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  sigla: String\n\n  \"\"\"\"\"\"\n  tipoOrgao: String\n\n  \"\"\"\"\"\"\n  uri: String\n}\n\n\"\"\"\"\"\"\ntype OrgaoCursor {\n  \"\"\"\"\"\"\n  pageInfo: PageInfo\n\n  \"\"\"\"\"\"\n  edges: [OrgaoEdge]\n}\n\n\"\"\"\"\"\"\ntype OrgaoEdge {\n  \"\"\"\"\"\"\n  node: Orgao\n\n  \"\"\"\"\"\"\n  cursor: String\n}\n\n\"\"\"\"\"\"\ntype Orgao {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  apelido: String\n\n  \"\"\"\"\"\"\n  casa: String\n\n  \"\"\"\"\"\"\n  dataFim: String\n\n  \"\"\"\"\"\"\n  dataFimOriginal: String\n\n  \"\"\"\"\"\"\n  dataInicio: String\n\n  \"\"\"\"\"\"\n  dataInstalacao: String\n\n  \"\"\"\"\"\"\n  idTipoOrgao: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  sala: String\n\n  \"\"\"\"\"\"\n  sigla: String\n\n  \"\"\"\"\"\"\n  tipoOrgao: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  urlWebsite: String\n}\n\n\"\"\"\"\"\"\ntype Pauta {\n  \"\"\"\"\"\"\n  codRegime: Int\n\n  \"\"\"\"\"\"\n  ordem: Int\n\n  \"\"\"\"\"\"\n  proposicao: ProposicaoPauta\n\n  \"\"\"\"\"\"\n  regime: String\n\n  \"\"\"\"\"\"\n  situacaoItem: String\n\n  \"\"\"\"\"\"\n  uriProposicaoRelacionada: String\n\n  \"\"\"\"\"\"\n  uriVotacao: String\n}\n\n\"\"\"\"\"\"\ntype ProposicaoPauta {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  ano: Int\n\n  \"\"\"\"\"\"\n  ementa: String\n\n  \"\"\"\"\"\"\n  idTipo: Int\n\n  \"\"\"\"\"\"\n  numero: Int\n\n  \"\"\"\"\"\"\n  siglaTipo: String\n\n  \"\"\"\"\"\"\n  uri: String\n}\n\n\"\"\"\"\"\"\ntype Situacao {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  descricao: String\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  sigla: String\n}\n\n\"\"\"\"\"\"\ntype TipoEvento {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  descricao: String\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  sigla: String\n}\n\n\"\"\"\"\"\"\ntype LegislaturaCursor {\n  \"\"\"\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\"\"\"\n  edges: [LegislaturaEdge]\n}\n\n\"\"\"\"\"\"\ntype LegislaturaEdge {\n  \"\"\"\"\"\"\n  node: Legislatura\n\n  \"\"\"\"\"\"\n  cursor: String\n}\n\n\"\"\"\"\"\"\ntype Legislatura {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  dataFim: String\n\n  \"\"\"\"\"\"\n  dataInicio: String\n\n  \"\"\"\"\"\"\n  uri: String\n}\n\n\"\"\"\"\"\"\ntype Mesa {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  dataFim: String\n\n  \"\"\"\"\"\"\n  dataInicio: String\n\n  \"\"\"\"\"\"\n  idLegislatura: Int\n\n  \"\"\"\"\"\"\n  idPapel: String\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  nomePapel: String\n\n  \"\"\"\"\"\"\n  siglaPartido: String\n\n  \"\"\"\"\"\"\n  siglaUf: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriPartido: String\n\n  \"\"\"\"\"\"\n  urlFoto: String\n}\n\n\"\"\"\"\"\"\ntype PartidoCursor {\n  \"\"\"\"\"\"\n  pageInfo: PageInfo\n\n  \"\"\"\"\"\"\n  edges: [PartidoEdge]\n}\n\n\"\"\"\"\"\"\ntype PartidoEdge {\n  \"\"\"\"\"\"\n  node: Partido\n\n  \"\"\"\"\"\"\n  cursor: String\n}\n\n\"\"\"\"\"\"\ntype Partido {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  numeroEleitoral: Int\n\n  \"\"\"\"\"\"\n  sigla: String\n\n  \"\"\"\"\"\"\n  status: StatusPartido\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  urlFacebook: String\n\n  \"\"\"\"\"\"\n  urlLogo: String\n\n  \"\"\"\"\"\"\n  urlWebSite: String\n}\n\n\"\"\"\"\"\"\ntype StatusPartido {\n  \"\"\"\"\"\"\n  data: String\n\n  \"\"\"\"\"\"\n  idLegislatura: Int\n\n  \"\"\"\"\"\"\n  lider: Lider\n\n  \"\"\"\"\"\"\n  situacao: String\n\n  \"\"\"\"\"\"\n  totalMembros: String\n\n  \"\"\"\"\"\"\n  totalPosse: String\n\n  \"\"\"\"\"\"\n  uriMembros: String\n}\n\n\"\"\"\"\"\"\ntype Lider {\n  \"\"\"\"\"\"\n  idLegislatura: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  siglaPartido: String\n\n  \"\"\"\"\"\"\n  uf: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriPartido: String\n\n  \"\"\"\"\"\"\n  urlFoto: String\n}\n\n\"\"\"\"\"\"\ntype ProposicaoCursor {\n  \"\"\"\"\"\"\n  pageInfo: PageInfo\n\n  \"\"\"\"\"\"\n  edges: [ProposicaoEdge]\n}\n\n\"\"\"\"\"\"\ntype ProposicaoEdge {\n  \"\"\"\"\"\"\n  node: Proposicao\n\n  \"\"\"\"\"\"\n  cursor: String\n}\n\n\"\"\"\"\"\"\ntype Proposicao {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  ano: Int\n\n  \"\"\"\"\"\"\n  dataApresentacao: String\n\n  \"\"\"\"\"\"\n  descricaoTipo: String\n\n  \"\"\"\"\"\"\n  ementa: String\n\n  \"\"\"\"\"\"\n  ementaDetalhada: String\n\n  \"\"\"\"\"\"\n  idTipo: Int\n\n  \"\"\"\"\"\"\n  justificativa: String\n\n  \"\"\"\"\"\"\n  keywords: String\n\n  \"\"\"\"\"\"\n  numero: Int\n\n  \"\"\"\"\"\"\n  siglaTipo: String\n\n  \"\"\"\"\"\"\n  statusProposicao: StatusProposicao\n\n  \"\"\"\"\"\"\n  texto: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriAutores: String\n\n  \"\"\"\"\"\"\n  uriOrgaoNumerador: String\n\n  \"\"\"\"\"\"\n  uriPropAnterior: String\n\n  \"\"\"\"\"\"\n  uriPropPosterior: String\n\n  \"\"\"\"\"\"\n  uriPropPrincipal: String\n\n  \"\"\"\"\"\"\n  uriUltimoRelator: String\n\n  \"\"\"\"\"\"\n  urlInteiroTeor: String\n\n  \"\"\"\"\"\"\n  urnFinal: String\n}\n\n\"\"\"\"\"\"\ntype StatusProposicao {\n  \"\"\"\"\"\"\n  dataHora: String\n\n  \"\"\"\"\"\"\n  descricaoSituacao: String\n\n  \"\"\"\"\"\"\n  descricaoTramitacao: String\n\n  \"\"\"\"\"\"\n  despacho: String\n\n  \"\"\"\"\"\"\n  idSituacao: Int\n\n  \"\"\"\"\"\"\n  idTipoTramitacao: String\n\n  \"\"\"\"\"\"\n  regime: String\n\n  \"\"\"\"\"\"\n  sequencia: Int\n\n  \"\"\"\"\"\"\n  siglaOrgao: String\n\n  \"\"\"\"\"\"\n  uriOrgao: String\n\n  \"\"\"\"\"\"\n  url: String\n}\n\n\"\"\"\"\"\"\ntype AutorProposicao {\n  \"\"\"\"\"\"\n  codTipo: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  tipo: String\n\n  \"\"\"\"\"\"\n  uri: String\n}\n\n\"\"\"\"\"\"\ntype Tramitacao {\n  \"\"\"\"\"\"\n  dataHora: String\n\n  \"\"\"\"\"\"\n  descricaoSituacao: String\n\n  \"\"\"\"\"\"\n  descricaoTramitacao: String\n\n  \"\"\"\"\"\"\n  despacho: String\n\n  \"\"\"\"\"\"\n  idSituacao: Int\n\n  \"\"\"\"\"\"\n  idTipoTramitacao: String\n\n  \"\"\"\"\"\"\n  regime: String\n\n  \"\"\"\"\"\"\n  sequencia: Int\n\n  \"\"\"\"\"\"\n  siglaOrgao: String\n\n  \"\"\"\"\"\"\n  uriOrgao: String\n\n  \"\"\"\"\"\"\n  url: String\n}\n\n\"\"\"\"\"\"\ntype Votacao {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  aprovada: Boolean\n\n  \"\"\"\"\"\"\n  dataHoraFim: String\n\n  \"\"\"\"\"\"\n  dataHoraInicio: String\n\n  \"\"\"\"\"\"\n  despacho: String\n\n  \"\"\"\"\"\"\n  ementaParecer: String\n\n  \"\"\"\"\"\"\n  numPresentes: Int\n\n  \"\"\"\"\"\"\n  numVotantes: Int\n\n  \"\"\"\"\"\"\n  orientacoes: [Orientacao]\n\n  \"\"\"\"\"\"\n  placarAbstencao: Int\n\n  \"\"\"\"\"\"\n  placarNao: Int\n\n  \"\"\"\"\"\"\n  placarSim: Int\n\n  \"\"\"\"\"\"\n  proposicao: ProposicaoVotacao\n\n  \"\"\"\"\"\"\n  relator: Relator\n\n  \"\"\"\"\"\"\n  tipoVotacao: String\n\n  \"\"\"\"\"\"\n  titulo: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriEvento: String\n\n  \"\"\"\"\"\"\n  uriProposicaoPrincipal: String\n}\n\n\"\"\"\"\"\"\ntype Orientacao {\n  \"\"\"\"\"\"\n  nomeBancada: String\n\n  \"\"\"\"\"\"\n  uriBancada: String\n\n  \"\"\"\"\"\"\n  voto: String\n}\n\n\"\"\"\"\"\"\ntype ProposicaoVotacao {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  ano: Int\n\n  \"\"\"\"\"\"\n  ementa: String\n\n  \"\"\"\"\"\"\n  idTipo: Int\n\n  \"\"\"\"\"\"\n  numero: Int\n\n  \"\"\"\"\"\"\n  siglaTipo: String\n\n  \"\"\"\"\"\"\n  uri: String\n}\n\n\"\"\"\"\"\"\ntype Relator {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  idLegislatura: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  siglaPartido: String\n\n  \"\"\"\"\"\"\n  siglaUf: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriPartido: String\n\n  \"\"\"\"\"\"\n  urlFoto: String\n}\n\n\"\"\"\"\"\"\ntype MembroOrgao {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  dataFim: String\n\n  \"\"\"\"\"\"\n  dataInicio: String\n\n  \"\"\"\"\"\"\n  idLegislatura: Int\n\n  \"\"\"\"\"\"\n  idPapel: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  nomePapel: String\n\n  \"\"\"\"\"\"\n  siglaPartido: String\n\n  \"\"\"\"\"\"\n  siglaUf: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriPartido: String\n\n  \"\"\"\"\"\"\n  urlFoto: String\n}\n\n\"\"\"\"\"\"\ntype VotoCursor {\n  \"\"\"\"\"\"\n  pageInfo: PageInfo\n\n  \"\"\"\"\"\"\n  edges: [VotoEdge]\n}\n\n\"\"\"\"\"\"\ntype VotoEdge {\n  \"\"\"\"\"\"\n  node: Voto\n\n  \"\"\"\"\"\"\n  cursor: String\n}\n\n\"\"\"\"\"\"\ntype Voto {\n  \"\"\"\"\"\"\n  parlamentar: Parlamentar\n\n  \"\"\"\"\"\"\n  voto: String\n}\n\n\"\"\"\"\"\"\ntype Parlamentar {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  idLegislatura: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  siglaPartido: String\n\n  \"\"\"\"\"\"\n  siglaUf: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriPartido: String\n\n  \"\"\"\"\"\"\n  urlFoto: String\n}\n\n\"\"\"\"\"\"\ntype MembroPartido {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  idLegislatura: Int\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  siglaPartido: String\n\n  \"\"\"\"\"\"\n  siglaUf: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  uriPartido: String\n\n  \"\"\"\"\"\"\n  urlFoto: String\n}\n\n\"\"\"\"\"\"\ntype SiglaTipo {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  descricao: String\n\n  \"\"\"\"\"\"\n  nome: String\n\n  \"\"\"\"\"\"\n  sigla: String\n}",
    "Deutsche Bahn": "\"\"\"\"\"\"\ntype Query {\n  \"\"\"\"\"\"\n  routing(from: Int!, to: Int!): [Route!]!\n\n  \"\"\"\"\"\"\n  stationWithEvaId(evaId: Int!): Station\n\n  \"\"\"\"\"\"\n  stationWithStationNumber(stationNumber: Int!): Station\n\n  \"\"\"\"\"\"\n  stationWithRill100(rill100: String!): Station\n\n  \"\"\"\"\"\"\n  search(searchTerm: String): Searchable!\n\n  \"\"\"\"\"\"\n  nearby(latitude: Float!, longitude: Float!, radius: Int = 10000): Nearby!\n\n  \"\"\"\"\"\"\n  parkingSpace(id: Int): ParkingSpace\n}\n\n\"\"\"\"\"\"\ntype Route {\n  \"\"\"\"\"\"\n  parts: [RoutePart!]!\n\n  \"\"\"\"\"\"\n  from: Station\n\n  \"\"\"\"\"\"\n  to: Station\n}\n\n\"\"\"\"\"\"\ntype RoutePart {\n  \"\"\"Station where the part begins\"\"\"\n  from: Station!\n\n  \"\"\"\"\"\"\n  to: Station!\n\n  \"\"\"\"\"\"\n  delay: Int\n\n  \"\"\"\"\"\"\n  product: Product\n\n  \"\"\"\"\"\"\n  direction: String!\n\n  \"\"\"\"\"\"\n  start: String!\n\n  \"\"\"\"\"\"\n  end: String!\n\n  \"\"\"\"\"\"\n  departingTrack: Track\n\n  \"\"\"\"\"\"\n  arrivingTrack: Track\n}\n\n\"\"\"\"\"\"\ntype Station {\n  \"\"\"\"\"\"\n  primaryEvaId: Int\n\n  \"\"\"\"\"\"\n  stationNumber: Int\n\n  \"\"\"\"\"\"\n  primaryRil100: String\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  location: Location\n\n  \"\"\"\"\"\"\n  category: Int!\n\n  \"\"\"\"\"\"\n  priceCategory: Int!\n\n  \"\"\"\"\"\"\n  hasParking: Boolean!\n\n  \"\"\"\"\"\"\n  hasBicycleParking: Boolean!\n\n  \"\"\"\"\"\"\n  hasLocalPublicTransport: Boolean!\n\n  \"\"\"\"\"\"\n  hasPublicFacilities: Boolean!\n\n  \"\"\"\"\"\"\n  hasLockerSystem: Boolean!\n\n  \"\"\"\"\"\"\n  hasTaxiRank: Boolean!\n\n  \"\"\"\"\"\"\n  hasTravelNecessities: Boolean!\n\n  \"\"\"\"\"\"\n  hasSteplessAccess: String!\n\n  \"\"\"\"\"\"\n  hasMobilityService: String!\n\n  \"\"\"\"\"\"\n  federalState: String!\n\n  \"\"\"\"\"\"\n  regionalArea: RegionalArea!\n\n  \"\"\"\"\"\"\n  facilities: [Facility!]!\n\n  \"\"\"\"\"\"\n  mailingAddress: MailingAddress!\n\n  \"\"\"\"\"\"\n  DBInformationOpeningTimes: OpeningTimes\n\n  \"\"\"\"\"\"\n  localServiceStaffAvailability: OpeningTimes\n\n  \"\"\"\"\"\"\n  aufgabentraeger: StationContact!\n\n  \"\"\"\"\"\"\n  timeTableOffice: StationContact\n\n  \"\"\"\"\"\"\n  szentrale: StationContact!\n\n  \"\"\"\"\"\"\n  stationManagement: StationContact!\n\n  \"\"\"\"\"\"\n  timetable: Timetable!\n\n  \"\"\"\"\"\"\n  parkingSpaces: [ParkingSpace!]!\n\n  \"\"\"\"\"\"\n  hasSteamPermission: Boolean!\n\n  \"\"\"\"\"\"\n  hasWiFi: Boolean!\n\n  \"\"\"\"\"\"\n  hasTravelCenter: Boolean!\n\n  \"\"\"\"\"\"\n  hasRailwayMission: Boolean!\n\n  \"\"\"\"\"\"\n  hasDBLounge: Boolean!\n\n  \"\"\"\"\"\"\n  hasLostAndFound: Boolean!\n\n  \"\"\"\"\"\"\n  hasCarRental: Boolean!\n\n  \"\"\"\"\"\"\n  tracks: [Track!]!\n\n  \"\"\"\"\"\"\n  picture: Picture\n}\n\n\"\"\"\"\"\"\ntype Location {\n  \"\"\"\"\"\"\n  latitude: Float!\n\n  \"\"\"\"\"\"\n  longitude: Float!\n}\n\n\"\"\"\"\"\"\ntype RegionalArea {\n  \"\"\"\"\"\"\n  number: Int!\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  shortName: String!\n}\n\n\"\"\"\"\"\"\ntype Facility {\n  \"\"\"\"\"\"\n  description: String\n\n  \"\"\"\"\"\"\n  type: FacilityType!\n\n  \"\"\"\"\"\"\n  state: FacilityState!\n\n  \"\"\"\"\"\"\n  equipmentNumber: Int\n\n  \"\"\"\"\"\"\n  location: Location\n}\n\n\"\"\"\"\"\"\nenum FacilityType {\n  \"\"\"\"\"\"\n  ESCALATOR\n\n  \"\"\"\"\"\"\n  ELEVATOR\n}\n\n\"\"\"\"\"\"\nenum FacilityState {\n  \"\"\"\"\"\"\n  ACTIVE\n\n  \"\"\"\"\"\"\n  INACTIVE\n\n  \"\"\"\"\"\"\n  UNKNOWN\n}\n\n\"\"\"\"\"\"\ntype MailingAddress {\n  \"\"\"\"\"\"\n  city: String!\n\n  \"\"\"\"\"\"\n  zipcode: String!\n\n  \"\"\"\"\"\"\n  street: String!\n}\n\n\"\"\"\"\"\"\ntype OpeningTimes {\n  \"\"\"\"\"\"\n  monday: OpeningTime\n\n  \"\"\"\"\"\"\n  tuesday: OpeningTime\n\n  \"\"\"\"\"\"\n  wednesday: OpeningTime\n\n  \"\"\"\"\"\"\n  thursday: OpeningTime\n\n  \"\"\"\"\"\"\n  friday: OpeningTime\n\n  \"\"\"\"\"\"\n  saturday: OpeningTime\n\n  \"\"\"\"\"\"\n  sunday: OpeningTime\n\n  \"\"\"\"\"\"\n  holiday: OpeningTime\n}\n\n\"\"\"\"\"\"\ntype OpeningTime {\n  \"\"\"\"\"\"\n  from: String!\n\n  \"\"\"\"\"\"\n  to: String!\n}\n\n\"\"\"\"\"\"\ntype StationContact {\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  shortName: String\n\n  \"\"\"\"\"\"\n  email: String\n\n  \"\"\"\"\"\"\n  number: String\n\n  \"\"\"\"\"\"\n  phoneNumber: String\n}\n\n\"\"\"\"\"\"\ntype Timetable {\n  \"\"\"\"\"\"\n  nextArrivals: [TrainInStation!]!\n\n  \"\"\"\"\"\"\n  nextDepatures: [TrainInStation!]!\n}\n\n\"\"\"\"\"\"\ntype TrainInStation {\n  \"\"\"\"\"\"\n  type: String!\n\n  \"\"\"\"\"\"\n  trainNumber: String!\n\n  \"\"\"\"\"\"\n  platform: String!\n\n  \"\"\"\"\"\"\n  time: String!\n\n  \"\"\"\"\"\"\n  stops: [String!]!\n}\n\n\"\"\"\"\"\"\ntype ParkingSpace {\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  id: Int!\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  label: String\n\n  \"\"\"\"\"\"\n  spaceNumber: String\n\n  \"\"\"\"\"\"\n  responsibility: String\n\n  \"\"\"\"\"\"\n  source: String\n\n  \"\"\"\"\"\"\n  nameDisplay: String\n\n  \"\"\"\"\"\"\n  spaceType: String\n\n  \"\"\"\"\"\"\n  spaceTypeEn: String\n\n  \"\"\"\"\"\"\n  spaceTypeName: String\n\n  \"\"\"\"\"\"\n  location: Location\n\n  \"\"\"\"\"\"\n  url: String\n\n  \"\"\"\"\"\"\n  operator: String\n\n  \"\"\"\"\"\"\n  operatorUrl: String\n\n  \"\"\"\"\"\"\n  address: MailingAddress\n\n  \"\"\"\"\"\"\n  distance: String\n\n  \"\"\"\"\"\"\n  facilityType: String\n\n  \"\"\"\"\"\"\n  facilityTypeEn: String\n\n  \"\"\"\"\"\"\n  openingHours: String\n\n  \"\"\"\"\"\"\n  openingHoursEn: String\n\n  \"\"\"\"\"\"\n  numberParkingPlaces: String\n\n  \"\"\"\"\"\"\n  numberHandicapedPlaces: String\n\n  \"\"\"\"\"\"\n  isSpecialProductDb: Boolean!\n\n  \"\"\"\"\"\"\n  isOutOfService: Boolean!\n\n  \"\"\"\"\"\"\n  station: Station\n\n  \"\"\"\"\"\"\n  occupancy: Occupancy\n\n  \"\"\"\"\"\"\n  outOfServiceText: String\n\n  \"\"\"\"\"\"\n  outOfServiceTextEn: String\n\n  \"\"\"\"\"\"\n  reservation: String\n\n  \"\"\"\"\"\"\n  clearanceWidth: String\n\n  \"\"\"\"\"\"\n  clearanceHeight: String\n\n  \"\"\"\"\"\"\n  allowedPropulsions: String\n\n  \"\"\"\"\"\"\n  hasChargingStation: String\n\n  \"\"\"\"\"\"\n  tariffPrices: [ParkingPriceOption!]!\n\n  \"\"\"\"\"\"\n  outOfService: Boolean!\n\n  \"\"\"\"\"\"\n  isDiscountDbBahnCard: Boolean!\n\n  \"\"\"\"\"\"\n  isMonthVendingMachine: Boolean!\n\n  \"\"\"\"\"\"\n  isDiscountDbBahnComfort: Boolean!\n\n  \"\"\"\"\"\"\n  isDiscountDbParkAndRail: Boolean!\n\n  \"\"\"\"\"\"\n  isMonthParkAndRide: Boolean!\n\n  \"\"\"\"\"\"\n  isMonthSeason: Boolean!\n\n  \"\"\"\"\"\"\n  tariffDiscount: String\n\n  \"\"\"\"\"\"\n  tariffFreeParkingTime: String\n\n  \"\"\"\"\"\"\n  tariffDiscountEn: String\n\n  \"\"\"\"\"\"\n  tariffPaymentOptions: String\n\n  \"\"\"\"\"\"\n  tariffPaymentCustomerCards: String\n\n  \"\"\"\"\"\"\n  tariffFreeParkingTimeEn: String\n\n  \"\"\"\"\"\"\n  tariffPaymentOptionsEn: String\n\n  \"\"\"\"\"\"\n  slogan: String\n\n  \"\"\"\"\"\"\n  sloganEn: String\n}\n\n\"\"\"\"\"\"\ntype Occupancy {\n  \"\"\"\"\"\"\n  validData: Boolean!\n\n  \"\"\"\"\"\"\n  timestamp: String!\n\n  \"\"\"\"\"\"\n  timeSegment: String!\n\n  \"\"\"\"\"\"\n  category: Int!\n\n  \"\"\"\"\"\"\n  text: String!\n}\n\n\"\"\"\"\"\"\ntype ParkingPriceOption {\n  \"\"\"\"\"\"\n  id: Int!\n\n  \"\"\"\"\"\"\n  duration: String!\n\n  \"\"\"\"\"\"\n  price: Float\n}\n\n\"\"\"\"\"\"\ntype Track {\n  \"\"\"\"\"\"\n  platform: String!\n\n  \"\"\"\"\"\"\n  number: String!\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"Length of the platform in cm\"\"\"\n  length: Int\n\n  \"\"\"Height of the platform in cm\"\"\"\n  height: Int!\n}\n\n\"\"\"\"\"\"\ntype Picture {\n  \"\"\"\"\"\"\n  id: Int!\n\n  \"\"\"\"\"\"\n  url: String!\n\n  \"\"\"\"\"\"\n  license: String!\n\n  \"\"\"\"\"\"\n  photographer: Photographer!\n}\n\n\"\"\"\"\"\"\ntype Photographer {\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  url: String!\n}\n\n\"\"\"\"\"\"\ntype Product {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  class: Int\n\n  \"\"\"\"\"\"\n  productCode: Int\n\n  \"\"\"\"\"\"\n  productName: String\n}\n\n\"\"\"\"\"\"\ntype Searchable {\n  \"\"\"\"\"\"\n  stations: [Station!]!\n\n  \"\"\"\"\"\"\n  operationLocations: [OperationLocation!]!\n}\n\n\"\"\"\"\"\"\ntype OperationLocation {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  abbrev: String!\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  shortName: String!\n\n  \"\"\"\"\"\"\n  type: String!\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  locationCode: String\n\n  \"\"\"\"\"\"\n  UIC: String!\n\n  \"\"\"\"\"\"\n  regionId: String\n\n  \"\"\"\"\"\"\n  validFrom: String!\n\n  \"\"\"\"\"\"\n  validTill: String\n\n  \"\"\"\"\"\"\n  timeTableRelevant: Boolean\n\n  \"\"\"\"\"\"\n  borderStation: Boolean\n}\n\n\"\"\"\"\"\"\ntype Nearby {\n  \"\"\"\"\"\"\n  stations(count: Int = 10, offset: Int = 0): [Station!]!\n\n  \"\"\"\"\"\"\n  parkingSpaces(count: Int = 10, offset: Int = 0): [ParkingSpace!]!\n\n  \"\"\"\"\"\"\n  travelCenters(count: Int = 10, offset: Int = 0): [TravelCenter!]!\n\n  \"\"\"\"\"\"\n  flinksterCars(count: Int = 10, offset: Int = 0): [FlinksterCar!]!\n\n  \"\"\"\"\"\"\n  bikes(count: Int = 10, offset: Int = 0): [FlinksterBike!]!\n}\n\n\"\"\"\"\"\"\ntype TravelCenter {\n  \"\"\"\"\"\"\n  id: Int\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  address: MailingAddress\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  location: Location\n}\n\n\"\"\"\"\"\"\ntype FlinksterCar {\n  \"\"\"\"\"\"\n  id: String!\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  description: String!\n\n  \"\"\"\"\"\"\n  attributes: CarAttributes!\n\n  \"\"\"\"\"\"\n  location: Location!\n\n  \"\"\"\"\"\"\n  priceOptions: [PriceOption]!\n\n  \"\"\"\"\"\"\n  equipment: CarEquipment!\n\n  \"\"\"\"\"\"\n  rentalModel: String!\n\n  \"\"\"\"\"\"\n  parkingArea: FlinksterParkingArea!\n\n  \"\"\"\"\"\"\n  category: String!\n\n  \"\"\"\"\"\"\n  url: String!\n}\n\n\"\"\"\"\"\"\ntype CarAttributes {\n  \"\"\"\"\"\"\n  seats: Int!\n\n  \"\"\"\"\"\"\n  color: String!\n\n  \"\"\"\"\"\"\n  doors: Int!\n\n  \"\"\"\"\"\"\n  transmissionType: String!\n\n  \"\"\"\"\"\"\n  licensePlate: String\n\n  \"\"\"\"\"\"\n  fillLevel: Int\n\n  \"\"\"\"\"\"\n  fuel: String\n}\n\n\"\"\"\"\"\"\ntype PriceOption {\n  \"\"\"\"\"\"\n  interval: Int\n\n  \"\"\"\"\"\"\n  type: String!\n\n  \"\"\"\"\"\"\n  grossamount: Float!\n\n  \"\"\"\"\"\"\n  currency: String!\n\n  \"\"\"\"\"\"\n  taxrate: Float!\n\n  \"\"\"\"\"\"\n  preferredprice: Boolean!\n}\n\n\"\"\"\"\"\"\ntype CarEquipment {\n  \"\"\"\"\"\"\n  cdPlayer: Boolean\n\n  \"\"\"\"\"\"\n  airConditioning: Boolean\n\n  \"\"\"\"\"\"\n  navigationSystem: Boolean\n\n  \"\"\"\"\"\"\n  roofRailing: Boolean\n\n  \"\"\"\"\"\"\n  particulateFilter: Boolean\n\n  \"\"\"\"\"\"\n  audioInline: Boolean\n\n  \"\"\"\"\"\"\n  tyreType: String\n\n  \"\"\"\"\"\"\n  bluetoothHandsFreeCalling: Boolean\n\n  \"\"\"\"\"\"\n  cruiseControl: Boolean\n\n  \"\"\"\"\"\"\n  passengerAirbagTurnOff: Boolean\n\n  \"\"\"\"\"\"\n  isofixSeatFittings: Boolean\n}\n\n\"\"\"\"\"\"\ntype FlinksterParkingArea {\n  \"\"\"\"\"\"\n  id: String!\n\n  \"\"\"\"\"\"\n  url: String!\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  address: MailingAddress!\n\n  \"\"\"\"\"\"\n  parkingDescription: String\n\n  \"\"\"\"\"\"\n  accessDescription: String\n\n  \"\"\"\"\"\"\n  locationDescription: String\n\n  \"\"\"\"\"\"\n  publicTransport: String\n\n  \"\"\"\"\"\"\n  provider: FlinksterProvider!\n\n  \"\"\"\"\"\"\n  type: String!\n\n  \"\"\"\"\"\"\n  position: Location!\n\n  \"\"\"\"\"\"\n  GeoJSON: GeoJSON\n}\n\n\"\"\"\"\"\"\ntype FlinksterProvider {\n  \"\"\"\"\"\"\n  url: String!\n\n  \"\"\"\"\"\"\n  areaId: Int!\n\n  \"\"\"\"\"\"\n  networkIds: [Int!]!\n}\n\n\"\"\"\"\"\"\ntype GeoJSON {\n  \"\"\"\"\"\"\n  type: String!\n\n  \"\"\"\"\"\"\n  features: [GeoFeature!]!\n}\n\n\"\"\"\"\"\"\ntype GeoFeature {\n  \"\"\"\"\"\"\n  type: String!\n\n  \"\"\"\"\"\"\n  properties: GeoProperties!\n\n  \"\"\"\"\"\"\n  geometry: GeoPolygon!\n}\n\n\"\"\"\"\"\"\ntype GeoProperties {\n  \"\"\"\"\"\"\n  name: String!\n}\n\n\"\"\"\"\"\"\ntype GeoPolygon {\n  \"\"\"\"\"\"\n  type: String!\n\n  \"\"\"\"\"\"\n  coordinates: [[[[Float]]]]!\n}\n\n\"\"\"\"\"\"\ntype FlinksterBike {\n  \"\"\"\"\"\"\n  id: String!\n\n  \"\"\"\"\"\"\n  url: String!\n\n  \"\"\"\"\"\"\n  name: String!\n\n  \"\"\"\"\"\"\n  description: String!\n\n  \"\"\"\"\"\"\n  location: Location!\n\n  \"\"\"\"\"\"\n  priceOptions: [PriceOption]!\n\n  \"\"\"\"\"\"\n  attributes: BikeAttributes!\n\n  \"\"\"\"\"\"\n  address: MailingAddress!\n\n  \"\"\"\"\"\"\n  rentalModel: String!\n\n  \"\"\"\"\"\"\n  type: String!\n\n  \"\"\"\"\"\"\n  providerRentalObjectId: Int!\n\n  \"\"\"\"\"\"\n  parkingArea: FlinksterParkingArea!\n\n  \"\"\"\"\"\"\n  bookingUrl: String!\n}\n\n\"\"\"\"\"\"\ntype BikeAttributes {\n  \"\"\"\"\"\"\n  licensePlate: String!\n}",
    "Digitransit HSL": "schema {\n  query: QueryType\n}\n\ntype QueryType {\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n\n  \"\"\"Get all available feeds\"\"\"\n  feeds: [Feed]\n\n  \"\"\"Get all agencies\"\"\"\n  agencies: [Agency]\n\n  \"\"\"Return list of available ticket types\"\"\"\n  ticketTypes: [TicketType]\n\n  \"\"\"\n  Get a single agency based on agency ID, i.e. value of field `gtfsId` (ID format is `FeedId:StopId`)\n  \"\"\"\n  agency(id: String!): Agency\n\n  \"\"\"Get all stops\"\"\"\n  stops(\n    \"\"\"Return stops with these ids\"\"\"\n    ids: [String]\n\n    \"\"\"List of feeds from which stops are returned. Defaults to all feeds\"\"\"\n    feeds: [String!]\n\n    \"\"\"Query stops by this name\"\"\"\n    name: String\n\n    \"\"\"Number of results to return when using `name` argument. Defaults to 10\"\"\"\n    maxResults: Int\n  ): [Stop]\n\n  \"\"\"Get all stops within the specified bounding box\"\"\"\n  stopsByBbox(\n    \"\"\"Southern bound of the bounding box\"\"\"\n    minLat: Float!\n\n    \"\"\"Western bound of the bounding box\"\"\"\n    minLon: Float!\n\n    \"\"\"Northern bound of the bounding box\"\"\"\n    maxLat: Float!\n\n    \"\"\"Eastern bound of the bounding box\"\"\"\n    maxLon: Float!\n\n    \"\"\"Deprecated, use argument `feeds` instead\"\"\"\n    agency: String\n\n    \"\"\"List of feed ids from which stops are returned\"\"\"\n    feeds: [String!]\n  ): [Stop]\n\n  \"\"\"\n  Get all stops within the specified radius from a location. The returned type is a Relay connection (see https://facebook.github.io/relay/graphql/connections.htm). The stopAtDistance type has two values: stop and distance.\n  \"\"\"\n  stopsByRadius(\n    \"\"\"Latitude of the location (WGS 84)\"\"\"\n    lat: Float!\n\n    \"\"\"Longitude of the location (WGS 84)\"\"\"\n    lon: Float!\n\n    \"\"\"\n    Radius (in meters) to search for from the specified location. Note that this is walking distance along streets and paths rather than a geographic distance.\n    \"\"\"\n    radius: Int!\n\n    \"\"\"Deprecated, use argument `feeds` instead\"\"\"\n    agency: String\n\n    \"\"\"List of feed ids from which stops are returned\"\"\"\n    feeds: [String!]\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): stopAtDistanceConnection\n\n  \"\"\"\n  Get all places (stops, stations, etc. with coordinates) within the specified radius from a location. The returned type is a Relay connection (see https://facebook.github.io/relay/graphql/connections.htm). The placeAtDistance type has two fields: place and distance. The search is done by walking so the distance is according to the network of walkable streets and paths.\n  \"\"\"\n  nearest(\n    \"\"\"Latitude of the location (WGS 84)\"\"\"\n    lat: Float!\n\n    \"\"\"Longitude of the location (WGS 84)\"\"\"\n    lon: Float!\n\n    \"\"\"\n    Maximum distance (in meters) to search for from the specified location. Note that this is walking distance along streets and paths rather than a geographic distance. Default is 2000m\n    \"\"\"\n    maxDistance: Int = 2000\n\n    \"\"\"\n    Maximum number of results. Search is stopped when this limit is reached. Default is 20.\n    \"\"\"\n    maxResults: Int = 20\n\n    \"\"\"\n    Only return places that are one of these types, e.g. `STOP` or `BICYCLE_RENT`\n    \"\"\"\n    filterByPlaceTypes: [FilterPlaceType]\n\n    \"\"\"\n    Only return places that are related to one of these transport modes. This argument can be used to return e.g. only nearest railway stations or only nearest places related to bicycling.\n    \"\"\"\n    filterByModes: [Mode]\n\n    \"\"\"Only include places that match one of the given GTFS ids.\"\"\"\n    filterByIds: InputFilters\n    before: String\n    after: String\n    first: Int\n    last: Int\n  ): placeAtDistanceConnection\n\n  \"\"\"\n  Get a single departure row based on its ID (ID format is `FeedId:StopId:PatternId`)\n  \"\"\"\n  departureRow(id: String!): DepartureRow\n\n  \"\"\"\n  Get a single stop based on its ID, i.e. value of field `gtfsId` (ID format is `FeedId:StopId`)\n  \"\"\"\n  stop(id: String!): Stop\n\n  \"\"\"\n  Get a single station based on its ID, i.e. value of field `gtfsId` (format is `FeedId:StopId`)\n  \"\"\"\n  station(id: String!): Stop\n\n  \"\"\"Get all stations\"\"\"\n  stations(\n    \"\"\"Only return stations that match one of the ids in this list\"\"\"\n    ids: [String]\n\n    \"\"\"List of feeds from which stations are returned. Defaults to all feeds\"\"\"\n    feeds: [String!]\n\n    \"\"\"Query stations by name\"\"\"\n    name: String\n\n    \"\"\"Number of results to return when using `name` argument. Defaults to 10\"\"\"\n    maxResults: Int\n  ): [Stop]\n\n  \"\"\"Get all routes\"\"\"\n  routes(\n    \"\"\"Only return routes with these ids\"\"\"\n    ids: [String]\n\n    \"\"\"Only return routes with these feedIds\"\"\"\n    feeds: [String]\n\n    \"\"\"Query routes by this name\"\"\"\n    name: String\n\n    \"\"\"Deprecated, use argument `transportModes` instead.\"\"\"\n    modes: String\n\n    \"\"\"Only include routes, which use one of these modes\"\"\"\n    transportModes: [Mode]\n  ): [Route]\n\n  \"\"\"\n  Get a single route based on its ID, i.e. value of field `gtfsId` (format is `FeedId:RouteId`)\n  \"\"\"\n  route(id: String!): Route\n\n  \"\"\"Get all trips\"\"\"\n  trips(\n    \"\"\"Only return trips with these feedIds\"\"\"\n    feeds: [String]\n  ): [Trip]\n\n  \"\"\"\n  Get a single trip based on its ID, i.e. value of field `gtfsId` (format is `FeedId:TripId`)\n  \"\"\"\n  trip(id: String!): Trip\n\n  \"\"\"\n  Finds a trip matching the given parameters. This query type is useful if the id of a trip is not known, but other details uniquely identifying the trip are available from some source (e.g. MQTT vehicle positions).\n  \"\"\"\n  fuzzyTrip(\n    \"\"\"id of the route\"\"\"\n    route: String!\n\n    \"\"\"\n    Direction of the trip, possible values: 0, 1 or -1.  \n     -1 indicates that the direction is irrelevant, i.e. in case the route has trips only in one direction. See field `directionId` of Pattern.\n    \"\"\"\n    direction: Int = -1\n\n    \"\"\"Departure date of the trip, format: YYYY-MM-DD\"\"\"\n    date: String!\n\n    \"\"\"\n    Departure time of the trip, format: seconds since midnight of the departure date\n    \"\"\"\n    time: Int!\n  ): Trip\n\n  \"\"\"Get cancelled TripTimes.\"\"\"\n  cancelledTripTimes(\n    \"\"\"Feed feedIds (e.g. [\"HSL\"]).\"\"\"\n    feeds: [String]\n\n    \"\"\"Route gtfsIds (e.g. [\"HSL:1098\"]).\"\"\"\n    routes: [String]\n\n    \"\"\"TripPattern codes (e.g. [\"HSL:1098:1:01\"]).\"\"\"\n    patterns: [String]\n\n    \"\"\"Trip gtfsIds (e.g. [\"HSL:1098_20190405_Ma_2_1455\"]).\"\"\"\n    trips: [String]\n\n    \"\"\"\n    Only cancelled trip times scheduled to run on minDate or after are returned. Format: \"2019-12-23\" or \"20191223\".\n    \"\"\"\n    minDate: String\n\n    \"\"\"\n    Only cancelled trip times scheduled to run on maxDate or before are returned. Format: \"2019-12-23\" or \"20191223\".\n    \"\"\"\n    maxDate: String\n\n    \"\"\"\n    Only cancelled trip times that have first stop departure time at minDepartureTime or after are returned. Format: seconds since midnight of minDate.\n    \"\"\"\n    minDepartureTime: Int\n\n    \"\"\"\n    Only cancelled trip times that have first stop departure time at maxDepartureTime or before are returned. Format: seconds since midnight of maxDate.\n    \"\"\"\n    maxDepartureTime: Int\n\n    \"\"\"\n    Only cancelled trip times that have last stop arrival time at minArrivalTime or after are returned. Format: seconds since midnight of minDate.\n    \"\"\"\n    minArrivalTime: Int\n\n    \"\"\"\n    Only cancelled trip times that have last stop arrival time at maxArrivalTime or before are returned. Format: seconds since midnight of maxDate.\n    \"\"\"\n    maxArrivalTime: Int\n  ): [Stoptime]\n\n  \"\"\"Get all patterns\"\"\"\n  patterns: [Pattern]\n\n  \"\"\"\n  Get a single pattern based on its ID, i.e. value of field `code` (format is `FeedId:RouteId:DirectionId:PatternVariantNumber`)\n  \"\"\"\n  pattern(id: String!): Pattern\n\n  \"\"\"Get all clusters\"\"\"\n  clusters: [Cluster]\n\n  \"\"\"Get a single cluster based on its ID, i.e. value of field `gtfsId`\"\"\"\n  cluster(id: String!): Cluster\n\n  \"\"\"Get all active alerts\"\"\"\n  alerts(\n    \"\"\"Only return alerts in these feeds\"\"\"\n    feeds: [String!]\n\n    \"\"\"Only return alerts with these severity levels\"\"\"\n    severityLevel: [AlertSeverityLevelType!]\n\n    \"\"\"Only return alerts with these effects\"\"\"\n    effect: [AlertEffectType!]\n\n    \"\"\"Only return alerts with these causes\"\"\"\n    cause: [AlertCauseType!]\n\n    \"\"\"Only return alerts affecting these routes\"\"\"\n    route: [String!]\n\n    \"\"\"Only return alerts affecting these stops\"\"\"\n    stop: [String!]\n  ): [Alert]\n\n  \"\"\"Get the time range for which the API has data available\"\"\"\n  serviceTimeRange: serviceTimeRange\n\n  \"\"\"Get all bike rental stations\"\"\"\n  bikeRentalStations(\n    \"\"\"\n    Return bike rental stations with these ids.  \n     **Note:** if an id is invalid (or the bike rental station service is unavailable) the returned list will contain `null` values.\n    \"\"\"\n    ids: [String]\n  ): [BikeRentalStation]\n\n  \"\"\"\n  Get a single bike rental station based on its ID, i.e. value of field `stationId`\n  \"\"\"\n  bikeRentalStation(id: String!): BikeRentalStation\n\n  \"\"\"Get all bike parks\"\"\"\n  bikeParks: [BikePark]\n\n  \"\"\"\n  Get a single bike park based on its ID, i.e. value of field `bikeParkId`\n  \"\"\"\n  bikePark(id: String!): BikePark\n\n  \"\"\"Get all car parks\"\"\"\n  carParks(\n    \"\"\"\n    Return car parks with these ids.  \n     **Note:** if an id is invalid (or the car park service is unavailable) the returned list will contain `null` values.\n    \"\"\"\n    ids: [String]\n  ): [CarPark]\n\n  \"\"\"Get a single car park based on its ID, i.e. value of field `carParkId`\"\"\"\n  carPark(id: String!): CarPark\n\n  \"\"\"Needed until https://github.com/facebook/relay/issues/112 is resolved\"\"\"\n  viewer: QueryType\n\n  \"\"\"\n  Plans an itinerary from point A to point B based on the given arguments\n  \"\"\"\n  plan(\n    \"\"\"\n    Date of departure or arrival in format YYYY-MM-DD. Default value: current date\n    \"\"\"\n    date: String\n\n    \"\"\"\n    Time of departure or arrival in format hh:mm:ss. Default value: current time\n    \"\"\"\n    time: String\n\n    \"\"\"\n    The geographical location where the itinerary begins.  \n     Use either this argument or `fromPlace`, but not both.\n    \"\"\"\n    from: InputCoordinates\n\n    \"\"\"\n    The geographical location where the itinerary ends.  \n     Use either this argument or `toPlace`, but not both.\n    \"\"\"\n    to: InputCoordinates\n\n    \"\"\"\n    The place where the itinerary begins in format `name::place`, where `place` is either a lat,lng pair (e.g. `Pasila::60.199041,24.932928`) or a stop id (e.g. `Pasila::HSL:1000202`).  \n     Use either this argument or `from`, but not both.\n    \"\"\"\n    fromPlace: String\n\n    \"\"\"\n    The place where the itinerary ends in format `name::place`, where `place` is either a lat,lng pair (e.g. `Pasila::60.199041,24.932928`) or a stop id (e.g. `Pasila::HSL:1000202`).  \n     Use either this argument or `to`, but not both.\n    \"\"\"\n    toPlace: String\n\n    \"\"\"\n    Whether the itinerary must be wheelchair accessible. Default value: false\n    \"\"\"\n    wheelchair: Boolean\n\n    \"\"\"The maximum number of itineraries to return. Default value: 3.\"\"\"\n    numItineraries: Int = 3\n\n    \"\"\"\n    The maximum distance (in meters) the user is willing to walk per walking section. If the only transport mode allowed is `WALK`, then the value of this argument is ignored.  \n     Default: 2000m  \n     Maximum value: 15000m  \n     **Note:** If this argument has a relatively small value and only some transport modes are allowed (e.g. `WALK` and `RAIL`), it is possible to get an itinerary which has (useless) back and forth public transport legs to avoid walking too long distances.\n    \"\"\"\n    maxWalkDistance: Float\n\n    \"\"\"\n    The maximum time (in seconds) of pre-transit travel when using drive-to-transit (park and ride or kiss and ride). Default value: 1800.\n    \"\"\"\n    maxPreTransitTime: Int\n\n    \"\"\"\n    The maximum slope, up or downhill, that can be used in wheelchair accessible routing. Value is between 0 and 1, and calculated by dividing change of elevation by change of distance. Default value: 0.0833333333333\n    \"\"\"\n    maxSlope: Float\n\n    \"\"\"\n    How expensive it is to drive a car when car&parking, increase this value to make car driving legs shorter. Default value: 1.\n    \"\"\"\n    carParkCarLegWeight: Float\n\n    \"\"\"\n    How easily bad itineraries are filtered from results. Value 0 (default) disables filtering. Itineraries are filtered if they are worse than another one in some respect (e.g. more walking) by more than the percentage of filtering level, which is calculated by dividing 100% by the value of this argument (e.g. `itineraryFiltering = 0.5` \u2192 200% worse itineraries are filtered).\n    \"\"\"\n    itineraryFiltering: Float\n\n    \"\"\"\n    A multiplier for how bad walking is, compared to being in transit for equal lengths of time.Empirically, values between 10 and 20 seem to correspond well to the concept of not wanting to walk too much without asking for totally ridiculous itineraries, but this observation should in no way be taken as scientific or definitive. Your mileage may vary. Default value: 2.0 \n    \"\"\"\n    walkReluctance: Float\n\n    \"\"\"\n    How much more reluctant is the user to walk on streets with car traffic allowed. Default value: 1.0\n    \"\"\"\n    walkOnStreetReluctance: Float\n\n    \"\"\"\n    How much worse is waiting for a transit vehicle than being on a transit vehicle, as a multiplier. The default value treats wait and on-vehicle time as the same. It may be tempting to set this higher than walkReluctance (as studies often find this kind of preferences among riders) but the planner will take this literally and walk down a transit line to avoid waiting at a stop. This used to be set less than 1 (0.95) which would make waiting offboard preferable to waiting onboard in an interlined trip. That is also undesirable. If we only tried the shortest possible transfer at each stop to neighboring stop patterns, this problem could disappear. Default value: 1.0.\n    \"\"\"\n    waitReluctance: Float\n\n    \"\"\"\n    How much less bad is waiting at the beginning of the trip (replaces `waitReluctance` on the first boarding). Default value: 0.4\n    \"\"\"\n    waitAtBeginningFactor: Float\n\n    \"\"\"\n    Max walk speed along streets, in meters per second. Default value: 1.33\n    \"\"\"\n    walkSpeed: Float\n\n    \"\"\"Max bike speed along streets, in meters per second. Default value: 5.0\"\"\"\n    bikeSpeed: Float\n\n    \"\"\"Time to get on and off your own bike, in seconds. Default value: 0\"\"\"\n    bikeSwitchTime: Int\n\n    \"\"\"\n    Cost of getting on and off your own bike. Unit: seconds. Default value: 0\n    \"\"\"\n    bikeSwitchCost: Int\n\n    \"\"\"\n    Optimization type for bicycling legs, e.g. prefer flat terrain. Default value: `QUICK`\n    \"\"\"\n    optimize: OptimizeType\n\n    \"\"\"\n    Triangle optimization parameters for bicycling legs. Only effective when `optimize` is set to **TRIANGLE**.\n    \"\"\"\n    triangle: InputTriangle\n\n    \"\"\"\n    Whether the itinerary should depart at the specified time (false), or arrive to the destination at the specified time (true). Default value: false.\n    \"\"\"\n    arriveBy: Boolean\n\n    \"\"\"An ordered list of intermediate locations to be visited.\"\"\"\n    intermediatePlaces: [InputCoordinates]\n\n    \"\"\"\n    List of routes and agencies which are given higher preference when planning the itinerary\n    \"\"\"\n    preferred: InputPreferred\n\n    \"\"\"\n    List of routes and agencies which are given lower preference when planning the itinerary\n    \"\"\"\n    unpreferred: InputUnpreferred\n\n    \"\"\"\n    This prevents unnecessary transfers by adding a cost for boarding a vehicle. Unit: seconds. Default value: 600\n    \"\"\"\n    walkBoardCost: Int\n\n    \"\"\"\n    Separate cost for boarding a vehicle with a bicycle, which is more difficult than on foot. Unit: seconds. Default value: 600\n    \"\"\"\n    bikeBoardCost: Int\n\n    \"\"\"\n    List of routes, trips, agencies and stops which are not used in the itinerary\n    \"\"\"\n    banned: InputBanned\n\n    \"\"\"\n    An extra penalty added on transfers (i.e. all boardings except the first one). Not to be confused with bikeBoardCost and walkBoardCost, which are the cost of boarding a vehicle with and without a bicycle. The boardCosts are used to model the 'usual' perceived cost of using a transit vehicle, and the transferPenalty is used when a user requests even less transfers. In the latter case, we don't actually optimize for fewest transfers, as this can lead to absurd results. Consider a trip in New York from Grand Army Plaza (the one in Brooklyn) to Kalustyan's at noon. The true lowest transfers route is to wait until midnight, when the 4 train runs local the whole way. The actual fastest route is the 2/3 to the 4/5 at Nevins to the 6 at Union Square, which takes half an hour. Even someone optimizing for fewest transfers doesn't want to wait until midnight. Maybe they would be willing to walk to 7th Ave and take the Q to Union Square, then transfer to the 6. If this takes less than optimize_transfer_penalty seconds, then that's what we'll return. Default value: 0.\n    \"\"\"\n    transferPenalty: Int\n\n    \"\"\"\n    This argument has no use for itinerary planning and will be removed later.  \n     ~~When true, do not use goal direction or stop at the target, build a full SPT. Default value: false.~~\n    \"\"\"\n    batch: Boolean\n\n    \"\"\"\n    Deprecated, use `transportModes` instead.  \n     ~~The set of TraverseModes that a user is willing to use. Default value: WALK | TRANSIT.~~\n    \"\"\"\n    modes: String\n\n    \"\"\"\n    List of transportation modes that the user is willing to use. Default: `[\"WALK\",\"TRANSIT\"]`\n    \"\"\"\n    transportModes: [TransportMode]\n\n    \"\"\"\n    The weight multipliers for transit modes. WALK, BICYCLE, CAR, TRANSIT and LEG_SWITCH are not included.\n    \"\"\"\n    modeWeight: InputModeWeight\n\n    \"\"\"Is bike rental allowed? Default value: false\"\"\"\n    allowBikeRental: Boolean\n\n    \"\"\"\n    Invariant: `boardSlack + alightSlack <= transferSlack`. Default value: 0\n    \"\"\"\n    boardSlack: Int\n\n    \"\"\"\n    Invariant: `boardSlack + alightSlack <= transferSlack`. Default value: 0\n    \"\"\"\n    alightSlack: Int\n\n    \"\"\"\n    A global minimum transfer time (in seconds) that specifies the minimum amount of time that must pass between exiting one transit vehicle and boarding another. This time is in addition to time it might take to walk between transit stops. Default value: 0\n    \"\"\"\n    minTransferTime: Int\n\n    \"\"\"\n    Penalty (in seconds) for using a non-preferred transfer. Default value: 180\n    \"\"\"\n    nonpreferredTransferPenalty: Int\n\n    \"\"\"Maximum number of transfers. Default value: 2\"\"\"\n    maxTransfers: Int\n\n    \"\"\"\n    This argument has currently no effect on which itineraries are returned. Use argument `fromPlace` to start the itinerary from a specific stop.  \n     ~~A transit stop that this trip must start from~~\n    \"\"\"\n    startTransitStopId: String\n\n    \"\"\"\n    ID of the trip on which the itinerary starts. This argument can be used to plan itineraries when the user is already onboard a vehicle. When using this argument, arguments `time` and `from` should be set based on a vehicle position message received from the vehicle running the specified trip.  \n     **Note:** this argument only takes into account the route and estimated travel time of the trip (and therefore arguments `time` and `from` must be used correctly to get meaningful itineraries).\n    \"\"\"\n    startTransitTripId: String\n\n    \"\"\"\n    No effect on itinerary planning, adjust argument `time` instead to get later departures.  \n     ~~The maximum wait time in seconds the user is willing to delay trip start. Only effective in Analyst.~~\n    \"\"\"\n    claimInitialWait: Long\n\n    \"\"\"\n    **Consider this argument experimental** \u2013 setting this argument to true causes timeouts and unoptimal routes in many cases.  \n     When true, reverse optimize (find alternative transportation mode, which still arrives to the destination in time) this search on the fly after processing each transit leg, rather than reverse-optimizing the entire path when it's done. Default value: false.\n    \"\"\"\n    reverseOptimizeOnTheFly: Boolean\n\n    \"\"\"\n    When false, return itineraries using canceled trips. Default value: true.\n    \"\"\"\n    omitCanceled: Boolean = true\n\n    \"\"\"\n    When true, realtime updates are ignored during this search. Default value: false\n    \"\"\"\n    ignoreRealtimeUpdates: Boolean\n\n    \"\"\"\n    Only useful for testing and troubleshooting.  \n     ~~If true, the remaining weight heuristic is disabled. Currently only implemented for the long distance path service. Default value: false.~~\n    \"\"\"\n    disableRemainingWeightHeuristic: Boolean\n\n    \"\"\"\n    Two-letter language code (ISO 639-1) used for returned text.  \n     **Note:** only part of the data has translations available and names of stops and POIs are returned in their default language. Due to missing translations, it is sometimes possible that returned text uses a mixture of two languages.\n    \"\"\"\n    locale: String\n\n    \"\"\"\n    **Deprecated:** Use `allowedTicketTypes` instead.  \n    A comma-separated list of allowed ticket types.\n    \"\"\"\n    ticketTypes: String\n\n    \"\"\"\n    List of ticket types that are allowed to be used in itineraries.  \n    See `ticketTypes` query for list of possible ticket types.\n    \"\"\"\n    allowedTicketTypes: [String]\n\n    \"\"\"Tuning parameter for the search algorithm, mainly useful for testing.\"\"\"\n    heuristicStepsPerMainStep: Int\n\n    \"\"\"\n    Whether legs should be compacted by performing a reversed search.  \n     **Experimental argument, will be removed!**\n    \"\"\"\n    compactLegsByReversedSearch: Boolean\n\n    \"\"\"\n    Which bike rental networks can be used. By default, all networks are allowed.\n    \"\"\"\n    allowedBikeRentalNetworks: [String]\n  ): Plan\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n}\n\n\"\"\"\nA feed provides routing data (stops, routes, timetables, etc.) from one or more public transport agencies.\n\"\"\"\ntype Feed {\n  \"\"\"ID of the feed\"\"\"\n  feedId: String!\n\n  \"\"\"List of agencies which provide data to this feed\"\"\"\n  agencies: [Agency]\n}\n\n\"\"\"A public transport agency\"\"\"\ntype Agency implements Node {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"Agency feed and id\"\"\"\n  gtfsId: String!\n\n  \"\"\"Name of the agency\"\"\"\n  name: String!\n\n  \"\"\"URL to the home page of the agency\"\"\"\n  url: String!\n\n  \"\"\"ID of the time zone which this agency operates on\"\"\"\n  timezone: String!\n  lang: String\n\n  \"\"\"Phone number which customers can use to contact this agency\"\"\"\n  phone: String\n\n  \"\"\"URL to a web page which has information of fares used by this agency\"\"\"\n  fareUrl: String\n\n  \"\"\"List of routes operated by this agency\"\"\"\n  routes: [Route]\n\n  \"\"\"\n  List of alerts which have an effect on all operations of the agency (e.g. a strike)\n  \"\"\"\n  alerts: [Alert]\n}\n\n\"\"\"\nRoute represents a public transportation service, usually from point A to point B and *back*, shown to customers under a single name, e.g. bus 550. Routes contain patterns (see field `patterns`), which describe different variants of the route, e.g. outbound pattern from point A to point B and inbound pattern from point B to point A.\n\"\"\"\ntype Route implements Node {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"ID of the route in format `FeedId:RouteId`\"\"\"\n  gtfsId: String!\n\n  \"\"\"Agency operating the route\"\"\"\n  agency: Agency\n\n  \"\"\"Short name of the route, usually a line number, e.g. 550\"\"\"\n  shortName: String\n\n  \"\"\"Long name of the route, e.g. Helsinki-Lepp\u00e4vaara\"\"\"\n  longName: String\n\n  \"\"\"Transport mode of this route, e.g. `BUS`\"\"\"\n  mode: Mode\n\n  \"\"\"\n  The raw GTFS route type as a integer. For the list of possible values, see: https://developers.google.com/transit/gtfs/reference/#routestxt and https://developers.google.com/transit/gtfs/reference/extended-route-types\n  \"\"\"\n  type: Int\n  desc: String\n  url: String\n\n  \"\"\"\n  The color (in hexadecimal format) the agency operating this route would prefer to use on UI elements (e.g. polylines on a map) related to this route. This value is not available for most routes.\n  \"\"\"\n  color: String\n\n  \"\"\"\n  The color (in hexadecimal format) the agency operating this route would prefer to use when displaying text related to this route. This value is not available for most routes.\n  \"\"\"\n  textColor: String\n  bikesAllowed: BikesAllowed\n\n  \"\"\"List of patterns which operate on this route\"\"\"\n  patterns: [Pattern]\n\n  \"\"\"List of stops on this route\"\"\"\n  stops: [Stop]\n\n  \"\"\"List of trips which operate on this route\"\"\"\n  trips: [Trip]\n\n  \"\"\"List of alerts which have an effect on the route\"\"\"\n  alerts: [Alert]\n}\n\nenum Mode {\n  \"\"\"AIRPLANE\"\"\"\n  AIRPLANE\n\n  \"\"\"BICYCLE\"\"\"\n  BICYCLE\n\n  \"\"\"BUS\"\"\"\n  BUS\n\n  \"\"\"CABLE_CAR\"\"\"\n  CABLE_CAR\n\n  \"\"\"CAR\"\"\"\n  CAR\n\n  \"\"\"FERRY\"\"\"\n  FERRY\n\n  \"\"\"FUNICULAR\"\"\"\n  FUNICULAR\n\n  \"\"\"GONDOLA\"\"\"\n  GONDOLA\n\n  \"\"\"Only used internally. No use for API users.\"\"\"\n  LEG_SWITCH\n\n  \"\"\"RAIL\"\"\"\n  RAIL\n\n  \"\"\"SUBWAY\"\"\"\n  SUBWAY\n\n  \"\"\"TRAM\"\"\"\n  TRAM\n\n  \"\"\"A special transport mode, which includes all public transport.\"\"\"\n  TRANSIT\n\n  \"\"\"WALK\"\"\"\n  WALK\n}\n\nenum BikesAllowed {\n  \"\"\"There is no bike information for the trip.\"\"\"\n  NO_INFORMATION\n\n  \"\"\"\n  The vehicle being used on this particular trip can accommodate at least one bicycle.\n  \"\"\"\n  ALLOWED\n\n  \"\"\"No bicycles are allowed on this trip.\"\"\"\n  NOT_ALLOWED\n}\n\n\"\"\"\nPattern is sequence of stops used by trips on a specific direction and variant of a route. Most routes have only two patterns: one for outbound trips and one for inbound trips\n\"\"\"\ntype Pattern implements Node {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"The route this pattern runs on\"\"\"\n  route: Route!\n\n  \"\"\"\n  Direction of the pattern. Possible values: 0, 1 or -1.  \n   -1 indicates that the direction is irrelevant, i.e. the route has patterns only in one direction.\n  \"\"\"\n  directionId: Int\n\n  \"\"\"\n  Name of the pattern. Pattern name can be just the name of the route or it can include details of destination and origin stops.\n  \"\"\"\n  name: String\n\n  \"\"\"ID of the pattern\"\"\"\n  code: String!\n\n  \"\"\"Vehicle headsign used by trips of this pattern\"\"\"\n  headsign: String\n\n  \"\"\"Trips which run on this pattern\"\"\"\n  trips: [Trip!]\n\n  \"\"\"Trips which run on this pattern on the specified date\"\"\"\n  tripsForDate(\n    \"\"\"Deprecated, please switch to serviceDate instead\"\"\"\n    serviceDay: String\n\n    \"\"\"Return trips of the pattern active on this date. Format: YYYYMMDD\"\"\"\n    serviceDate: String\n  ): [Trip!]\n\n  \"\"\"List of stops served by this pattern\"\"\"\n  stops: [Stop!]\n  geometry: [Coordinates]\n\n  \"\"\"\n  Coordinates of the route of this pattern in Google polyline encoded format\n  \"\"\"\n  patternGeometry: Geometry\n\n  \"\"\"\n  Hash code of the pattern. This value is stable and not dependent on the pattern id, i.e. this value can be used to check whether two patterns are the same, even if their ids have changed.\n  \"\"\"\n  semanticHash: String\n\n  \"\"\"List of alerts which have an effect on trips of the pattern\"\"\"\n  alerts: [Alert]\n}\n\n\"\"\"\nTrip is a specific occurance of a pattern, usually identified by route, direction on the route and exact departure time.\n\"\"\"\ntype Trip implements Node {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"ID of the trip in format `FeedId:TripId`\"\"\"\n  gtfsId: String!\n\n  \"\"\"The route the trip is running on\"\"\"\n  route: Route!\n  serviceId: String\n\n  \"\"\"List of dates when this trip is in service. Format: YYYYMMDD\"\"\"\n  activeDates: [String]\n  tripShortName: String\n\n  \"\"\"Headsign of the vehicle when running on this trip\"\"\"\n  tripHeadsign: String\n\n  \"\"\"\n  Short name of the route this trip is running. See field `shortName` of Route.\n  \"\"\"\n  routeShortName: String\n\n  \"\"\"\n  Direction code of the trip, i.e. is this the outbound or inbound trip of a pattern. Possible values: 0, 1 or `null` if the direction is irrelevant, i.e. the pattern has trips only in one direction.\n  \"\"\"\n  directionId: String\n  blockId: String\n  shapeId: String\n\n  \"\"\"Whether the vehicle running this trip can be boarded by a wheelchair\"\"\"\n  wheelchairAccessible: WheelchairBoarding\n\n  \"\"\"Whether bikes are allowed on board the vehicle running this trip\"\"\"\n  bikesAllowed: BikesAllowed\n\n  \"\"\"The pattern the trip is running on\"\"\"\n  pattern: Pattern\n\n  \"\"\"List of stops this trip passes through\"\"\"\n  stops: [Stop!]!\n\n  \"\"\"\n  Hash code of the trip. This value is stable and not dependent on the trip id.\n  \"\"\"\n  semanticHash: String!\n\n  \"\"\"List of times when this trip arrives to or departs from a stop\"\"\"\n  stoptimes: [Stoptime]\n\n  \"\"\"Departure time from the first stop\"\"\"\n  departureStoptime(\n    \"\"\"\n    Date for which the departure time is returned. Format: YYYYMMDD. If this argument is not used, field `serviceDay` in the stoptime will have a value of 0.\n    \"\"\"\n    serviceDate: String\n  ): Stoptime\n\n  \"\"\"Arrival time to the final stop\"\"\"\n  arrivalStoptime(\n    \"\"\"\n    Date for which the arrival time is returned. Format: YYYYMMDD. If this argument is not used, field `serviceDay` in the stoptime will have a value of 0.\n    \"\"\"\n    serviceDate: String\n  ): Stoptime\n  stoptimesForDate(\n    \"\"\"Deprecated, please switch to serviceDate instead\"\"\"\n    serviceDay: String\n\n    \"\"\"Date for which stoptimes are returned. Format: YYYYMMDD\"\"\"\n    serviceDate: String\n  ): [Stoptime]\n\n  \"\"\"List of coordinates of this trip's route\"\"\"\n  geometry: [[Float]]\n\n  \"\"\"\n  Coordinates of the route of this trip in Google polyline encoded format\n  \"\"\"\n  tripGeometry: Geometry\n\n  \"\"\"List of alerts which have an effect on this trip\"\"\"\n  alerts: [Alert]\n}\n\nenum WheelchairBoarding {\n  \"\"\"There is no accessibility information for the stop.\"\"\"\n  NO_INFORMATION\n\n  \"\"\"\n  At least some vehicles at this stop can be boarded by a rider in a wheelchair.\n  \"\"\"\n  POSSIBLE\n\n  \"\"\"Wheelchair boarding is not possible at this stop.\"\"\"\n  NOT_POSSIBLE\n}\n\n\"\"\"\nStop can represent either a single public transport stop, where passengers can board and/or disembark vehicles, or a station, which contains multiple stops. See field `locationType`.\n\"\"\"\ntype Stop implements Node & PlaceInterface {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"Returns timetable of the specified pattern at this stop\"\"\"\n  stopTimesForPattern(\n    \"\"\"Id of the pattern\"\"\"\n    id: String!\n\n    \"\"\"\n    Return  departures after this time. Format: Unix timestamp in seconds. Default value: current time\n    \"\"\"\n    startTime: Long = 0\n\n    \"\"\"\n    Return stoptimes within this time range, starting from `startTime`. Unit: Seconds\n    \"\"\"\n    timeRange: Int = 86400\n    numberOfDepartures: Int = 2\n\n    \"\"\"If true, only those departures which allow boarding are returned\"\"\"\n    omitNonPickups: Boolean = false\n\n    \"\"\"If false, returns also canceled trips\"\"\"\n    omitCanceled: Boolean = true\n  ): [Stoptime]\n\n  \"\"\"\u00ccD of the stop in format `FeedId:StopId`\"\"\"\n  gtfsId: String!\n\n  \"\"\"Name of the stop, e.g. Pasilan asema\"\"\"\n  name: String!\n\n  \"\"\"Latitude of the stop (WGS 84)\"\"\"\n  lat: Float\n\n  \"\"\"Longitude of the stop (WGS 84)\"\"\"\n  lon: Float\n\n  \"\"\"Stop code which is visible at the stop\"\"\"\n  code: String\n\n  \"\"\"Description of the stop, usually a street name\"\"\"\n  desc: String\n\n  \"\"\"ID of the zone where this stop is located\"\"\"\n  zoneId: String\n  url: String\n\n  \"\"\"Identifies whether this stop represents a stop or station.\"\"\"\n  locationType: LocationType\n\n  \"\"\"\n  The station which this stop is part of (or null if this stop is not part of a station)\n  \"\"\"\n  parentStation: Stop\n\n  \"\"\"\n  Whether wheelchair boarding is possible for at least some of vehicles on this stop\n  \"\"\"\n  wheelchairBoarding: WheelchairBoarding\n  direction: String\n  timezone: String\n\n  \"\"\"\n  The raw GTFS route type used by routes which pass through this stop. For the list of possible values, see: https://developers.google.com/transit/gtfs/reference/#routestxt and https://developers.google.com/transit/gtfs/reference/extended-route-types\n  \"\"\"\n  vehicleType: Int\n\n  \"\"\"\n  Transport mode (e.g. `BUS`) used by routes which pass through this stop or `null` if mode cannot be determined, e.g. in case no routes pass through the stop.  \n   Note that also other types of vehicles may use the stop, e.g. tram replacement buses might use stops which have `TRAM` as their mode.\n  \"\"\"\n  vehicleMode: Mode\n\n  \"\"\"\n  Identifier of the platform, usually a number. This value is only present for stops that are part of a station\n  \"\"\"\n  platformCode: String\n\n  \"\"\"The cluster which this stop is part of\"\"\"\n  cluster: Cluster\n\n  \"\"\"\n  Returns all stops that are children of this station (Only applicable for stations)\n  \"\"\"\n  stops: [Stop]\n\n  \"\"\"Routes which pass through this stop\"\"\"\n  routes: [Route!]\n\n  \"\"\"Patterns which pass through this stop\"\"\"\n  patterns: [Pattern]\n\n  \"\"\"List of nearby stops which can be used for transfers\"\"\"\n  transfers(\n    \"\"\"\n    Maximum distance to the transfer stop. Defaults to unlimited.  \n     **Note:** only stops that are linked as a transfer stops to this stop are returned, i.e. this does not do a query to search for *all* stops within radius of `maxDistance`.\n    \"\"\"\n    maxDistance: Int\n  ): [stopAtDistance]\n\n  \"\"\"Returns list of stoptimes for the specified date\"\"\"\n  stoptimesForServiceDate(\n    \"\"\"Date in format YYYYMMDD\"\"\"\n    date: String\n\n    \"\"\"If true, only those departures which allow boarding are returned\"\"\"\n    omitNonPickups: Boolean = false\n\n    \"\"\"If false, returns also canceled trips\"\"\"\n    omitCanceled: Boolean = false\n  ): [StoptimesInPattern]\n\n  \"\"\"\n  Returns list of stoptimes (arrivals and departures) at this stop, grouped by patterns\n  \"\"\"\n  stoptimesForPatterns(\n    \"\"\"\n    Return departures after this time. Format: Unix timestamp in seconds. Default value: current time\n    \"\"\"\n    startTime: Long = 0\n\n    \"\"\"\n    Return stoptimes within this time range, starting from `startTime`. Unit: Seconds\n    \"\"\"\n    timeRange: Int = 86400\n    numberOfDepartures: Int = 5\n\n    \"\"\"If true, only those departures which allow boarding are returned\"\"\"\n    omitNonPickups: Boolean = false\n\n    \"\"\"If false, returns also canceled trips\"\"\"\n    omitCanceled: Boolean = true\n  ): [StoptimesInPattern]\n\n  \"\"\"Returns list of stoptimes (arrivals and departures) at this stop\"\"\"\n  stoptimesWithoutPatterns(\n    \"\"\"\n    Return departures after this time. Format: Unix timestamp in seconds. Default value: current time\n    \"\"\"\n    startTime: Long = 0\n\n    \"\"\"\n    Return stoptimes within this time range, starting from `startTime`. Unit: Seconds\n    \"\"\"\n    timeRange: Int = 86400\n    numberOfDepartures: Int = 5\n\n    \"\"\"If true, only those departures which allow boarding are returned\"\"\"\n    omitNonPickups: Boolean = false\n\n    \"\"\"If false, returns also canceled trips\"\"\"\n    omitCanceled: Boolean = true\n  ): [Stoptime]\n\n  \"\"\"List of alerts which have an effect on this stop\"\"\"\n  alerts: [Alert]\n}\n\n\"\"\"Long type\"\"\"\nscalar Long\n\n\"\"\"Identifies whether this stop represents a stop or station.\"\"\"\nenum LocationType {\n  \"\"\"A location where passengers board or disembark from a transit vehicle.\"\"\"\n  STOP\n\n  \"\"\"A physical structure or area that contains one or more stop.\"\"\"\n  STATION\n  ENTRANCE\n}\n\n\"\"\"Cluster is a list of stops grouped by name and proximity\"\"\"\ntype Cluster implements Node {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"ID of the cluster\"\"\"\n  gtfsId: String!\n\n  \"\"\"Name of the cluster\"\"\"\n  name: String!\n\n  \"\"\"\n  Latitude of the center of this cluster (i.e. average latitude of stops in this cluster)\n  \"\"\"\n  lat: Float!\n\n  \"\"\"\n  Longitude of the center of this cluster (i.e. average longitude of stops in this cluster)\n  \"\"\"\n  lon: Float!\n\n  \"\"\"List of stops in the cluster\"\"\"\n  stops: [Stop!]\n}\n\ntype stopAtDistance implements Node {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n  stop: Stop\n\n  \"\"\"Walking distance to the stop along streets and paths\"\"\"\n  distance: Int\n}\n\n\"\"\"Stoptimes grouped by pattern\"\"\"\ntype StoptimesInPattern {\n  pattern: Pattern\n  stoptimes: [Stoptime]\n}\n\n\"\"\"Alert of a current or upcoming disruption in public transportation\"\"\"\ntype Alert implements Node {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"hashcode from the original GTFS-RT alert\"\"\"\n  alertHash: Int\n\n  \"\"\"The feed in which this alert was published\"\"\"\n  feed: String\n\n  \"\"\"\n  Agency affected by the disruption. Note that this value is present only if the disruption has an effect on all operations of the agency (e.g. in case of a strike).\n  \"\"\"\n  agency: Agency\n\n  \"\"\"Route affected by the disruption\"\"\"\n  route: Route\n\n  \"\"\"Trip affected by the disruption\"\"\"\n  trip: Trip\n\n  \"\"\"Stop affected by the disruption\"\"\"\n  stop: Stop\n\n  \"\"\"Patterns affected by the disruption\"\"\"\n  patterns: [Pattern]\n\n  \"\"\"Header of the alert, if available\"\"\"\n  alertHeaderText: String\n\n  \"\"\"Header of the alert in all different available languages\"\"\"\n  alertHeaderTextTranslations: [TranslatedString!]!\n\n  \"\"\"Long description of the alert\"\"\"\n  alertDescriptionText: String!\n\n  \"\"\"Long descriptions of the alert in all different available languages\"\"\"\n  alertDescriptionTextTranslations: [TranslatedString!]!\n\n  \"\"\"Url with more information\"\"\"\n  alertUrl: String\n\n  \"\"\"Url with more information in all different available languages\"\"\"\n  alertUrlTranslations: [TranslatedString!]!\n\n  \"\"\"Alert effect\"\"\"\n  alertEffect: AlertEffectType\n\n  \"\"\"Alert cause\"\"\"\n  alertCause: AlertCauseType\n\n  \"\"\"Alert severity level\"\"\"\n  alertSeverityLevel: AlertSeverityLevelType\n\n  \"\"\"\n  Time when this alert comes into effect. Format: Unix timestamp in seconds\n  \"\"\"\n  effectiveStartDate: Long\n\n  \"\"\"\n  Time when this alert is not in effect anymore. Format: Unix timestamp in seconds\n  \"\"\"\n  effectiveEndDate: Long\n}\n\n\"\"\"Text with language\"\"\"\ntype TranslatedString {\n  text: String\n\n  \"\"\"Two-letter language code (ISO 639-1)\"\"\"\n  language: String\n}\n\n\"\"\"Effect of a alert\"\"\"\nenum AlertEffectType {\n  \"\"\"NO_SERVICE\"\"\"\n  NO_SERVICE\n\n  \"\"\"REDUCED_SERVICE\"\"\"\n  REDUCED_SERVICE\n\n  \"\"\"SIGNIFICANT_DELAYS\"\"\"\n  SIGNIFICANT_DELAYS\n\n  \"\"\"DETOUR\"\"\"\n  DETOUR\n\n  \"\"\"ADDITIONAL_SERVICE\"\"\"\n  ADDITIONAL_SERVICE\n\n  \"\"\"MODIFIED_SERVICE\"\"\"\n  MODIFIED_SERVICE\n\n  \"\"\"OTHER_EFFECT\"\"\"\n  OTHER_EFFECT\n\n  \"\"\"UNKNOWN_EFFECT\"\"\"\n  UNKNOWN_EFFECT\n\n  \"\"\"STOP_MOVED\"\"\"\n  STOP_MOVED\n\n  \"\"\"NO_EFFECT\"\"\"\n  NO_EFFECT\n}\n\n\"\"\"Cause of a alert\"\"\"\nenum AlertCauseType {\n  \"\"\"UNKNOWN_CAUSE\"\"\"\n  UNKNOWN_CAUSE\n\n  \"\"\"OTHER_CAUSE\"\"\"\n  OTHER_CAUSE\n\n  \"\"\"TECHNICAL_PROBLEM\"\"\"\n  TECHNICAL_PROBLEM\n\n  \"\"\"STRIKE\"\"\"\n  STRIKE\n\n  \"\"\"DEMONSTRATION\"\"\"\n  DEMONSTRATION\n\n  \"\"\"ACCIDENT\"\"\"\n  ACCIDENT\n\n  \"\"\"HOLIDAY\"\"\"\n  HOLIDAY\n\n  \"\"\"WEATHER\"\"\"\n  WEATHER\n\n  \"\"\"MAINTENANCE\"\"\"\n  MAINTENANCE\n\n  \"\"\"CONSTRUCTION\"\"\"\n  CONSTRUCTION\n\n  \"\"\"POLICE_ACTIVITY\"\"\"\n  POLICE_ACTIVITY\n\n  \"\"\"MEDICAL_EMERGENCY\"\"\"\n  MEDICAL_EMERGENCY\n}\n\n\"\"\"Severity level of a alert\"\"\"\nenum AlertSeverityLevelType {\n  \"\"\"Severity of alert is unknown\"\"\"\n  UNKNOWN_SEVERITY\n\n  \"\"\"\n  Info alerts are used for informational messages that should not have a significant effect on user's journey, for example: A single entrance to a metro station is temporarily closed.\n  \"\"\"\n  INFO\n\n  \"\"\"\n  Warning alerts are used when a single stop or route has a disruption that can affect user's journey, for example: All trams on a specific route are running with irregular schedules.\n  \"\"\"\n  WARNING\n\n  \"\"\"\n  Severe alerts are used when a significant part of public transport services is affected, for example: All train services are cancelled due to technical problems.\n  \"\"\"\n  SEVERE\n}\n\n\"\"\"Interface for places, e.g. stops, stations, parking areas..\"\"\"\ninterface PlaceInterface {\n  id: ID!\n\n  \"\"\"Latitude of the place (WGS 84)\"\"\"\n  lat: Float\n\n  \"\"\"Longitude of the place (WGS 84)\"\"\"\n  lon: Float\n}\n\n\"\"\"\nStoptime represents the time when a specific trip arrives to or departs from a specific stop.\n\"\"\"\ntype Stoptime {\n  \"\"\"The stop where this arrival/departure happens\"\"\"\n  stop: Stop\n\n  \"\"\"\n  Scheduled arrival time. Format: seconds since midnight of the departure date\n  \"\"\"\n  scheduledArrival: Int\n\n  \"\"\"\n  Realtime prediction of arrival time. Format: seconds since midnight of the departure date\n  \"\"\"\n  realtimeArrival: Int\n\n  \"\"\"\n  The offset from the scheduled arrival time in seconds. Negative values indicate that the trip is running ahead of schedule.\n  \"\"\"\n  arrivalDelay: Int\n\n  \"\"\"\n  Scheduled departure time. Format: seconds since midnight of the departure date\n  \"\"\"\n  scheduledDeparture: Int\n\n  \"\"\"\n  Realtime prediction of departure time. Format: seconds since midnight of the departure date\n  \"\"\"\n  realtimeDeparture: Int\n\n  \"\"\"\n  The offset from the scheduled departure time in seconds. Negative values indicate that the trip is running ahead of schedule\n  \"\"\"\n  departureDelay: Int\n\n  \"\"\"\n  true, if this stop is used as a time equalization stop. false otherwise.\n  \"\"\"\n  timepoint: Boolean\n\n  \"\"\"true, if this stoptime has real-time data available\"\"\"\n  realtime: Boolean\n\n  \"\"\"State of real-time data\"\"\"\n  realtimeState: RealtimeState\n\n  \"\"\"\n  Whether the vehicle can be boarded at this stop. This field can also be used to indicate if boarding is possible only with special arrangements.\n  \"\"\"\n  pickupType: PickupDropoffType\n\n  \"\"\"\n  Whether the vehicle can be disembarked at this stop. This field can also be used to indicate if disembarkation is possible only with special arrangements.\n  \"\"\"\n  dropoffType: PickupDropoffType\n\n  \"\"\"\n  Departure date of the trip. Format: Unix timestamp (local time) in seconds.\n  \"\"\"\n  serviceDay: Long\n\n  \"\"\"Trip which this stoptime is for\"\"\"\n  trip: Trip\n  stopHeadsign: String @deprecated(reason: \"Use headsign instead, will be removed in the future\")\n\n  \"\"\"\n  Vehicle headsign of the trip on this stop. Trip headsigns can change during the trip (e.g. on routes which run on loops), so this value should be used instead of `tripHeadsign` to display the headsign relevant to the user. \n  \"\"\"\n  headsign: String\n\n  \"\"\"The sequence number of the stop\"\"\"\n  stopSequence: Int\n}\n\nenum RealtimeState {\n  \"\"\"\n  The trip information comes from the GTFS feed, i.e. no real-time update has been applied.\n  \"\"\"\n  SCHEDULED\n\n  \"\"\"\n  The trip information has been updated, but the trip pattern stayed the same as the trip pattern of the scheduled trip.\n  \"\"\"\n  UPDATED\n\n  \"\"\"The trip has been canceled by a real-time update.\"\"\"\n  CANCELED\n\n  \"\"\"\n  The trip has been added using a real-time update, i.e. the trip was not present in the GTFS feed.\n  \"\"\"\n  ADDED\n\n  \"\"\"\n  The trip information has been updated and resulted in a different trip pattern compared to the trip pattern of the scheduled trip.\n  \"\"\"\n  MODIFIED\n}\n\nenum PickupDropoffType {\n  \"\"\"Regularly scheduled pickup / drop off.\"\"\"\n  SCHEDULED\n\n  \"\"\"No pickup / drop off available.\"\"\"\n  NONE\n\n  \"\"\"Must phone agency to arrange pickup / drop off.\"\"\"\n  CALL_AGENCY\n\n  \"\"\"Must coordinate with driver to arrange pickup / drop off.\"\"\"\n  COORDINATE_WITH_DRIVER\n}\n\ntype Geometry {\n  \"\"\"The number of points in the string\"\"\"\n  length: Int\n\n  \"\"\"\n  List of coordinates of in a Google encoded polyline format (see https://developers.google.com/maps/documentation/utilities/polylinealgorithm)\n  \"\"\"\n  points: Polyline\n}\n\n\"\"\"\nList of coordinates in an encoded polyline format (see https://developers.google.com/maps/documentation/utilities/polylinealgorithm). The value appears in JSON as a string.\n\"\"\"\nscalar Polyline\n\ntype Coordinates {\n  \"\"\"Latitude (WGS 84)\"\"\"\n  lat: Float\n\n  \"\"\"Longitude (WGS 84)\"\"\"\n  lon: Float\n}\n\n\"\"\"Describes ticket type\"\"\"\ntype TicketType implements Node {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"\n  Ticket type ID in format `FeedId:TicketTypeId`. Ticket type IDs are usually combination of ticket zones where the ticket is valid.\n  \"\"\"\n  fareId: ID!\n\n  \"\"\"Price of the ticket in currency that is specified in `currency` field\"\"\"\n  price: Float\n\n  \"\"\"ISO 4217 currency code\"\"\"\n  currency: String\n\n  \"\"\"\n  List of zones where this ticket is valid.\n    Corresponds to field `zoneId` in **Stop** type.\n  \"\"\"\n  zones: [String!]\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype stopAtDistanceConnection {\n  edges: [stopAtDistanceEdge]\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype stopAtDistanceEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: stopAtDistance\n\n  \"\"\"\"\"\"\n  cursor: String!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype placeAtDistanceConnection {\n  edges: [placeAtDistanceEdge]\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype placeAtDistanceEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: placeAtDistance\n\n  \"\"\"\"\"\"\n  cursor: String!\n}\n\ntype placeAtDistance implements Node {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n  place: PlaceInterface\n\n  \"\"\"Walking distance to the place along streets and paths\"\"\"\n  distance: Int\n}\n\nenum FilterPlaceType {\n  \"\"\"Stops\"\"\"\n  STOP\n\n  \"\"\"Departure rows\"\"\"\n  DEPARTURE_ROW\n\n  \"\"\"Bicycle rent stations\"\"\"\n  BICYCLE_RENT\n\n  \"\"\"Bike parks\"\"\"\n  BIKE_PARK\n\n  \"\"\"Car parks\"\"\"\n  CAR_PARK\n}\n\ninput InputFilters {\n  \"\"\"Stops to include by GTFS id.\"\"\"\n  stops: [String]\n\n  \"\"\"Routes to include by GTFS id.\"\"\"\n  routes: [String]\n\n  \"\"\"Bike rentals to include by id.\"\"\"\n  bikeRentalStations: [String]\n\n  \"\"\"Bike parks to include by id.\"\"\"\n  bikeParks: [String]\n\n  \"\"\"Car parks to include by id.\"\"\"\n  carParks: [String]\n}\n\n\"\"\"\nDeparture row is a location, which lists departures of a certain pattern from a stop. Departure rows are identified with the pattern, so querying departure rows will return only departures from one stop per pattern\n\"\"\"\ntype DepartureRow implements Node & PlaceInterface {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"Stop from which the departures leave\"\"\"\n  stop: Stop\n\n  \"\"\"Latitude of the stop (WGS 84)\"\"\"\n  lat: Float\n\n  \"\"\"Longitude of the stop (WGS 84)\"\"\"\n  lon: Float\n\n  \"\"\"Pattern of the departure row\"\"\"\n  pattern: Pattern\n\n  \"\"\"Departures of the pattern from the stop\"\"\"\n  stoptimes(\n    \"\"\"\n    Return rows departing after this time. Time format: Unix timestamp in seconds. Default: current time.\n    \"\"\"\n    startTime: Long = 0\n\n    \"\"\"How many seconds ahead to search for departures. Default is one day.\"\"\"\n    timeRange: Int = 86400\n\n    \"\"\"Maximum number of departures to return.\"\"\"\n    numberOfDepartures: Int = 1\n\n    \"\"\"If true, only those departures which allow boarding are returned\"\"\"\n    omitNonPickups: Boolean = false\n\n    \"\"\"If false, returns also canceled trips\"\"\"\n    omitCanceled: Boolean = true\n  ): [Stoptime]\n}\n\n\"\"\"Time range for which the API has data available\"\"\"\ntype serviceTimeRange {\n  \"\"\"\n  Time from which the API has data available. Format: Unix timestamp in seconds\n  \"\"\"\n  start: Long\n\n  \"\"\"\n  Time until which the API has data available. Format: Unix timestamp in seconds\n  \"\"\"\n  end: Long\n}\n\n\"\"\"\nBike rental station represents a location where users can rent bicycles for a fee.\n\"\"\"\ntype BikeRentalStation implements Node & PlaceInterface {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"ID of the bike rental station\"\"\"\n  stationId: String\n\n  \"\"\"Name of the bike rental station\"\"\"\n  name: String!\n\n  \"\"\"Number of bikes currently available on the rental station.\"\"\"\n  bikesAvailable: Int\n\n  \"\"\"\n  Number of free spaces currently available on the rental station.  \n   Note that this value being 0 does not necessarily indicate that bikes cannot be returned to this station, as it might be possible to leave the bike in the vicinity of the rental station, even if the bike racks don't have any spaces available (see field `allowDropoff`).\n  \"\"\"\n  spacesAvailable: Int\n\n  \"\"\"Nominal capacity (number of racks) of the rental station.\"\"\"\n  capacity: Int\n\n  \"\"\"\n  A description of the current state of this bike rental station, e.g. \"Station on\"\n  \"\"\"\n  state: String\n\n  \"\"\"\n  If true, values of `bikesAvailable` and `spacesAvailable` are updated from a real-time source. If false, values of `bikesAvailable` and `spacesAvailable` are always the total capacity divided by two.\n  \"\"\"\n  realtime: Boolean\n\n  \"\"\"If true, bikes can be returned to this station.\"\"\"\n  allowDropoff: Boolean\n\n  \"\"\"\n  If true, bikes can be returned even if spacesAvailable is zero or bikes > capacity.\n  \"\"\"\n  allowOverloading: Boolean\n\n  \"\"\"If true, this is a free floating bike.\"\"\"\n  isFloatingBike: Boolean\n\n  \"\"\"If true, this is a car rental system station.\"\"\"\n  isCarStation: Boolean\n  networks: [String]\n\n  \"\"\"Longitude of the bike rental station (WGS 84)\"\"\"\n  lon: Float\n\n  \"\"\"Latitude of the bike rental station (WGS 84)\"\"\"\n  lat: Float\n}\n\n\"\"\"Bike park represents a location where bicycles can be parked.\"\"\"\ntype BikePark implements Node & PlaceInterface {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"ID of the bike park\"\"\"\n  bikeParkId: String\n\n  \"\"\"Name of the bike park\"\"\"\n  name: String!\n\n  \"\"\"Number of spaces available for bikes\"\"\"\n  spacesAvailable: Int\n\n  \"\"\"\n  If true, value of `spacesAvailable` is updated from a real-time source.\n  \"\"\"\n  realtime: Boolean\n\n  \"\"\"Longitude of the bike park (WGS 84)\"\"\"\n  lon: Float\n\n  \"\"\"Latitude of the bike park (WGS 84)\"\"\"\n  lat: Float\n}\n\n\"\"\"Car park represents a location where cars can be parked.\"\"\"\ntype CarPark implements Node & PlaceInterface {\n  \"\"\"\n  Global object ID provided by Relay. This value can be used to refetch this object using **node** query.\n  \"\"\"\n  id: ID!\n\n  \"\"\"ID of the car park\"\"\"\n  carParkId: String\n\n  \"\"\"Name of the car park\"\"\"\n  name: String!\n\n  \"\"\"Number of parking spaces at the car park\"\"\"\n  maxCapacity: Int\n\n  \"\"\"Number of currently available parking spaces at the car park\"\"\"\n  spacesAvailable: Int\n\n  \"\"\"\n  If true, value of `spacesAvailable` is updated from a real-time source.\n  \"\"\"\n  realtime: Boolean\n\n  \"\"\"Longitude of the car park (WGS 84)\"\"\"\n  lon: Float\n\n  \"\"\"Latitude of the car park (WGS 84)\"\"\"\n  lat: Float\n}\n\ntype Plan {\n  \"\"\"The time and date of travel. Format: Unix timestamp in milliseconds.\"\"\"\n  date: Long\n\n  \"\"\"The origin\"\"\"\n  from: Place!\n\n  \"\"\"The destination\"\"\"\n  to: Place!\n\n  \"\"\"A list of possible itineraries\"\"\"\n  itineraries: [Itinerary]!\n\n  \"\"\"A list of possible error messages as enum\"\"\"\n  messageEnums: [String]!\n\n  \"\"\"A list of possible error messages in cleartext\"\"\"\n  messageStrings: [String]!\n\n  \"\"\"Information about the timings for the plan generation\"\"\"\n  debugOutput: debugOutput!\n}\n\ntype Place {\n  \"\"\"\n  For transit stops, the name of the stop. For points of interest, the name of the POI.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  Type of vertex. (Normal, Bike sharing station, Bike P+R, Transit stop) Mostly used for better localization of bike sharing and P+R station names\n  \"\"\"\n  vertexType: VertexType\n\n  \"\"\"Latitude of the place (WGS 84)\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude of the place (WGS 84)\"\"\"\n  lon: Float!\n\n  \"\"\"\n  The time the rider will arrive at the place. Format: Unix timestamp in milliseconds.\n  \"\"\"\n  arrivalTime: Long!\n\n  \"\"\"\n  The time the rider will depart the place. Format: Unix timestamp in milliseconds.\n  \"\"\"\n  departureTime: Long!\n\n  \"\"\"The stop related to the place.\"\"\"\n  stop: Stop\n\n  \"\"\"For transit stops, the sequence number of the stop.\"\"\"\n  stopSequence: Int\n\n  \"\"\"The bike rental station related to the place\"\"\"\n  bikeRentalStation: BikeRentalStation\n\n  \"\"\"The bike parking related to the place\"\"\"\n  bikePark: BikePark\n\n  \"\"\"The car parking related to the place\"\"\"\n  carPark: CarPark\n}\n\nenum VertexType {\n  \"\"\"NORMAL\"\"\"\n  NORMAL\n\n  \"\"\"TRANSIT\"\"\"\n  TRANSIT\n\n  \"\"\"BIKEPARK\"\"\"\n  BIKEPARK\n\n  \"\"\"BIKESHARE\"\"\"\n  BIKESHARE\n\n  \"\"\"PARKANDRIDE\"\"\"\n  PARKANDRIDE\n}\n\ntype Itinerary {\n  \"\"\"\n  Time when the user leaves from the origin. Format: Unix timestamp in milliseconds.\n  \"\"\"\n  startTime: Long\n\n  \"\"\"\n  Time when the user arrives to the destination.. Format: Unix timestamp in milliseconds.\n  \"\"\"\n  endTime: Long\n\n  \"\"\"Duration of the trip on this itinerary, in seconds.\"\"\"\n  duration: Long\n\n  \"\"\"How much time is spent waiting for transit to arrive, in seconds.\"\"\"\n  waitingTime: Long\n\n  \"\"\"How much time is spent walking, in seconds.\"\"\"\n  walkTime: Long\n\n  \"\"\"How far the user has to walk, in meters.\"\"\"\n  walkDistance: Float\n\n  \"\"\"\n  A list of Legs. Each Leg is either a walking (cycling, car) portion of the itinerary, or a transit leg on a particular vehicle. So a itinerary where the user walks to the Q train, transfers to the 6, then walks to their destination, has four legs.\n  \"\"\"\n  legs: [Leg]!\n\n  \"\"\"Information about the fares for this itinerary\"\"\"\n  fares: [fare]\n\n  \"\"\"\n  How much elevation is gained, in total, over the course of the itinerary, in meters.\n  \"\"\"\n  elevationGained: Float\n\n  \"\"\"\n  How much elevation is lost, in total, over the course of the itinerary, in meters.\n  \"\"\"\n  elevationLost: Float\n}\n\ntype Leg {\n  \"\"\"\n  The date and time when this leg begins. Format: Unix timestamp in milliseconds.\n  \"\"\"\n  startTime: Long\n\n  \"\"\"\n  The date and time when this leg ends. Format: Unix timestamp in milliseconds.\n  \"\"\"\n  endTime: Long\n\n  \"\"\"\n  For transit leg, the offset from the scheduled departure time of the boarding stop in this leg, i.e. scheduled time of departure at boarding stop = `startTime - departureDelay`\n  \"\"\"\n  departureDelay: Int\n\n  \"\"\"\n  For transit leg, the offset from the scheduled arrival time of the alighting stop in this leg, i.e. scheduled time of arrival at alighting stop = `endTime - arrivalDelay`\n  \"\"\"\n  arrivalDelay: Int\n\n  \"\"\"The mode (e.g. `WALK`) used when traversing this leg.\"\"\"\n  mode: Mode\n\n  \"\"\"The leg's duration in seconds\"\"\"\n  duration: Float\n\n  \"\"\"The leg's geometry.\"\"\"\n  legGeometry: Geometry\n\n  \"\"\"\n  For transit legs, the transit agency that operates the service used for this leg. For non-transit legs, `null`.\n  \"\"\"\n  agency: Agency\n\n  \"\"\"Whether there is real-time data about this Leg\"\"\"\n  realTime: Boolean\n\n  \"\"\"State of real-time data\"\"\"\n  realtimeState: RealtimeState\n\n  \"\"\"The distance traveled while traversing the leg in meters.\"\"\"\n  distance: Float\n\n  \"\"\"Whether this leg is a transit leg or not.\"\"\"\n  transitLeg: Boolean\n\n  \"\"\"Whether this leg is traversed with a rented bike.\"\"\"\n  rentedBike: Boolean\n\n  \"\"\"The Place where the leg originates.\"\"\"\n  from: Place!\n\n  \"\"\"The Place where the leg ends.\"\"\"\n  to: Place!\n\n  \"\"\"\n  For transit legs, the route that is used for traversing the leg. For non-transit legs, `null`.\n  \"\"\"\n  route: Route\n\n  \"\"\"\n  For transit legs, the trip that is used for traversing the leg. For non-transit legs, `null`.\n  \"\"\"\n  trip: Trip\n\n  \"\"\"\n  For transit legs, the service date of the trip. Format: YYYYMMDD. For non-transit legs, null.\n  \"\"\"\n  serviceDate: String\n\n  \"\"\"\n  Interlines with previous leg. This is true when the same vehicle is used for the previous leg as for this leg and passenger can stay inside the vehicle.\n  \"\"\"\n  interlineWithPreviousLeg: Boolean\n\n  \"\"\"\n  For transit legs, intermediate stops between the Place where the leg originates and the Place where the leg ends. For non-transit legs, null.\n  \"\"\"\n  intermediateStops: [Stop]\n\n  \"\"\"\n  For transit legs, intermediate stops between the Place where the leg originates and the Place where the leg ends. For non-transit legs, null. Returns Place type, which has fields for e.g. departure and arrival times\n  \"\"\"\n  intermediatePlaces: [Place]\n\n  \"\"\"\n  Whether the destination of this leg (field `to`) is one of the intermediate places specified in the query.\n  \"\"\"\n  intermediatePlace: Boolean\n  steps: [step]\n}\n\ntype step {\n  \"\"\"The distance in meters that this step takes.\"\"\"\n  distance: Float\n\n  \"\"\"The longitude of the start of the step.\"\"\"\n  lon: Float\n\n  \"\"\"The latitude of the start of the step.\"\"\"\n  lat: Float\n\n  \"\"\"The elevation profile as a list of { distance, elevation } values.\"\"\"\n  elevationProfile: [elevationProfileComponent]\n}\n\ntype elevationProfileComponent {\n  \"\"\"The distance from the start of the step, in meters.\"\"\"\n  distance: Float\n\n  \"\"\"The elevation at this distance, in meters.\"\"\"\n  elevation: Float\n}\n\ntype fare {\n  type: String\n\n  \"\"\"ISO 4217 currency code\"\"\"\n  currency: String\n\n  \"\"\"\n  Fare price in cents. **Note:** this value is dependent on the currency used, as one cent is not necessarily \u00b9/\u2081\u2080\u2080 of the basic monerary unit.\n  \"\"\"\n  cents: Int\n\n  \"\"\"Components which this fare is composed of\"\"\"\n  components: [fareComponent]\n}\n\n\"\"\"Component of the fare (i.e. ticket) for a part of the itinerary\"\"\"\ntype fareComponent {\n  \"\"\"ID of the ticket type. Corresponds to `fareId` in **TicketType**.\"\"\"\n  fareId: String\n\n  \"\"\"ISO 4217 currency code\"\"\"\n  currency: String\n\n  \"\"\"\n  Fare price in cents. **Note:** this value is dependent on the currency used, as one cent is not necessarily \u00b9/\u2081\u2080\u2080 of the basic monerary unit.\n  \"\"\"\n  cents: Int\n\n  \"\"\"List of routes which use this fare component\"\"\"\n  routes: [Route]\n}\n\ntype debugOutput {\n  totalTime: Long\n  pathCalculationTime: Long\n  precalculationTime: Long\n  renderingTime: Long\n  timedOut: Boolean\n}\n\ninput InputCoordinates {\n  \"\"\"Latitude of the place (WGS 84)\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude of the place (WGS 84)\"\"\"\n  lon: Float!\n\n  \"\"\"\n  The name of the place. If specified, the place name in results uses this value instead of `\"Origin\"` or `\"Destination\"`\n  \"\"\"\n  address: String\n\n  \"\"\"\n  The amount of time, in seconds, to spend at this location before venturing forth.\n  \"\"\"\n  locationSlack: Int\n}\n\n\"\"\"Optimization type for bicycling legs\"\"\"\nenum OptimizeType {\n  \"\"\"Prefer faster routes\"\"\"\n  QUICK\n\n  \"\"\"\n  Prefer safer routes, i.e. avoid crossing streets and use bike paths when possible\n  \"\"\"\n  SAFE\n\n  \"\"\"Prefer flat terrain\"\"\"\n  FLAT\n\n  \"\"\"GREENWAYS\"\"\"\n  GREENWAYS\n\n  \"\"\"\n  **TRIANGLE** optimization type can be used to set relative preferences of optimization factors. See argument `triangle`.\n  \"\"\"\n  TRIANGLE\n\n  \"\"\"\n  Deprecated, use argument `transferPenalty` to optimize for less transfers.\n  \"\"\"\n  TRANSFERS\n}\n\n\"\"\"\nRelative importances of optimization factors. Only effective for bicycling legs.  \n Invariant: `timeFactor + slopeFactor + safetyFactor == 1`\n\"\"\"\ninput InputTriangle {\n  \"\"\"Relative importance of safety\"\"\"\n  safetyFactor: Float\n\n  \"\"\"Relative importance of flat terrain\"\"\"\n  slopeFactor: Float\n\n  \"\"\"Relative importance of duration\"\"\"\n  timeFactor: Float\n}\n\ninput InputPreferred {\n  \"\"\"A comma-separated list of ids of the routes preferred by the user.\"\"\"\n  routes: String\n\n  \"\"\"A comma-separated list of ids of the agencies preferred by the user.\"\"\"\n  agencies: String\n\n  \"\"\"\n  Penalty added for using every route that is not preferred if user set any route as preferred. We return number of seconds that we are willing to wait for preferred route.\n  \"\"\"\n  otherThanPreferredRoutesPenalty: Int\n}\n\ninput InputUnpreferred {\n  \"\"\"A comma-separated list of ids of the routes unpreferred by the user.\"\"\"\n  routes: String\n\n  \"\"\"A comma-separated list of ids of the agencies unpreferred by the user.\"\"\"\n  agencies: String\n\n  \"\"\"\n  Penalty added for using route that is unpreferred, i.e. number of seconds that we are willing to wait for route that is unpreferred.\n  \"\"\"\n  useUnpreferredRoutesPenalty: Int\n}\n\ninput InputBanned {\n  \"\"\"A comma-separated list of banned route ids\"\"\"\n  routes: String\n\n  \"\"\"A comma-separated list of banned agency ids\"\"\"\n  agencies: String\n\n  \"\"\"A comma-separated list of banned trip ids\"\"\"\n  trips: String\n\n  \"\"\"\n  A comma-separated list of banned stop ids. Note that these stops are only banned for boarding and disembarking vehicles \u2014 it is possible to get an itinerary where a vehicle stops at one of these stops\n  \"\"\"\n  stops: String\n\n  \"\"\"\n  A comma-separated list of banned stop ids. Only itineraries where these stops are not travelled through are returned, e.g. if a bus route stops at one of these stops, that route will not be used in the itinerary, even if the stop is not used for boarding or disembarking the vehicle. \n  \"\"\"\n  stopsHard: String\n}\n\n\"\"\"Transportation mode which can be used in the itinerary\"\"\"\ninput TransportMode {\n  mode: Mode!\n\n  \"\"\"Optional additional qualifier for transport mode, e.g. `RENT`\"\"\"\n  qualifier: Qualifier\n}\n\n\"\"\"\nAdditional qualifier for a transport mode.  \n Note that qualifiers can only be used with certain transport modes.\n\"\"\"\nenum Qualifier {\n  \"\"\"The vehicle used for transport can be rented\"\"\"\n  RENT\n\n  \"\"\"\n  ~~HAVE~~  \n   **Currently not used**\n  \"\"\"\n  HAVE\n\n  \"\"\"\n  The vehicle used must be left to a parking area before continuing the journey. This qualifier is usable with transport modes `CAR` and `BICYCLE`.  \n   Note that the vehicle is only parked if the journey is continued with public transportation (e.g. if only `CAR` and `WALK` transport modes are allowed to be used, the car will not be parked as it is used for the whole journey).\n  \"\"\"\n  PARK\n\n  \"\"\"\n  ~~KEEP~~  \n   **Currently not used**\n  \"\"\"\n  KEEP\n\n  \"\"\"The user can be picked up by someone else riding a vehicle\"\"\"\n  PICKUP\n}\n\ninput InputModeWeight {\n  \"\"\"\n  The weight of TRAM traverse mode. Values over 1 add cost to tram travel and values under 1 decrease cost\n  \"\"\"\n  TRAM: Float\n\n  \"\"\"\n  The weight of SUBWAY traverse mode. Values over 1 add cost to subway travel and values under 1 decrease cost\n  \"\"\"\n  SUBWAY: Float\n\n  \"\"\"\n  The weight of RAIL traverse mode. Values over 1 add cost to rail travel and values under 1 decrease cost\n  \"\"\"\n  RAIL: Float\n\n  \"\"\"\n  The weight of BUS traverse mode. Values over 1 add cost to bus travel and values under 1 decrease cost\n  \"\"\"\n  BUS: Float\n\n  \"\"\"\n  The weight of FERRY traverse mode. Values over 1 add cost to ferry travel and values under 1 decrease cost\n  \"\"\"\n  FERRY: Float\n\n  \"\"\"\n  The weight of CABLE_CAR traverse mode. Values over 1 add cost to cable car travel and values under 1 decrease cost\n  \"\"\"\n  CABLE_CAR: Float\n\n  \"\"\"\n  The weight of GONDOLA traverse mode. Values over 1 add cost to gondola travel and values under 1 decrease cost\n  \"\"\"\n  GONDOLA: Float\n\n  \"\"\"\n  The weight of FUNICULAR traverse mode. Values over 1 add cost to funicular travel and values under 1 decrease cost\n  \"\"\"\n  FUNICULAR: Float\n\n  \"\"\"\n  The weight of AIRPLANE traverse mode. Values over 1 add cost to airplane travel and values under 1 decrease cost\n  \"\"\"\n  AIRPLANE: Float\n}",
    "EHRI": "schema {\n  query: Root\n}\n\n\"\"\"This directive allows results to be deferred during execution\"\"\"\ndirective @defer on FIELD\n\ntype Root {\n  \"\"\"Fetch a single documentary unit\"\"\"\n  DocumentaryUnit(\n    \"\"\"An item string identifier\"\"\"\n    id: ID!\n  ): DocumentaryUnit\n\n  \"\"\"Fetch a single repository\"\"\"\n  Repository(\n    \"\"\"An item string identifier\"\"\"\n    id: ID!\n  ): Repository\n\n  \"\"\"Fetch a single country\"\"\"\n  Country(\n    \"\"\"An item string identifier\"\"\"\n    id: ID!\n  ): Country\n\n  \"\"\"Fetch a single historical agent\"\"\"\n  HistoricalAgent(\n    \"\"\"An item string identifier\"\"\"\n    id: ID!\n  ): HistoricalAgent\n\n  \"\"\"Fetch a single authority set\"\"\"\n  AuthoritativeSet(\n    \"\"\"An item string identifier\"\"\"\n    id: ID!\n  ): AuthoritativeSet\n\n  \"\"\"Fetch a single concept\"\"\"\n  CvocConcept(\n    \"\"\"An item string identifier\"\"\"\n    id: ID!\n  ): CvocConcept\n\n  \"\"\"Fetch a single vocabulary\"\"\"\n  CvocVocabulary(\n    \"\"\"An item string identifier\"\"\"\n    id: ID!\n  ): CvocVocabulary\n\n  \"\"\"Fetch a single annotation\"\"\"\n  Annotation(\n    \"\"\"An item string identifier\"\"\"\n    id: ID!\n  ): Annotation\n\n  \"\"\"Fetch a single link\"\"\"\n  Link(\n    \"\"\"An item string identifier\"\"\"\n    id: ID!\n  ): Link\n\n  \"\"\"A page of documentary unit items\"\"\"\n  documentaryUnits(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n\n    \"\"\"Fetch only top-level items, not items at all levels\"\"\"\n    topLevel: Boolean = false\n  ): documentaryUnits\n\n  \"\"\"A page of top level documentary unit items\"\"\"\n  topLevelDocumentaryUnits(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): documentaryUnits @deprecated(reason: \"Use 'topLevel' argument to 'documentaryUnits' field instead\")\n\n  \"\"\"A page of repositories\"\"\"\n  repositories(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): repositories\n\n  \"\"\"A page of historical agents\"\"\"\n  historicalAgents(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): historicalAgents\n\n  \"\"\"A page of country items\"\"\"\n  countries(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): countries\n\n  \"\"\"A page of authoritative set items\"\"\"\n  authoritativeSets(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): authoritativeSets\n\n  \"\"\"A page of concept items\"\"\"\n  concepts(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): concepts\n\n  \"\"\"A page of vocabulary items\"\"\"\n  vocabularies(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): vocabularies\n\n  \"\"\"A page of annotation items\"\"\"\n  annotations(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): annotations\n\n  \"\"\"A page of links\"\"\"\n  links(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): links\n}\n\n\"\"\"An archival unit\"\"\"\ntype DocumentaryUnit implements Entity & Described & Linkable & Annotatable & Temporal {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"The item's local identifier\"\"\"\n  identifier: String\n\n  \"\"\"The item's descriptions\"\"\"\n  descriptions: [DocumentaryUnitDescription]\n\n  \"\"\"\n  Fetch the description at given the given index, or that with the given languageCode and/or identifier code. Since the default index is 1, no arguments will return the first available description\n  \"\"\"\n  description(\n    \"\"\"The description's language code\"\"\"\n    languageCode: String\n\n    \"\"\"The description's identifier code\"\"\"\n    identifier: String\n\n    \"\"\"The description's 1-based index index (default: 1)\"\"\"\n    at: Int = 1\n  ): DocumentaryUnitDescription\n\n  \"\"\"The unit's repository, if top level\"\"\"\n  repository: Repository\n\n  \"\"\"The number of child items this item contains\"\"\"\n  itemCount: Int!\n\n  \"\"\"The unit's child items\"\"\"\n  children(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n\n    \"\"\"Fetch all lower level items, not just those at the next level\"\"\"\n    all: Boolean = false\n  ): documentaryUnits\n\n  \"\"\"The unit's parent item, if applicable\"\"\"\n  parent: DocumentaryUnit\n\n  \"\"\"The unit's parent items, as a list\"\"\"\n  ancestors: [DocumentaryUnit]\n\n  \"\"\"This item's links\"\"\"\n  links: [Link]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n\n  \"\"\"Related items\"\"\"\n  related: [Relationship]\n\n  \"\"\"Events describing this item's digital curation\"\"\"\n  systemEvents: [SystemEvent]\n}\n\n\"\"\"An archival description with a specific language\"\"\"\ntype DocumentaryUnitDescription implements Description & TemporalDescription {\n  \"\"\"The description's language code\"\"\"\n  languageCode: String\n\n  \"\"\"The description's title\"\"\"\n  name: String\n\n  \"\"\"The description's (optional) identifier\"\"\"\n  identifier: String\n\n  \"\"\"Access points associated with this description\"\"\"\n  accessPoints: [AccessPoint]\n\n  \"\"\"Date periods associated with this description\"\"\"\n  dates: [DatePeriod]\n\n  \"\"\"To explain how the description was prepared and by whom.\"\"\"\n  archivistNote: String\n\n  \"\"\"\n  Provides information on the history of the unit of description that is significant for its authenticity, integrity and interpretation.\n  \"\"\"\n  archivalHistory: String\n\n  \"\"\"To identify the immediate source of acquisition or transfer.\"\"\"\n  acquisition: String\n\n  \"\"\"\n  To provide information on any appraisal, destruction and scheduling action.\n  \"\"\"\n  appraisal: String\n\n  \"\"\"To inform the user of foreseen additions to the unit of description.\"\"\"\n  accruals: String\n\n  \"\"\"\n  Provides an administrative history of, or biographical details on, the creator (or creators) of the unit of description to place the material in context and make it better understood.\n  \"\"\"\n  biographicalHistory: String\n\n  \"\"\"\n  To provide information on the legal status or other regulations that restrict or affect access to the unit of description.\n  \"\"\"\n  conditionsOfAccess: String\n\n  \"\"\"\n  To identify any restrictions on reproduction of the unit of description.\n  \"\"\"\n  conditionsOfReproduction: String\n\n  \"\"\"To indicate when this description was prepared and/or revised.\"\"\"\n  datesOfDescriptions: String\n\n  \"\"\"\n  To identify and describe:\n  1. the physical or logical extent and\n  2. the medium of the unit of description.\n  \"\"\"\n  extentAndMedium: String\n\n  \"\"\"!IsadG.levelOfDescription.description!\"\"\"\n  levelOfDescription: String\n\n  \"\"\"To identify related units of description.\"\"\"\n  relatedUnitsOfDescription: String\n\n  \"\"\"\n  To provide information about any important physical characteristics or technical requirements that affect use of the unit of description.\n  \"\"\"\n  physicalCharacteristics: String\n\n  \"\"\"\n  To identify any publications that are about or are based on the use, study, or analysis of the unit of description.\n  \"\"\"\n  publicationNote: String\n\n  \"\"\"To identify the protocols on which the description is based.\"\"\"\n  rulesAndConventions: String\n\n  \"\"\"\n  Enables users to judge the potential relevance of the unit of description.\n  \"\"\"\n  scopeAndContent: String\n\n  \"\"\"\n  Information about materials that are associated by provenance to the described materials but that have been physically separated or removed. Items may be separated for various reasons, including the dispersal of special formats to more appropriate custodial units; the outright destruction of duplicate or nonessential material; and the deliberate or unintentional scattering of fonds among different repositories.\n  \"\"\"\n  separatedUnitsOfDescription: String\n\n  \"\"\"\n  To provide information on the internal structure, the order and/or the system of classification of the unit of description.\n  \"\"\"\n  systemOfArrangement: String\n\n  \"\"\"To identify any finding aids to the unit of description.\"\"\"\n  findingAids: [String]\n\n  \"\"\"To identify the language(s) employed in the unit of description.\"\"\"\n  languageOfMaterial: [String]\n\n  \"\"\"\n  To indicate the existence, location, availability and/or destruction of originals where the unit of description consists of copies.\n  \"\"\"\n  locationOfOriginals: [String]\n\n  \"\"\"\n  To indicate the existence, location and availability of copies of the unit of description.\n  \"\"\"\n  locationOfCopies: [String]\n\n  \"\"\"\n  The physical location or shelf number of the item(s) within their repository or holding institution. (No direct ISAD(G) field equivalent.)\n  \"\"\"\n  physicalLocation: [String]\n\n  \"\"\"\n  To provide information that cannot be accommodated in any of the other areas.\n  \"\"\"\n  notes: [String]\n\n  \"\"\"To identify the script(s) employed in the unit of description.\"\"\"\n  scriptOfMaterial: [String]\n\n  \"\"\"\n  Record notes on sources consulted in preparing the description and who prepared it.\n  \"\"\"\n  sources: [String]\n\n  \"\"\"!IsadG.unitDates.description!\"\"\"\n  unitDates: [String]\n}\n\n\"\"\"A language-specific item description\"\"\"\ninterface Description {\n  \"\"\"The description's language code\"\"\"\n  languageCode: String\n\n  \"\"\"The description's title\"\"\"\n  name: String\n\n  \"\"\"The description's (optional) identifier\"\"\"\n  identifier: String\n}\n\n\"\"\"A language-specific item description with dates\"\"\"\ninterface TemporalDescription {\n  \"\"\"The description's language code\"\"\"\n  languageCode: String\n\n  \"\"\"The description's title\"\"\"\n  name: String\n\n  \"\"\"The description's (optional) identifier\"\"\"\n  identifier: String\n\n  \"\"\"Date periods associated with this description\"\"\"\n  dates: [DatePeriod]\n}\n\n\"\"\"A repository or archival institution\"\"\"\ntype Repository implements Entity & Described & Linkable & Annotatable {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"The repository's EHRI identifier\"\"\"\n  identifier: String\n\n  \"\"\"The number of child items this item contains\"\"\"\n  itemCount: Int!\n\n  \"\"\"The repository's top level documentary units\"\"\"\n  documentaryUnits(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n\n    \"\"\"Fetch all lower level items, not just those at the next level\"\"\"\n    all: Boolean = false\n  ): documentaryUnits\n\n  \"\"\"A geographical latitude reference\"\"\"\n  latitude: BigDecimal\n\n  \"\"\"A geographical longitude reference\"\"\"\n  longitude: BigDecimal\n\n  \"\"\"\n  Fetch the description at given the given index, or that with the given languageCode and/or identifier code. Since the default index is 1, no arguments will return the first available description\n  \"\"\"\n  description(\n    \"\"\"The description's language code\"\"\"\n    languageCode: String\n\n    \"\"\"The description's identifier code\"\"\"\n    identifier: String\n\n    \"\"\"The description's 1-based index index (default: 1)\"\"\"\n    at: Int = 1\n  ): RepositoryDescription\n\n  \"\"\"The item's descriptions\"\"\"\n  descriptions: [RepositoryDescription]\n\n  \"\"\"The country in which the repository is located\"\"\"\n  country: Country\n\n  \"\"\"This item's links\"\"\"\n  links: [Link]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n\n  \"\"\"Related items\"\"\"\n  related: [Relationship]\n\n  \"\"\"Events describing this item's digital curation\"\"\"\n  systemEvents: [SystemEvent]\n}\n\n\"\"\"A connection cursor\"\"\"\nscalar Cursor\n\n\"\"\"Built-in java.math.BigDecimal\"\"\"\nscalar BigDecimal\n\n\"\"\"A repository description with a specific language\"\"\"\ntype RepositoryDescription implements Description {\n  \"\"\"The description's language code\"\"\"\n  languageCode: String\n\n  \"\"\"The description's title\"\"\"\n  name: String\n\n  \"\"\"The description's (optional) identifier\"\"\"\n  identifier: String\n\n  \"\"\"Access points associated with this description\"\"\"\n  accessPoints: [AccessPoint]\n\n  \"\"\"Addresses associated with this repository\"\"\"\n  addresses: [Address]\n\n  \"\"\"!Isdiah.typeOfEntity.description!\"\"\"\n  typeOfEntity: String\n\n  \"\"\"\n  To provide a concise history of the institution with archival holdings.\n  \"\"\"\n  history: String\n\n  \"\"\"\n  To provide information about the geographical and cultural context of the institution with archival holdings.\n  \"\"\"\n  geoculturalContext: String\n\n  \"\"\"\n  To indicate the sources of authority for the institution with archival holdings in terms of its powers, functions, responsibilities or sphere of activities, including territorial.\n  \"\"\"\n  mandates: String\n\n  \"\"\"\n  To represent the current administrative structure of the institution with archival holdings.\n  \"\"\"\n  administrativeStructure: String\n\n  \"\"\"\n  To provide information about the records management and collecting policies of the institution with archival holdings.\n  \"\"\"\n  records: String\n\n  \"\"\"\n  To provide information about the building(s) of the institution with archival holdings.\n  \"\"\"\n  buildings: String\n\n  \"\"\"To provide a profile of the holdings of the institution.\"\"\"\n  holdings: String\n\n  \"\"\"\n  To provide a general overview of the published and/or unpublished finding aids and guides prepared by the institution with archival holdings and any other relevant publications.\n  \"\"\"\n  findingAids: String\n\n  \"\"\"To provide information on opening times and dates of annual closures.\"\"\"\n  openingTimes: String\n\n  \"\"\"\n  To provide information about the conditions, requirements and procedures for access to, and use of institutional services.\n  \"\"\"\n  conditions: String\n\n  \"\"\"\n  To provide accessibility information related to the institution with archival holdings and its services.\n  \"\"\"\n  accessibility: String\n\n  \"\"\"\n  To describe the research services provided by the institution with archival holdings.\n  \"\"\"\n  researchServices: String\n\n  \"\"\"To provide information about reproduction services.\"\"\"\n  reproductionServices: String\n\n  \"\"\"\n  To provide information about areas of the institution available for public use.\n  \"\"\"\n  publicAreas: String\n\n  \"\"\"\n  To identify the national or international conventions or rules applied in creating the description.\n  \"\"\"\n  rulesAndConventions: String\n\n  \"\"\"\n  To indicate the drafting status of the description so that users can understand the current status of the description.\n  \"\"\"\n  status: String\n\n  \"\"\"!Isdiah.datesOfDescriptions.description!\"\"\"\n  datesOfDescriptions: String\n\n  \"\"\"\n  To document additional information relating to the creation of and changes to the description.\n  \"\"\"\n  maintenanceNotes: String\n\n  \"\"\"\n  To indicate any other name(s) for the institution with archival holdings not used elsewhere in the Identity Area.\n  \"\"\"\n  otherFormsOfName: [String]\n\n  \"\"\"\n  To indicate the various forms in which the authorised form of name of an institution with archival holdings occurs in other languages or script form(s).\n  \"\"\"\n  parallelFormsOfName: [String]\n\n  \"\"\"\n  To indicate the language(s) used to create the description of the institution with archival holdings.\n  \"\"\"\n  languages: [String]\n\n  \"\"\"\n  To indicate the script(s) used to create the description of the institution with archival holdings.\n  \"\"\"\n  scripts: [String]\n\n  \"\"\"\n  To indicate the sources consulted in creating the description of the institution with archival holdings.\n  \"\"\"\n  sources: [String]\n}\n\n\"\"\"An address\"\"\"\ntype Address {\n  \"\"\"Provides information needed to contact members of staff.\"\"\"\n  contactPerson: String\n\n  \"\"\"The institution's street address.\"\"\"\n  street: String\n\n  \"\"\"The city in which this institution resides.\"\"\"\n  municipality: String\n\n  \"\"\"Autonomous community or region\"\"\"\n  firstdem: String\n\n  \"\"\"\n  The ISO639-2 code for the country in which this institution is located.\n  \"\"\"\n  countryCode: String\n\n  \"\"\"The institution''s postal code.\"\"\"\n  postalCode: String\n\n  \"\"\"Provides the means to contact an institution via email.\"\"\"\n  email: [String]\n\n  \"\"\"Provides the means to contact an institution via telephone.\"\"\"\n  telephone: [String]\n\n  \"\"\"Provides the means to contact an institution via fax.\"\"\"\n  fax: [String]\n\n  \"\"\"The URL of the intitution''s web page.\"\"\"\n  webpage: [String]\n}\n\n\"\"\"A related item, incorporating both a target and the link context\"\"\"\ntype Relationship {\n  \"\"\"The link object providing context for this relationship\"\"\"\n  context: Link\n\n  \"\"\"The related item\"\"\"\n  item: Linkable\n}\n\n\"\"\"A type that can be linked to other items\"\"\"\ninterface Linkable {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"This item's links\"\"\"\n  links: [Link]\n}\n\n\"\"\"An entity\"\"\"\ninterface Entity {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n}\n\n\"\"\"An item with multi-lingual descriptions\"\"\"\ninterface Described {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"\n  Fetch the description at given the given index, or that with the given languageCode and/or identifier code. Since the default index is 1, no arguments will return the first available description\n  \"\"\"\n  description(\n    \"\"\"The description's language code\"\"\"\n    languageCode: String\n\n    \"\"\"The description's identifier code\"\"\"\n    identifier: String\n\n    \"\"\"The description's 1-based index index (default: 1)\"\"\"\n    at: Int = 1\n  ): Description\n\n  \"\"\"The item's descriptions\"\"\"\n  descriptions: [Description]\n\n  \"\"\"The item's local identifier\"\"\"\n  identifier: String\n\n  \"\"\"This item's links\"\"\"\n  links: [Link]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n}\n\n\"\"\"A type that can be annotated\"\"\"\ninterface Annotatable {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n}\n\n\"\"\"A type with descriptions that have temporal data\"\"\"\ninterface Temporal {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"The item's local identifier\"\"\"\n  identifier: String\n\n  \"\"\"\n  Fetch the description at given the given index, or that with the given languageCode and/or identifier code. Since the default index is 1, no arguments will return the first available description\n  \"\"\"\n  description(\n    \"\"\"The description's language code\"\"\"\n    languageCode: String\n\n    \"\"\"The description's identifier code\"\"\"\n    identifier: String\n\n    \"\"\"The description's 1-based index index (default: 1)\"\"\"\n    at: Int = 1\n  ): TemporalDescription\n\n  \"\"\"The item's descriptions\"\"\"\n  descriptions: [TemporalDescription]\n}\n\n\"\"\"An item representing a country\"\"\"\ntype Country implements Entity & Annotatable {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"The country's ISO639-2 code\"\"\"\n  identifier: String\n\n  \"\"\"The country's English Name\"\"\"\n  name: String!\n\n  \"\"\"Provides a general overview of the country''s history.\"\"\"\n  history: String\n\n  \"\"\"Provides a short overview of the archival situation.\"\"\"\n  situation: String\n\n  \"\"\"Provides a summary of the relevant available information.\"\"\"\n  summary: String\n\n  \"\"\"Provides more extensive details of the data and how it was acquired.\"\"\"\n  extensive: String\n\n  \"\"\"The number of child items this item contains\"\"\"\n  itemCount: Int!\n\n  \"\"\"Repositories located in the country\"\"\"\n  repositories(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): repositories\n\n  \"\"\"This item's links\"\"\"\n  links: [Link]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n\n  \"\"\"Events describing this item's digital curation\"\"\"\n  systemEvents: [SystemEvent]\n}\n\n\"\"\"An historical agent\"\"\"\ntype HistoricalAgent implements Entity & Described & Linkable & Annotatable & Temporal {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"The historical agent's EHRI identifier\"\"\"\n  identifier: String\n\n  \"\"\"\n  Fetch the description at given the given index, or that with the given languageCode and/or identifier code. Since the default index is 1, no arguments will return the first available description\n  \"\"\"\n  description(\n    \"\"\"The description's language code\"\"\"\n    languageCode: String\n\n    \"\"\"The description's identifier code\"\"\"\n    identifier: String\n\n    \"\"\"The description's 1-based index index (default: 1)\"\"\"\n    at: Int = 1\n  ): HistoricalAgentDescription\n\n  \"\"\"The item's descriptions\"\"\"\n  descriptions: [HistoricalAgentDescription]\n\n  \"\"\"This item's links\"\"\"\n  links: [Link]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n\n  \"\"\"Related items\"\"\"\n  related: [Relationship]\n\n  \"\"\"Events describing this item's digital curation\"\"\"\n  systemEvents: [SystemEvent]\n}\n\n\"\"\"An historical agent description\"\"\"\ntype HistoricalAgentDescription implements Description & TemporalDescription {\n  \"\"\"The description's language code\"\"\"\n  languageCode: String\n\n  \"\"\"The description's title\"\"\"\n  name: String\n\n  \"\"\"The description's (optional) identifier\"\"\"\n  identifier: String\n\n  \"\"\"Access points associated with this description\"\"\"\n  accessPoints: [AccessPoint]\n\n  \"\"\"Date periods associated with this description\"\"\"\n  dates: [DatePeriod]\n\n  \"\"\"!Isaar.lastName.description!\"\"\"\n  lastName: String\n\n  \"\"\"!Isaar.firstName.description!\"\"\"\n  firstName: String\n\n  \"\"\"To identify the sources consulted in creating the authority record.\"\"\"\n  source: String\n\n  \"\"\"!Isaar.typeOfEntity.description!\"\"\"\n  typeOfEntity: String\n\n  \"\"\"\n  To indicate the dates of existence of the corporate body, person or family.\n  \"\"\"\n  datesOfExistence: String\n\n  \"\"\"To provide a concise history of the corporate body, person or family.\"\"\"\n  biographicalHistory: String\n\n  \"\"\"To indicate the legal status of a corporate body.\"\"\"\n  legalStatus: String\n\n  \"\"\"\n  To describe and/or represent the internal administrative structure(s) of a corporate body or the genealogy of a family.\n  \"\"\"\n  structure: String\n\n  \"\"\"\n  To provide significant information on the general social, cultural, economic, political and/or historical context in which the corporate body, person or family operated, lived or was active.\n  \"\"\"\n  generalContext: String\n\n  \"\"\"!Isaar.occupation.description!\"\"\"\n  occupation: String\n\n  \"\"\"\n  To indicate any other name(s) for the corporate body, person or family not used elsewhere in the Identity Area.\n  \"\"\"\n  otherFormsOfName: [String]\n\n  \"\"\"\n  To indicate the various forms in which the Authorized form of name occurs in other languages or script forms(s).\n  \"\"\"\n  parallelFormsOfName: [String]\n\n  \"\"\"\n  To indicate the predominant places and/or jurisdictions where the corporate body, person or family was based, lived or resided or had some other connection.\n  \"\"\"\n  place: [String]\n\n  \"\"\"\n  To indicate the functions, occupations and activities performed by the corporate body, person or family.\n  \"\"\"\n  functions: [String]\n\n  \"\"\"\n  To indicate the sources of authority for the corporate body, person or family in terms of its powers, functions, responsibilities or sphere of activities, including territorial.\n  \"\"\"\n  mandates: [String]\n\n  \"\"\"To indicate the script(s) used to create the authority record.\"\"\"\n  scripts: [String]\n\n  \"\"\"!Isaar.sources.description!\"\"\"\n  sources: [String]\n}\n\n\"\"\"A container for authoritative items such as historical agents\"\"\"\ntype AuthoritativeSet implements Entity & Annotatable {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"The set's local identifier\"\"\"\n  identifier: String\n\n  \"\"\"The set's name\"\"\"\n  name: String\n\n  \"\"\"The item's description\"\"\"\n  description: String\n\n  \"\"\"The number of child items this item contains\"\"\"\n  itemCount: Int!\n\n  \"\"\"Item's contained in this vocabulary\"\"\"\n  authorities(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): historicalAgents\n\n  \"\"\"This item's links\"\"\"\n  links: [Link]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n\n  \"\"\"Events describing this item's digital curation\"\"\"\n  systemEvents: [SystemEvent]\n}\n\n\"\"\"An item representing a concept in a controlled vocabulary\"\"\"\ntype CvocConcept implements Entity & Described & Linkable & Annotatable {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"The concept's local identifier\"\"\"\n  identifier: String\n\n  \"\"\"An item''s uniform resource identifier\"\"\"\n  uri: String\n\n  \"\"\"URLs of related resources\"\"\"\n  seeAlso: [String]\n\n  \"\"\"A geographical latitude reference\"\"\"\n  latitude: BigDecimal\n\n  \"\"\"A geographical longitude reference\"\"\"\n  longitude: BigDecimal\n\n  \"\"\"The item's descriptions\"\"\"\n  descriptions: [CvocConceptDescription]\n\n  \"\"\"\n  Fetch the description at given the given index, or that with the given languageCode and/or identifier code. Since the default index is 1, no arguments will return the first available description\n  \"\"\"\n  description(\n    \"\"\"The description's language code\"\"\"\n    languageCode: String\n\n    \"\"\"The description's identifier code\"\"\"\n    identifier: String\n\n    \"\"\"The description's 1-based index index (default: 1)\"\"\"\n    at: Int = 1\n  ): CvocConceptDescription\n\n  \"\"\"Related concepts, as a list\"\"\"\n  related: [CvocConcept]\n\n  \"\"\"The number of child items this item contains\"\"\"\n  itemCount: Int!\n\n  \"\"\"Broader concepts, as a list\"\"\"\n  broader: [CvocConcept]\n\n  \"\"\"Narrower concepts, as a list\"\"\"\n  narrower: [CvocConcept]\n\n  \"\"\"The vocabulary\"\"\"\n  vocabulary: CvocVocabulary\n\n  \"\"\"This item's links\"\"\"\n  links: [Link]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n\n  \"\"\"Events describing this item's digital curation\"\"\"\n  systemEvents: [SystemEvent]\n}\n\n\"\"\"A concept description with a specific language\"\"\"\ntype CvocConceptDescription implements Description {\n  \"\"\"The description's language code\"\"\"\n  languageCode: String\n\n  \"\"\"The description's title\"\"\"\n  name: String\n\n  \"\"\"The description's (optional) identifier\"\"\"\n  identifier: String\n\n  \"\"\"Access points associated with this description\"\"\"\n  accessPoints: [AccessPoint]\n\n  \"\"\"Alternative non-preferred labels.\"\"\"\n  altLabel: [String]\n\n  \"\"\"Alternative non-preferred labels.\"\"\"\n  hiddenLabel: [String]\n\n  \"\"\"Supplies an explanation of the intended meaning of a concept.\"\"\"\n  definition: [String]\n\n  \"\"\"Provides general documentation on the concept.\"\"\"\n  note: [String]\n\n  \"\"\"\n  Supplies some, possibly partial, information about the intended meaning of a concept, especially as an indication of how the use of a concept is limited in indexing practice.\n  \"\"\"\n  scopeNote: [String]\n\n  \"\"\"\n  Supplies information that is an aid to administrative housekeeping, such as reminders of editorial work still to be done, or warnings in the event that future editorial changes might be made.\n  \"\"\"\n  editorialNote: [String]\n\n  \"\"\"Describes significant changes to the meaning or the form of a concept.\"\"\"\n  historyNote: [String]\n}\n\n\"\"\"A vocabulary\"\"\"\ntype CvocVocabulary implements Entity & Annotatable {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"The vocabulary's local identifier\"\"\"\n  identifier: String\n\n  \"\"\"The vocabulary's name\"\"\"\n  name: String\n\n  \"\"\"The item's description\"\"\"\n  description: String\n\n  \"\"\"The number of child items this item contains\"\"\"\n  itemCount: Int!\n\n  \"\"\"Concepts contained in this vocabulary\"\"\"\n  concepts(\n    \"\"\"The number of items to fetch\"\"\"\n    first: Int\n\n    \"\"\"Fetch items after this cursor\"\"\"\n    after: Cursor\n\n    \"\"\"Fetch items from this cursor\"\"\"\n    from: Cursor\n  ): concepts\n\n  \"\"\"This item's links\"\"\"\n  links: [Link]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n\n  \"\"\"Events describing this item's digital curation\"\"\"\n  systemEvents: [SystemEvent]\n}\n\n\"\"\"An annotation\"\"\"\ntype Annotation implements Entity & Annotatable {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"The text of the annotation\"\"\"\n  body: String\n\n  \"\"\"An optional field to which this annotation applies\"\"\"\n  field: String\n\n  \"\"\"The annotation's type\"\"\"\n  annotationType: String\n\n  \"\"\"The name of this annotation's author\"\"\"\n  by: String\n\n  \"\"\"The annotation's target(s)\"\"\"\n  targets: [Annotatable]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n\n  \"\"\"Events describing this item's digital curation\"\"\"\n  systemEvents: [SystemEvent]\n}\n\n\"\"\"\nAn item representing a connection between two or more other items, incorporating the context of that connection\n\"\"\"\ntype Link implements Entity & Annotatable {\n  \"\"\"The item's EHRI id\"\"\"\n  id: String!\n\n  \"\"\"The item's EHRI type\"\"\"\n  type: String!\n\n  \"\"\"Textual information which may add context to this link\"\"\"\n  description: String\n\n  \"\"\"The field to which this link relates\"\"\"\n  field: String\n\n  \"\"\"The link's target items\"\"\"\n  targets: [Linkable]\n\n  \"\"\"An access point which may represent the context of this link\"\"\"\n  body: [AccessPoint]\n\n  \"\"\"This item's annotations\"\"\"\n  annotations: [Annotation]\n\n  \"\"\"Date periods associated with this description\"\"\"\n  dates: [DatePeriod]\n\n  \"\"\"Events describing this item's digital curation\"\"\"\n  systemEvents: [SystemEvent]\n}\n\n\"\"\"An access point representing an item in a controlled vocabulary\"\"\"\ntype AccessPoint {\n  \"\"\"The access point's text\"\"\"\n  name: String\n\n  \"\"\"The access point's type\"\"\"\n  type: AccessPointType!\n}\n\n\"\"\"Access point types\"\"\"\nenum AccessPointType {\n  person\n  family\n  corporateBody\n  subject\n  creator\n  place\n  genre\n}\n\n\"\"\"\nA connection of items of type DocumentaryUnit with paging information. A connection represents a sequence of items which can be paged via a cursor \n\"\"\"\ntype documentaryUnits {\n  \"\"\"A list of type: DocumentaryUnit\"\"\"\n  items: [DocumentaryUnit]\n\n  \"\"\"A list of edges of type: DocumentaryUnit\"\"\"\n  edges: [DocumentaryUnitEdge]\n\n  \"\"\"Pagination information\"\"\"\n  pageInfo: pageInfoDocumentaryUnit\n}\n\n\"\"\"\nA connection edge containing an item of type DocumentaryUnit and a cursor item\n\"\"\"\ntype DocumentaryUnitEdge {\n  node: DocumentaryUnit\n  cursor: Cursor\n}\n\ntype pageInfoDocumentaryUnit {\n  \"\"\"If a previous page of data is available\"\"\"\n  hasPreviousPage: Boolean\n\n  \"\"\"A cursor pointing to the previous page of items\"\"\"\n  previousPage: Cursor\n\n  \"\"\"If another page of data is available\"\"\"\n  hasNextPage: Boolean\n\n  \"\"\"A cursor pointing to the next page of items\"\"\"\n  nextPage: Cursor\n}\n\n\"\"\"\nA connection of items of type Repository with paging information. A connection represents a sequence of items which can be paged via a cursor \n\"\"\"\ntype repositories {\n  \"\"\"A list of type: Repository\"\"\"\n  items: [Repository]\n\n  \"\"\"A list of edges of type: Repository\"\"\"\n  edges: [RepositoryEdge]\n\n  \"\"\"Pagination information\"\"\"\n  pageInfo: pageInfoRepository\n}\n\n\"\"\"\nA connection edge containing an item of type Repository and a cursor item\n\"\"\"\ntype RepositoryEdge {\n  node: Repository\n  cursor: Cursor\n}\n\ntype pageInfoRepository {\n  \"\"\"If a previous page of data is available\"\"\"\n  hasPreviousPage: Boolean\n\n  \"\"\"A cursor pointing to the previous page of items\"\"\"\n  previousPage: Cursor\n\n  \"\"\"If another page of data is available\"\"\"\n  hasNextPage: Boolean\n\n  \"\"\"A cursor pointing to the next page of items\"\"\"\n  nextPage: Cursor\n}\n\n\"\"\"\nA connection of items of type HistoricalAgent with paging information. A connection represents a sequence of items which can be paged via a cursor \n\"\"\"\ntype historicalAgents {\n  \"\"\"A list of type: HistoricalAgent\"\"\"\n  items: [HistoricalAgent]\n\n  \"\"\"A list of edges of type: HistoricalAgent\"\"\"\n  edges: [HistoricalAgentEdge]\n\n  \"\"\"Pagination information\"\"\"\n  pageInfo: pageInfoHistoricalAgent\n}\n\n\"\"\"\nA connection edge containing an item of type HistoricalAgent and a cursor item\n\"\"\"\ntype HistoricalAgentEdge {\n  node: HistoricalAgent\n  cursor: Cursor\n}\n\ntype pageInfoHistoricalAgent {\n  \"\"\"If a previous page of data is available\"\"\"\n  hasPreviousPage: Boolean\n\n  \"\"\"A cursor pointing to the previous page of items\"\"\"\n  previousPage: Cursor\n\n  \"\"\"If another page of data is available\"\"\"\n  hasNextPage: Boolean\n\n  \"\"\"A cursor pointing to the next page of items\"\"\"\n  nextPage: Cursor\n}\n\n\"\"\"\nA connection of items of type Country with paging information. A connection represents a sequence of items which can be paged via a cursor \n\"\"\"\ntype countries {\n  \"\"\"A list of type: Country\"\"\"\n  items: [Country]\n\n  \"\"\"A list of edges of type: Country\"\"\"\n  edges: [CountryEdge]\n\n  \"\"\"Pagination information\"\"\"\n  pageInfo: pageInfoCountry\n}\n\n\"\"\"A connection edge containing an item of type Country and a cursor item\"\"\"\ntype CountryEdge {\n  node: Country\n  cursor: Cursor\n}\n\ntype pageInfoCountry {\n  \"\"\"If a previous page of data is available\"\"\"\n  hasPreviousPage: Boolean\n\n  \"\"\"A cursor pointing to the previous page of items\"\"\"\n  previousPage: Cursor\n\n  \"\"\"If another page of data is available\"\"\"\n  hasNextPage: Boolean\n\n  \"\"\"A cursor pointing to the next page of items\"\"\"\n  nextPage: Cursor\n}\n\n\"\"\"\nA connection of items of type AuthoritativeSet with paging information. A connection represents a sequence of items which can be paged via a cursor \n\"\"\"\ntype authoritativeSets {\n  \"\"\"A list of type: AuthoritativeSet\"\"\"\n  items: [AuthoritativeSet]\n\n  \"\"\"A list of edges of type: AuthoritativeSet\"\"\"\n  edges: [AuthoritativeSetEdge]\n\n  \"\"\"Pagination information\"\"\"\n  pageInfo: pageInfoAuthoritativeSet\n}\n\n\"\"\"\nA connection edge containing an item of type AuthoritativeSet and a cursor item\n\"\"\"\ntype AuthoritativeSetEdge {\n  node: AuthoritativeSet\n  cursor: Cursor\n}\n\ntype pageInfoAuthoritativeSet {\n  \"\"\"If a previous page of data is available\"\"\"\n  hasPreviousPage: Boolean\n\n  \"\"\"A cursor pointing to the previous page of items\"\"\"\n  previousPage: Cursor\n\n  \"\"\"If another page of data is available\"\"\"\n  hasNextPage: Boolean\n\n  \"\"\"A cursor pointing to the next page of items\"\"\"\n  nextPage: Cursor\n}\n\n\"\"\"\nA connection of items of type CvocConcept with paging information. A connection represents a sequence of items which can be paged via a cursor \n\"\"\"\ntype concepts {\n  \"\"\"A list of type: CvocConcept\"\"\"\n  items: [CvocConcept]\n\n  \"\"\"A list of edges of type: CvocConcept\"\"\"\n  edges: [CvocConceptEdge]\n\n  \"\"\"Pagination information\"\"\"\n  pageInfo: pageInfoCvocConcept\n}\n\n\"\"\"\nA connection edge containing an item of type CvocConcept and a cursor item\n\"\"\"\ntype CvocConceptEdge {\n  node: CvocConcept\n  cursor: Cursor\n}\n\ntype pageInfoCvocConcept {\n  \"\"\"If a previous page of data is available\"\"\"\n  hasPreviousPage: Boolean\n\n  \"\"\"A cursor pointing to the previous page of items\"\"\"\n  previousPage: Cursor\n\n  \"\"\"If another page of data is available\"\"\"\n  hasNextPage: Boolean\n\n  \"\"\"A cursor pointing to the next page of items\"\"\"\n  nextPage: Cursor\n}\n\n\"\"\"\nA connection of items of type CvocVocabulary with paging information. A connection represents a sequence of items which can be paged via a cursor \n\"\"\"\ntype vocabularies {\n  \"\"\"A list of type: CvocVocabulary\"\"\"\n  items: [CvocVocabulary]\n\n  \"\"\"A list of edges of type: CvocVocabulary\"\"\"\n  edges: [CvocVocabularyEdge]\n\n  \"\"\"Pagination information\"\"\"\n  pageInfo: pageInfoCvocVocabulary\n}\n\n\"\"\"\nA connection edge containing an item of type CvocVocabulary and a cursor item\n\"\"\"\ntype CvocVocabularyEdge {\n  node: CvocVocabulary\n  cursor: Cursor\n}\n\ntype pageInfoCvocVocabulary {\n  \"\"\"If a previous page of data is available\"\"\"\n  hasPreviousPage: Boolean\n\n  \"\"\"A cursor pointing to the previous page of items\"\"\"\n  previousPage: Cursor\n\n  \"\"\"If another page of data is available\"\"\"\n  hasNextPage: Boolean\n\n  \"\"\"A cursor pointing to the next page of items\"\"\"\n  nextPage: Cursor\n}\n\n\"\"\"\nA connection of items of type Annotation with paging information. A connection represents a sequence of items which can be paged via a cursor \n\"\"\"\ntype annotations {\n  \"\"\"A list of type: Annotation\"\"\"\n  items: [Annotation]\n\n  \"\"\"A list of edges of type: Annotation\"\"\"\n  edges: [AnnotationEdge]\n\n  \"\"\"Pagination information\"\"\"\n  pageInfo: pageInfoAnnotation\n}\n\n\"\"\"\nA connection edge containing an item of type Annotation and a cursor item\n\"\"\"\ntype AnnotationEdge {\n  node: Annotation\n  cursor: Cursor\n}\n\ntype pageInfoAnnotation {\n  \"\"\"If a previous page of data is available\"\"\"\n  hasPreviousPage: Boolean\n\n  \"\"\"A cursor pointing to the previous page of items\"\"\"\n  previousPage: Cursor\n\n  \"\"\"If another page of data is available\"\"\"\n  hasNextPage: Boolean\n\n  \"\"\"A cursor pointing to the next page of items\"\"\"\n  nextPage: Cursor\n}\n\n\"\"\"\nA connection of items of type Link with paging information. A connection represents a sequence of items which can be paged via a cursor \n\"\"\"\ntype links {\n  \"\"\"A list of type: Link\"\"\"\n  items: [Link]\n\n  \"\"\"A list of edges of type: Link\"\"\"\n  edges: [LinkEdge]\n\n  \"\"\"Pagination information\"\"\"\n  pageInfo: pageInfoLink\n}\n\n\"\"\"A connection edge containing an item of type Link and a cursor item\"\"\"\ntype LinkEdge {\n  node: Link\n  cursor: Cursor\n}\n\ntype pageInfoLink {\n  \"\"\"If a previous page of data is available\"\"\"\n  hasPreviousPage: Boolean\n\n  \"\"\"A cursor pointing to the previous page of items\"\"\"\n  previousPage: Cursor\n\n  \"\"\"If another page of data is available\"\"\"\n  hasNextPage: Boolean\n\n  \"\"\"A cursor pointing to the next page of items\"\"\"\n  nextPage: Cursor\n}\n\n\"\"\"A date period\"\"\"\ntype DatePeriod {\n  \"\"\"The start of this period\"\"\"\n  startDate: String\n\n  \"\"\"The end of this period\"\"\"\n  endDate: String\n}\n\n\"\"\"A system event\"\"\"\ntype SystemEvent {\n  \"\"\"The time the event occurred\"\"\"\n  timestamp: String\n\n  \"\"\"A log message describing the action that took place\"\"\"\n  logMessage: String\n\n  \"\"\"The type of event occurred\"\"\"\n  eventType: String\n}",
    "EtMDB": "type Query {\n  \"\"\"The ID of the object\"\"\"\n  cinemaDetail(id: ID!): CinemaDetailNode\n  allCinemaDetails(before: String, after: String, first: Int, last: Int): CinemaDetailNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  filmographyType(id: ID!): FilmographyTypeNode\n  allFilmographyTypes(before: String, after: String, first: Int, last: Int): FilmographyTypeNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  genreType(id: ID!): GenreTypeNode\n  allGenreTypes(before: String, after: String, first: Int, last: Int): GenreTypeNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  job(id: ID!): JobBoardNode\n  allJobs(before: String, after: String, first: Int, last: Int, genderMf: String, company: ID, company_Icontains: ID, company_Istartswith: ID, jobTitle: String, jobTitle_Icontains: String, jobTitle_Istartswith: String): JobBoardNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  company(id: ID!): CompanyNode\n  allCompanies(before: String, after: String, first: Int, last: Int, companyName: String, establishedIn: String): CompanyNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  jobsTag(id: ID!): JobTagNode\n  allJobTags(before: String, after: String, first: Int, last: Int): JobTagNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  newsTag(id: ID!): NewsTagNode\n  allNewsTags(before: String, after: String, first: Int, last: Int): NewsTagNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  news(id: ID!): NewsNode\n  allNews(before: String, after: String, first: Int, last: Int): NewsNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  role(id: ID!): RoleNode\n  allRoles(before: String, after: String, first: Int, last: Int): RoleNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  contentTag(id: ID!): ContentTagNode\n  allContentTags(before: String, after: String, first: Int, last: Int): ContentTagNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  cinemaSchedule(id: ID!): CinemaScheduleNode\n  allCinemaSchedules(before: String, after: String, first: Int, last: Int): CinemaScheduleNodeConnection\n\n  \"\"\"The ID of the object\"\"\"\n  showtime(id: ID!): ShowtimeNode\n  allShowtimes(before: String, after: String, first: Int, last: Int): ShowtimeNodeConnection\n}\n\n\"\"\"\n\n    Represents the details for cinemas listed on EtMDB.\n    \n\"\"\"\ntype CinemaDetailNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  hallName: String!\n\n  \"\"\"\"\"\"\n  numberOfSeats: Int!\n\n  \"\"\"\"\"\"\n  technology: String!\n  cinemascheduleSet(before: String, after: String, first: Int, last: Int): CinemaScheduleNodeConnection\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"\nThe `DateTime` scalar type represents a DateTime\nvalue as specified by\n[iso8601](https://en.wikipedia.org/wiki/ISO_8601).\n\"\"\"\nscalar DateTime\n\ntype CinemaScheduleNodeConnection {\n  pageInfo: PageInfo!\n  edges: [CinemaScheduleNodeEdge]!\n}\n\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\ntype CinemaScheduleNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: CinemaScheduleNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\n\n    Represents a Cinema Schedule.\n    \n\"\"\"\ntype CinemaScheduleNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  showStartDate: DateTime\n\n  \"\"\"\"\"\"\n  showEndDate: DateTime\n\n  \"\"\"\"\"\"\n  movie: MovieMetaDataNode!\n\n  \"\"\"\"\"\"\n  cinemaDetail: CinemaDetailNode!\n}\n\n\"\"\"\n\n    Represents a movie on EtMDB.\n    \n\"\"\"\ntype MovieMetaDataNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  movieTitle: String!\n\n  \"\"\"\"\"\"\n  releaseDate: DateTime!\n\n  \"\"\"\"\"\"\n  durationMinutes: Int!\n\n  \"\"\"\"\"\"\n  ageRestriction: MovieMetaDataAgeRestriction!\n\n  \"\"\"\"\"\"\n  budget: Int!\n\n  \"\"\"\"\"\"\n  gross: Int!\n\n  \"\"\"\"\"\"\n  originalLanguage: String!\n\n  \"\"\"\"\"\"\n  flagSeries: Boolean!\n\n  \"\"\"\"\"\"\n  flagIncinema: Boolean!\n\n  \"\"\"\"\"\"\n  plot: String!\n\n  \"\"\"\"\"\"\n  slogan: String\n\n  \"\"\"\"\"\"\n  posterImage: String\n  cinemascheduleSet(before: String, after: String, first: Int, last: Int): CinemaScheduleNodeConnection\n}\n\nenum MovieMetaDataAgeRestriction {\n  \"\"\"G (General Audiences)\"\"\"\n  A_1\n\n  \"\"\"PG (Parental Guidance Suggested)\"\"\"\n  A_2\n\n  \"\"\"PG-13 (Parents Strongly Cautioned)\"\"\"\n  A_3\n\n  \"\"\"R18 (Restricted)\"\"\"\n  A_4\n\n  \"\"\"R21 (Adults Only) \"\"\"\n  A_5\n\n  \"\"\"U (Unrated)\"\"\"\n  A_6\n}\n\ntype CinemaDetailNodeConnection {\n  pageInfo: PageInfo!\n  edges: [CinemaDetailNodeEdge]!\n}\n\ntype CinemaDetailNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: CinemaDetailNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\n\n    Represents the types of filmographies.\n    \n\"\"\"\ntype FilmographyTypeNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  filmographyDescription: String!\n\n  \"\"\"\"\"\"\n  summary: String\n}\n\ntype FilmographyTypeNodeConnection {\n  pageInfo: PageInfo!\n  edges: [FilmographyTypeNodeEdge]!\n}\n\ntype FilmographyTypeNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: FilmographyTypeNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\n\n    Represents the types of movie genres.\n    \n\"\"\"\ntype GenreTypeNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  genreDescription: String!\n\n  \"\"\"\"\"\"\n  summary: String\n}\n\ntype GenreTypeNodeConnection {\n  pageInfo: PageInfo!\n  edges: [GenreTypeNodeEdge]!\n}\n\ntype GenreTypeNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: GenreTypeNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\n\n    Represents the details for jobs listed on EtMDB.\n    \n\"\"\"\ntype JobBoardNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  jobTitle: String!\n\n  \"\"\"\"\"\"\n  location: JobBoardLocation\n\n  \"\"\"\"\"\"\n  productionType: JobBoardProductionType\n\n  \"\"\"\"\"\"\n  duration: String!\n\n  \"\"\"\"\"\"\n  productionDate: DateTime\n\n  \"\"\"\"\"\"\n  closingDate: DateTime!\n\n  \"\"\"\"\"\"\n  description: String!\n\n  \"\"\"\"\"\"\n  salary: String\n\n  \"\"\"\"\"\"\n  genderMf: JobBoardGenderMf!\n\n  \"\"\"\"\"\"\n  ageLevel: JobBoardAgeLevel!\n\n  \"\"\"\"\"\"\n  company: CompanyNode!\n  jobtagSet(before: String, after: String, first: Int, last: Int): JobTagNodeConnection\n}\n\nenum JobBoardLocation {\n  \"\"\"Addis Ababa\"\"\"\n  A_1\n\n  \"\"\"Adama\"\"\"\n  A_2\n\n  \"\"\"Gondar\"\"\"\n  A_3\n\n  \"\"\"Mekele\"\"\"\n  A_4\n\n  \"\"\"Hawassa\"\"\"\n  A_5\n\n  \"\"\"Bahir Dar\"\"\"\n  A_6\n\n  \"\"\"Dire Dawa\"\"\"\n  A_7\n\n  \"\"\"Dessie\"\"\"\n  A_8\n\n  \"\"\"Jimma\"\"\"\n  A_9\n\n  \"\"\"Jijiga\"\"\"\n  A_10\n\n  \"\"\"Shashamane\"\"\"\n  A_11\n\n  \"\"\"Arba Minch\"\"\"\n  A_12\n\n  \"\"\"Hosaena\"\"\"\n  A_13\n\n  \"\"\"Woliso\"\"\"\n  A_14\n\n  \"\"\"Asmara\"\"\"\n  A_15\n\n  \"\"\"Debre Birhan\"\"\"\n  A_16\n\n  \"\"\"Asella\"\"\"\n  A_17\n\n  \"\"\"Harar\"\"\"\n  A_18\n\n  \"\"\"Dila\"\"\"\n  A_19\n\n  \"\"\"Nekemte\"\"\"\n  A_20\n\n  \"\"\"Unspecified\"\"\"\n  A_21\n}\n\nenum JobBoardProductionType {\n  \"\"\"Feature\"\"\"\n  A_1\n\n  \"\"\"Documentary\"\"\"\n  A_2\n\n  \"\"\"TV-Series\"\"\"\n  A_3\n\n  \"\"\"Short film\"\"\"\n  A_4\n\n  \"\"\"Silent film\"\"\"\n  A_5\n\n  \"\"\"Biography\"\"\"\n  A_6\n\n  \"\"\"Other type\"\"\"\n  A_7\n}\n\nenum JobBoardGenderMf {\n  \"\"\"Male\"\"\"\n  MALE\n\n  \"\"\"Female\"\"\"\n  FEMALE\n\n  \"\"\"Not specified\"\"\"\n  NOTSPECIFIED\n}\n\nenum JobBoardAgeLevel {\n  \"\"\"Any Age\"\"\"\n  A_1\n\n  \"\"\"Under 13\"\"\"\n  A_2\n\n  \"\"\"13-17\"\"\"\n  A_3\n\n  \"\"\"18-24\"\"\"\n  A_4\n\n  \"\"\"25-34\"\"\"\n  A_5\n\n  \"\"\"50-69\"\"\"\n  A_6\n\n  \"\"\"50-69\"\"\"\n  A_6_6\n\n  \"\"\"Over 18\"\"\"\n  A_7\n\n  \"\"\"16-65\"\"\"\n  A_8\n}\n\n\"\"\"\n\n    Represents the details for cinemas listed on EtMDB.\n    \n\"\"\"\ntype CompanyNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  companyName: String!\n\n  \"\"\"\"\"\"\n  establishedIn: DateTime!\n\n  \"\"\"\"\"\"\n  description: String!\n\n  \"\"\"\"\"\"\n  opensAt: Time!\n\n  \"\"\"\"\"\"\n  closesAt: Time!\n\n  \"\"\"\"\"\"\n  companyPosterImage: String\n  jobboardSet(before: String, after: String, first: Int, last: Int, genderMf: String, company: ID, company_Icontains: ID, company_Istartswith: ID, jobTitle: String, jobTitle_Icontains: String, jobTitle_Istartswith: String): JobBoardNodeConnection\n}\n\n\"\"\"\nThe `Time` scalar type represents a Time value as\nspecified by\n[iso8601](https://en.wikipedia.org/wiki/ISO_8601).\n\"\"\"\nscalar Time\n\ntype JobBoardNodeConnection {\n  pageInfo: PageInfo!\n  edges: [JobBoardNodeEdge]!\n}\n\ntype JobBoardNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: JobBoardNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype JobTagNodeConnection {\n  pageInfo: PageInfo!\n  edges: [JobTagNodeEdge]!\n}\n\ntype JobTagNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: JobTagNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\n\n    Represents a Job tag.\n    \n\"\"\"\ntype JobTagNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  jobBoard: JobBoardNode!\n\n  \"\"\"\"\"\"\n  contentTag: ContentTagNode!\n}\n\n\"\"\"\n\n    Represents a Content tag.\n    \n\"\"\"\ntype ContentTagNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  keyword: String!\n\n  \"\"\"\"\"\"\n  summary: String\n  newstagSet(before: String, after: String, first: Int, last: Int): NewsTagNodeConnection\n  jobtagSet(before: String, after: String, first: Int, last: Int): JobTagNodeConnection\n}\n\ntype NewsTagNodeConnection {\n  pageInfo: PageInfo!\n  edges: [NewsTagNodeEdge]!\n}\n\ntype NewsTagNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: NewsTagNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\n\n    Represents a News and Articles tags.\n    \n\"\"\"\ntype NewsTagNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  news: NewsNode!\n\n  \"\"\"\"\"\"\n  contentTag: ContentTagNode!\n}\n\n\"\"\"\n\n    Represents a News and Articles.\n    \n\"\"\"\ntype NewsNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  title: String!\n\n  \"\"\"\"\"\"\n  content: String!\n\n  \"\"\"\"\"\"\n  newsImage: String\n  newstagSet(before: String, after: String, first: Int, last: Int): NewsTagNodeConnection\n}\n\ntype CompanyNodeConnection {\n  pageInfo: PageInfo!\n  edges: [CompanyNodeEdge]!\n}\n\ntype CompanyNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: CompanyNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype NewsNodeConnection {\n  pageInfo: PageInfo!\n  edges: [NewsNodeEdge]!\n}\n\ntype NewsNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: NewsNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\n\n    Represents a Movie Roles for cast.\n    \n\"\"\"\ntype RoleNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  roleDescription: String!\n\n  \"\"\"\"\"\"\n  summary: String\n}\n\ntype RoleNodeConnection {\n  pageInfo: PageInfo!\n  edges: [RoleNodeEdge]!\n}\n\ntype RoleNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: RoleNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype ContentTagNodeConnection {\n  pageInfo: PageInfo!\n  edges: [ContentTagNodeEdge]!\n}\n\ntype ContentTagNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: ContentTagNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\n\n    Represents a Cinema Show times.\n    \n\"\"\"\ntype ShowtimeNode implements Node {\n  \"\"\"The ID of the object.\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  createdDate: DateTime!\n\n  \"\"\"\"\"\"\n  updatedDate: DateTime!\n\n  \"\"\"\"\"\"\n  slug: String\n\n  \"\"\"\"\"\"\n  showtime: Time!\n\n  \"\"\"\"\"\"\n  dayOfWeek: ShowtimeDayOfWeek!\n}\n\nenum ShowtimeDayOfWeek {\n  \"\"\"Monday\"\"\"\n  A_1\n\n  \"\"\"Tuesday\"\"\"\n  A_2\n\n  \"\"\"Wednesday\"\"\"\n  A_3\n\n  \"\"\"Thursday\"\"\"\n  A_4\n\n  \"\"\"Friday\"\"\"\n  A_5\n\n  \"\"\"Saturday\"\"\"\n  A_6\n\n  \"\"\"Sunday\"\"\"\n  A_7\n\n  \"\"\"All week\"\"\"\n  A_8\n\n  \"\"\"Week days\"\"\"\n  A_9\n\n  \"\"\"Weekend\"\"\"\n  A_10\n}\n\ntype ShowtimeNodeConnection {\n  pageInfo: PageInfo!\n  edges: [ShowtimeNodeEdge]!\n}\n\ntype ShowtimeNodeEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: ShowtimeNode\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}",
    "Everbase": "\"\"\"A city is a large human settlement.\"\"\"\ntype City {\n  \"\"\"The continent.\"\"\"\n  continent: Continent!\n\n  \"\"\"The country.\"\"\"\n  country: Country!\n\n  \"\"\"The Geonames.org ID.\"\"\"\n  geonamesID: Int!\n\n  \"\"\"The Wikidata ID.\"\"\"\n  id: String!\n\n  \"\"\"The location.\"\"\"\n  location: Coordinates\n\n  \"\"\"The name.\"\"\"\n  name: String!\n\n  \"\"\"The population.\"\"\"\n  population: Int!\n\n  \"\"\"The regular time zone (non-DST).\"\"\"\n  timeZone: TimeZone\n\n  \"\"\"The time zone during daylight savings time.\"\"\"\n  timeZoneDST: TimeZone\n}\n\ninput CityWhere {\n  id: WhereString\n  name: WhereString\n  countryName: WhereString\n  population: WhereFloat\n}\n\n\"\"\"Information about the client that sent the request.\"\"\"\ntype Client {\n  \"\"\"The IP address.\"\"\"\n  ipAddress: IPAddress!\n\n  \"\"\"The user agent.\"\"\"\n  userAgent: String!\n}\n\n\"\"\"A continent is one of several very large landmasses.\"\"\"\ntype Continent {\n  \"\"\"All countries located on the continent.\"\"\"\n  countries: [Country!]!\n\n  \"\"\"The Geonames.org ID.\"\"\"\n  geonamesID: Int!\n\n  \"\"\"The Wikidata ID.\"\"\"\n  id: String!\n\n  \"\"\"The name.\"\"\"\n  name: String!\n\n  \"\"\"The population.\"\"\"\n  population: Int!\n}\n\ninput ContinentWhere {\n  id: WhereString\n  name: WhereString\n  geonamesId: WhereInt\n}\n\n\"\"\"Geographic coordinates.\"\"\"\ntype Coordinates {\n  \"\"\"Latitude.\"\"\"\n  lat: Float!\n\n  \"\"\"Longitude\"\"\"\n  long: Float!\n}\n\n\"\"\"A sovereign state.\"\"\"\ntype Country {\n  \"\"\"The ISO 3166-1 alpha-2 code.\"\"\"\n  alpha2Code: String!\n\n  \"\"\"The ISO 3166-1 alpha-3 code.\"\"\"\n  alpha3Code: String!\n\n  \"\"\"Calling codes.\"\"\"\n  callingCodes: [String!]!\n\n  \"\"\"The capital city.\"\"\"\n  capital: City\n\n  \"\"\"All cities of the country.\"\"\"\n  cities: [City!]!\n\n  \"\"\"The continent the country is located in.\"\"\"\n  continent: Continent!\n\n  \"\"\"All official currencies of the country.\"\"\"\n  currencies: [Currency!]!\n\n  \"\"\"The Geonames.org ID.\"\"\"\n  geonamesID: Int!\n\n  \"\"\"The Wikidata ID.\"\"\"\n  id: String!\n\n  \"\"\"All official languages of the country.\"\"\"\n  languages: [Language!]!\n\n  \"\"\"The location.\"\"\"\n  location: Coordinates\n\n  \"\"\"The name.\"\"\"\n  name: String!\n\n  \"\"\"The population.\"\"\"\n  population: Int!\n\n  \"\"\"The general VAT rate.\"\"\"\n  vatRate: Float\n}\n\ninput CountryWhere {\n  id: WhereString\n  name: WhereString\n  alpha2Code: WhereString\n  alpha3Code: WhereString\n  population: WhereInt\n}\n\ntype Currency {\n  \"\"\"Convert `amount` (default 1) to currency with code specified in `to`\"\"\"\n  convert(amount: Float = 1, to: String!): Float\n\n  \"\"\"Countries that use the currency.\"\"\"\n  countries: [Country!]!\n\n  \"\"\"The Wikidata ID.\"\"\"\n  id: String!\n\n  \"\"\"The ISO 4217 code.\"\"\"\n  isoCode: String!\n\n  \"\"\"The name.\"\"\"\n  name: String!\n\n  \"\"\"Unit symbols.\"\"\"\n  unitSymbols: [String!]!\n}\n\ninput CurrencyWhere {\n  id: WhereString\n  name: WhereString\n  isoCode: WhereString\n}\n\ntype DNSRecords {\n  a: [IPAddress!]!\n  aaaa: [IPAddress!]!\n  cname: [DomainName!]!\n  mx: [MXRecord!]!\n}\n\n\"\"\"Domain Name of the Domain Name System (DNS).\"\"\"\ntype DomainName {\n  \"\"\"Look up A records.\"\"\"\n  a: [IPAddress!]!\n\n  \"\"\"Look up AAAA records.\"\"\"\n  aaaa: [IPAddress!]!\n\n  \"\"\"Look up CNAME records.\"\"\"\n  cname: [DomainName!]!\n\n  \"\"\"Look up MX records.\"\"\"\n  mx: [MXRecord!]!\n\n  \"\"\"The domain name.\"\"\"\n  name: String!\n  records: DNSRecords! @deprecated(reason: \"Use fields on domainName itself\")\n}\n\ntype EmailAddress {\n  \"\"\"The email address.\"\"\"\n  address: String!\n\n  \"\"\"The host as a domain name.\"\"\"\n  domainName: DomainName!\n\n  \"\"\"Host part of the email address (after the @)\"\"\"\n  host: String!\n\n  \"\"\"Local part of the email address (before the @)\"\"\"\n  local: String!\n\n  \"\"\"Whether this address is backed by a working mail server\"\"\"\n  ok: Boolean!\n  serviceProvider: EmailServiceProvider\n}\n\ntype EmailServiceProvider {\n  \"\"\"Whether this provider offers mailboxes without the need for signup\"\"\"\n  disposable: Boolean!\n\n  \"\"\"The domain name.\"\"\"\n  domainName: DomainName!\n\n  \"\"\"Whether this provider offers mailboxes at no cost\"\"\"\n  free: Boolean!\n\n  \"\"\"Whether this provider's SMTP service is working\"\"\"\n  smtpOk: Boolean!\n}\n\ntype HTMLDocument {\n  \"\"\"Get all nodes that match selector.\"\"\"\n  all(selector: String!): [HTMLNode!]!\n\n  \"\"\"Document body.\"\"\"\n  body: HTMLNode!\n\n  \"\"\"Get first node that matches selector.\"\"\"\n  first(selector: String!): HTMLNode\n\n  \"\"\"Raw HTML representation.\"\"\"\n  html: String!\n\n  \"\"\"Document title.\"\"\"\n  title: String\n}\n\ntype HTMLNode {\n  \"\"\"Get all nodes that match selector.\"\"\"\n  all(selector: String!): [HTMLNode!]!\n\n  \"\"\"Attribute value.\"\"\"\n  attribute(name: String!, selector: String): String\n\n  \"\"\"Child nodes.\"\"\"\n  children: [HTMLNode!]!\n\n  \"\"\"Get first node that matches selector.\"\"\"\n  first(selector: String!): HTMLNode\n\n  \"\"\"Raw HTML representation.\"\"\"\n  html: String!\n\n  \"\"\"Next node.\"\"\"\n  next: HTMLNode\n\n  \"\"\"Parent node.\"\"\"\n  parent: HTMLNode\n\n  \"\"\"Previous node.\"\"\"\n  previous: HTMLNode\n\n  \"\"\"Inner text.\"\"\"\n  text(selector: String): String\n}\n\n\"\"\"\n\n    Internet Protocol address. Can be either a IPv4 or a IPv6 address.\n\n    This product includes GeoLite2 data created by MaxMind, available from www.maxmind.com.\n  \n\"\"\"\ntype IPAddress {\n  \"\"\"The IP address.\"\"\"\n  address: String!\n\n  \"\"\"The city this IP address belongs to.\"\"\"\n  city: City\n\n  \"\"\"The country this IP address belongs to.\"\"\"\n  country: Country\n\n  \"\"\"The IP address type.\"\"\"\n  type: IPAddressType!\n}\n\nenum IPAddressType {\n  IPv4\n  IPv6\n}\n\ntype Language {\n  \"\"\"The ISO 639-1 code.\"\"\"\n  alpha2Code: String!\n\n  \"\"\"The countries that use the language.\"\"\"\n  countries: [Country!]!\n\n  \"\"\"The Wikidata ID.\"\"\"\n  id: String!\n\n  \"\"\"The name.\"\"\"\n  name: String!\n}\n\ninput LanguageWhere {\n  id: WhereString\n  name: WhereString\n  alpha2Code: WhereString\n}\n\ntype MXRecord {\n  \"\"\"The domain name.\"\"\"\n  exchange: DomainName!\n\n  \"\"\"The preference value.\"\"\"\n  preference: Int!\n}\n\ntype Markdown {\n  \"\"\"Convert markdown to HTML\"\"\"\n  html: String!\n}\n\n\"\"\"Query is the root object of all queries.\"\"\"\ntype Query {\n  \"\"\"Get cities.\"\"\"\n  cities(limit: Int, skip: Int, where: CityWhere): [City!]!\n\n  \"\"\"Get client info.\"\"\"\n  client: Client!\n\n  \"\"\"Get continents.\"\"\"\n  continents(limit: Int, skip: Int, where: ContinentWhere): [Continent!]!\n\n  \"\"\"Get countries.\"\"\"\n  countries(limit: Int, skip: Int, where: CountryWhere): [Country!]!\n\n  \"\"\"Get currencies.\"\"\"\n  currencies(limit: Int, skip: Int, where: CurrencyWhere): [Currency!]!\n\n  \"\"\"Create `DomainName` from string.\"\"\"\n  domainName(name: String!): DomainName!\n\n  \"\"\"Create `EmailAddress` from string.\"\"\"\n  emailAddress(address: String!): EmailAddress!\n\n  \"\"\"Create `HTMLDocument` from string.\"\"\"\n  htmlDocument(html: String!): HTMLDocument!\n\n  \"\"\"Create `IPAddress` from string.\"\"\"\n  ipAddress(address: String!): IPAddress!\n\n  \"\"\"Get languages.\"\"\"\n  languages(limit: Int, skip: Int, where: LanguageWhere): [Language!]!\n\n  \"\"\"Create `Markdown` from string.\"\"\"\n  markdown(text: String!): Markdown!\n  random(cacheBuster: String): Random!\n\n  \"\"\"Get time zones.\"\"\"\n  timeZones(limit: Int, skip: Int, where: TimeZoneWhere): [TimeZone!]!\n\n  \"\"\"Create `URL` from string.\"\"\"\n  url(url: String!): URL!\n}\n\n\"\"\"Cryptographically secure random number generator.\"\"\"\ntype Random {\n  \"\"\"Generate a float.\"\"\"\n  float(high: Float = 1.84377e+19, low: Float = -1.79769e+308): Int!\n\n  \"\"\"Generate a integer.\"\"\"\n  int(high: Int = 2147483647, low: Int = -2147483648): Int!\n\n  \"\"\"Generate a string.\"\"\"\n  string(length: Int = 16): String!\n}\n\n\"\"\"Time zone offset from UTC.\"\"\"\ntype TimeZone {\n  \"\"\"Cities in this time zone.\"\"\"\n  cities: [City!]!\n\n  \"\"\"The Wikidata ID.\"\"\"\n  id: String!\n\n  \"\"\"The name.\"\"\"\n  name: String!\n\n  \"\"\"The UTC offset.\"\"\"\n  offset: Float!\n}\n\ninput TimeZoneWhere {\n  id: WhereString\n  name: WhereString\n  offset: WhereFloat\n}\n\n\"\"\"\nUniform Resource Locator (URL) in the form `<scheme>://<host><:port>/<path>?<query>`.\n\"\"\"\ntype URL {\n  \"\"\"The host as a domain name.\"\"\"\n  domainName: DomainName\n\n  \"\"\"The host.\"\"\"\n  host: String!\n\n  \"\"\"\n  Fetches the URL and returns `HTMLDocument`. Does not resolve redirects. Returns an error if the request fails or null if the response is not a HTML document.\n  \"\"\"\n  htmlDocument: HTMLDocument\n\n  \"\"\"The path.\"\"\"\n  path: String\n\n  \"\"\"The port.\"\"\"\n  port: Int\n\n  \"\"\"The query.\"\"\"\n  query: String\n\n  \"\"\"The scheme.\"\"\"\n  scheme: String!\n\n  \"\"\"The full URL.\"\"\"\n  url: String!\n}\n\ninput WhereFloat {\n  eq: Float\n  neq: Float\n  in: [Float!]\n  nin: [Float!]\n  lt: Float\n  gt: Float\n}\n\ninput WhereInt {\n  eq: Int\n  neq: Int\n  in: [Int!]\n  nin: [Int!]\n  lt: Int\n  gt: Int\n}\n\ninput WhereString {\n  eq: String\n  neq: String\n  in: [String!]\n  nin: [String!]\n}",
    "Ghibliql": "type Query {\n  \"\"\"Returns a film based on a single ID\"\"\"\n  film(id: ID!): Film\n\n  \"\"\"Returns information about all of the Studio Ghibli films\"\"\"\n  films: [Film]\n\n  \"\"\"Returns a person based on a single ID\"\"\"\n  people(id: ID!): People\n\n  \"\"\"Returns all available peoples\"\"\"\n  peoples: [People]\n\n  \"\"\"Returns an individual species\"\"\"\n  specie(id: ID!): Specie\n\n  \"\"\"Returns all available species\"\"\"\n  species: [Specie]\n\n  \"\"\"Returns an individual location.\"\"\"\n  location(id: ID!): Location\n\n  \"\"\"Returns information about all of the Studio Ghibli locations\"\"\"\n  locations: [Location]\n\n  \"\"\"An individual vehicle\"\"\"\n  vehicle(id: ID!): Vehicle\n\n  \"\"\"Returns all available vehicles\"\"\"\n  vehicles: [Vehicle]\n}\n\n\"\"\"\nThe Films endpoint returns information about all of the Studio Ghibli films.\n\"\"\"\ntype Film {\n  \"\"\"Unique identifier representing a specific film\"\"\"\n  id: String!\n\n  \"\"\"Title of the film\"\"\"\n  title: String\n\n  \"\"\"Description of the film\"\"\"\n  description: String\n\n  \"\"\"Director of the film\"\"\"\n  director: String\n\n  \"\"\"Producer of the film\"\"\"\n  producer: String\n\n  \"\"\"Release year of film\"\"\"\n  release_date: String\n\n  \"\"\"Rotten Tomato score of film\"\"\"\n  rt_score: String\n\n  \"\"\"People found in film\"\"\"\n  people: [People]\n\n  \"\"\"Species found in film\"\"\"\n  species: [Specie]\n\n  \"\"\"Locations found in film\"\"\"\n  locations: [Location]\n\n  \"\"\"Vehicles found in film\"\"\"\n  vehicles: [Vehicle]\n\n  \"\"\"URL of film\"\"\"\n  url: String\n}\n\n\"\"\"\nThe People endpoint returns information about all of the Studio Ghibli people. This broadly includes all Ghibli characters, human and non-.\n\"\"\"\ntype People {\n  \"\"\"Unique identifier representing a specific person\"\"\"\n  id: String!\n\n  \"\"\"Name of the person\"\"\"\n  name: String\n\n  \"\"\"Gender of the person\"\"\"\n  gender: String\n\n  \"\"\"Age, if known, of the person\"\"\"\n  age: String\n\n  \"\"\"Eye color of the person\"\"\"\n  eye_color: String\n\n  \"\"\"Hair color of the person\"\"\"\n  hair_color: String\n\n  \"\"\"Array of films the person appears in\"\"\"\n  films: [Film]\n\n  \"\"\"Species the person belongs to\"\"\"\n  species: Specie\n\n  \"\"\"Unique url of the person\"\"\"\n  url: String\n}\n\n\"\"\"\nThe Species endpoint returns information about all of the Studio Ghibli species. This includes humans, animals, and spirits et al.\n\"\"\"\ntype Specie {\n  \"\"\"Unique identifier representing a specific species\"\"\"\n  id: String!\n\n  \"\"\"Name of the species\"\"\"\n  name: String\n\n  \"\"\"Classification of the species\"\"\"\n  classification: String\n\n  \"\"\"Eye color of the species\"\"\"\n  eye_colors: String\n\n  \"\"\"Hair color of the species\"\"\"\n  hair_colors: String\n\n  \"\"\"People belonging to the species\"\"\"\n  people: [People]\n\n  \"\"\"Array of films the species appears in\"\"\"\n  films: [Film]\n\n  \"\"\"Unique url of the species\"\"\"\n  url: String\n}\n\n\"\"\"\nThe Locations endpoint returns information about all of the Studio Ghibli locations. This broadly includes lands, countries, and places.\n\"\"\"\ntype Location {\n  \"\"\"Unique identifier representing a specific location\"\"\"\n  id: String!\n\n  \"\"\"Name of location\"\"\"\n  name: String\n\n  \"\"\"Climate of location\"\"\"\n  climate: String\n\n  \"\"\"Terrain type of location\"\"\"\n  terrain: String\n\n  \"\"\"Percent of location covered in water\"\"\"\n  surface_water: String\n\n  \"\"\"Array of residents in location\"\"\"\n  residents: [People]\n\n  \"\"\"Array of films the location appears in\"\"\"\n  films: [Film]\n\n  \"\"\"Individual URL of the location\"\"\"\n  url: String\n}\n\n\"\"\"\nThe Vehicles endpoint returns information about all of the Studio Ghibli vechiles. This includes cars, ships, and planes.\n\"\"\"\ntype Vehicle {\n  \"\"\"Unique identifier representing a specific vehicle\"\"\"\n  id: String!\n\n  \"\"\"Name of the vehicles\"\"\"\n  name: String\n\n  \"\"\"Description of the vehicle\"\"\"\n  description: String\n\n  \"\"\"Class of the vehicle\"\"\"\n  vehicle_class: String\n\n  \"\"\"Length of the vehicle in feet\"\"\"\n  length: String\n\n  \"\"\"Pilot of the vehicle\"\"\"\n  pilot: People\n\n  \"\"\"Array of films the vehicle appears in\"\"\"\n  films: Film\n\n  \"\"\"Unique URL of the vehicle\"\"\"\n  url: String\n}",
    "Gitlab": "\"\"\"\nRepresents the access level of a relationship between a User and object that it is related to\n\"\"\"\ntype AccessLevel {\n  \"\"\"Integer representation of access level.\"\"\"\n  integerValue: Int\n\n  \"\"\"String representation of access level.\"\"\"\n  stringValue: AccessLevelEnum\n}\n\n\"\"\"Access level to a resource\"\"\"\nenum AccessLevelEnum {\n  \"\"\"No access\"\"\"\n  NO_ACCESS\n\n  \"\"\"Minimal access\"\"\"\n  MINIMAL_ACCESS\n\n  \"\"\"Guest access\"\"\"\n  GUEST\n\n  \"\"\"Reporter access\"\"\"\n  REPORTER\n\n  \"\"\"Developer access\"\"\"\n  DEVELOPER\n\n  \"\"\"Maintainer access\"\"\"\n  MAINTAINER\n\n  \"\"\"Owner access\"\"\"\n  OWNER\n}\n\n\"\"\"Autogenerated input type of AddAwardEmoji\"\"\"\ninput AddAwardEmojiInput {\n  \"\"\"The global ID of the awardable resource.\"\"\"\n  awardableId: AwardableID!\n\n  \"\"\"The emoji name.\"\"\"\n  name: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of AddAwardEmoji\"\"\"\ntype AddAwardEmojiPayload {\n  \"\"\"The award emoji after mutation.\"\"\"\n  awardEmoji: AwardEmoji\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of AddProjectToSecurityDashboard\"\"\"\ninput AddProjectToSecurityDashboardInput {\n  \"\"\"ID of the project to be added to Instance Security Dashboard.\"\"\"\n  id: ProjectID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of AddProjectToSecurityDashboard\"\"\"\ntype AddProjectToSecurityDashboardPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Project that was added to the Instance Security Dashboard.\"\"\"\n  project: Project\n}\n\n\"\"\"Autogenerated input type of AdminSidekiqQueuesDeleteJobs\"\"\"\ninput AdminSidekiqQueuesDeleteJobsInput {\n  \"\"\"Delete jobs matching user in the context metadata\"\"\"\n  user: String\n\n  \"\"\"Delete jobs matching project in the context metadata\"\"\"\n  project: String\n\n  \"\"\"Delete jobs matching root_namespace in the context metadata\"\"\"\n  rootNamespace: String\n\n  \"\"\"Delete jobs matching subscription_plan in the context metadata\"\"\"\n  subscriptionPlan: String\n\n  \"\"\"Delete jobs matching caller_id in the context metadata\"\"\"\n  callerId: String\n\n  \"\"\"Delete jobs matching remote_ip in the context metadata\"\"\"\n  remoteIp: String\n\n  \"\"\"Delete jobs matching related_class in the context metadata\"\"\"\n  relatedClass: String\n\n  \"\"\"Delete jobs matching feature_category in the context metadata\"\"\"\n  featureCategory: String\n\n  \"\"\"Delete jobs matching client_id in the context metadata\"\"\"\n  clientId: String\n\n  \"\"\"The name of the queue to delete jobs from.\"\"\"\n  queueName: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of AdminSidekiqQueuesDeleteJobs\"\"\"\ntype AdminSidekiqQueuesDeleteJobsPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Information about the status of the deletion request.\"\"\"\n  result: DeleteJobsResponse\n}\n\n\"\"\"Describes an alert from the project's Alert Management\"\"\"\ntype AlertManagementAlert implements Noteable {\n  \"\"\"Assignees of the alert.\"\"\"\n  assignees(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"Timestamp the alert was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"Description of the alert.\"\"\"\n  description: String\n\n  \"\"\"Alert details.\"\"\"\n  details: JSON\n\n  \"\"\"The URL of the alert detail page.\"\"\"\n  detailsUrl: String!\n\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"Timestamp the alert ended.\"\"\"\n  endedAt: Time\n\n  \"\"\"Environment for the alert.\"\"\"\n  environment: Environment\n\n  \"\"\"Number of events of this alert.\"\"\"\n  eventCount: Int\n\n  \"\"\"List of hosts the alert came from.\"\"\"\n  hosts: [String!]\n\n  \"\"\"Internal ID of the alert.\"\"\"\n  iid: ID!\n\n  \"\"\"Issue attached to the alert.\"\"\"\n  issue: Issue\n\n  \"\"\"\n  Internal ID of the GitLab issue attached to the alert. Deprecated in 13.10: Use issue field.\n  \"\"\"\n  issueIid: ID @deprecated(reason: \"Use issue field. Deprecated in 13.10.\")\n\n  \"\"\"URL for metrics embed for the alert.\"\"\"\n  metricsDashboardUrl: String\n\n  \"\"\"Monitoring tool the alert came from.\"\"\"\n  monitoringTool: String\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"The alert condition for Prometheus.\"\"\"\n  prometheusAlert: PrometheusAlert\n\n  \"\"\"Runbook for the alert as defined in alert details.\"\"\"\n  runbook: String\n\n  \"\"\"Service the alert came from.\"\"\"\n  service: String\n\n  \"\"\"Severity of the alert.\"\"\"\n  severity: AlertManagementSeverity\n\n  \"\"\"Timestamp the alert was raised.\"\"\"\n  startedAt: Time\n\n  \"\"\"Status of the alert.\"\"\"\n  status: AlertManagementStatus\n\n  \"\"\"Title of the alert.\"\"\"\n  title: String\n\n  \"\"\"To-do items of the current user for the alert.\"\"\"\n  todos(\n    \"\"\"The action to be filtered.\"\"\"\n    action: [TodoActionEnum!]\n\n    \"\"\"The ID of an author.\"\"\"\n    authorId: [ID!]\n\n    \"\"\"The ID of a project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"The ID of a group.\"\"\"\n    groupId: [ID!]\n\n    \"\"\"The state of the todo.\"\"\"\n    state: [TodoStateEnum!]\n\n    \"\"\"The type of the todo.\"\"\"\n    type: [TodoTargetEnum!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TodoConnection\n\n  \"\"\"Timestamp the alert was last updated.\"\"\"\n  updatedAt: Time\n}\n\n\"\"\"The connection type for AlertManagementAlert.\"\"\"\ntype AlertManagementAlertConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [AlertManagementAlertEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [AlertManagementAlert]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype AlertManagementAlertEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: AlertManagementAlert\n}\n\n\"\"\"Values for sorting alerts\"\"\"\nenum AlertManagementAlertSort {\n  \"\"\"Updated at descending order.\"\"\"\n  updated_desc @deprecated(reason: \"This was renamed. Please use `UPDATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at ascending order.\"\"\"\n  updated_asc @deprecated(reason: \"This was renamed. Please use `UPDATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at descending order.\"\"\"\n  created_desc @deprecated(reason: \"This was renamed. Please use `CREATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at ascending order.\"\"\"\n  created_asc @deprecated(reason: \"This was renamed. Please use `CREATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at descending order.\"\"\"\n  UPDATED_DESC\n\n  \"\"\"Updated at ascending order.\"\"\"\n  UPDATED_ASC\n\n  \"\"\"Created at descending order.\"\"\"\n  CREATED_DESC\n\n  \"\"\"Created at ascending order.\"\"\"\n  CREATED_ASC\n\n  \"\"\"Start time by ascending order.\"\"\"\n  STARTED_AT_ASC\n\n  \"\"\"Start time by descending order.\"\"\"\n  STARTED_AT_DESC\n\n  \"\"\"End time by ascending order.\"\"\"\n  ENDED_AT_ASC\n\n  \"\"\"End time by descending order.\"\"\"\n  ENDED_AT_DESC\n\n  \"\"\"Created time by ascending order.\"\"\"\n  CREATED_TIME_ASC\n\n  \"\"\"Created time by descending order.\"\"\"\n  CREATED_TIME_DESC\n\n  \"\"\"Created time by ascending order.\"\"\"\n  UPDATED_TIME_ASC\n\n  \"\"\"Created time by descending order.\"\"\"\n  UPDATED_TIME_DESC\n\n  \"\"\"Events count by ascending order.\"\"\"\n  EVENT_COUNT_ASC\n\n  \"\"\"Events count by descending order.\"\"\"\n  EVENT_COUNT_DESC\n\n  \"\"\"Severity from less critical to more critical.\"\"\"\n  SEVERITY_ASC\n\n  \"\"\"Severity from more critical to less critical.\"\"\"\n  SEVERITY_DESC\n\n  \"\"\"Status by order: Ignored > Resolved > Acknowledged > Triggered.\"\"\"\n  STATUS_ASC\n\n  \"\"\"Status by order: Triggered > Acknowledged > Resolved > Ignored.\"\"\"\n  STATUS_DESC\n}\n\n\"\"\"Represents total number of alerts for the represented categories\"\"\"\ntype AlertManagementAlertStatusCountsType {\n  \"\"\"Number of alerts with status ACKNOWLEDGED for the project\"\"\"\n  acknowledged: Int\n\n  \"\"\"Total number of alerts for the project.\"\"\"\n  all: Int\n\n  \"\"\"Number of alerts with status IGNORED for the project\"\"\"\n  ignored: Int\n\n  \"\"\"\n  Number of alerts with status TRIGGERED or ACKNOWLEDGED for the project.\n  \"\"\"\n  open: Int\n\n  \"\"\"Number of alerts with status RESOLVED for the project\"\"\"\n  resolved: Int\n\n  \"\"\"Number of alerts with status TRIGGERED for the project\"\"\"\n  triggered: Int\n}\n\n\"\"\"Filters the alerts based on given domain\"\"\"\nenum AlertManagementDomainFilter {\n  \"\"\"Alerts for operations domain.\"\"\"\n  operations\n\n  \"\"\"Alerts for threat monitoring domain.\"\"\"\n  threat_monitoring\n}\n\n\"\"\"An endpoint and credentials used to accept alerts for a project\"\"\"\ntype AlertManagementHttpIntegration implements AlertManagementIntegration {\n  \"\"\"Whether the endpoint is currently accepting alerts.\"\"\"\n  active: Boolean\n\n  \"\"\"\n  URL at which Prometheus metrics can be queried to populate the metrics dashboard.\n  \"\"\"\n  apiUrl: String\n\n  \"\"\"ID of the integration.\"\"\"\n  id: ID!\n\n  \"\"\"Name of the integration.\"\"\"\n  name: String\n\n  \"\"\"Extract alert fields from payload example for custom mapping.\"\"\"\n  payloadAlertFields: [AlertManagementPayloadAlertField!]\n\n  \"\"\"\n  The custom mapping of GitLab alert attributes to fields from the payload_example.\n  \"\"\"\n  payloadAttributeMappings: [AlertManagementPayloadAlertMappingField!]\n\n  \"\"\"The example of an alert payload.\"\"\"\n  payloadExample: JsonString\n\n  \"\"\"Token used to authenticate alert notification requests.\"\"\"\n  token: String\n\n  \"\"\"Type of integration.\"\"\"\n  type: AlertManagementIntegrationType!\n\n  \"\"\"Endpoint which accepts alert notifications.\"\"\"\n  url: String\n}\n\n\"\"\"The connection type for AlertManagementHttpIntegration.\"\"\"\ntype AlertManagementHttpIntegrationConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [AlertManagementHttpIntegrationEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [AlertManagementHttpIntegration]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype AlertManagementHttpIntegrationEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: AlertManagementHttpIntegration\n}\n\n\"\"\"\nA `AlertManagementHttpIntegrationID` is a global ID. It is encoded as a string.\n\nAn example `AlertManagementHttpIntegrationID` is: `\"gid://gitlab/AlertManagement::HttpIntegration/1\"`.\n\n\"\"\"\nscalar AlertManagementHttpIntegrationID\n\ninterface AlertManagementIntegration {\n  \"\"\"Whether the endpoint is currently accepting alerts.\"\"\"\n  active: Boolean\n\n  \"\"\"\n  URL at which Prometheus metrics can be queried to populate the metrics dashboard.\n  \"\"\"\n  apiUrl: String\n\n  \"\"\"ID of the integration.\"\"\"\n  id: ID!\n\n  \"\"\"Name of the integration.\"\"\"\n  name: String\n\n  \"\"\"Token used to authenticate alert notification requests.\"\"\"\n  token: String\n\n  \"\"\"Type of integration.\"\"\"\n  type: AlertManagementIntegrationType!\n\n  \"\"\"Endpoint which accepts alert notifications.\"\"\"\n  url: String\n}\n\n\"\"\"The connection type for AlertManagementIntegration.\"\"\"\ntype AlertManagementIntegrationConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [AlertManagementIntegrationEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [AlertManagementIntegration]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype AlertManagementIntegrationEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: AlertManagementIntegration\n}\n\n\"\"\"Values of types of integrations\"\"\"\nenum AlertManagementIntegrationType {\n  \"\"\"Prometheus integration.\"\"\"\n  PROMETHEUS\n\n  \"\"\"Integration with any monitoring tool.\"\"\"\n  HTTP\n}\n\n\"\"\"Parsed field from an alert used for custom mappings\"\"\"\ntype AlertManagementPayloadAlertField {\n  \"\"\"Human-readable label of the payload path.\"\"\"\n  label: String\n\n  \"\"\"Path to value inside payload JSON.\"\"\"\n  path: [PayloadAlertFieldPathSegment!]\n\n  \"\"\"Type of the parsed value.\"\"\"\n  type: AlertManagementPayloadAlertFieldType\n}\n\n\"\"\"\nField that are available while modifying the custom mapping attributes for an HTTP integration\n\"\"\"\ninput AlertManagementPayloadAlertFieldInput {\n  \"\"\"A GitLab alert field name.\"\"\"\n  fieldName: AlertManagementPayloadAlertFieldName!\n\n  \"\"\"Path to value inside payload JSON.\"\"\"\n  path: [PayloadAlertFieldPathSegment!]!\n\n  \"\"\"Human-readable label of the payload path.\"\"\"\n  label: String\n\n  \"\"\"Type of the parsed value.\"\"\"\n  type: AlertManagementPayloadAlertFieldType!\n}\n\n\"\"\"Values for alert field names used in the custom mapping\"\"\"\nenum AlertManagementPayloadAlertFieldName {\n  \"\"\"The title of the incident.\"\"\"\n  TITLE\n\n  \"\"\"A high-level summary of the problem.\"\"\"\n  DESCRIPTION\n\n  \"\"\"The time of the incident.\"\"\"\n  START_TIME\n\n  \"\"\"The resolved time of the incident.\"\"\"\n  END_TIME\n\n  \"\"\"The affected service.\"\"\"\n  SERVICE\n\n  \"\"\"The name of the associated monitoring tool.\"\"\"\n  MONITORING_TOOL\n\n  \"\"\"One or more hosts, as to where this incident occurred.\"\"\"\n  HOSTS\n\n  \"\"\"The severity of the alert.\"\"\"\n  SEVERITY\n\n  \"\"\"\n  The unique identifier of the alert. This can be used to group occurrences of the same alert.\n  \"\"\"\n  FINGERPRINT\n\n  \"\"\"The name of the associated GitLab environment.\"\"\"\n  GITLAB_ENVIRONMENT_NAME\n}\n\n\"\"\"Values for alert field types used in the custom mapping\"\"\"\nenum AlertManagementPayloadAlertFieldType {\n  \"\"\"Array field type.\"\"\"\n  ARRAY\n\n  \"\"\"DateTime field type.\"\"\"\n  DATETIME\n\n  \"\"\"String field type.\"\"\"\n  STRING\n}\n\n\"\"\"Parsed field (with its name) from an alert used for custom mappings\"\"\"\ntype AlertManagementPayloadAlertMappingField {\n  \"\"\"A GitLab alert field name.\"\"\"\n  fieldName: AlertManagementPayloadAlertFieldName\n\n  \"\"\"Human-readable label of the payload path.\"\"\"\n  label: String\n\n  \"\"\"Path to value inside payload JSON.\"\"\"\n  path: [PayloadAlertFieldPathSegment!]\n\n  \"\"\"Type of the parsed value.\"\"\"\n  type: AlertManagementPayloadAlertFieldType\n}\n\n\"\"\"\nAn endpoint and credentials used to accept Prometheus alerts for a project\n\"\"\"\ntype AlertManagementPrometheusIntegration implements AlertManagementIntegration {\n  \"\"\"Whether the endpoint is currently accepting alerts.\"\"\"\n  active: Boolean\n\n  \"\"\"\n  URL at which Prometheus metrics can be queried to populate the metrics dashboard.\n  \"\"\"\n  apiUrl: String\n\n  \"\"\"ID of the integration.\"\"\"\n  id: ID!\n\n  \"\"\"Name of the integration.\"\"\"\n  name: String\n\n  \"\"\"Token used to authenticate alert notification requests.\"\"\"\n  token: String\n\n  \"\"\"Type of integration.\"\"\"\n  type: AlertManagementIntegrationType!\n\n  \"\"\"Endpoint which accepts alert notifications.\"\"\"\n  url: String\n}\n\n\"\"\"Alert severity values\"\"\"\nenum AlertManagementSeverity {\n  \"\"\"Critical severity\"\"\"\n  CRITICAL\n\n  \"\"\"High severity\"\"\"\n  HIGH\n\n  \"\"\"Medium severity\"\"\"\n  MEDIUM\n\n  \"\"\"Low severity\"\"\"\n  LOW\n\n  \"\"\"Info severity\"\"\"\n  INFO\n\n  \"\"\"Unknown severity\"\"\"\n  UNKNOWN\n}\n\n\"\"\"Alert status values\"\"\"\nenum AlertManagementStatus {\n  \"\"\"Investigation has not started\"\"\"\n  TRIGGERED\n\n  \"\"\"Someone is actively investigating the problem\"\"\"\n  ACKNOWLEDGED\n\n  \"\"\"No further work is required\"\"\"\n  RESOLVED\n\n  \"\"\"No action will be taken on the alert\"\"\"\n  IGNORED\n}\n\n\"\"\"Autogenerated input type of AlertSetAssignees\"\"\"\ninput AlertSetAssigneesInput {\n  \"\"\"The project the alert to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the alert to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  The usernames to assign to the alert. Replaces existing assignees by default.\n  \"\"\"\n  assigneeUsernames: [String!]!\n\n  \"\"\"The operation to perform. Defaults to REPLACE.\"\"\"\n  operationMode: MutationOperationMode\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of AlertSetAssignees\"\"\"\ntype AlertSetAssigneesPayload {\n  \"\"\"The alert after mutation.\"\"\"\n  alert: AlertManagementAlert\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue created after mutation.\"\"\"\n  issue: Issue\n\n  \"\"\"The to-do item after mutation.\"\"\"\n  todo: Todo\n}\n\n\"\"\"Autogenerated input type of AlertTodoCreate\"\"\"\ninput AlertTodoCreateInput {\n  \"\"\"The project the alert to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the alert to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of AlertTodoCreate\"\"\"\ntype AlertTodoCreatePayload {\n  \"\"\"The alert after mutation.\"\"\"\n  alert: AlertManagementAlert\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue created after mutation.\"\"\"\n  issue: Issue\n\n  \"\"\"The to-do item after mutation.\"\"\"\n  todo: Todo\n}\n\n\"\"\"\nA `AnalyticsDevopsAdoptionSegmentID` is a global ID. It is encoded as a string.\n\nAn example `AnalyticsDevopsAdoptionSegmentID` is: `\"gid://gitlab/Analytics::DevopsAdoption::Segment/1\"`.\n\n\"\"\"\nscalar AnalyticsDevopsAdoptionSegmentID\n\n\"\"\"Data associated with configuring API fuzzing scans in GitLab CI\"\"\"\ntype ApiFuzzingCiConfiguration {\n  \"\"\"All available scan modes.\"\"\"\n  scanModes: [ApiFuzzingScanMode!]\n\n  \"\"\"All default scan profiles.\"\"\"\n  scanProfiles: [ApiFuzzingScanProfile!]\n}\n\n\"\"\"Autogenerated input type of ApiFuzzingCiConfigurationCreate\"\"\"\ninput ApiFuzzingCiConfigurationCreateInput {\n  \"\"\"Full path of the project.\"\"\"\n  projectPath: ID!\n\n  \"\"\"\n  File path or URL to the file that defines the API surface for scanning. Must be in the format specified by the `scanMode` argument.\n  \"\"\"\n  apiSpecificationFile: String!\n\n  \"\"\"\n  CI variable containing the password for authenticating with the target API.\n  \"\"\"\n  authPassword: String\n\n  \"\"\"\n  CI variable containing the username for authenticating with the target API.\n  \"\"\"\n  authUsername: String\n\n  \"\"\"The mode for API fuzzing scans.\"\"\"\n  scanMode: ApiFuzzingScanMode!\n\n  \"\"\"Name of a default profile to use for scanning. Ex: Quick-10.\"\"\"\n  scanProfile: String\n\n  \"\"\"URL for the target of API fuzzing scans.\"\"\"\n  target: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ApiFuzzingCiConfigurationCreate\"\"\"\ntype ApiFuzzingCiConfigurationCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"\n  A YAML snippet that can be inserted into the project's `.gitlab-ci.yml` to set up API fuzzing scans.\n  \"\"\"\n  configurationYaml: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"\n  The location at which the project's `.gitlab-ci.yml` file can be edited in the browser.\n  \"\"\"\n  gitlabCiYamlEditPath: String\n}\n\n\"\"\"All possible ways to specify the API surface for an API fuzzing scan.\"\"\"\nenum ApiFuzzingScanMode {\n  \"\"\"The API surface is specified by a HAR file.\"\"\"\n  HAR\n\n  \"\"\"The API surface is specified by a OPENAPI file.\"\"\"\n  OPENAPI\n\n  \"\"\"The API surface is specified by a POSTMAN file.\"\"\"\n  POSTMAN\n}\n\n\"\"\"An API Fuzzing scan profile.\"\"\"\ntype ApiFuzzingScanProfile {\n  \"\"\"A short description of the profile.\"\"\"\n  description: String\n\n  \"\"\"The unique name of the profile.\"\"\"\n  name: String\n\n  \"\"\"A syntax highlit HTML representation of the YAML.\"\"\"\n  yaml: String\n}\n\n\"\"\"Describes a rule for who can approve merge requests.\"\"\"\ntype ApprovalRule {\n  \"\"\"ID of the rule.\"\"\"\n  id: GlobalID!\n\n  \"\"\"Name of the rule.\"\"\"\n  name: String\n\n  \"\"\"Type of the rule.\"\"\"\n  type: ApprovalRuleType\n}\n\n\"\"\"The kind of an approval rule.\"\"\"\nenum ApprovalRuleType {\n  \"\"\"A `regular` approval rule.\"\"\"\n  REGULAR\n\n  \"\"\"A `code_owner` approval rule.\"\"\"\n  CODE_OWNER\n\n  \"\"\"A `report_approver` approval rule.\"\"\"\n  REPORT_APPROVER\n\n  \"\"\"A `any_approver` approval rule.\"\"\"\n  ANY_APPROVER\n}\n\n\"\"\"Assignee ID wildcard values\"\"\"\nenum AssigneeWildcardId {\n  \"\"\"No assignee is assigned.\"\"\"\n  NONE\n\n  \"\"\"An assignee is assigned.\"\"\"\n  ANY\n}\n\n\"\"\"User availability status\"\"\"\nenum AvailabilityEnum {\n  \"\"\"Not Set\"\"\"\n  NOT_SET\n\n  \"\"\"Busy\"\"\"\n  BUSY\n}\n\n\"\"\"An emoji awarded by a user\"\"\"\ntype AwardEmoji {\n  \"\"\"The emoji description.\"\"\"\n  description: String!\n\n  \"\"\"The emoji as an icon.\"\"\"\n  emoji: String!\n\n  \"\"\"The emoji name.\"\"\"\n  name: String!\n\n  \"\"\"The emoji in Unicode.\"\"\"\n  unicode: String!\n\n  \"\"\"The Unicode version for this emoji.\"\"\"\n  unicodeVersion: String!\n\n  \"\"\"The user who awarded the emoji.\"\"\"\n  user: UserCore!\n}\n\n\"\"\"Autogenerated input type of AwardEmojiAdd\"\"\"\ninput AwardEmojiAddInput {\n  \"\"\"The global ID of the awardable resource.\"\"\"\n  awardableId: AwardableID!\n\n  \"\"\"The emoji name.\"\"\"\n  name: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of AwardEmojiAdd\"\"\"\ntype AwardEmojiAddPayload {\n  \"\"\"The award emoji after mutation.\"\"\"\n  awardEmoji: AwardEmoji\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"The connection type for AwardEmoji.\"\"\"\ntype AwardEmojiConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [AwardEmojiEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [AwardEmoji]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype AwardEmojiEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: AwardEmoji\n}\n\n\"\"\"Autogenerated input type of AwardEmojiRemove\"\"\"\ninput AwardEmojiRemoveInput {\n  \"\"\"The global ID of the awardable resource.\"\"\"\n  awardableId: AwardableID!\n\n  \"\"\"The emoji name.\"\"\"\n  name: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of AwardEmojiRemove\"\"\"\ntype AwardEmojiRemovePayload {\n  \"\"\"The award emoji after mutation.\"\"\"\n  awardEmoji: AwardEmoji\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of AwardEmojiToggle\"\"\"\ninput AwardEmojiToggleInput {\n  \"\"\"The global ID of the awardable resource.\"\"\"\n  awardableId: AwardableID!\n\n  \"\"\"The emoji name.\"\"\"\n  name: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of AwardEmojiToggle\"\"\"\ntype AwardEmojiTogglePayload {\n  \"\"\"The award emoji after mutation.\"\"\"\n  awardEmoji: AwardEmoji\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"\n  Indicates the status of the emoji. True if the toggle awarded the emoji, and false if the toggle removed the emoji.\n  \"\"\"\n  toggledOn: Boolean!\n}\n\n\"\"\"\nA `AwardableID` is a global ID. It is encoded as a string.\n\nAn example `AwardableID` is: `\"gid://gitlab/Awardable/1\"`.\n\n\"\"\"\nscalar AwardableID\n\ntype BaseService implements Service {\n  \"\"\"Indicates if the service is active.\"\"\"\n  active: Boolean\n\n  \"\"\"Class name of the service.\"\"\"\n  type: String\n}\n\n\"\"\"\nRepresents non-fractional signed whole numeric values. Since the value may exceed the size of a 32-bit integer, it's encoded as a string.\n\"\"\"\nscalar BigInt\n\ntype Blob implements Entry {\n  \"\"\"Flat path of the entry.\"\"\"\n  flatPath: String!\n\n  \"\"\"ID of the entry.\"\"\"\n  id: ID!\n\n  \"\"\"LFS ID of the blob.\"\"\"\n  lfsOid: String\n\n  \"\"\"Blob mode in numeric format.\"\"\"\n  mode: String\n\n  \"\"\"Name of the entry.\"\"\"\n  name: String!\n\n  \"\"\"Path of the entry.\"\"\"\n  path: String!\n\n  \"\"\"Last commit SHA for the entry.\"\"\"\n  sha: String!\n\n  \"\"\"Type of tree entry.\"\"\"\n  type: EntryType!\n\n  \"\"\"Web path of the blob.\"\"\"\n  webPath: String\n\n  \"\"\"Web URL of the blob.\"\"\"\n  webUrl: String\n}\n\n\"\"\"The connection type for Blob.\"\"\"\ntype BlobConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [BlobEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Blob]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BlobEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Blob\n}\n\n\"\"\"Represents how the blob content should be displayed\"\"\"\ntype BlobViewer {\n  \"\"\"Shows whether the blob should be displayed collapsed.\"\"\"\n  collapsed: Boolean!\n\n  \"\"\"Content file type.\"\"\"\n  fileType: String!\n\n  \"\"\"Shows whether the blob content is loaded asynchronously.\"\"\"\n  loadAsync: Boolean!\n\n  \"\"\"Loading partial name.\"\"\"\n  loadingPartialName: String!\n\n  \"\"\"Error rendering the blob content.\"\"\"\n  renderError: String\n\n  \"\"\"Shows whether the blob is too large to be displayed.\"\"\"\n  tooLarge: Boolean!\n\n  \"\"\"Type of blob viewer.\"\"\"\n  type: BlobViewersType!\n}\n\n\"\"\"Types of blob viewers\"\"\"\nenum BlobViewersType {\n  \"\"\"Rich blob viewers type.\"\"\"\n  rich\n\n  \"\"\"Simple blob viewers type.\"\"\"\n  simple\n\n  \"\"\"Auxiliary blob viewers type.\"\"\"\n  auxiliary\n}\n\n\"\"\"Represents a project or group issue board\"\"\"\ntype Board {\n  \"\"\"The board assignee.\"\"\"\n  assignee: UserCore\n\n  \"\"\"Timestamp of when the board was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Epics associated with board issues.\"\"\"\n  epics(\n    \"\"\"Filters applied when selecting issues on the board.\"\"\"\n    issueFilters: BoardIssueInput\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): BoardEpicConnection\n\n  \"\"\"Whether or not backlog list is hidden.\"\"\"\n  hideBacklogList: Boolean\n\n  \"\"\"Whether or not closed list is hidden.\"\"\"\n  hideClosedList: Boolean\n\n  \"\"\"ID (global ID) of the board.\"\"\"\n  id: ID!\n\n  \"\"\"The board iteration.\"\"\"\n  iteration: Iteration\n\n  \"\"\"Labels of the board.\"\"\"\n  labels(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LabelConnection\n\n  \"\"\"Lists of the board.\"\"\"\n  lists(\n    \"\"\"Find a list by its global ID.\"\"\"\n    id: ListID\n\n    \"\"\"Filters applied when getting issue metadata in the board list.\"\"\"\n    issueFilters: BoardIssueInput\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): BoardListConnection\n\n  \"\"\"The board milestone.\"\"\"\n  milestone: Milestone\n\n  \"\"\"Name of the board.\"\"\"\n  name: String\n\n  \"\"\"Timestamp of when the board was last updated.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Web path of the board.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the board.\"\"\"\n  webUrl: String!\n\n  \"\"\"Weight of the board.\"\"\"\n  weight: Int\n}\n\n\"\"\"The connection type for Board.\"\"\"\ntype BoardConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [BoardEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Board]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BoardEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Board\n}\n\n\"\"\"Represents an epic on an issue board\"\"\"\ntype BoardEpic implements Noteable & CurrentUserTodos & Eventable {\n  \"\"\"Author of the epic.\"\"\"\n  author: UserCore!\n\n  \"\"\"A list of award emojis associated with the epic.\"\"\"\n  awardEmoji(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): AwardEmojiConnection\n\n  \"\"\"Children (sub-epics) of the epic.\"\"\"\n  children(\n    \"\"\"List items overlapping the given timeframe.\"\"\"\n    timeframe: Timeframe\n\n    \"\"\"IID of the epic, e.g., \"1\".\"\"\"\n    iid: ID\n\n    \"\"\"List of IIDs of epics, e.g., [1, 2].\"\"\"\n    iids: [ID!]\n\n    \"\"\"Filter epics by state.\"\"\"\n    state: EpicState\n\n    \"\"\"Search query for epic title or description.\"\"\"\n    search: String\n\n    \"\"\"List epics by sort order.\"\"\"\n    sort: EpicSort\n\n    \"\"\"Filter epics by author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Filter epics by labels.\"\"\"\n    labelName: [String!]\n\n    \"\"\"Filter epics by milestone title, computed from epic's issues.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Filter epics by IID for autocomplete.\"\"\"\n    iidStartsWith: String\n\n    \"\"\"Include epics from descendant groups.\"\"\"\n    includeDescendantGroups: Boolean = true\n\n    \"\"\"Filter epics by given confidentiality.\"\"\"\n    confidential: Boolean\n\n    \"\"\"Filter by reaction emoji applied by the current user.\"\"\"\n    myReactionEmoji: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EpicConnection\n\n  \"\"\"Timestamp of when the epic was closed.\"\"\"\n  closedAt: Time\n\n  \"\"\"Indicates if the epic is confidential.\"\"\"\n  confidential: Boolean\n\n  \"\"\"Timestamp of when the epic was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"To-do items for the current user.\"\"\"\n  currentUserTodos(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n\n    \"\"\"State of the to-do items.\"\"\"\n    state: TodoStateEnum\n  ): TodoConnection!\n\n  \"\"\"Number of open and closed descendant epics and issues.\"\"\"\n  descendantCounts: EpicDescendantCount\n\n  \"\"\"\n  Total weight of open and closed issues in the epic and its descendants.\n  \"\"\"\n  descendantWeightSum: EpicDescendantWeights\n\n  \"\"\"Description of the epic.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"Number of downvotes the epic has received.\"\"\"\n  downvotes: Int!\n\n  \"\"\"Due date of the epic.\"\"\"\n  dueDate: Time\n\n  \"\"\"Fixed due date of the epic.\"\"\"\n  dueDateFixed: Time\n\n  \"\"\"Inherited due date of the epic from milestones.\"\"\"\n  dueDateFromMilestones: Time\n\n  \"\"\"Indicates if the due date has been manually set.\"\"\"\n  dueDateIsFixed: Boolean\n\n  \"\"\"A list of events associated with the object.\"\"\"\n  events(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EventConnection\n\n  \"\"\"Group to which the epic belongs.\"\"\"\n  group: Group!\n\n  \"\"\"Indicates if the epic has children.\"\"\"\n  hasChildren: Boolean!\n\n  \"\"\"Indicates if the epic has direct issues.\"\"\"\n  hasIssues: Boolean!\n\n  \"\"\"Indicates if the epic has a parent epic.\"\"\"\n  hasParent: Boolean!\n\n  \"\"\"Current health status of the epic.\"\"\"\n  healthStatus: EpicHealthStatus\n\n  \"\"\"ID of the epic.\"\"\"\n  id: ID!\n\n  \"\"\"Internal ID of the epic.\"\"\"\n  iid: ID!\n\n  \"\"\"A list of issues associated with the epic.\"\"\"\n  issues(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EpicIssueConnection\n\n  \"\"\"Labels assigned to the epic.\"\"\"\n  labels(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LabelConnection\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"Parent epic of the epic.\"\"\"\n  parent: Epic\n\n  \"\"\"List of participants for the epic.\"\"\"\n  participants(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"\n  Internal reference of the epic. Returned in shortened format by default.\n  \"\"\"\n  reference(\n    \"\"\"Indicates if the reference should be returned in full.\"\"\"\n    full: Boolean = false\n  ): String!\n\n  \"\"\"URI path of the epic-issue relationship.\"\"\"\n  relationPath: String\n\n  \"\"\"The relative position of the epic in the epic tree.\"\"\"\n  relativePosition: Int\n\n  \"\"\"Start date of the epic.\"\"\"\n  startDate: Time\n\n  \"\"\"Fixed start date of the epic.\"\"\"\n  startDateFixed: Time\n\n  \"\"\"Inherited start date of the epic from milestones.\"\"\"\n  startDateFromMilestones: Time\n\n  \"\"\"Indicates if the start date has been manually set.\"\"\"\n  startDateIsFixed: Boolean\n\n  \"\"\"State of the epic.\"\"\"\n  state: EpicState!\n\n  \"\"\"Indicates the currently logged in user is subscribed to the epic.\"\"\"\n  subscribed: Boolean!\n\n  \"\"\"Title of the epic.\"\"\"\n  title: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `title`\"\"\"\n  titleHtml: String\n\n  \"\"\"Timestamp of when the epic was updated.\"\"\"\n  updatedAt: Time\n\n  \"\"\"Number of upvotes the epic has received.\"\"\"\n  upvotes: Int!\n\n  \"\"\"Number of user discussions in the epic.\"\"\"\n  userDiscussionsCount: Int!\n\n  \"\"\"Number of user notes of the epic.\"\"\"\n  userNotesCount: Int!\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: EpicPermissions!\n\n  \"\"\"User preferences for the epic on the issue board.\"\"\"\n  userPreferences: BoardEpicUserPreferences\n\n  \"\"\"Web path of the epic.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the epic.\"\"\"\n  webUrl: String!\n}\n\n\"\"\"The connection type for BoardEpic.\"\"\"\ntype BoardEpicConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [BoardEpicEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [BoardEpic]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BoardEpicEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: BoardEpic\n}\n\n\"\"\"Represents user preferences for a board epic\"\"\"\ntype BoardEpicUserPreferences {\n  \"\"\"Indicates epic should be displayed as collapsed.\"\"\"\n  collapsed: Boolean!\n}\n\n\"\"\"\nA `BoardID` is a global ID. It is encoded as a string.\n\nAn example `BoardID` is: `\"gid://gitlab/Board/1\"`.\n\n\"\"\"\nscalar BoardID\n\ninput BoardIssueInput {\n  \"\"\"Filter by label name.\"\"\"\n  labelName: [String]\n\n  \"\"\"Filter by author username.\"\"\"\n  authorUsername: String\n\n  \"\"\"Filter by reaction emoji applied by the current user.\"\"\"\n  myReactionEmoji: String\n\n  \"\"\"List of IIDs of issues. For example [\"1\", \"2\"].\"\"\"\n  iids: [String!]\n\n  \"\"\"Filter by milestone title.\"\"\"\n  milestoneTitle: String\n\n  \"\"\"Filter by assignee username.\"\"\"\n  assigneeUsername: [String]\n\n  \"\"\"Filter by release tag.\"\"\"\n  releaseTag: String\n\n  \"\"\"Filter by epic ID. Incompatible with epicWildcardId.\"\"\"\n  epicId: EpicID\n\n  \"\"\"Filter by iteration title.\"\"\"\n  iterationTitle: String\n\n  \"\"\"Filter by weight.\"\"\"\n  weight: String\n\n  \"\"\"\n  Filter by a list of iteration IDs. Incompatible with iterationWildcardId.\n  \"\"\"\n  iterationId: [IterationID!]\n\n  \"\"\"List of negated arguments.\"\"\"\n  not: NegatedBoardIssueInput\n\n  \"\"\"Search query for issue title or description.\"\"\"\n  search: String\n\n  \"\"\"Filter by assignee wildcard. Incompatible with assigneeUsername.\"\"\"\n  assigneeWildcardId: AssigneeWildcardId\n\n  \"\"\"Filter by epic ID wildcard. Incompatible with epicId.\"\"\"\n  epicWildcardId: EpicWildcardId\n\n  \"\"\"Filter by iteration ID wildcard.\"\"\"\n  iterationWildcardId: IterationWildcardId\n\n  \"\"\"Filter by weight ID wildcard. Incompatible with weight.\"\"\"\n  weightWildcardId: WeightWildcardId\n}\n\n\"\"\"Represents a list for an issue board\"\"\"\ntype BoardList {\n  \"\"\"Assignee in the list.\"\"\"\n  assignee: UserCore\n\n  \"\"\"Indicates if the list is collapsed for this user.\"\"\"\n  collapsed: Boolean\n\n  \"\"\"ID (global ID) of the list.\"\"\"\n  id: ID!\n\n  \"\"\"Board issues.\"\"\"\n  issues(\n    \"\"\"Filters applied when selecting issues in the board list.\"\"\"\n    filters: BoardIssueInput\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IssueConnection\n\n  \"\"\"Count of issues in the list.\"\"\"\n  issuesCount: Int\n\n  \"\"\"Iteration of the list.\"\"\"\n  iteration: Iteration\n\n  \"\"\"Label of the list.\"\"\"\n  label: Label\n\n  \"\"\"The current limit metric for the list.\"\"\"\n  limitMetric: ListLimitMetric\n\n  \"\"\"Type of the list.\"\"\"\n  listType: String!\n\n  \"\"\"Maximum number of issues in the list.\"\"\"\n  maxIssueCount: Int\n\n  \"\"\"Maximum weight of issues in the list.\"\"\"\n  maxIssueWeight: Int\n\n  \"\"\"Milestone of the list.\"\"\"\n  milestone: Milestone\n\n  \"\"\"Position of list within the board.\"\"\"\n  position: Int\n\n  \"\"\"Title of the list.\"\"\"\n  title: String!\n\n  \"\"\"Total weight of all issues in the list.\"\"\"\n  totalWeight: Int\n}\n\n\"\"\"The connection type for BoardList.\"\"\"\ntype BoardListConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [BoardListEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [BoardList]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of BoardListCreate\"\"\"\ninput BoardListCreateInput {\n  \"\"\"Create the backlog list.\"\"\"\n  backlog: Boolean\n\n  \"\"\"Global ID of an existing label.\"\"\"\n  labelId: LabelID\n\n  \"\"\"Global ID of the issue board to mutate.\"\"\"\n  boardId: BoardID!\n\n  \"\"\"Global ID of an existing milestone.\"\"\"\n  milestoneId: MilestoneID\n\n  \"\"\"Global ID of an existing iteration.\"\"\"\n  iterationId: IterationID\n\n  \"\"\"Global ID of an existing user.\"\"\"\n  assigneeId: UserID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of BoardListCreate\"\"\"\ntype BoardListCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Issue list in the issue board.\"\"\"\n  list: BoardList\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype BoardListEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: BoardList\n}\n\n\"\"\"Autogenerated input type of BoardListUpdateLimitMetrics\"\"\"\ninput BoardListUpdateLimitMetricsInput {\n  \"\"\"The global ID of the list.\"\"\"\n  listId: ListID!\n\n  \"\"\"The new limit metric type for the list.\"\"\"\n  limitMetric: ListLimitMetric\n\n  \"\"\"The new maximum issue count limit.\"\"\"\n  maxIssueCount: Int\n\n  \"\"\"The new maximum issue weight limit.\"\"\"\n  maxIssueWeight: Int\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of BoardListUpdateLimitMetrics\"\"\"\ntype BoardListUpdateLimitMetricsPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The updated list.\"\"\"\n  list: BoardList\n}\n\n\"\"\"\nA `BoardsEpicBoardID` is a global ID. It is encoded as a string.\n\nAn example `BoardsEpicBoardID` is: `\"gid://gitlab/Boards::EpicBoard/1\"`.\n\n\"\"\"\nscalar BoardsEpicBoardID\n\n\"\"\"\nA `BoardsEpicListID` is a global ID. It is encoded as a string.\n\nAn example `BoardsEpicListID` is: `\"gid://gitlab/Boards::EpicList/1\"`.\n\n\"\"\"\nscalar BoardsEpicListID\n\ntype Branch {\n  \"\"\"Commit for the branch.\"\"\"\n  commit: Commit\n\n  \"\"\"Name of the branch.\"\"\"\n  name: String!\n}\n\n\"\"\"Autogenerated input type of BulkFindOrCreateDevopsAdoptionSegments\"\"\"\ninput BulkFindOrCreateDevopsAdoptionSegmentsInput {\n  \"\"\"List of Namespace IDs for the segments.\"\"\"\n  namespaceIds: [NamespaceID!]!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of BulkFindOrCreateDevopsAdoptionSegments\"\"\"\ntype BulkFindOrCreateDevopsAdoptionSegmentsPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Created segments after mutation.\"\"\"\n  segments: [DevopsAdoptionSegment!]\n}\n\n\"\"\"\nRepresents the total number of issues and their weights for a particular day\n\"\"\"\ntype BurnupChartDailyTotals {\n  \"\"\"Number of closed issues as of this day.\"\"\"\n  completedCount: Int!\n\n  \"\"\"Total weight of closed issues as of this day.\"\"\"\n  completedWeight: Int!\n\n  \"\"\"Date for burnup totals.\"\"\"\n  date: ISO8601Date!\n\n  \"\"\"Number of issues as of this day.\"\"\"\n  scopeCount: Int!\n\n  \"\"\"Total weight of issues as of this day.\"\"\"\n  scopeWeight: Int!\n}\n\ntype CiApplicationSettings {\n  \"\"\"Whether to keep the latest jobs artifacts.\"\"\"\n  keepLatestArtifact: Boolean\n}\n\ntype CiBuildNeed {\n  \"\"\"Name of the job we need to complete.\"\"\"\n  name: String\n}\n\n\"\"\"The connection type for CiBuildNeed.\"\"\"\ntype CiBuildNeedConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CiBuildNeedEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CiBuildNeed]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CiBuildNeedEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CiBuildNeed\n}\n\n\"\"\"Autogenerated input type of CiCdSettingsUpdate\"\"\"\ninput CiCdSettingsUpdateInput {\n  \"\"\"Full Path of the project the settings belong to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"Indicates if the latest artifact should be kept for this project.\"\"\"\n  keepLatestArtifact: Boolean\n\n  \"\"\"Indicates if merge pipelines are enabled for the project.\"\"\"\n  mergePipelinesEnabled: Boolean\n\n  \"\"\"Indicates if merge trains are enabled for the project.\"\"\"\n  mergeTrainsEnabled: Boolean\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CiCdSettingsUpdate\"\"\"\ntype CiCdSettingsUpdatePayload {\n  \"\"\"The CI/CD settings after mutation.\"\"\"\n  ciCdSettings: ProjectCiCdSetting!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\ntype CiConfig {\n  \"\"\"Linting errors.\"\"\"\n  errors: [String!]\n\n  \"\"\"Merged CI configuration YAML.\"\"\"\n  mergedYaml: String\n\n  \"\"\"Stages of the pipeline.\"\"\"\n  stages(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiConfigStageConnection\n\n  \"\"\"Status of linting, can be either valid or invalid.\"\"\"\n  status: CiConfigStatus\n}\n\ntype CiConfigGroup {\n  \"\"\"Jobs in group.\"\"\"\n  jobs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiConfigJobConnection\n\n  \"\"\"Name of the job group.\"\"\"\n  name: String\n\n  \"\"\"Size of the job group.\"\"\"\n  size: Int\n}\n\n\"\"\"The connection type for CiConfigGroup.\"\"\"\ntype CiConfigGroupConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CiConfigGroupEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CiConfigGroup]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CiConfigGroupEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CiConfigGroup\n}\n\ntype CiConfigJob {\n  \"\"\"Override a set of commands that are executed after the job.\"\"\"\n  afterScript: [String!]\n\n  \"\"\"Allow job to fail.\"\"\"\n  allowFailure: Boolean\n\n  \"\"\"Override a set of commands that are executed before the job.\"\"\"\n  beforeScript: [String!]\n\n  \"\"\"Name of an environment to which the job deploys.\"\"\"\n  environment: String\n\n  \"\"\"Limit when jobs are not created.\"\"\"\n  except: CiConfigJobRestriction\n\n  \"\"\"Name of the job group.\"\"\"\n  groupName: String\n\n  \"\"\"Name of the job.\"\"\"\n  name: String\n\n  \"\"\"Builds that must complete before the jobs run.\"\"\"\n  needs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiConfigNeedConnection\n\n  \"\"\"Jobs are created when these conditions do not apply.\"\"\"\n  only: CiConfigJobRestriction\n\n  \"\"\"Shell script that is executed by a runner.\"\"\"\n  script: [String!]\n\n  \"\"\"Name of the job stage.\"\"\"\n  stage: String\n\n  \"\"\"List of tags that are used to select a runner.\"\"\"\n  tags: [String!]\n\n  \"\"\"When to run the job.\"\"\"\n  when: String\n}\n\n\"\"\"The connection type for CiConfigJob.\"\"\"\ntype CiConfigJobConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CiConfigJobEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CiConfigJob]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CiConfigJobEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CiConfigJob\n}\n\ntype CiConfigJobRestriction {\n  \"\"\"The Git refs the job restriction applies to.\"\"\"\n  refs: [String!]\n}\n\ntype CiConfigNeed {\n  \"\"\"Name of the need.\"\"\"\n  name: String\n}\n\n\"\"\"The connection type for CiConfigNeed.\"\"\"\ntype CiConfigNeedConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CiConfigNeedEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CiConfigNeed]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CiConfigNeedEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CiConfigNeed\n}\n\ntype CiConfigStage {\n  \"\"\"Groups of jobs for the stage.\"\"\"\n  groups(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiConfigGroupConnection\n\n  \"\"\"Name of the stage.\"\"\"\n  name: String\n}\n\n\"\"\"The connection type for CiConfigStage.\"\"\"\ntype CiConfigStageConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CiConfigStageEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CiConfigStage]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CiConfigStageEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CiConfigStage\n}\n\n\"\"\"Values for YAML processor result\"\"\"\nenum CiConfigStatus {\n  \"\"\"The configuration file is valid.\"\"\"\n  VALID\n\n  \"\"\"The configuration file is not valid.\"\"\"\n  INVALID\n}\n\ntype CiGroup {\n  \"\"\"Detailed status of the group.\"\"\"\n  detailedStatus: DetailedStatus\n\n  \"\"\"Jobs in group.\"\"\"\n  jobs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiJobConnection\n\n  \"\"\"Name of the job group.\"\"\"\n  name: String\n\n  \"\"\"Size of the group.\"\"\"\n  size: Int\n}\n\n\"\"\"The connection type for CiGroup.\"\"\"\ntype CiGroupConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CiGroupEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CiGroup]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CiGroupEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CiGroup\n}\n\ntype CiJob {\n  \"\"\"Indicates the job is active.\"\"\"\n  active: Boolean!\n\n  \"\"\"Whether the job is allowed to fail.\"\"\"\n  allowFailure: Boolean!\n\n  \"\"\"Artifacts generated by the job.\"\"\"\n  artifacts(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiJobArtifactConnection\n\n  \"\"\"Indicates the job can be canceled.\"\"\"\n  cancelable: Boolean!\n\n  \"\"\"Path to the commit that triggered the job.\"\"\"\n  commitPath: String\n\n  \"\"\"Coverage level of the job.\"\"\"\n  coverage: Float\n\n  \"\"\"When the job was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Whether the job was created by a tag.\"\"\"\n  createdByTag: Boolean!\n\n  \"\"\"Detailed status of the job.\"\"\"\n  detailedStatus: DetailedStatus\n\n  \"\"\"Duration of the job in seconds.\"\"\"\n  duration: Int\n\n  \"\"\"When a job has finished running.\"\"\"\n  finishedAt: Time\n\n  \"\"\"ID of the job.\"\"\"\n  id: JobID\n\n  \"\"\"Whether the job has a manual action.\"\"\"\n  manualJob: Boolean\n\n  \"\"\"Name of the job.\"\"\"\n  name: String\n\n  \"\"\"References to builds that must complete before the jobs run.\"\"\"\n  needs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiBuildNeedConnection\n\n  \"\"\"Pipeline the job belongs to.\"\"\"\n  pipeline: Pipeline\n\n  \"\"\"Indicates the job can be played.\"\"\"\n  playable: Boolean!\n\n  \"\"\"When the job was enqueued and marked as pending.\"\"\"\n  queuedAt: Time\n\n  \"\"\"How long the job was enqueued before starting.\"\"\"\n  queuedDuration: Duration\n\n  \"\"\"Ref name of the job.\"\"\"\n  refName: String\n\n  \"\"\"Path to the ref.\"\"\"\n  refPath: String\n\n  \"\"\"Indicates the job can be retried.\"\"\"\n  retryable: Boolean!\n\n  \"\"\"Schedule for the build.\"\"\"\n  scheduledAt: Time\n\n  \"\"\"\n  Type of pipeline scheduling. Value is `dag` if the pipeline uses the `needs` keyword, and `stage` otherwise.\n  \"\"\"\n  schedulingType: String\n\n  \"\"\"Short SHA1 ID of the commit.\"\"\"\n  shortSha: String!\n\n  \"\"\"Stage of the job.\"\"\"\n  stage: CiStage\n\n  \"\"\"When the job was started.\"\"\"\n  startedAt: Time\n\n  \"\"\"Status of the job.\"\"\"\n  status: CiJobStatus\n\n  \"\"\"Tags for the current job.\"\"\"\n  tags: [String!]\n\n  \"\"\"Whether the job was triggered.\"\"\"\n  triggered: Boolean\n}\n\ntype CiJobArtifact {\n  \"\"\"URL for downloading the artifact's file.\"\"\"\n  downloadPath: String\n\n  \"\"\"File type of the artifact.\"\"\"\n  fileType: JobArtifactFileType\n}\n\n\"\"\"The connection type for CiJobArtifact.\"\"\"\ntype CiJobArtifactConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CiJobArtifactEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CiJobArtifact]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CiJobArtifactEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CiJobArtifact\n}\n\n\"\"\"The connection type for CiJob.\"\"\"\ntype CiJobConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CiJobEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CiJob]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CiJobEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CiJob\n}\n\nenum CiJobStatus {\n  \"\"\"A job that is created.\"\"\"\n  CREATED\n\n  \"\"\"A job that is waiting for resource.\"\"\"\n  WAITING_FOR_RESOURCE\n\n  \"\"\"A job that is preparing.\"\"\"\n  PREPARING\n\n  \"\"\"A job that is pending.\"\"\"\n  PENDING\n\n  \"\"\"A job that is running.\"\"\"\n  RUNNING\n\n  \"\"\"A job that is success.\"\"\"\n  SUCCESS\n\n  \"\"\"A job that is failed.\"\"\"\n  FAILED\n\n  \"\"\"A job that is canceled.\"\"\"\n  CANCELED\n\n  \"\"\"A job that is skipped.\"\"\"\n  SKIPPED\n\n  \"\"\"A job that is manual.\"\"\"\n  MANUAL\n\n  \"\"\"A job that is scheduled.\"\"\"\n  SCHEDULED\n}\n\n\"\"\"\nA `CiPipelineID` is a global ID. It is encoded as a string.\n\nAn example `CiPipelineID` is: `\"gid://gitlab/Ci::Pipeline/1\"`.\n\n\"\"\"\nscalar CiPipelineID\n\ntype CiStage {\n  \"\"\"Detailed status of the stage.\"\"\"\n  detailedStatus: DetailedStatus\n\n  \"\"\"Group of jobs for the stage.\"\"\"\n  groups(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiGroupConnection\n\n  \"\"\"Jobs for the stage.\"\"\"\n  jobs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiJobConnection\n\n  \"\"\"Name of the stage.\"\"\"\n  name: String\n}\n\n\"\"\"The connection type for CiStage.\"\"\"\ntype CiStageConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CiStageEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CiStage]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CiStageEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CiStage\n}\n\ntype ClusterAgent {\n  \"\"\"Timestamp the cluster agent was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"\n  User object, containing information about the person who created the agent.\n  \"\"\"\n  createdByUser: UserCore\n\n  \"\"\"ID of the cluster agent.\"\"\"\n  id: ID!\n\n  \"\"\"Name of the cluster agent.\"\"\"\n  name: String\n\n  \"\"\"The project this cluster agent is associated with.\"\"\"\n  project: Project\n\n  \"\"\"Tokens associated with the cluster agent.\"\"\"\n  tokens(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ClusterAgentTokenConnection\n\n  \"\"\"Timestamp the cluster agent was updated.\"\"\"\n  updatedAt: Time\n\n  \"\"\"Web path of the cluster agent.\"\"\"\n  webPath: String\n}\n\n\"\"\"The connection type for ClusterAgent.\"\"\"\ntype ClusterAgentConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ClusterAgentEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ClusterAgent]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of ClusterAgentDelete\"\"\"\ninput ClusterAgentDeleteInput {\n  \"\"\"Global ID of the cluster agent that will be deleted.\"\"\"\n  id: ClustersAgentID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ClusterAgentDelete\"\"\"\ntype ClusterAgentDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ClusterAgentEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ClusterAgent\n}\n\ntype ClusterAgentToken {\n  \"\"\"Cluster agent this token is associated with.\"\"\"\n  clusterAgent: ClusterAgent\n\n  \"\"\"Timestamp the token was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"The user who created the token.\"\"\"\n  createdByUser: UserCore\n\n  \"\"\"Description of the token.\"\"\"\n  description: String\n\n  \"\"\"Global ID of the token.\"\"\"\n  id: ClustersAgentTokenID!\n\n  \"\"\"Timestamp the token was last used.\"\"\"\n  lastUsedAt: Time\n\n  \"\"\"Name given to the token.\"\"\"\n  name: String\n}\n\n\"\"\"The connection type for ClusterAgentToken.\"\"\"\ntype ClusterAgentTokenConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ClusterAgentTokenEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ClusterAgentToken]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of ClusterAgentTokenCreate\"\"\"\ninput ClusterAgentTokenCreateInput {\n  \"\"\"\n  Global ID of the cluster agent that will be associated with the new token.\n  \"\"\"\n  clusterAgentId: ClustersAgentID!\n\n  \"\"\"Description of the token.\"\"\"\n  description: String\n\n  \"\"\"Name of the token.\"\"\"\n  name: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ClusterAgentTokenCreate\"\"\"\ntype ClusterAgentTokenCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"\n  Token secret value. Make sure you save it - you won't be able to access it again.\n  \"\"\"\n  secret: String\n\n  \"\"\"Token created after mutation.\"\"\"\n  token: ClusterAgentToken\n}\n\n\"\"\"Autogenerated input type of ClusterAgentTokenDelete\"\"\"\ninput ClusterAgentTokenDeleteInput {\n  \"\"\"Global ID of the cluster agent token that will be deleted.\"\"\"\n  id: ClustersAgentTokenID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ClusterAgentTokenDelete\"\"\"\ntype ClusterAgentTokenDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ClusterAgentTokenEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ClusterAgentToken\n}\n\n\"\"\"\nA `ClustersAgentID` is a global ID. It is encoded as a string.\n\nAn example `ClustersAgentID` is: `\"gid://gitlab/Clusters::Agent/1\"`.\n\n\"\"\"\nscalar ClustersAgentID\n\n\"\"\"\nA `ClustersAgentTokenID` is a global ID. It is encoded as a string.\n\nAn example `ClustersAgentTokenID` is: `\"gid://gitlab/Clusters::AgentToken/1\"`.\n\n\"\"\"\nscalar ClustersAgentTokenID\n\n\"\"\"\nA `ClustersClusterID` is a global ID. It is encoded as a string.\n\nAn example `ClustersClusterID` is: `\"gid://gitlab/Clusters::Cluster/1\"`.\n\n\"\"\"\nscalar ClustersClusterID\n\n\"\"\"Represents the code coverage activity for a group\"\"\"\ntype CodeCoverageActivity {\n  \"\"\"\n  Average percentage of the different code coverage results available for the group.\n  \"\"\"\n  averageCoverage: Float\n\n  \"\"\"Number of different code coverage results available for the group.\"\"\"\n  coverageCount: Int\n\n  \"\"\"Date when the code coverage was created.\"\"\"\n  date: Date!\n\n  \"\"\"Number of projects with code coverage results for the group.\"\"\"\n  projectCount: Int\n}\n\n\"\"\"The connection type for CodeCoverageActivity.\"\"\"\ntype CodeCoverageActivityConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CodeCoverageActivityEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [CodeCoverageActivity]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CodeCoverageActivityEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: CodeCoverageActivity\n}\n\n\"\"\"Represents the code coverage summary for a project\"\"\"\ntype CodeCoverageSummary {\n  \"\"\"\n  Average percentage of the different code coverage results available for the project.\n  \"\"\"\n  averageCoverage: Float\n\n  \"\"\"Number of different code coverage results available.\"\"\"\n  coverageCount: Int\n\n  \"\"\"Latest date when the code coverage was created for the project.\"\"\"\n  lastUpdatedOn: Date\n}\n\ntype Commit {\n  \"\"\"Author of the commit.\"\"\"\n  author: UserCore\n\n  \"\"\"Commit authors gravatar.\"\"\"\n  authorGravatar: String\n\n  \"\"\"Commit authors name.\"\"\"\n  authorName: String\n\n  \"\"\"Timestamp of when the commit was authored.\"\"\"\n  authoredDate: Time\n\n  \"\"\"Description of the commit message.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"ID (global ID) of the commit.\"\"\"\n  id: ID!\n\n  \"\"\"Raw commit message.\"\"\"\n  message: String\n\n  \"\"\"Pipelines of the commit ordered latest first.\"\"\"\n  pipelines(\n    \"\"\"Filter pipelines by their status.\"\"\"\n    status: PipelineStatusEnum\n\n    \"\"\"Filter pipelines by the ref they are run for.\"\"\"\n    ref: String\n\n    \"\"\"Filter pipelines by the sha of the commit they are run for.\"\"\"\n    sha: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PipelineConnection\n\n  \"\"\"SHA1 ID of the commit.\"\"\"\n  sha: String!\n\n  \"\"\"Short SHA1 ID of the commit.\"\"\"\n  shortId: String!\n\n  \"\"\"Rendered HTML of the commit signature.\"\"\"\n  signatureHtml: String\n\n  \"\"\"Title of the commit message.\"\"\"\n  title: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `title`\"\"\"\n  titleHtml: String\n\n  \"\"\"Web path of the commit.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the commit.\"\"\"\n  webUrl: String!\n}\n\ninput CommitAction {\n  \"\"\"The action to perform, create, delete, move, update, chmod.\"\"\"\n  action: CommitActionMode!\n\n  \"\"\"Full path to the file.\"\"\"\n  filePath: String!\n\n  \"\"\"Content of the file.\"\"\"\n  content: String\n\n  \"\"\"Original full path to the file being moved.\"\"\"\n  previousPath: String\n\n  \"\"\"Last known file commit ID.\"\"\"\n  lastCommitId: String\n\n  \"\"\"Enables/disables the execute flag on the file.\"\"\"\n  executeFilemode: Boolean\n\n  \"\"\"Encoding of the file. Default is text.\"\"\"\n  encoding: CommitEncoding\n}\n\n\"\"\"Mode of a commit action\"\"\"\nenum CommitActionMode {\n  \"\"\"Create command.\"\"\"\n  CREATE\n\n  \"\"\"Delete command.\"\"\"\n  DELETE\n\n  \"\"\"Move command.\"\"\"\n  MOVE\n\n  \"\"\"Update command.\"\"\"\n  UPDATE\n\n  \"\"\"Chmod command.\"\"\"\n  CHMOD\n}\n\n\"\"\"The connection type for Commit.\"\"\"\ntype CommitConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [CommitEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Commit]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of CommitCreate\"\"\"\ninput CommitCreateInput {\n  \"\"\"Project full path the branch is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Name of the branch to commit into, it can be a new branch.\"\"\"\n  branch: String!\n\n  \"\"\"If on a new branch, name of the original branch.\"\"\"\n  startBranch: String\n\n  \"\"\"Raw commit message.\"\"\"\n  message: String!\n\n  \"\"\"Array of action hashes to commit as a batch.\"\"\"\n  actions: [CommitAction!]!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CommitCreate\"\"\"\ntype CommitCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The commit after mutation.\"\"\"\n  commit: Commit\n\n  \"\"\"ETag path for the commit's pipeline.\"\"\"\n  commitPipelinePath: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CommitEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Commit\n}\n\nenum CommitEncoding {\n  \"\"\"Text encoding.\"\"\"\n  TEXT\n\n  \"\"\"Base64 encoding.\"\"\"\n  BASE64\n}\n\n\"\"\"Represents a ComplianceFramework associated with a Project\"\"\"\ntype ComplianceFramework {\n  \"\"\"Hexadecimal representation of compliance framework's label color.\"\"\"\n  color: String!\n\n  \"\"\"Description of the compliance framework.\"\"\"\n  description: String!\n\n  \"\"\"Compliance framework ID.\"\"\"\n  id: ID!\n\n  \"\"\"Name of the compliance framework.\"\"\"\n  name: String!\n\n  \"\"\"\n  Full path of the compliance pipeline configuration stored in a project repository, such as `.gitlab/.compliance-gitlab-ci.yml@compliance/hipaa` **(ULTIMATE)**.\n  \"\"\"\n  pipelineConfigurationFullPath: String\n}\n\n\"\"\"The connection type for ComplianceFramework.\"\"\"\ntype ComplianceFrameworkConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ComplianceFrameworkEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ComplianceFramework]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ComplianceFrameworkEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ComplianceFramework\n}\n\ninput ComplianceFrameworkInput {\n  \"\"\"New name for the compliance framework.\"\"\"\n  name: String\n\n  \"\"\"New description for the compliance framework.\"\"\"\n  description: String\n\n  \"\"\"\n  New color representation of the compliance framework in hex format. e.g. #FCA121.\n  \"\"\"\n  color: String\n\n  \"\"\"\n  Full path of the compliance pipeline configuration stored in a project repository, such as `.gitlab/.compliance-gitlab-ci.yml@compliance/hipaa` **(ULTIMATE)**.\n  \"\"\"\n  pipelineConfigurationFullPath: String\n}\n\n\"\"\"\nA `ComplianceManagementFrameworkID` is a global ID. It is encoded as a string.\n\nAn example `ComplianceManagementFrameworkID` is: `\"gid://gitlab/ComplianceManagement::Framework/1\"`.\n\n\"\"\"\nscalar ComplianceManagementFrameworkID\n\n\"\"\"Composer metadata\"\"\"\ntype ComposerMetadata {\n  \"\"\"Data of the Composer JSON file.\"\"\"\n  composerJson: PackageComposerJsonType!\n\n  \"\"\"Target SHA of the package.\"\"\"\n  targetSha: String!\n}\n\n\"\"\"Conan file metadata\"\"\"\ntype ConanFileMetadata implements PackageFileMetadata {\n  \"\"\"Type of the Conan file.\"\"\"\n  conanFileType: ConanMetadatumFileTypeEnum!\n\n  \"\"\"Reference of the Conan package.\"\"\"\n  conanPackageReference: String\n\n  \"\"\"Date of creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"ID of the metadatum.\"\"\"\n  id: PackagesConanFileMetadatumID!\n\n  \"\"\"Revision of the package.\"\"\"\n  packageRevision: String\n\n  \"\"\"Revision of the Conan recipe.\"\"\"\n  recipeRevision: String!\n\n  \"\"\"Date of most recent update.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"Conan metadata\"\"\"\ntype ConanMetadata {\n  \"\"\"Date of creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"ID of the metadatum.\"\"\"\n  id: PackagesConanMetadatumID!\n\n  \"\"\"Channel of the Conan package.\"\"\"\n  packageChannel: String!\n\n  \"\"\"Username of the Conan package.\"\"\"\n  packageUsername: String!\n\n  \"\"\"Recipe of the Conan package.\"\"\"\n  recipe: String!\n\n  \"\"\"Recipe path of the Conan package.\"\"\"\n  recipePath: String!\n\n  \"\"\"Date of most recent update.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"Conan file types\"\"\"\nenum ConanMetadatumFileTypeEnum {\n  \"\"\"A recipe file type.\"\"\"\n  RECIPE_FILE\n\n  \"\"\"A package file type.\"\"\"\n  PACKAGE_FILE\n}\n\n\"\"\"Autogenerated input type of ConfigureSast\"\"\"\ninput ConfigureSastInput {\n  \"\"\"Full path of the project.\"\"\"\n  projectPath: ID!\n\n  \"\"\"SAST CI configuration for the project.\"\"\"\n  configuration: SastCiConfigurationInput!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ConfigureSast\"\"\"\ntype ConfigureSastPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Status of creating the commit for the supplied SAST CI configuration.\"\"\"\n  status: String!\n\n  \"\"\"Redirect path to use when the response is successful.\"\"\"\n  successPath: String\n}\n\n\"\"\"\nA tag expiration policy designed to keep only the images that matter most\n\"\"\"\ntype ContainerExpirationPolicy {\n  \"\"\"This container expiration policy schedule.\"\"\"\n  cadence: ContainerExpirationPolicyCadenceEnum!\n\n  \"\"\"Timestamp of when the container expiration policy was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Indicates whether this container expiration policy is enabled.\"\"\"\n  enabled: Boolean!\n\n  \"\"\"Number of tags to retain.\"\"\"\n  keepN: ContainerExpirationPolicyKeepEnum\n\n  \"\"\"Tags with names matching this regex pattern will expire.\"\"\"\n  nameRegex: UntrustedRegexp\n\n  \"\"\"Tags with names matching this regex pattern will be preserved.\"\"\"\n  nameRegexKeep: UntrustedRegexp\n\n  \"\"\"Next time that this container expiration policy will get executed.\"\"\"\n  nextRunAt: Time\n\n  \"\"\"Tags older that this will expire.\"\"\"\n  olderThan: ContainerExpirationPolicyOlderThanEnum\n\n  \"\"\"Timestamp of when the container expiration policy was updated.\"\"\"\n  updatedAt: Time!\n}\n\nenum ContainerExpirationPolicyCadenceEnum {\n  \"\"\"Every day\"\"\"\n  EVERY_DAY\n\n  \"\"\"Every week\"\"\"\n  EVERY_WEEK\n\n  \"\"\"Every two weeks\"\"\"\n  EVERY_TWO_WEEKS\n\n  \"\"\"Every month\"\"\"\n  EVERY_MONTH\n\n  \"\"\"Every three months\"\"\"\n  EVERY_THREE_MONTHS\n}\n\nenum ContainerExpirationPolicyKeepEnum {\n  \"\"\"1 tag per image name\"\"\"\n  ONE_TAG\n\n  \"\"\"5 tags per image name\"\"\"\n  FIVE_TAGS\n\n  \"\"\"10 tags per image name\"\"\"\n  TEN_TAGS\n\n  \"\"\"25 tags per image name\"\"\"\n  TWENTY_FIVE_TAGS\n\n  \"\"\"50 tags per image name\"\"\"\n  FIFTY_TAGS\n\n  \"\"\"100 tags per image name\"\"\"\n  ONE_HUNDRED_TAGS\n}\n\nenum ContainerExpirationPolicyOlderThanEnum {\n  \"\"\"7 days until tags are automatically removed\"\"\"\n  SEVEN_DAYS\n\n  \"\"\"14 days until tags are automatically removed\"\"\"\n  FOURTEEN_DAYS\n\n  \"\"\"30 days until tags are automatically removed\"\"\"\n  THIRTY_DAYS\n\n  \"\"\"90 days until tags are automatically removed\"\"\"\n  NINETY_DAYS\n}\n\n\"\"\"A container repository\"\"\"\ntype ContainerRepository {\n  \"\"\"Can the current user delete the container repository.\"\"\"\n  canDelete: Boolean!\n\n  \"\"\"Timestamp when the container repository was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"The tags cleanup status for the container repository.\"\"\"\n  expirationPolicyCleanupStatus: ContainerRepositoryCleanupStatus\n\n  \"\"\"\n  Timestamp when the cleanup done by the expiration policy was started on the container repository.\n  \"\"\"\n  expirationPolicyStartedAt: Time\n\n  \"\"\"ID of the container repository.\"\"\"\n  id: ID!\n\n  \"\"\"URL of the container repository.\"\"\"\n  location: String!\n\n  \"\"\"Name of the container repository.\"\"\"\n  name: String!\n\n  \"\"\"Path of the container repository.\"\"\"\n  path: String!\n\n  \"\"\"Project of the container registry.\"\"\"\n  project: Project!\n\n  \"\"\"Status of the container repository.\"\"\"\n  status: ContainerRepositoryStatus\n\n  \"\"\"Number of tags associated with this image.\"\"\"\n  tagsCount: Int!\n\n  \"\"\"Timestamp when the container repository was updated.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"Status of the tags cleanup of a container repository\"\"\"\nenum ContainerRepositoryCleanupStatus {\n  \"\"\"The tags cleanup is not scheduled. This is the default state.\"\"\"\n  UNSCHEDULED\n\n  \"\"\"The tags cleanup is scheduled and is going to be executed shortly.\"\"\"\n  SCHEDULED\n\n  \"\"\"\n  The tags cleanup has been partially executed. There are still remaining tags to delete.\n  \"\"\"\n  UNFINISHED\n\n  \"\"\"The tags cleanup is ongoing.\"\"\"\n  ONGOING\n}\n\n\"\"\"The connection type for ContainerRepository.\"\"\"\ntype ContainerRepositoryConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ContainerRepositoryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ContainerRepository]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Details of a container repository\"\"\"\ntype ContainerRepositoryDetails {\n  \"\"\"Can the current user delete the container repository.\"\"\"\n  canDelete: Boolean!\n\n  \"\"\"Timestamp when the container repository was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"The tags cleanup status for the container repository.\"\"\"\n  expirationPolicyCleanupStatus: ContainerRepositoryCleanupStatus\n\n  \"\"\"\n  Timestamp when the cleanup done by the expiration policy was started on the container repository.\n  \"\"\"\n  expirationPolicyStartedAt: Time\n\n  \"\"\"ID of the container repository.\"\"\"\n  id: ID!\n\n  \"\"\"URL of the container repository.\"\"\"\n  location: String!\n\n  \"\"\"Name of the container repository.\"\"\"\n  name: String!\n\n  \"\"\"Path of the container repository.\"\"\"\n  path: String!\n\n  \"\"\"Project of the container registry.\"\"\"\n  project: Project!\n\n  \"\"\"Status of the container repository.\"\"\"\n  status: ContainerRepositoryStatus\n\n  \"\"\"Tags of the container repository.\"\"\"\n  tags(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ContainerRepositoryTagConnection\n\n  \"\"\"Number of tags associated with this image.\"\"\"\n  tagsCount: Int!\n\n  \"\"\"Timestamp when the container repository was updated.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ContainerRepositoryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ContainerRepository\n}\n\n\"\"\"\nA `ContainerRepositoryID` is a global ID. It is encoded as a string.\n\nAn example `ContainerRepositoryID` is: `\"gid://gitlab/ContainerRepository/1\"`.\n\n\"\"\"\nscalar ContainerRepositoryID\n\n\"\"\"Values for sorting container repositories\"\"\"\nenum ContainerRepositorySort {\n  \"\"\"Updated at descending order.\"\"\"\n  updated_desc @deprecated(reason: \"This was renamed. Please use `UPDATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at ascending order.\"\"\"\n  updated_asc @deprecated(reason: \"This was renamed. Please use `UPDATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at descending order.\"\"\"\n  created_desc @deprecated(reason: \"This was renamed. Please use `CREATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at ascending order.\"\"\"\n  created_asc @deprecated(reason: \"This was renamed. Please use `CREATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at descending order.\"\"\"\n  UPDATED_DESC\n\n  \"\"\"Updated at ascending order.\"\"\"\n  UPDATED_ASC\n\n  \"\"\"Created at descending order.\"\"\"\n  CREATED_DESC\n\n  \"\"\"Created at ascending order.\"\"\"\n  CREATED_ASC\n\n  \"\"\"Name by ascending order.\"\"\"\n  NAME_ASC\n\n  \"\"\"Name by descending order.\"\"\"\n  NAME_DESC\n}\n\n\"\"\"Status of a container repository\"\"\"\nenum ContainerRepositoryStatus {\n  \"\"\"Delete Scheduled status.\"\"\"\n  DELETE_SCHEDULED\n\n  \"\"\"Delete Failed status.\"\"\"\n  DELETE_FAILED\n}\n\n\"\"\"A tag from a container repository\"\"\"\ntype ContainerRepositoryTag {\n  \"\"\"Can the current user delete this tag.\"\"\"\n  canDelete: Boolean!\n\n  \"\"\"Timestamp when the tag was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"Digest of the tag.\"\"\"\n  digest: String\n\n  \"\"\"URL of the tag.\"\"\"\n  location: String!\n\n  \"\"\"Name of the tag.\"\"\"\n  name: String!\n\n  \"\"\"Path of the tag.\"\"\"\n  path: String!\n\n  \"\"\"Revision of the tag.\"\"\"\n  revision: String\n\n  \"\"\"Short revision of the tag.\"\"\"\n  shortRevision: String\n\n  \"\"\"The size of the tag.\"\"\"\n  totalSize: BigInt\n}\n\n\"\"\"The connection type for ContainerRepositoryTag.\"\"\"\ntype ContainerRepositoryTagConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ContainerRepositoryTagEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ContainerRepositoryTag]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ContainerRepositoryTagEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ContainerRepositoryTag\n}\n\n\"\"\"Autogenerated input type of CreateAlertIssue\"\"\"\ninput CreateAlertIssueInput {\n  \"\"\"The project the alert to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the alert to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateAlertIssue\"\"\"\ntype CreateAlertIssuePayload {\n  \"\"\"The alert after mutation.\"\"\"\n  alert: AlertManagementAlert\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue created after mutation.\"\"\"\n  issue: Issue\n\n  \"\"\"The to-do item after mutation.\"\"\"\n  todo: Todo\n}\n\n\"\"\"Autogenerated input type of CreateAnnotation\"\"\"\ninput CreateAnnotationInput {\n  \"\"\"The global ID of the environment to add an annotation to.\"\"\"\n  environmentId: EnvironmentID\n\n  \"\"\"The global ID of the cluster to add an annotation to.\"\"\"\n  clusterId: ClustersClusterID\n\n  \"\"\"Timestamp indicating starting moment to which the annotation relates.\"\"\"\n  startingAt: Time!\n\n  \"\"\"Timestamp indicating ending moment to which the annotation relates.\"\"\"\n  endingAt: Time\n\n  \"\"\"\n  The path to a file defining the dashboard on which the annotation should be added.\n  \"\"\"\n  dashboardPath: String!\n\n  \"\"\"The description of the annotation.\"\"\"\n  description: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateAnnotation\"\"\"\ntype CreateAnnotationPayload {\n  \"\"\"The created annotation.\"\"\"\n  annotation: MetricsDashboardAnnotation\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of CreateBoard\"\"\"\ninput CreateBoardInput {\n  \"\"\"Full path of the project with which the resource is associated.\"\"\"\n  projectPath: ID\n\n  \"\"\"Full path of the group with which the resource is associated.\"\"\"\n  groupPath: ID\n\n  \"\"\"The board name.\"\"\"\n  name: String\n\n  \"\"\"Whether or not backlog list is hidden.\"\"\"\n  hideBacklogList: Boolean\n\n  \"\"\"Whether or not closed list is hidden.\"\"\"\n  hideClosedList: Boolean\n\n  \"\"\"ID of user to be assigned to the board.\"\"\"\n  assigneeId: UserID\n\n  \"\"\"ID of milestone to be assigned to the board.\"\"\"\n  milestoneId: MilestoneID\n\n  \"\"\"ID of iteration to be assigned to the board.\"\"\"\n  iterationId: IterationID\n\n  \"\"\"Weight value to be assigned to the board.\"\"\"\n  weight: Int\n\n  \"\"\"Labels of the issue.\"\"\"\n  labels: [String!]\n\n  \"\"\"IDs of labels to be added to the board.\"\"\"\n  labelIds: [LabelID!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateBoard\"\"\"\ntype CreateBoardPayload {\n  \"\"\"The board after mutation.\"\"\"\n  board: Board\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of CreateBranch\"\"\"\ninput CreateBranchInput {\n  \"\"\"Project full path the branch is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Name of the branch.\"\"\"\n  name: String!\n\n  \"\"\"Branch name or commit SHA to create branch from.\"\"\"\n  ref: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateBranch\"\"\"\ntype CreateBranchPayload {\n  \"\"\"Branch after mutation.\"\"\"\n  branch: Branch\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of CreateClusterAgent\"\"\"\ninput CreateClusterAgentInput {\n  \"\"\"Full path of the associated project for this cluster agent.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Name of the cluster agent.\"\"\"\n  name: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateClusterAgent\"\"\"\ntype CreateClusterAgentPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Cluster agent created after mutation.\"\"\"\n  clusterAgent: ClusterAgent\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of CreateComplianceFramework\"\"\"\ninput CreateComplianceFrameworkInput {\n  \"\"\"Full path of the namespace to add the compliance framework to.\"\"\"\n  namespacePath: ID!\n\n  \"\"\"Parameters to update the compliance framework with.\"\"\"\n  params: ComplianceFrameworkInput!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateComplianceFramework\"\"\"\ntype CreateComplianceFrameworkPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The created compliance framework.\"\"\"\n  framework: ComplianceFramework\n}\n\n\"\"\"Autogenerated input type of CreateDevopsAdoptionSegment\"\"\"\ninput CreateDevopsAdoptionSegmentInput {\n  \"\"\"Namespace ID to set for the segment.\"\"\"\n  namespaceId: NamespaceID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateDevopsAdoptionSegment\"\"\"\ntype CreateDevopsAdoptionSegmentPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The segment after mutation.\"\"\"\n  segment: DevopsAdoptionSegment\n}\n\n\"\"\"Autogenerated input type of CreateDiffNote\"\"\"\ninput CreateDiffNoteInput {\n  \"\"\"The global ID of the resource to add a note to.\"\"\"\n  noteableId: NoteableID!\n\n  \"\"\"Content of the note.\"\"\"\n  body: String!\n\n  \"\"\"The confidentiality flag of a note. Default is false.\"\"\"\n  confidential: Boolean\n\n  \"\"\"The position of this note on a diff.\"\"\"\n  position: DiffPositionInput!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateDiffNote\"\"\"\ntype CreateDiffNotePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The note after mutation.\"\"\"\n  note: Note\n}\n\n\"\"\"Autogenerated input type of CreateEpic\"\"\"\ninput CreateEpicInput {\n  \"\"\"The group the epic to mutate is in.\"\"\"\n  groupPath: ID!\n\n  \"\"\"The title of the epic.\"\"\"\n  title: String\n\n  \"\"\"The description of the epic.\"\"\"\n  description: String\n\n  \"\"\"Indicates if the epic is confidential.\"\"\"\n  confidential: Boolean\n\n  \"\"\"The start date of the epic.\"\"\"\n  startDateFixed: String\n\n  \"\"\"The end date of the epic.\"\"\"\n  dueDateFixed: String\n\n  \"\"\"\n  Indicates start date should be sourced from start_date_fixed field not the issue milestones.\n  \"\"\"\n  startDateIsFixed: Boolean\n\n  \"\"\"\n  Indicates end date should be sourced from due_date_fixed field not the issue milestones.\n  \"\"\"\n  dueDateIsFixed: Boolean\n\n  \"\"\"The IDs of labels to be added to the epic.\"\"\"\n  addLabelIds: [ID!]\n\n  \"\"\"The IDs of labels to be removed from the epic.\"\"\"\n  removeLabelIds: [ID!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateEpic\"\"\"\ntype CreateEpicPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The created epic.\"\"\"\n  epic: Epic\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of CreateImageDiffNote\"\"\"\ninput CreateImageDiffNoteInput {\n  \"\"\"The global ID of the resource to add a note to.\"\"\"\n  noteableId: NoteableID!\n\n  \"\"\"Content of the note.\"\"\"\n  body: String!\n\n  \"\"\"The confidentiality flag of a note. Default is false.\"\"\"\n  confidential: Boolean\n\n  \"\"\"The position of this note on a diff.\"\"\"\n  position: DiffImagePositionInput!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateImageDiffNote\"\"\"\ntype CreateImageDiffNotePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The note after mutation.\"\"\"\n  note: Note\n}\n\n\"\"\"Autogenerated input type of CreateIssue\"\"\"\ninput CreateIssueInput {\n  \"\"\"Description of the issue.\"\"\"\n  description: String\n\n  \"\"\"Due date of the issue.\"\"\"\n  dueDate: ISO8601Date\n\n  \"\"\"Indicates the issue is confidential.\"\"\"\n  confidential: Boolean\n\n  \"\"\"Indicates discussion is locked on the issue.\"\"\"\n  locked: Boolean\n\n  \"\"\"Project full path the issue is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"\n  The IID (internal ID) of a project issue. Only admins and project owners can modify.\n  \"\"\"\n  iid: Int\n\n  \"\"\"Title of the issue.\"\"\"\n  title: String!\n\n  \"\"\"\n  The ID of the milestone to assign to the issue. On update milestone will be removed if set to null.\n  \"\"\"\n  milestoneId: MilestoneID\n\n  \"\"\"Labels of the issue.\"\"\"\n  labels: [String!]\n\n  \"\"\"The IDs of labels to be added to the issue.\"\"\"\n  labelIds: [LabelID!]\n\n  \"\"\"\n  Timestamp when the issue was created. Available only for admins and project owners.\n  \"\"\"\n  createdAt: Time\n\n  \"\"\"The IID of a merge request for which to resolve discussions.\"\"\"\n  mergeRequestToResolveDiscussionsOf: MergeRequestID\n\n  \"\"\"\n  The ID of a discussion to resolve. Also pass `merge_request_to_resolve_discussions_of`.\n  \"\"\"\n  discussionToResolve: String\n\n  \"\"\"The array of user IDs to assign to the issue.\"\"\"\n  assigneeIds: [UserID!]\n\n  \"\"\"The desired health status.\"\"\"\n  healthStatus: HealthStatus\n\n  \"\"\"The weight of the issue.\"\"\"\n  weight: Int\n\n  \"\"\"The ID of an epic to associate the issue with.\"\"\"\n  epicId: EpicID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateIssue\"\"\"\ntype CreateIssuePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of CreateIteration\"\"\"\ninput CreateIterationInput {\n  \"\"\"Full path of the project with which the resource is associated.\"\"\"\n  projectPath: ID\n\n  \"\"\"Full path of the group with which the resource is associated.\"\"\"\n  groupPath: ID\n\n  \"\"\"The title of the iteration.\"\"\"\n  title: String\n\n  \"\"\"The description of the iteration.\"\"\"\n  description: String\n\n  \"\"\"The start date of the iteration.\"\"\"\n  startDate: String\n\n  \"\"\"The end date of the iteration.\"\"\"\n  dueDate: String\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateIteration\"\"\"\ntype CreateIterationPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The created iteration.\"\"\"\n  iteration: Iteration\n}\n\n\"\"\"Autogenerated input type of CreateNote\"\"\"\ninput CreateNoteInput {\n  \"\"\"The global ID of the resource to add a note to.\"\"\"\n  noteableId: NoteableID!\n\n  \"\"\"Content of the note.\"\"\"\n  body: String!\n\n  \"\"\"The confidentiality flag of a note. Default is false.\"\"\"\n  confidential: Boolean\n\n  \"\"\"The global ID of the discussion this note is in reply to.\"\"\"\n  discussionId: DiscussionID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateNote\"\"\"\ntype CreateNotePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The note after mutation.\"\"\"\n  note: Note\n}\n\n\"\"\"Autogenerated input type of CreateRequirement\"\"\"\ninput CreateRequirementInput {\n  \"\"\"Title of the requirement.\"\"\"\n  title: String\n\n  \"\"\"Description of the requirement.\"\"\"\n  description: String\n\n  \"\"\"Full project path the requirement is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateRequirement\"\"\"\ntype CreateRequirementPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Requirement after mutation.\"\"\"\n  requirement: Requirement\n}\n\n\"\"\"Autogenerated input type of CreateSnippet\"\"\"\ninput CreateSnippetInput {\n  \"\"\"Title of the snippet.\"\"\"\n  title: String!\n\n  \"\"\"Description of the snippet.\"\"\"\n  description: String\n\n  \"\"\"The visibility level of the snippet.\"\"\"\n  visibilityLevel: VisibilityLevelsEnum!\n\n  \"\"\"The project full path the snippet is associated with.\"\"\"\n  projectPath: ID\n\n  \"\"\"The paths to files uploaded in the snippet description.\"\"\"\n  uploadedFiles: [String!]\n\n  \"\"\"Actions to perform over the snippet repository and blobs.\"\"\"\n  blobActions: [SnippetBlobActionInputType!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateSnippet\"\"\"\ntype CreateSnippetPayload {\n  \"\"\"\n  The CAPTCHA site key which must be used to render a challenge for the user to solve to obtain a valid captchaResponse value. Included only when an operation was not completed because \"NeedsCaptchaResponse\" is true. Deprecated in 13.11: Use spam protection with HTTP headers instead.\n  \"\"\"\n  captchaSiteKey: String @deprecated(reason: \"Use spam protection with HTTP headers instead. Deprecated in 13.11.\")\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"\n  Indicates whether the operation was detected as possible spam and not completed. If CAPTCHA is enabled, the request must be resubmitted with a valid CAPTCHA response and spam_log_id included for the operation to be completed. Included only when an operation was not completed because \"NeedsCaptchaResponse\" is true. Deprecated in 13.11: Use spam protection with HTTP headers instead.\n  \"\"\"\n  needsCaptchaResponse: Boolean @deprecated(reason: \"Use spam protection with HTTP headers instead. Deprecated in 13.11.\")\n\n  \"\"\"The snippet after mutation.\"\"\"\n  snippet: Snippet\n\n  \"\"\"\n  Indicates whether the operation was detected as definite spam. There is no option to resubmit the request with a CAPTCHA response. Deprecated in 13.11: Use spam protection with HTTP headers instead.\n  \"\"\"\n  spam: Boolean @deprecated(reason: \"Use spam protection with HTTP headers instead. Deprecated in 13.11.\")\n\n  \"\"\"\n  The spam log ID which must be passed along with a valid CAPTCHA response for an operation to be completed. Included only when an operation was not completed because \"NeedsCaptchaResponse\" is true. Deprecated in 13.11: Use spam protection with HTTP headers instead.\n  \"\"\"\n  spamLogId: Int @deprecated(reason: \"Use spam protection with HTTP headers instead. Deprecated in 13.11.\")\n}\n\n\"\"\"Autogenerated input type of CreateTestCase\"\"\"\ninput CreateTestCaseInput {\n  \"\"\"The test case title.\"\"\"\n  title: String!\n\n  \"\"\"The test case description.\"\"\"\n  description: String\n\n  \"\"\"The IDs of labels to be added to the test case.\"\"\"\n  labelIds: [ID!]\n\n  \"\"\"The project full path to create the test case.\"\"\"\n  projectPath: ID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of CreateTestCase\"\"\"\ntype CreateTestCasePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The test case created.\"\"\"\n  testCase: Issue\n}\n\n\"\"\"Represents the current license\"\"\"\ntype CurrentLicense {\n  \"\"\"Date when the license was activated.\"\"\"\n  activatedAt: Date\n\n  \"\"\"Number of billable users on the system.\"\"\"\n  billableUsersCount: Int\n\n  \"\"\"Company of the licensee.\"\"\"\n  company: String\n\n  \"\"\"Email of the licensee.\"\"\"\n  email: String\n\n  \"\"\"Date when the license expires.\"\"\"\n  expiresAt: Date\n\n  \"\"\"ID of the license.\"\"\"\n  id: ID!\n\n  \"\"\"Date when the license was last synced.\"\"\"\n  lastSync: Time\n\n  \"\"\"\n  Highest number of billable users on the system during the term of the current license.\n  \"\"\"\n  maximumUserCount: Int\n\n  \"\"\"Name of the licensee.\"\"\"\n  name: String\n\n  \"\"\"Name of the subscription plan.\"\"\"\n  plan: String!\n\n  \"\"\"Date when the license started.\"\"\"\n  startsAt: Date\n\n  \"\"\"Type of the license.\"\"\"\n  type: String!\n\n  \"\"\"Number of paid users in the license.\"\"\"\n  usersInLicenseCount: Int\n\n  \"\"\"Number of users over the paid users in the license.\"\"\"\n  usersOverLicenseCount: Int\n}\n\ninterface CurrentUserTodos {\n  \"\"\"To-do items for the current user.\"\"\"\n  currentUserTodos(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n\n    \"\"\"State of the to-do items.\"\"\"\n    state: TodoStateEnum\n  ): TodoConnection!\n}\n\n\"\"\"Autogenerated input type of DastOnDemandScanCreate\"\"\"\ninput DastOnDemandScanCreateInput {\n  \"\"\"The project the site profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"ID of the site profile to be used for the scan.\"\"\"\n  dastSiteProfileId: DastSiteProfileID!\n\n  \"\"\"ID of the scanner profile to be used for the scan.\"\"\"\n  dastScannerProfileId: DastScannerProfileID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastOnDemandScanCreate\"\"\"\ntype DastOnDemandScanCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"URL of the pipeline that was created.\"\"\"\n  pipelineUrl: String\n}\n\n\"\"\"Represents a DAST Profile\"\"\"\ntype DastProfile {\n  \"\"\"The associated branch.\"\"\"\n  branch: DastProfileBranch\n\n  \"\"\"The associated scanner profile.\"\"\"\n  dastScannerProfile: DastScannerProfile\n\n  \"\"\"The associated site profile.\"\"\"\n  dastSiteProfile: DastSiteProfile\n\n  \"\"\"The description of the scan.\"\"\"\n  description: String\n\n  \"\"\"Relative web path to the edit page of a profile.\"\"\"\n  editPath: String\n\n  \"\"\"ID of the profile.\"\"\"\n  id: DastProfileID!\n\n  \"\"\"The name of the profile.\"\"\"\n  name: String\n}\n\n\"\"\"Represents a DAST Profile Branch\"\"\"\ntype DastProfileBranch {\n  \"\"\"Indicates whether or not the branch exists.\"\"\"\n  exists: Boolean\n\n  \"\"\"The name of the branch.\"\"\"\n  name: String\n}\n\n\"\"\"The connection type for DastProfile.\"\"\"\ntype DastProfileConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [DastProfileEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [DastProfile]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of DastProfileCreate\"\"\"\ninput DastProfileCreateInput {\n  \"\"\"The project the profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"The name of the profile.\"\"\"\n  name: String!\n\n  \"\"\"The description of the profile. Defaults to an empty string.\"\"\"\n  description: String = \"\"\n\n  \"\"\"The associated branch.\"\"\"\n  branchName: String\n\n  \"\"\"ID of the site profile to be associated.\"\"\"\n  dastSiteProfileId: DastSiteProfileID!\n\n  \"\"\"ID of the scanner profile to be associated.\"\"\"\n  dastScannerProfileId: DastScannerProfileID!\n\n  \"\"\"Run scan using profile after creation. Defaults to false.\"\"\"\n  runAfterCreate: Boolean = false\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastProfileCreate\"\"\"\ntype DastProfileCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The created profile.\"\"\"\n  dastProfile: DastProfile\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"\n  The URL of the pipeline that was created. Requires `runAfterCreate` to be set to `true`.\n  \"\"\"\n  pipelineUrl: String\n}\n\n\"\"\"Autogenerated input type of DastProfileDelete\"\"\"\ninput DastProfileDeleteInput {\n  \"\"\"ID of the profile to be deleted.\"\"\"\n  id: DastProfileID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastProfileDelete\"\"\"\ntype DastProfileDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DastProfileEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DastProfile\n}\n\n\"\"\"\nA `DastProfileID` is a global ID. It is encoded as a string.\n\nAn example `DastProfileID` is: `\"gid://gitlab/Dast::Profile/1\"`.\n\n\"\"\"\nscalar DastProfileID\n\n\"\"\"Autogenerated input type of DastProfileRun\"\"\"\ninput DastProfileRunInput {\n  \"\"\"Full path for the project the scanner profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"ID of the profile to be used for the scan.\"\"\"\n  id: DastProfileID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastProfileRun\"\"\"\ntype DastProfileRunPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"URL of the pipeline that was created.\"\"\"\n  pipelineUrl: String\n}\n\n\"\"\"Autogenerated input type of DastProfileUpdate\"\"\"\ninput DastProfileUpdateInput {\n  \"\"\"ID of the profile to be deleted.\"\"\"\n  id: DastProfileID!\n\n  \"\"\"The project the profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"The name of the profile.\"\"\"\n  name: String\n\n  \"\"\"The description of the profile. Defaults to an empty string.\"\"\"\n  description: String = \"\"\n\n  \"\"\"The associated branch.\"\"\"\n  branchName: String\n\n  \"\"\"ID of the site profile to be associated.\"\"\"\n  dastSiteProfileId: DastSiteProfileID\n\n  \"\"\"ID of the scanner profile to be associated.\"\"\"\n  dastScannerProfileId: DastScannerProfileID\n\n  \"\"\"Run scan using profile after update. Defaults to false.\"\"\"\n  runAfterUpdate: Boolean = false\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastProfileUpdate\"\"\"\ntype DastProfileUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The updated profile.\"\"\"\n  dastProfile: DastProfile\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"\n  The URL of the pipeline that was created. Requires the input argument `runAfterUpdate` to be set to `true` when calling the mutation, otherwise no pipeline will be created.\n  \"\"\"\n  pipelineUrl: String\n}\n\nenum DastScanTypeEnum {\n  \"\"\"\n  Passive DAST scan. This scan will not make active attacks against the target site.\n  \"\"\"\n  PASSIVE\n\n  \"\"\"\n  Active DAST scan. This scan will make active attacks against the target site.\n  \"\"\"\n  ACTIVE\n}\n\n\"\"\"Represents a DAST scanner profile\"\"\"\ntype DastScannerProfile {\n  \"\"\"Relative web path to the edit page of a scanner profile.\"\"\"\n  editPath: String\n\n  \"\"\"ID of the DAST scanner profile. Deprecated in 13.6: Use `id`.\"\"\"\n  globalId: DastScannerProfileID! @deprecated(reason: \"Use `id`. Deprecated in 13.6.\")\n\n  \"\"\"ID of the DAST scanner profile.\"\"\"\n  id: DastScannerProfileID!\n\n  \"\"\"Name of the DAST scanner profile.\"\"\"\n  profileName: String\n\n  \"\"\"List of security policy names that are referencing given project.\"\"\"\n  referencedInSecurityPolicies: [String!]\n\n  \"\"\"\n  Indicates the type of DAST scan that will run. Either a Passive Scan or an Active Scan.\n  \"\"\"\n  scanType: DastScanTypeEnum\n\n  \"\"\"\n  Indicates if debug messages should be included in DAST console output. True to include the debug messages.\n  \"\"\"\n  showDebugMessages: Boolean!\n\n  \"\"\"\n  The maximum number of minutes allowed for the spider to traverse the site.\n  \"\"\"\n  spiderTimeout: Int\n\n  \"\"\"\n  The maximum number of seconds allowed for the site under test to respond to a request.\n  \"\"\"\n  targetTimeout: Int\n\n  \"\"\"\n  Indicates if the AJAX spider should be used to crawl the target site. True to run the AJAX spider in addition to the traditional spider, and false to run only the traditional spider.\n  \"\"\"\n  useAjaxSpider: Boolean!\n}\n\n\"\"\"The connection type for DastScannerProfile.\"\"\"\ntype DastScannerProfileConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [DastScannerProfileEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [DastScannerProfile]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of DastScannerProfileCreate\"\"\"\ninput DastScannerProfileCreateInput {\n  \"\"\"The project the scanner profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"The name of the scanner profile.\"\"\"\n  profileName: String!\n\n  \"\"\"\n  The maximum number of minutes allowed for the spider to traverse the site.\n  \"\"\"\n  spiderTimeout: Int\n\n  \"\"\"\n  The maximum number of seconds allowed for the site under test to respond to a request.\n  \"\"\"\n  targetTimeout: Int\n\n  \"\"\"\n  Indicates the type of DAST scan that will run. Either a Passive Scan or an Active Scan.\n  \"\"\"\n  scanType: DastScanTypeEnum = null\n\n  \"\"\"\n  Indicates if the AJAX spider should be used to crawl the target site. True to run the AJAX spider in addition to the traditional spider, and false to run only the traditional spider.\n  \"\"\"\n  useAjaxSpider: Boolean = false\n\n  \"\"\"\n  Indicates if debug messages should be included in DAST console output. True to include the debug messages.\n  \"\"\"\n  showDebugMessages: Boolean = false\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastScannerProfileCreate\"\"\"\ntype DastScannerProfileCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"ID of the scanner profile. Deprecated in 13.6: Use `id`.\"\"\"\n  globalId: DastScannerProfileID @deprecated(reason: \"Use `id`. Deprecated in 13.6.\")\n\n  \"\"\"ID of the scanner profile.\"\"\"\n  id: DastScannerProfileID\n}\n\n\"\"\"Autogenerated input type of DastScannerProfileDelete\"\"\"\ninput DastScannerProfileDeleteInput {\n  \"\"\"Full path for the project the scanner profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"ID of the scanner profile to be deleted.\"\"\"\n  id: DastScannerProfileID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastScannerProfileDelete\"\"\"\ntype DastScannerProfileDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DastScannerProfileEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DastScannerProfile\n}\n\n\"\"\"\nA `DastScannerProfileID` is a global ID. It is encoded as a string.\n\nAn example `DastScannerProfileID` is: `\"gid://gitlab/DastScannerProfile/1\"`.\n\n\"\"\"\nscalar DastScannerProfileID\n\n\"\"\"Autogenerated input type of DastScannerProfileUpdate\"\"\"\ninput DastScannerProfileUpdateInput {\n  \"\"\"The project the scanner profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"ID of the scanner profile to be updated.\"\"\"\n  id: DastScannerProfileID!\n\n  \"\"\"The name of the scanner profile.\"\"\"\n  profileName: String!\n\n  \"\"\"\n  The maximum number of minutes allowed for the spider to traverse the site.\n  \"\"\"\n  spiderTimeout: Int!\n\n  \"\"\"\n  The maximum number of seconds allowed for the site under test to respond to a request.\n  \"\"\"\n  targetTimeout: Int!\n\n  \"\"\"\n  Indicates the type of DAST scan that will run. Either a Passive Scan or an Active Scan.\n  \"\"\"\n  scanType: DastScanTypeEnum\n\n  \"\"\"\n  Indicates if the AJAX spider should be used to crawl the target site. True to run the AJAX spider in addition to the traditional spider, and false to run only the traditional spider.\n  \"\"\"\n  useAjaxSpider: Boolean\n\n  \"\"\"\n  Indicates if debug messages should be included in DAST console output. True to include the debug messages.\n  \"\"\"\n  showDebugMessages: Boolean\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastScannerProfileUpdate\"\"\"\ntype DastScannerProfileUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"ID of the scanner profile.\"\"\"\n  id: DastScannerProfileID\n}\n\n\"\"\"Represents a DAST Site Profile\"\"\"\ntype DastSiteProfile {\n  \"\"\"\n  Target authentication details. Will always return `null` if `security_dast_site_profiles_additional_fields` feature flag is disabled.\n  \"\"\"\n  auth: DastSiteProfileAuth\n\n  \"\"\"Relative web path to the edit page of a site profile.\"\"\"\n  editPath: String\n\n  \"\"\"\n  The URLs to skip during an authenticated scan. Will always return `null` if `security_dast_site_profiles_additional_fields` feature flag is disabled.\n  \"\"\"\n  excludedUrls: [String!]\n\n  \"\"\"ID of the site profile.\"\"\"\n  id: DastSiteProfileID!\n\n  \"\"\"Normalized URL of the target to be scanned.\"\"\"\n  normalizedTargetUrl: String\n\n  \"\"\"The name of the site profile.\"\"\"\n  profileName: String\n\n  \"\"\"List of security policy names that are referencing given project.\"\"\"\n  referencedInSecurityPolicies: [String!]\n\n  \"\"\"\n  Comma-separated list of request header names and values to be added to every request made by DAST. Will always return `null` if `security_dast_site_profiles_additional_fields` feature flag is disabled.\n  \"\"\"\n  requestHeaders: String\n\n  \"\"\"\n  The type of target to be scanned. Will always return `null` if `security_dast_site_profiles_api_option` feature flag is disabled.\n  \"\"\"\n  targetType: DastTargetTypeEnum\n\n  \"\"\"The URL of the target to be scanned.\"\"\"\n  targetUrl: String\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: DastSiteProfilePermissions!\n\n  \"\"\"The current validation status of the site profile.\"\"\"\n  validationStatus: DastSiteProfileValidationStatusEnum\n}\n\n\"\"\"Input type for DastSiteProfile authentication\"\"\"\ntype DastSiteProfileAuth {\n  \"\"\"Indicates whether authentication is enabled.\"\"\"\n  enabled: Boolean\n\n  \"\"\"Redacted password to authenticate with on the target website.\"\"\"\n  password: String\n\n  \"\"\"The name of password field at the sign-in HTML form.\"\"\"\n  passwordField: String\n\n  \"\"\"\n  The URL of the page containing the sign-in HTML form on the target website.\n  \"\"\"\n  url: String\n\n  \"\"\"The username to authenticate with on the target website.\"\"\"\n  username: String\n\n  \"\"\"The name of username field at the sign-in HTML form.\"\"\"\n  usernameField: String\n}\n\n\"\"\"Input type for DastSiteProfile authentication\"\"\"\ninput DastSiteProfileAuthInput {\n  \"\"\"Indicates whether authentication is enabled.\"\"\"\n  enabled: Boolean\n\n  \"\"\"\n  The URL of the page containing the sign-in HTML form on the target website.\n  \"\"\"\n  url: String\n\n  \"\"\"The name of username field at the sign-in HTML form.\"\"\"\n  usernameField: String\n\n  \"\"\"The name of password field at the sign-in HTML form.\"\"\"\n  passwordField: String\n\n  \"\"\"The username to authenticate with on the target website.\"\"\"\n  username: String\n\n  \"\"\"The password to authenticate with on the target website.\"\"\"\n  password: String\n}\n\n\"\"\"The connection type for DastSiteProfile.\"\"\"\ntype DastSiteProfileConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [DastSiteProfileEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [DastSiteProfile]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of DastSiteProfileCreate\"\"\"\ninput DastSiteProfileCreateInput {\n  \"\"\"The project the site profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"The name of the site profile.\"\"\"\n  profileName: String!\n\n  \"\"\"The URL of the target to be scanned.\"\"\"\n  targetUrl: String\n\n  \"\"\"\n  The type of target to be scanned. Will be ignored if `security_dast_site_profiles_api_option` feature flag is disabled.\n  \"\"\"\n  targetType: DastTargetTypeEnum\n\n  \"\"\"\n  The URLs to skip during an authenticated scan. Defaults to `[]`. Will be ignored if `security_dast_site_profiles_additional_fields` feature flag is disabled.\n  \"\"\"\n  excludedUrls: [String!] = []\n\n  \"\"\"\n  Comma-separated list of request header names and values to be added to every request made by DAST. Will be ignored if `security_dast_site_profiles_additional_fields` feature flag is disabled.\n  \"\"\"\n  requestHeaders: String\n\n  \"\"\"\n  Parameters for authentication. Will be ignored if `security_dast_site_profiles_additional_fields` feature flag is disabled.\n  \"\"\"\n  auth: DastSiteProfileAuthInput\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastSiteProfileCreate\"\"\"\ntype DastSiteProfileCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"ID of the site profile.\"\"\"\n  id: DastSiteProfileID\n}\n\n\"\"\"Autogenerated input type of DastSiteProfileDelete\"\"\"\ninput DastSiteProfileDeleteInput {\n  \"\"\"The project the site profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"ID of the site profile to be deleted.\"\"\"\n  id: DastSiteProfileID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastSiteProfileDelete\"\"\"\ntype DastSiteProfileDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DastSiteProfileEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DastSiteProfile\n}\n\n\"\"\"\nA `DastSiteProfileID` is a global ID. It is encoded as a string.\n\nAn example `DastSiteProfileID` is: `\"gid://gitlab/DastSiteProfile/1\"`.\n\n\"\"\"\nscalar DastSiteProfileID\n\n\"\"\"Check permissions for the current user on site profile\"\"\"\ntype DastSiteProfilePermissions {\n  \"\"\"\n  Indicates the user can perform `create_on_demand_dast_scan` on this resource\n  \"\"\"\n  createOnDemandDastScan: Boolean!\n}\n\n\"\"\"Autogenerated input type of DastSiteProfileUpdate\"\"\"\ninput DastSiteProfileUpdateInput {\n  \"\"\"The project the site profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"ID of the site profile to be updated.\"\"\"\n  id: DastSiteProfileID!\n\n  \"\"\"The name of the site profile.\"\"\"\n  profileName: String!\n\n  \"\"\"The URL of the target to be scanned.\"\"\"\n  targetUrl: String\n\n  \"\"\"\n  The type of target to be scanned. Will be ignored if `security_dast_site_profiles_api_option` feature flag is disabled.\n  \"\"\"\n  targetType: DastTargetTypeEnum\n\n  \"\"\"\n  The URLs to skip during an authenticated scan. Will be ignored if `security_dast_site_profiles_additional_fields` feature flag is disabled.\n  \"\"\"\n  excludedUrls: [String!]\n\n  \"\"\"\n  Comma-separated list of request header names and values to be added to every request made by DAST. Will be ignored if `security_dast_site_profiles_additional_fields` feature flag is disabled.\n  \"\"\"\n  requestHeaders: String\n\n  \"\"\"\n  Parameters for authentication. Will be ignored if `security_dast_site_profiles_additional_fields` feature flag is disabled.\n  \"\"\"\n  auth: DastSiteProfileAuthInput\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastSiteProfileUpdate\"\"\"\ntype DastSiteProfileUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"ID of the site profile.\"\"\"\n  id: DastSiteProfileID\n}\n\nenum DastSiteProfileValidationStatusEnum {\n  \"\"\"No site validation exists.\"\"\"\n  NONE\n\n  \"\"\"Site validation process has not started.\"\"\"\n  PENDING_VALIDATION\n\n  \"\"\"Site validation process is in progress.\"\"\"\n  INPROGRESS_VALIDATION\n\n  \"\"\"Site validation process finished successfully.\"\"\"\n  PASSED_VALIDATION\n\n  \"\"\"Site validation process finished but failed.\"\"\"\n  FAILED_VALIDATION\n}\n\n\"\"\"Autogenerated input type of DastSiteTokenCreate\"\"\"\ninput DastSiteTokenCreateInput {\n  \"\"\"The project the site token belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"The URL of the target to be validated.\"\"\"\n  targetUrl: String\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastSiteTokenCreate\"\"\"\ntype DastSiteTokenCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"ID of the site token.\"\"\"\n  id: DastSiteTokenID\n\n  \"\"\"The current validation status of the target.\"\"\"\n  status: DastSiteProfileValidationStatusEnum\n\n  \"\"\"Token string.\"\"\"\n  token: String\n}\n\n\"\"\"\nA `DastSiteTokenID` is a global ID. It is encoded as a string.\n\nAn example `DastSiteTokenID` is: `\"gid://gitlab/DastSiteToken/1\"`.\n\n\"\"\"\nscalar DastSiteTokenID\n\n\"\"\"Represents a DAST Site Validation\"\"\"\ntype DastSiteValidation {\n  \"\"\"Global ID of the site validation.\"\"\"\n  id: DastSiteValidationID!\n\n  \"\"\"Normalized URL of the target to be validated.\"\"\"\n  normalizedTargetUrl: String\n\n  \"\"\"Status of the site validation.\"\"\"\n  status: DastSiteProfileValidationStatusEnum!\n}\n\n\"\"\"The connection type for DastSiteValidation.\"\"\"\ntype DastSiteValidationConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [DastSiteValidationEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [DastSiteValidation]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of DastSiteValidationCreate\"\"\"\ninput DastSiteValidationCreateInput {\n  \"\"\"The project the site profile belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"ID of the site token.\"\"\"\n  dastSiteTokenId: DastSiteTokenID!\n\n  \"\"\"The path to be requested during validation.\"\"\"\n  validationPath: String!\n\n  \"\"\"The validation strategy to be used.\"\"\"\n  strategy: DastSiteValidationStrategyEnum\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastSiteValidationCreate\"\"\"\ntype DastSiteValidationCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"ID of the site validation.\"\"\"\n  id: DastSiteValidationID\n\n  \"\"\"The current validation status.\"\"\"\n  status: DastSiteProfileValidationStatusEnum\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DastSiteValidationEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DastSiteValidation\n}\n\n\"\"\"\nA `DastSiteValidationID` is a global ID. It is encoded as a string.\n\nAn example `DastSiteValidationID` is: `\"gid://gitlab/DastSiteValidation/1\"`.\n\n\"\"\"\nscalar DastSiteValidationID\n\n\"\"\"Autogenerated input type of DastSiteValidationRevoke\"\"\"\ninput DastSiteValidationRevokeInput {\n  \"\"\"The project the site validation belongs to.\"\"\"\n  fullPath: ID!\n\n  \"\"\"Normalized URL of the target to be revoked.\"\"\"\n  normalizedTargetUrl: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DastSiteValidationRevoke\"\"\"\ntype DastSiteValidationRevokePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\nenum DastSiteValidationStrategyEnum {\n  \"\"\"Text file validation.\"\"\"\n  TEXT_FILE\n\n  \"\"\"Header validation.\"\"\"\n  HEADER\n}\n\nenum DastTargetTypeEnum {\n  \"\"\"Website target.\"\"\"\n  WEBSITE\n\n  \"\"\"API target.\"\"\"\n  API\n}\n\n\"\"\"Color of the data visualization palette\"\"\"\nenum DataVisualizationColorEnum {\n  \"\"\"Blue color\"\"\"\n  BLUE\n\n  \"\"\"Orange color\"\"\"\n  ORANGE\n\n  \"\"\"Aqua color\"\"\"\n  AQUA\n\n  \"\"\"Green color\"\"\"\n  GREEN\n\n  \"\"\"Magenta color\"\"\"\n  MAGENTA\n}\n\n\"\"\"Weight of the data visualization palette\"\"\"\nenum DataVisualizationWeightEnum {\n  \"\"\"50 weight\"\"\"\n  WEIGHT_50\n\n  \"\"\"100 weight\"\"\"\n  WEIGHT_100\n\n  \"\"\"200 weight\"\"\"\n  WEIGHT_200\n\n  \"\"\"300 weight\"\"\"\n  WEIGHT_300\n\n  \"\"\"400 weight\"\"\"\n  WEIGHT_400\n\n  \"\"\"500 weight\"\"\"\n  WEIGHT_500\n\n  \"\"\"600 weight\"\"\"\n  WEIGHT_600\n\n  \"\"\"700 weight\"\"\"\n  WEIGHT_700\n\n  \"\"\"800 weight\"\"\"\n  WEIGHT_800\n\n  \"\"\"900 weight\"\"\"\n  WEIGHT_900\n\n  \"\"\"950 weight\"\"\"\n  WEIGHT_950\n}\n\n\"\"\"Date represented in ISO 8601\"\"\"\nscalar Date\n\n\"\"\"Autogenerated input type of DeleteAnnotation\"\"\"\ninput DeleteAnnotationInput {\n  \"\"\"Global ID of the annotation to delete.\"\"\"\n  id: MetricsDashboardAnnotationID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DeleteAnnotation\"\"\"\ntype DeleteAnnotationPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of DeleteDevopsAdoptionSegment\"\"\"\ninput DeleteDevopsAdoptionSegmentInput {\n  \"\"\"One or many IDs of the segments to delete.\"\"\"\n  id: [AnalyticsDevopsAdoptionSegmentID!]!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DeleteDevopsAdoptionSegment\"\"\"\ntype DeleteDevopsAdoptionSegmentPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"The response from the AdminSidekiqQueuesDeleteJobs mutation\"\"\"\ntype DeleteJobsResponse {\n  \"\"\"\n  Whether or not the entire queue was processed in time; if not, retrying the same request is safe.\n  \"\"\"\n  completed: Boolean\n\n  \"\"\"The number of matching jobs deleted.\"\"\"\n  deletedJobs: Int\n\n  \"\"\"The queue size after processing.\"\"\"\n  queueSize: Int\n}\n\n\"\"\"A single design\"\"\"\ntype Design implements Noteable & DesignFields & CurrentUserTodos {\n  \"\"\"To-do items for the current user.\"\"\"\n  currentUserTodos(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n\n    \"\"\"State of the to-do items.\"\"\"\n    state: TodoStateEnum\n  ): TodoConnection!\n\n  \"\"\"The diff refs for this design.\"\"\"\n  diffRefs: DiffRefs!\n\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"How this design was changed in the current version.\"\"\"\n  event: DesignVersionEvent!\n\n  \"\"\"The filename of the design.\"\"\"\n  filename: String!\n\n  \"\"\"The full path to the design file.\"\"\"\n  fullPath: String!\n\n  \"\"\"The ID of this design.\"\"\"\n  id: ID!\n\n  \"\"\"The URL of the full-sized image.\"\"\"\n  image: String!\n\n  \"\"\"\n  The URL of the design resized to fit within the bounds of 432x230. This will be `null` if the image has not been generated\n  \"\"\"\n  imageV432x230: String\n\n  \"\"\"The issue the design belongs to.\"\"\"\n  issue: Issue!\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"The total count of user-created notes for this design.\"\"\"\n  notesCount: Int!\n\n  \"\"\"The project the design belongs to.\"\"\"\n  project: Project!\n\n  \"\"\"All versions related to this design ordered newest first.\"\"\"\n  versions(\n    \"\"\"The SHA256 of the most recent acceptable version.\"\"\"\n    earlierOrEqualToSha: String\n\n    \"\"\"The Global ID of the most recent acceptable version.\"\"\"\n    earlierOrEqualToId: DesignManagementVersionID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DesignVersionConnection!\n}\n\n\"\"\"\nA design pinned to a specific version. The image field reflects the design as of the associated version\n\"\"\"\ntype DesignAtVersion implements DesignFields {\n  \"\"\"The underlying design.\"\"\"\n  design: Design!\n\n  \"\"\"The diff refs for this design.\"\"\"\n  diffRefs: DiffRefs!\n\n  \"\"\"How this design was changed in the current version.\"\"\"\n  event: DesignVersionEvent!\n\n  \"\"\"The filename of the design.\"\"\"\n  filename: String!\n\n  \"\"\"The full path to the design file.\"\"\"\n  fullPath: String!\n\n  \"\"\"The ID of this design.\"\"\"\n  id: ID!\n\n  \"\"\"The URL of the full-sized image.\"\"\"\n  image: String!\n\n  \"\"\"\n  The URL of the design resized to fit within the bounds of 432x230. This will be `null` if the image has not been generated\n  \"\"\"\n  imageV432x230: String\n\n  \"\"\"The issue the design belongs to.\"\"\"\n  issue: Issue!\n\n  \"\"\"The total count of user-created notes for this design.\"\"\"\n  notesCount: Int!\n\n  \"\"\"The project the design belongs to.\"\"\"\n  project: Project!\n\n  \"\"\"The version this design-at-versions is pinned to.\"\"\"\n  version: DesignVersion!\n}\n\n\"\"\"The connection type for DesignAtVersion.\"\"\"\ntype DesignAtVersionConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [DesignAtVersionEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [DesignAtVersion]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DesignAtVersionEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DesignAtVersion\n}\n\n\"\"\"A collection of designs\"\"\"\ntype DesignCollection {\n  \"\"\"Copy state of the design collection.\"\"\"\n  copyState: DesignCollectionCopyState\n\n  \"\"\"Find a specific design.\"\"\"\n  design(\n    \"\"\"Find a design by its ID.\"\"\"\n    id: DesignManagementDesignID\n\n    \"\"\"Find a design by its filename.\"\"\"\n    filename: String\n  ): Design\n\n  \"\"\"Find a design as of a version.\"\"\"\n  designAtVersion(\n    \"\"\"The Global ID of the design at this version.\"\"\"\n    id: DesignManagementDesignAtVersionID!\n  ): DesignAtVersion\n\n  \"\"\"All designs for the design collection.\"\"\"\n  designs(\n    \"\"\"Filters designs by their ID.\"\"\"\n    ids: [DesignManagementDesignID!]\n\n    \"\"\"Filters designs by their filename.\"\"\"\n    filenames: [String!]\n\n    \"\"\"\n    Filters designs to only those that existed at the version. If argument is omitted or nil then all designs will reflect the latest version\n    \"\"\"\n    atVersion: DesignManagementVersionID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DesignConnection!\n\n  \"\"\"Issue associated with the design collection.\"\"\"\n  issue: Issue!\n\n  \"\"\"Project associated with the design collection.\"\"\"\n  project: Project!\n\n  \"\"\"A specific version.\"\"\"\n  version(\n    \"\"\"The SHA256 of a specific version.\"\"\"\n    sha: String\n\n    \"\"\"The Global ID of the version.\"\"\"\n    id: DesignManagementVersionID\n  ): DesignVersion\n\n  \"\"\"All versions related to all designs, ordered newest first.\"\"\"\n  versions(\n    \"\"\"The SHA256 of the most recent acceptable version.\"\"\"\n    earlierOrEqualToSha: String\n\n    \"\"\"The Global ID of the most recent acceptable version.\"\"\"\n    earlierOrEqualToId: DesignManagementVersionID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DesignVersionConnection!\n}\n\n\"\"\"Copy state of a DesignCollection\"\"\"\nenum DesignCollectionCopyState {\n  \"\"\"The DesignCollection has no copy in progress\"\"\"\n  READY\n\n  \"\"\"The DesignCollection is being copied\"\"\"\n  IN_PROGRESS\n\n  \"\"\"The DesignCollection encountered an error during a copy\"\"\"\n  ERROR\n}\n\n\"\"\"The connection type for Design.\"\"\"\ntype DesignConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [DesignEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Design]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DesignEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Design\n}\n\ninterface DesignFields {\n  \"\"\"The diff refs for this design.\"\"\"\n  diffRefs: DiffRefs!\n\n  \"\"\"How this design was changed in the current version.\"\"\"\n  event: DesignVersionEvent!\n\n  \"\"\"The filename of the design.\"\"\"\n  filename: String!\n\n  \"\"\"The full path to the design file.\"\"\"\n  fullPath: String!\n\n  \"\"\"The ID of this design.\"\"\"\n  id: ID!\n\n  \"\"\"The URL of the full-sized image.\"\"\"\n  image: String!\n\n  \"\"\"\n  The URL of the design resized to fit within the bounds of 432x230. This will be `null` if the image has not been generated\n  \"\"\"\n  imageV432x230: String\n\n  \"\"\"The issue the design belongs to.\"\"\"\n  issue: Issue!\n\n  \"\"\"The total count of user-created notes for this design.\"\"\"\n  notesCount: Int!\n\n  \"\"\"The project the design belongs to.\"\"\"\n  project: Project!\n}\n\ntype DesignManagement {\n  \"\"\"Find a design as of a version.\"\"\"\n  designAtVersion(\n    \"\"\"The Global ID of the design at this version.\"\"\"\n    id: DesignManagementDesignAtVersionID!\n  ): DesignAtVersion\n\n  \"\"\"Find a version.\"\"\"\n  version(\n    \"\"\"The Global ID of the version.\"\"\"\n    id: DesignManagementVersionID!\n  ): DesignVersion\n}\n\n\"\"\"Autogenerated input type of DesignManagementDelete\"\"\"\ninput DesignManagementDeleteInput {\n  \"\"\"The project where the issue is to upload designs for.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to modify designs for.\"\"\"\n  iid: ID!\n\n  \"\"\"The filenames of the designs to delete.\"\"\"\n  filenames: [String!]!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DesignManagementDelete\"\"\"\ntype DesignManagementDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The new version in which the designs are deleted.\"\"\"\n  version: DesignVersion\n}\n\n\"\"\"\nA `DesignManagementDesignAtVersionID` is a global ID. It is encoded as a string.\n\nAn example `DesignManagementDesignAtVersionID` is: `\"gid://gitlab/DesignManagement::DesignAtVersion/1\"`.\n\n\"\"\"\nscalar DesignManagementDesignAtVersionID\n\n\"\"\"\nA `DesignManagementDesignID` is a global ID. It is encoded as a string.\n\nAn example `DesignManagementDesignID` is: `\"gid://gitlab/DesignManagement::Design/1\"`.\n\n\"\"\"\nscalar DesignManagementDesignID\n\n\"\"\"Autogenerated input type of DesignManagementMove\"\"\"\ninput DesignManagementMoveInput {\n  \"\"\"ID of the design to move.\"\"\"\n  id: DesignManagementDesignID!\n\n  \"\"\"ID of the immediately preceding design.\"\"\"\n  previous: DesignManagementDesignID\n\n  \"\"\"ID of the immediately following design.\"\"\"\n  next: DesignManagementDesignID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DesignManagementMove\"\"\"\ntype DesignManagementMovePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The current state of the collection.\"\"\"\n  designCollection: DesignCollection\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of DesignManagementUpload\"\"\"\ninput DesignManagementUploadInput {\n  \"\"\"The project where the issue is to upload designs for.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to modify designs for.\"\"\"\n  iid: ID!\n\n  \"\"\"The files to upload.\"\"\"\n  files: [Upload!]!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DesignManagementUpload\"\"\"\ntype DesignManagementUploadPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The designs that were uploaded by the mutation.\"\"\"\n  designs: [Design!]!\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"\n  Any designs that were skipped from the upload due to there being no change to their content since their last version\n  \"\"\"\n  skippedDesigns: [Design!]!\n}\n\n\"\"\"\nA `DesignManagementVersionID` is a global ID. It is encoded as a string.\n\nAn example `DesignManagementVersionID` is: `\"gid://gitlab/DesignManagement::Version/1\"`.\n\n\"\"\"\nscalar DesignManagementVersionID\n\n\"\"\"A specific version in which designs were added, modified or deleted\"\"\"\ntype DesignVersion {\n  \"\"\"\n  A particular design as of this version, provided it is visible at this version.\n  \"\"\"\n  designAtVersion(\n    \"\"\"The ID of the DesignAtVersion.\"\"\"\n    id: DesignManagementDesignAtVersionID\n\n    \"\"\"The ID of a specific design.\"\"\"\n    designId: DesignManagementDesignID\n\n    \"\"\"The filename of a specific design.\"\"\"\n    filename: String\n  ): DesignAtVersion!\n\n  \"\"\"All designs that were changed in the version.\"\"\"\n  designs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DesignConnection!\n\n  \"\"\"All designs that are visible at this version, as of this version.\"\"\"\n  designsAtVersion(\n    \"\"\"Filters designs by their ID.\"\"\"\n    ids: [DesignManagementDesignID!]\n\n    \"\"\"Filters designs by their filename.\"\"\"\n    filenames: [String!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DesignAtVersionConnection!\n\n  \"\"\"ID of the design version.\"\"\"\n  id: ID!\n\n  \"\"\"SHA of the design version.\"\"\"\n  sha: ID!\n}\n\n\"\"\"The connection type for DesignVersion.\"\"\"\ntype DesignVersionConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [DesignVersionEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [DesignVersion]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DesignVersionEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DesignVersion\n}\n\n\"\"\"Mutation event of a design within a version\"\"\"\nenum DesignVersionEvent {\n  \"\"\"No change.\"\"\"\n  NONE\n\n  \"\"\"A creation event\"\"\"\n  CREATION\n\n  \"\"\"A modification event\"\"\"\n  MODIFICATION\n\n  \"\"\"A deletion event\"\"\"\n  DELETION\n}\n\n\"\"\"Autogenerated input type of DestroyBoard\"\"\"\ninput DestroyBoardInput {\n  \"\"\"The global ID of the board to destroy.\"\"\"\n  id: BoardID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated input type of DestroyBoardList\"\"\"\ninput DestroyBoardListInput {\n  \"\"\"Global ID of the list to destroy. Only label lists are accepted.\"\"\"\n  listId: ListID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DestroyBoardList\"\"\"\ntype DestroyBoardListPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The list after mutation.\"\"\"\n  list: BoardList\n}\n\n\"\"\"Autogenerated return type of DestroyBoard\"\"\"\ntype DestroyBoardPayload {\n  \"\"\"The board after mutation.\"\"\"\n  board: Board\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of DestroyComplianceFramework\"\"\"\ninput DestroyComplianceFrameworkInput {\n  \"\"\"The global ID of the compliance framework to destroy.\"\"\"\n  id: ComplianceManagementFrameworkID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DestroyComplianceFramework\"\"\"\ntype DestroyComplianceFrameworkPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of DestroyContainerRepository\"\"\"\ninput DestroyContainerRepositoryInput {\n  \"\"\"ID of the container repository.\"\"\"\n  id: ContainerRepositoryID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DestroyContainerRepository\"\"\"\ntype DestroyContainerRepositoryPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The container repository policy after scheduling the deletion.\"\"\"\n  containerRepository: ContainerRepository!\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of DestroyContainerRepositoryTags\"\"\"\ninput DestroyContainerRepositoryTagsInput {\n  \"\"\"ID of the container repository.\"\"\"\n  id: ContainerRepositoryID!\n\n  \"\"\"\n  Container repository tag(s) to delete. Total number can't be greater than 20\n  \"\"\"\n  tagNames: [String!]!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DestroyContainerRepositoryTags\"\"\"\ntype DestroyContainerRepositoryTagsPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Deleted container repository tags.\"\"\"\n  deletedTagNames: [String!]!\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of DestroyEpicBoard\"\"\"\ninput DestroyEpicBoardInput {\n  \"\"\"Global ID of the board to destroy.\"\"\"\n  id: BoardsEpicBoardID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DestroyEpicBoard\"\"\"\ntype DestroyEpicBoardPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Epic board after mutation.\"\"\"\n  epicBoard: EpicBoard\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of DestroyNote\"\"\"\ninput DestroyNoteInput {\n  \"\"\"The global ID of the note to destroy.\"\"\"\n  id: NoteID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DestroyNote\"\"\"\ntype DestroyNotePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The note after mutation.\"\"\"\n  note: Note\n}\n\n\"\"\"Autogenerated input type of DestroySnippet\"\"\"\ninput DestroySnippetInput {\n  \"\"\"The global ID of the snippet to destroy.\"\"\"\n  id: SnippetID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DestroySnippet\"\"\"\ntype DestroySnippetPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The snippet after mutation.\"\"\"\n  snippet: Snippet\n}\n\ntype DetailedStatus {\n  \"\"\"\n  Action information for the status. This includes method, button title, icon, path, and title.\n  \"\"\"\n  action: StatusAction\n\n  \"\"\"Path of the details for the status.\"\"\"\n  detailsPath: String\n\n  \"\"\"Favicon of the status.\"\"\"\n  favicon: String\n\n  \"\"\"Group of the status.\"\"\"\n  group: String\n\n  \"\"\"Indicates if the status has further details.\"\"\"\n  hasDetails: Boolean\n\n  \"\"\"Icon of the status.\"\"\"\n  icon: String\n\n  \"\"\"Label of the status.\"\"\"\n  label: String\n\n  \"\"\"Text of the status.\"\"\"\n  text: String\n\n  \"\"\"Tooltip associated with the status.\"\"\"\n  tooltip: String\n}\n\n\"\"\"Segment\"\"\"\ntype DevopsAdoptionSegment {\n  \"\"\"ID of the segment.\"\"\"\n  id: ID!\n\n  \"\"\"The latest adoption metrics for the segment.\"\"\"\n  latestSnapshot: DevopsAdoptionSnapshot\n\n  \"\"\"Segment namespace.\"\"\"\n  namespace: Namespace\n}\n\n\"\"\"The connection type for DevopsAdoptionSegment.\"\"\"\ntype DevopsAdoptionSegmentConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [DevopsAdoptionSegmentEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [DevopsAdoptionSegment]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DevopsAdoptionSegmentEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: DevopsAdoptionSegment\n}\n\n\"\"\"Snapshot\"\"\"\ntype DevopsAdoptionSnapshot {\n  \"\"\"Total number of projects with existing CODEOWNERS file.\"\"\"\n  codeOwnersUsedCount: Int\n\n  \"\"\"At least one deployment succeeded.\"\"\"\n  deploySucceeded: Boolean!\n\n  \"\"\"The end time for the snapshot where the data points were collected.\"\"\"\n  endTime: Time!\n\n  \"\"\"At least one issue was opened.\"\"\"\n  issueOpened: Boolean!\n\n  \"\"\"At least one merge request was approved.\"\"\"\n  mergeRequestApproved: Boolean!\n\n  \"\"\"At least one merge request was opened.\"\"\"\n  mergeRequestOpened: Boolean!\n\n  \"\"\"At least one pipeline succeeded.\"\"\"\n  pipelineSucceeded: Boolean!\n\n  \"\"\"The time the snapshot was recorded.\"\"\"\n  recordedAt: Time!\n\n  \"\"\"At least one runner was used.\"\"\"\n  runnerConfigured: Boolean!\n\n  \"\"\"At least one security scan succeeded.\"\"\"\n  securityScanSucceeded: Boolean!\n\n  \"\"\"The start time for the snapshot where the data points were collected.\"\"\"\n  startTime: Time!\n\n  \"\"\"Total number of projects.\"\"\"\n  totalProjectsCount: Int\n}\n\ninput DiffImagePositionInput {\n  \"\"\"SHA of the HEAD at the time the comment was made.\"\"\"\n  headSha: String!\n\n  \"\"\"Merge base of the branch the comment was made on.\"\"\"\n  baseSha: String\n\n  \"\"\"SHA of the branch being compared against.\"\"\"\n  startSha: String!\n\n  \"\"\"\n  The paths of the file that was changed. Both of the properties of this input are optional, but at least one of them is required\n  \"\"\"\n  paths: DiffPathsInput!\n\n  \"\"\"X position of the note.\"\"\"\n  x: Int!\n\n  \"\"\"Y position of the note.\"\"\"\n  y: Int!\n\n  \"\"\"Total width of the image.\"\"\"\n  width: Int!\n\n  \"\"\"Total height of the image.\"\"\"\n  height: Int!\n}\n\n\"\"\"\nA `DiffNoteID` is a global ID. It is encoded as a string.\n\nAn example `DiffNoteID` is: `\"gid://gitlab/DiffNote/1\"`.\n\n\"\"\"\nscalar DiffNoteID\n\ninput DiffPathsInput {\n  \"\"\"The path of the file on the start sha.\"\"\"\n  oldPath: String\n\n  \"\"\"The path of the file on the head sha.\"\"\"\n  newPath: String\n}\n\ntype DiffPosition {\n  \"\"\"\n  Information about the branch, HEAD, and base at the time of commenting.\n  \"\"\"\n  diffRefs: DiffRefs!\n\n  \"\"\"Path of the file that was changed.\"\"\"\n  filePath: String!\n\n  \"\"\"Total height of the image.\"\"\"\n  height: Int\n\n  \"\"\"Line on HEAD SHA that was changed.\"\"\"\n  newLine: Int\n\n  \"\"\"Path of the file on the HEAD SHA.\"\"\"\n  newPath: String\n\n  \"\"\"Line on start SHA that was changed.\"\"\"\n  oldLine: Int\n\n  \"\"\"Path of the file on the start SHA.\"\"\"\n  oldPath: String\n\n  \"\"\"Type of file the position refers to.\"\"\"\n  positionType: DiffPositionType!\n\n  \"\"\"Total width of the image.\"\"\"\n  width: Int\n\n  \"\"\"X position of the note.\"\"\"\n  x: Int\n\n  \"\"\"Y position of the note.\"\"\"\n  y: Int\n}\n\ninput DiffPositionInput {\n  \"\"\"SHA of the HEAD at the time the comment was made.\"\"\"\n  headSha: String!\n\n  \"\"\"Merge base of the branch the comment was made on.\"\"\"\n  baseSha: String\n\n  \"\"\"SHA of the branch being compared against.\"\"\"\n  startSha: String!\n\n  \"\"\"\n  The paths of the file that was changed. Both of the properties of this input are optional, but at least one of them is required\n  \"\"\"\n  paths: DiffPathsInput!\n\n  \"\"\"Line on start SHA that was changed.\"\"\"\n  oldLine: Int\n\n  \"\"\"Line on HEAD SHA that was changed.\"\"\"\n  newLine: Int\n}\n\n\"\"\"Type of file the position refers to\"\"\"\nenum DiffPositionType {\n  \"\"\"A text file\"\"\"\n  text\n\n  \"\"\"An image\"\"\"\n  image\n}\n\ntype DiffRefs {\n  \"\"\"Merge base of the branch the comment was made on.\"\"\"\n  baseSha: String\n\n  \"\"\"SHA of the HEAD at the time the comment was made.\"\"\"\n  headSha: String!\n\n  \"\"\"SHA of the branch being compared against.\"\"\"\n  startSha: String!\n}\n\n\"\"\"Changes to a single file\"\"\"\ntype DiffStats {\n  \"\"\"Number of lines added to this file.\"\"\"\n  additions: Int!\n\n  \"\"\"Number of lines deleted from this file.\"\"\"\n  deletions: Int!\n\n  \"\"\"File path, relative to repository root.\"\"\"\n  path: String!\n}\n\n\"\"\"Aggregated summary of changes\"\"\"\ntype DiffStatsSummary {\n  \"\"\"Number of lines added.\"\"\"\n  additions: Int!\n\n  \"\"\"Number of lines changed.\"\"\"\n  changes: Int!\n\n  \"\"\"Number of lines deleted.\"\"\"\n  deletions: Int!\n\n  \"\"\"Number of files changed.\"\"\"\n  fileCount: Int!\n}\n\ntype Discussion implements ResolvableInterface {\n  \"\"\"Timestamp of the discussion's creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"ID of this discussion.\"\"\"\n  id: DiscussionID!\n\n  \"\"\"All notes in the discussion.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"ID used to reply to this discussion.\"\"\"\n  replyId: DiscussionID!\n\n  \"\"\"Indicates if the object can be resolved.\"\"\"\n  resolvable: Boolean!\n\n  \"\"\"Indicates if the object is resolved.\"\"\"\n  resolved: Boolean!\n\n  \"\"\"Timestamp of when the object was resolved.\"\"\"\n  resolvedAt: Time\n\n  \"\"\"User who resolved the object.\"\"\"\n  resolvedBy: UserCore\n}\n\n\"\"\"The connection type for Discussion.\"\"\"\ntype DiscussionConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [DiscussionEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Discussion]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype DiscussionEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Discussion\n}\n\n\"\"\"\nA `DiscussionID` is a global ID. It is encoded as a string.\n\nAn example `DiscussionID` is: `\"gid://gitlab/Discussion/1\"`.\n\n\"\"\"\nscalar DiscussionID\n\n\"\"\"Autogenerated input type of DiscussionToggleResolve\"\"\"\ninput DiscussionToggleResolveInput {\n  \"\"\"The global ID of the discussion.\"\"\"\n  id: DiscussionID!\n\n  \"\"\"\n  Will resolve the discussion when true, and unresolve the discussion when false.\n  \"\"\"\n  resolve: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DiscussionToggleResolve\"\"\"\ntype DiscussionToggleResolvePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The discussion after mutation.\"\"\"\n  discussion: Discussion\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of DismissVulnerability\"\"\"\ninput DismissVulnerabilityInput {\n  \"\"\"ID of the vulnerability to be dismissed.\"\"\"\n  id: VulnerabilityID!\n\n  \"\"\"Comment why vulnerability should be dismissed.\"\"\"\n  comment: String\n\n  \"\"\"Reason why vulnerability should be dismissed.\"\"\"\n  dismissalReason: VulnerabilityDismissalReason\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of DismissVulnerability\"\"\"\ntype DismissVulnerabilityPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The vulnerability after dismissal.\"\"\"\n  vulnerability: Vulnerability\n}\n\n\"\"\"\nDuration between two instants, represented as a fractional number of seconds.\n\nFor example: 12.3334\n\n\"\"\"\nscalar Duration\n\ninterface Entry {\n  \"\"\"Flat path of the entry.\"\"\"\n  flatPath: String!\n\n  \"\"\"ID of the entry.\"\"\"\n  id: ID!\n\n  \"\"\"Name of the entry.\"\"\"\n  name: String!\n\n  \"\"\"Path of the entry.\"\"\"\n  path: String!\n\n  \"\"\"Last commit SHA for the entry.\"\"\"\n  sha: String!\n\n  \"\"\"Type of tree entry.\"\"\"\n  type: EntryType!\n}\n\n\"\"\"Type of a tree entry\"\"\"\nenum EntryType {\n  \"\"\"Directory tree type\"\"\"\n  tree\n\n  \"\"\"File tree type\"\"\"\n  blob\n\n  \"\"\"Commit tree type\"\"\"\n  commit\n}\n\n\"\"\"Describes where code is deployed for a project\"\"\"\ntype Environment {\n  \"\"\"ID of the environment.\"\"\"\n  id: ID!\n\n  \"\"\"\n  The most severe open alert for the environment. If multiple alerts have equal severity, the most recent is returned.\n  \"\"\"\n  latestOpenedMostSevereAlert: AlertManagementAlert\n\n  \"\"\"Metrics dashboard schema for the environment.\"\"\"\n  metricsDashboard(\n    \"\"\"\n    Path to a file which defines a metrics dashboard eg: `\"config/prometheus/common_metrics.yml\"`.\n    \n    \"\"\"\n    path: String!\n  ): MetricsDashboard\n\n  \"\"\"Human-readable name of the environment.\"\"\"\n  name: String!\n\n  \"\"\"The path to the environment.\"\"\"\n  path: String!\n\n  \"\"\"State of the environment, for example: available/stopped.\"\"\"\n  state: String!\n}\n\n\"\"\"The connection type for Environment.\"\"\"\ntype EnvironmentConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [EnvironmentEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Environment]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EnvironmentEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Environment\n}\n\n\"\"\"\nA `EnvironmentID` is a global ID. It is encoded as a string.\n\nAn example `EnvironmentID` is: `\"gid://gitlab/Environment/1\"`.\n\n\"\"\"\nscalar EnvironmentID\n\n\"\"\"Autogenerated input type of EnvironmentsCanaryIngressUpdate\"\"\"\ninput EnvironmentsCanaryIngressUpdateInput {\n  \"\"\"The global ID of the environment to update.\"\"\"\n  id: EnvironmentID!\n\n  \"\"\"The weight of the Canary Ingress.\"\"\"\n  weight: Int!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of EnvironmentsCanaryIngressUpdate\"\"\"\ntype EnvironmentsCanaryIngressUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Represents an epic\"\"\"\ntype Epic implements Noteable & CurrentUserTodos & Eventable {\n  \"\"\"Author of the epic.\"\"\"\n  author: UserCore!\n\n  \"\"\"A list of award emojis associated with the epic.\"\"\"\n  awardEmoji(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): AwardEmojiConnection\n\n  \"\"\"Children (sub-epics) of the epic.\"\"\"\n  children(\n    \"\"\"List items overlapping the given timeframe.\"\"\"\n    timeframe: Timeframe\n\n    \"\"\"IID of the epic, e.g., \"1\".\"\"\"\n    iid: ID\n\n    \"\"\"List of IIDs of epics, e.g., [1, 2].\"\"\"\n    iids: [ID!]\n\n    \"\"\"Filter epics by state.\"\"\"\n    state: EpicState\n\n    \"\"\"Search query for epic title or description.\"\"\"\n    search: String\n\n    \"\"\"List epics by sort order.\"\"\"\n    sort: EpicSort\n\n    \"\"\"Filter epics by author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Filter epics by labels.\"\"\"\n    labelName: [String!]\n\n    \"\"\"Filter epics by milestone title, computed from epic's issues.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Filter epics by IID for autocomplete.\"\"\"\n    iidStartsWith: String\n\n    \"\"\"Include epics from descendant groups.\"\"\"\n    includeDescendantGroups: Boolean = true\n\n    \"\"\"Filter epics by given confidentiality.\"\"\"\n    confidential: Boolean\n\n    \"\"\"Filter by reaction emoji applied by the current user.\"\"\"\n    myReactionEmoji: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EpicConnection\n\n  \"\"\"Timestamp of when the epic was closed.\"\"\"\n  closedAt: Time\n\n  \"\"\"Indicates if the epic is confidential.\"\"\"\n  confidential: Boolean\n\n  \"\"\"Timestamp of when the epic was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"To-do items for the current user.\"\"\"\n  currentUserTodos(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n\n    \"\"\"State of the to-do items.\"\"\"\n    state: TodoStateEnum\n  ): TodoConnection!\n\n  \"\"\"Number of open and closed descendant epics and issues.\"\"\"\n  descendantCounts: EpicDescendantCount\n\n  \"\"\"\n  Total weight of open and closed issues in the epic and its descendants.\n  \"\"\"\n  descendantWeightSum: EpicDescendantWeights\n\n  \"\"\"Description of the epic.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"Number of downvotes the epic has received.\"\"\"\n  downvotes: Int!\n\n  \"\"\"Due date of the epic.\"\"\"\n  dueDate: Time\n\n  \"\"\"Fixed due date of the epic.\"\"\"\n  dueDateFixed: Time\n\n  \"\"\"Inherited due date of the epic from milestones.\"\"\"\n  dueDateFromMilestones: Time\n\n  \"\"\"Indicates if the due date has been manually set.\"\"\"\n  dueDateIsFixed: Boolean\n\n  \"\"\"A list of events associated with the object.\"\"\"\n  events(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EventConnection\n\n  \"\"\"Group to which the epic belongs.\"\"\"\n  group: Group!\n\n  \"\"\"Indicates if the epic has children.\"\"\"\n  hasChildren: Boolean!\n\n  \"\"\"Indicates if the epic has direct issues.\"\"\"\n  hasIssues: Boolean!\n\n  \"\"\"Indicates if the epic has a parent epic.\"\"\"\n  hasParent: Boolean!\n\n  \"\"\"Current health status of the epic.\"\"\"\n  healthStatus: EpicHealthStatus\n\n  \"\"\"ID of the epic.\"\"\"\n  id: ID!\n\n  \"\"\"Internal ID of the epic.\"\"\"\n  iid: ID!\n\n  \"\"\"A list of issues associated with the epic.\"\"\"\n  issues(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EpicIssueConnection\n\n  \"\"\"Labels assigned to the epic.\"\"\"\n  labels(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LabelConnection\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"Parent epic of the epic.\"\"\"\n  parent: Epic\n\n  \"\"\"List of participants for the epic.\"\"\"\n  participants(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"\n  Internal reference of the epic. Returned in shortened format by default.\n  \"\"\"\n  reference(\n    \"\"\"Indicates if the reference should be returned in full.\"\"\"\n    full: Boolean = false\n  ): String!\n\n  \"\"\"URI path of the epic-issue relationship.\"\"\"\n  relationPath: String\n\n  \"\"\"The relative position of the epic in the epic tree.\"\"\"\n  relativePosition: Int\n\n  \"\"\"Start date of the epic.\"\"\"\n  startDate: Time\n\n  \"\"\"Fixed start date of the epic.\"\"\"\n  startDateFixed: Time\n\n  \"\"\"Inherited start date of the epic from milestones.\"\"\"\n  startDateFromMilestones: Time\n\n  \"\"\"Indicates if the start date has been manually set.\"\"\"\n  startDateIsFixed: Boolean\n\n  \"\"\"State of the epic.\"\"\"\n  state: EpicState!\n\n  \"\"\"Indicates the currently logged in user is subscribed to the epic.\"\"\"\n  subscribed: Boolean!\n\n  \"\"\"Title of the epic.\"\"\"\n  title: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `title`\"\"\"\n  titleHtml: String\n\n  \"\"\"Timestamp of when the epic was updated.\"\"\"\n  updatedAt: Time\n\n  \"\"\"Number of upvotes the epic has received.\"\"\"\n  upvotes: Int!\n\n  \"\"\"Number of user discussions in the epic.\"\"\"\n  userDiscussionsCount: Int!\n\n  \"\"\"Number of user notes of the epic.\"\"\"\n  userNotesCount: Int!\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: EpicPermissions!\n\n  \"\"\"Web path of the epic.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the epic.\"\"\"\n  webUrl: String!\n}\n\n\"\"\"Autogenerated input type of EpicAddIssue\"\"\"\ninput EpicAddIssueInput {\n  \"\"\"The IID of the epic to mutate.\"\"\"\n  iid: ID!\n\n  \"\"\"The group the epic to mutate belongs to.\"\"\"\n  groupPath: ID!\n\n  \"\"\"The full path of the project the issue belongs to.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to be added.\"\"\"\n  issueIid: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of EpicAddIssue\"\"\"\ntype EpicAddIssuePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The epic after mutation.\"\"\"\n  epic: Epic\n\n  \"\"\"The epic-issue relation.\"\"\"\n  epicIssue: EpicIssue\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Represents an epic board\"\"\"\ntype EpicBoard {\n  \"\"\"Whether or not backlog list is hidden.\"\"\"\n  hideBacklogList: Boolean\n\n  \"\"\"Whether or not closed list is hidden.\"\"\"\n  hideClosedList: Boolean\n\n  \"\"\"Global ID of the epic board.\"\"\"\n  id: BoardsEpicBoardID!\n\n  \"\"\"Labels of the board.\"\"\"\n  labels(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LabelConnection\n\n  \"\"\"Epic board lists.\"\"\"\n  lists(\n    \"\"\"Find an epic board list by ID.\"\"\"\n    id: BoardsEpicListID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EpicListConnection\n\n  \"\"\"Name of the epic board.\"\"\"\n  name: String\n\n  \"\"\"Web path of the epic board.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the epic board.\"\"\"\n  webUrl: String!\n}\n\n\"\"\"The connection type for EpicBoard.\"\"\"\ntype EpicBoardConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [EpicBoardEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [EpicBoard]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of EpicBoardCreate\"\"\"\ninput EpicBoardCreateInput {\n  \"\"\"The board name.\"\"\"\n  name: String\n\n  \"\"\"Whether or not backlog list is hidden.\"\"\"\n  hideBacklogList: Boolean\n\n  \"\"\"Whether or not closed list is hidden.\"\"\"\n  hideClosedList: Boolean\n\n  \"\"\"Labels of the issue.\"\"\"\n  labels: [String!]\n\n  \"\"\"IDs of labels to be added to the board.\"\"\"\n  labelIds: [LabelID!]\n\n  \"\"\"Full path of the group with which the resource is associated.\"\"\"\n  groupPath: ID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of EpicBoardCreate\"\"\"\ntype EpicBoardCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The created epic board.\"\"\"\n  epicBoard: EpicBoard\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EpicBoardEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: EpicBoard\n}\n\n\"\"\"Autogenerated input type of EpicBoardListCreate\"\"\"\ninput EpicBoardListCreateInput {\n  \"\"\"Create the backlog list.\"\"\"\n  backlog: Boolean\n\n  \"\"\"Global ID of an existing label.\"\"\"\n  labelId: LabelID\n\n  \"\"\"Global ID of the issue board to mutate.\"\"\"\n  boardId: BoardsEpicBoardID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of EpicBoardListCreate\"\"\"\ntype EpicBoardListCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Epic list in the epic board.\"\"\"\n  list: EpicList\n}\n\n\"\"\"Autogenerated input type of EpicBoardUpdate\"\"\"\ninput EpicBoardUpdateInput {\n  \"\"\"The board name.\"\"\"\n  name: String\n\n  \"\"\"Whether or not backlog list is hidden.\"\"\"\n  hideBacklogList: Boolean\n\n  \"\"\"Whether or not closed list is hidden.\"\"\"\n  hideClosedList: Boolean\n\n  \"\"\"Labels of the issue.\"\"\"\n  labels: [String!]\n\n  \"\"\"IDs of labels to be added to the board.\"\"\"\n  labelIds: [LabelID!]\n\n  \"\"\"The epic board global ID.\"\"\"\n  id: BoardsEpicBoardID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of EpicBoardUpdate\"\"\"\ntype EpicBoardUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The updated epic board.\"\"\"\n  epicBoard: EpicBoard\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"The connection type for Epic.\"\"\"\ntype EpicConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [EpicEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Epic]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Counts of descendent epics\"\"\"\ntype EpicDescendantCount {\n  \"\"\"Number of closed child epics.\"\"\"\n  closedEpics: Int\n\n  \"\"\"Number of closed epic issues.\"\"\"\n  closedIssues: Int\n\n  \"\"\"Number of opened child epics.\"\"\"\n  openedEpics: Int\n\n  \"\"\"Number of opened epic issues.\"\"\"\n  openedIssues: Int\n}\n\n\"\"\"Total weight of open and closed descendant issues\"\"\"\ntype EpicDescendantWeights {\n  \"\"\"\n  Total weight of completed (closed) issues in this epic, including epic descendants.\n  \"\"\"\n  closedIssues: Int\n\n  \"\"\"\n  Total weight of opened issues in this epic, including epic descendants.\n  \"\"\"\n  openedIssues: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EpicEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Epic\n}\n\ninput EpicFilters {\n  \"\"\"Filter by label name.\"\"\"\n  labelName: [String]\n\n  \"\"\"Filter by author username.\"\"\"\n  authorUsername: String\n\n  \"\"\"Filter by reaction emoji applied by the current user.\"\"\"\n  myReactionEmoji: String\n\n  \"\"\"Negated epic arguments.\"\"\"\n  not: NegatedEpicBoardIssueInput\n\n  \"\"\"Search query for epic title or description.\"\"\"\n  search: String\n}\n\n\"\"\"Health status of child issues\"\"\"\ntype EpicHealthStatus {\n  \"\"\"Number of issues at risk.\"\"\"\n  issuesAtRisk: Int\n\n  \"\"\"Number of issues that need attention.\"\"\"\n  issuesNeedingAttention: Int\n\n  \"\"\"Number of issues on track.\"\"\"\n  issuesOnTrack: Int\n}\n\n\"\"\"\nA `EpicID` is a global ID. It is encoded as a string.\n\nAn example `EpicID` is: `\"gid://gitlab/Epic/1\"`.\n\n\"\"\"\nscalar EpicID\n\n\"\"\"Relationship between an epic and an issue\"\"\"\ntype EpicIssue implements Noteable & CurrentUserTodos {\n  \"\"\"Alert associated to this issue.\"\"\"\n  alertManagementAlert: AlertManagementAlert\n\n  \"\"\"Assignees of the issue.\"\"\"\n  assignees(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"User that created the issue.\"\"\"\n  author: UserCore!\n\n  \"\"\"Indicates the issue is blocked.\"\"\"\n  blocked: Boolean!\n\n  \"\"\"Count of issues blocking this issue.\"\"\"\n  blockedByCount: Int\n\n  \"\"\"Issues blocking this issue.\"\"\"\n  blockedByIssues(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IssueConnection\n\n  \"\"\"Timestamp of when the issue was closed.\"\"\"\n  closedAt: Time\n\n  \"\"\"Indicates the issue is confidential.\"\"\"\n  confidential: Boolean!\n\n  \"\"\"User specific email address for the issue.\"\"\"\n  createNoteEmail: String\n\n  \"\"\"Timestamp of when the issue was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"To-do items for the current user.\"\"\"\n  currentUserTodos(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n\n    \"\"\"State of the to-do items.\"\"\"\n    state: TodoStateEnum\n  ): TodoConnection!\n\n  \"\"\"Description of the issue.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"Collection of design images associated with this issue.\"\"\"\n  designCollection: DesignCollection\n\n  \"\"\"Indicates discussion is locked on the issue.\"\"\"\n  discussionLocked: Boolean!\n\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"Number of downvotes the issue has received.\"\"\"\n  downvotes: Int!\n\n  \"\"\"Due date of the issue.\"\"\"\n  dueDate: Time\n\n  \"\"\"\n  Indicates if a project has email notifications disabled: `true` if email notifications are disabled.\n  \"\"\"\n  emailsDisabled: Boolean!\n\n  \"\"\"Epic to which this issue belongs.\"\"\"\n  epic: Epic\n\n  \"\"\"ID of the epic-issue relation.\"\"\"\n  epicIssueId: ID!\n\n  \"\"\"Current health status.\"\"\"\n  healthStatus: HealthStatus\n\n  \"\"\"Human-readable time estimate of the issue.\"\"\"\n  humanTimeEstimate: String\n\n  \"\"\"Human-readable total time reported as spent on the issue.\"\"\"\n  humanTotalTimeSpent: String\n\n  \"\"\"Global ID of the epic-issue relation.\"\"\"\n  id: ID\n\n  \"\"\"Internal ID of the issue.\"\"\"\n  iid: ID!\n\n  \"\"\"Iteration of the issue.\"\"\"\n  iteration: Iteration\n\n  \"\"\"Labels of the issue.\"\"\"\n  labels(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LabelConnection\n\n  \"\"\"Metric images associated to the issue.\"\"\"\n  metricImages: [MetricImage!]\n\n  \"\"\"Milestone of the issue.\"\"\"\n  milestone: Milestone\n\n  \"\"\"Indicates if issue got moved from other project.\"\"\"\n  moved: Boolean\n\n  \"\"\"Updated Issue after it got moved to another project.\"\"\"\n  movedTo: Issue\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"List of participants in the issue.\"\"\"\n  participants(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"\n  Internal reference of the issue. Returned in shortened format by default.\n  \"\"\"\n  reference(\n    \"\"\"\n    Boolean option specifying whether the reference should be returned in full.\n    \"\"\"\n    full: Boolean = false\n  ): String!\n\n  \"\"\"URI path of the epic-issue relation.\"\"\"\n  relationPath: String\n\n  \"\"\"\n  Relative position of the issue (used for positioning in epic tree and issue boards).\n  \"\"\"\n  relativePosition: Int\n\n  \"\"\"Severity level of the incident.\"\"\"\n  severity: IssuableSeverity\n\n  \"\"\"Timestamp of when the issue SLA expires.\"\"\"\n  slaDueAt: Time\n\n  \"\"\"State of the issue.\"\"\"\n  state: IssueState!\n\n  \"\"\"Indicates whether an issue is published to the status page.\"\"\"\n  statusPagePublishedIncident: Boolean\n\n  \"\"\"Indicates the currently logged in user is subscribed to the issue.\"\"\"\n  subscribed: Boolean!\n\n  \"\"\"Task completion status of the issue.\"\"\"\n  taskCompletionStatus: TaskCompletionStatus!\n\n  \"\"\"Time estimate of the issue.\"\"\"\n  timeEstimate: Int!\n\n  \"\"\"Timelogs on the issue.\"\"\"\n  timelogs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TimelogConnection!\n\n  \"\"\"Title of the issue.\"\"\"\n  title: String!\n\n  \"\"\"The GitLab Flavored Markdown rendering of `title`\"\"\"\n  titleHtml: String\n\n  \"\"\"Total time reported as spent on the issue.\"\"\"\n  totalTimeSpent: Int!\n\n  \"\"\"Type of the issue.\"\"\"\n  type: IssueType\n\n  \"\"\"Timestamp of when the issue was last updated.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"User that last updated the issue.\"\"\"\n  updatedBy: UserCore\n\n  \"\"\"Number of upvotes the issue has received.\"\"\"\n  upvotes: Int!\n\n  \"\"\"Number of user discussions in the issue.\"\"\"\n  userDiscussionsCount: Int!\n\n  \"\"\"Number of user notes of the issue.\"\"\"\n  userNotesCount: Int!\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: IssuePermissions!\n\n  \"\"\"Web path of the issue.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the issue.\"\"\"\n  webUrl: String!\n\n  \"\"\"Weight of the issue.\"\"\"\n  weight: Int\n}\n\n\"\"\"The connection type for EpicIssue.\"\"\"\ntype EpicIssueConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [EpicIssueEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [EpicIssue]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Total weight of issues collection.\"\"\"\n  weight: Int!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EpicIssueEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: EpicIssue\n}\n\n\"\"\"Represents an epic board list\"\"\"\ntype EpicList {\n  \"\"\"Indicates if this list is collapsed for this user.\"\"\"\n  collapsed: Boolean\n\n  \"\"\"List epics.\"\"\"\n  epics(\n    \"\"\"Filters applied when selecting epics in the board list.\"\"\"\n    filters: EpicFilters\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EpicConnection\n\n  \"\"\"Count of epics in the list.\"\"\"\n  epicsCount: Int\n\n  \"\"\"Global ID of the board list.\"\"\"\n  id: BoardsEpicListID!\n\n  \"\"\"Label of the list.\"\"\"\n  label: Label\n\n  \"\"\"Type of the list.\"\"\"\n  listType: String!\n\n  \"\"\"Position of the list within the board.\"\"\"\n  position: Int\n\n  \"\"\"Title of the list.\"\"\"\n  title: String!\n}\n\n\"\"\"The connection type for EpicList.\"\"\"\ntype EpicListConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [EpicListEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [EpicList]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EpicListEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: EpicList\n}\n\n\"\"\"Autogenerated input type of EpicMoveList\"\"\"\ninput EpicMoveListInput {\n  \"\"\"Global ID of the board that the epic is in.\"\"\"\n  boardId: BoardsEpicBoardID!\n\n  \"\"\"ID of the epic to mutate.\"\"\"\n  epicId: EpicID!\n\n  \"\"\"ID of the board list that the epic will be moved from.\"\"\"\n  fromListId: BoardsEpicListID!\n\n  \"\"\"ID of the board list that the epic will be moved to.\"\"\"\n  toListId: BoardsEpicListID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of EpicMoveList\"\"\"\ntype EpicMoveListPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Check permissions for the current user on an epic\"\"\"\ntype EpicPermissions {\n  \"\"\"Indicates the user can perform `admin_epic` on this resource\"\"\"\n  adminEpic: Boolean!\n\n  \"\"\"Indicates the user can perform `award_emoji` on this resource\"\"\"\n  awardEmoji: Boolean!\n\n  \"\"\"Indicates the user can perform `create_epic` on this resource\"\"\"\n  createEpic: Boolean!\n\n  \"\"\"Indicates the user can perform `create_note` on this resource\"\"\"\n  createNote: Boolean!\n\n  \"\"\"Indicates the user can perform `destroy_epic` on this resource\"\"\"\n  destroyEpic: Boolean!\n\n  \"\"\"Indicates the user can perform `read_epic` on this resource\"\"\"\n  readEpic: Boolean!\n\n  \"\"\"Indicates the user can perform `read_epic_iid` on this resource\"\"\"\n  readEpicIid: Boolean!\n\n  \"\"\"Indicates the user can perform `update_epic` on this resource\"\"\"\n  updateEpic: Boolean!\n}\n\n\"\"\"Autogenerated input type of EpicSetSubscription\"\"\"\ninput EpicSetSubscriptionInput {\n  \"\"\"The IID of the epic to mutate.\"\"\"\n  iid: ID!\n\n  \"\"\"The group the epic to mutate belongs to.\"\"\"\n  groupPath: ID!\n\n  \"\"\"The desired state of the subscription.\"\"\"\n  subscribedState: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of EpicSetSubscription\"\"\"\ntype EpicSetSubscriptionPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The epic after mutation.\"\"\"\n  epic: Epic\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Roadmap sort values\"\"\"\nenum EpicSort {\n  \"\"\"Start date at descending order.\"\"\"\n  start_date_desc @deprecated(reason: \"Use START_DATE_DESC. Deprecated in 13.11.\")\n\n  \"\"\"Start date at ascending order.\"\"\"\n  start_date_asc @deprecated(reason: \"Use START_DATE_ASC. Deprecated in 13.11.\")\n\n  \"\"\"End date at descending order.\"\"\"\n  end_date_desc @deprecated(reason: \"Use END_DATE_DESC. Deprecated in 13.11.\")\n\n  \"\"\"End date at ascending order.\"\"\"\n  end_date_asc @deprecated(reason: \"Use END_DATE_ASC. Deprecated in 13.11.\")\n\n  \"\"\"Sort by start date in descending order.\"\"\"\n  START_DATE_DESC\n\n  \"\"\"Sort by start date in ascending order.\"\"\"\n  START_DATE_ASC\n\n  \"\"\"Sort by end date in descending order.\"\"\"\n  END_DATE_DESC\n\n  \"\"\"Sort by end date in ascending order.\"\"\"\n  END_DATE_ASC\n}\n\n\"\"\"State of an epic\"\"\"\nenum EpicState {\n  all\n  opened\n  closed\n}\n\n\"\"\"State event of an epic\"\"\"\nenum EpicStateEvent {\n  \"\"\"Reopen the epic.\"\"\"\n  REOPEN\n\n  \"\"\"Close the epic.\"\"\"\n  CLOSE\n}\n\n\"\"\"A node of an epic tree.\"\"\"\ninput EpicTreeNodeFieldsInputType {\n  \"\"\"The ID of the epic_issue or epic that is being moved.\"\"\"\n  id: EpicTreeSortingID!\n\n  \"\"\"\n  The ID of the epic_issue or issue that the actual epic or issue is switched with.\n  \"\"\"\n  adjacentReferenceId: EpicTreeSortingID\n\n  \"\"\"The type of the switch, after or before allowed.\"\"\"\n  relativePosition: MoveType\n\n  \"\"\"ID of the new parent epic.\"\"\"\n  newParentId: EpicID\n}\n\n\"\"\"Autogenerated input type of EpicTreeReorder\"\"\"\ninput EpicTreeReorderInput {\n  \"\"\"The ID of the base epic of the tree.\"\"\"\n  baseEpicId: EpicID!\n\n  \"\"\"Parameters for updating the tree positions.\"\"\"\n  moved: EpicTreeNodeFieldsInputType!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of EpicTreeReorder\"\"\"\ntype EpicTreeReorderPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"\nA `EpicTreeSortingID` is a global ID. It is encoded as a string.\n\nAn example `EpicTreeSortingID` is: `\"gid://gitlab/EpicTreeSorting/1\"`.\n\n\"\"\"\nscalar EpicTreeSortingID\n\n\"\"\"Epic ID wildcard values\"\"\"\nenum EpicWildcardId {\n  \"\"\"No epic is assigned.\"\"\"\n  NONE\n\n  \"\"\"Any epic is assigned.\"\"\"\n  ANY\n}\n\n\"\"\"Representing an event\"\"\"\ntype Event {\n  \"\"\"Action of the event.\"\"\"\n  action: EventAction!\n\n  \"\"\"Author of this event.\"\"\"\n  author: UserCore!\n\n  \"\"\"When this event was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"ID of the event.\"\"\"\n  id: ID!\n\n  \"\"\"When this event was updated.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"Event action\"\"\"\nenum EventAction {\n  \"\"\"Created action\"\"\"\n  CREATED\n\n  \"\"\"Updated action\"\"\"\n  UPDATED\n\n  \"\"\"Closed action\"\"\"\n  CLOSED\n\n  \"\"\"Reopened action\"\"\"\n  REOPENED\n\n  \"\"\"Pushed action\"\"\"\n  PUSHED\n\n  \"\"\"Commented action\"\"\"\n  COMMENTED\n\n  \"\"\"Merged action\"\"\"\n  MERGED\n\n  \"\"\"Joined action\"\"\"\n  JOINED\n\n  \"\"\"Left action\"\"\"\n  LEFT\n\n  \"\"\"Destroyed action\"\"\"\n  DESTROYED\n\n  \"\"\"Expired action\"\"\"\n  EXPIRED\n\n  \"\"\"Approved action\"\"\"\n  APPROVED\n\n  \"\"\"Archived action\"\"\"\n  ARCHIVED\n}\n\n\"\"\"The connection type for Event.\"\"\"\ntype EventConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [EventEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Event]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EventEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Event\n}\n\ninterface Eventable {\n  \"\"\"A list of events associated with the object.\"\"\"\n  events(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EventConnection\n}\n\n\"\"\"Autogenerated input type of ExportRequirements\"\"\"\ninput ExportRequirementsInput {\n  \"\"\"List requirements by sort order.\"\"\"\n  sort: Sort\n\n  \"\"\"Filter requirements by state.\"\"\"\n  state: RequirementState\n\n  \"\"\"Search query for requirement title.\"\"\"\n  search: String\n\n  \"\"\"Filter requirements by author username.\"\"\"\n  authorUsername: [String!]\n\n  \"\"\"Full project path the requirements are associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"List of selected requirements fields to be exported.\"\"\"\n  selectedFields: [String!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ExportRequirements\"\"\"\ntype ExportRequirementsPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Represents an external issue\"\"\"\ntype ExternalIssue {\n  \"\"\"Timestamp of when the issue was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"Type of external tracker.\"\"\"\n  externalTracker: String\n\n  \"\"\"Relative reference of the issue in the external tracker.\"\"\"\n  relativeReference: String\n\n  \"\"\"Status of the issue in the external tracker.\"\"\"\n  status: String\n\n  \"\"\"Title of the issue in the external tracker.\"\"\"\n  title: String\n\n  \"\"\"Timestamp of when the issue was updated.\"\"\"\n  updatedAt: Time\n\n  \"\"\"URL to the issue in the external tracker.\"\"\"\n  webUrl: String\n}\n\ntype GeoNode {\n  \"\"\"\n  The maximum concurrency of container repository sync for this secondary node.\n  \"\"\"\n  containerRepositoriesMaxCapacity: Int\n\n  \"\"\"Indicates whether this Geo node is enabled.\"\"\"\n  enabled: Boolean\n\n  \"\"\"\n  The maximum concurrency of LFS/attachment backfill for this secondary node.\n  \"\"\"\n  filesMaxCapacity: Int\n\n  \"\"\"Find group wiki repository registries on this Geo node.\"\"\"\n  groupWikiRepositoryRegistries(\n    \"\"\"Filters registries by their ID.\"\"\"\n    ids: [ID!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): GroupWikiRepositoryRegistryConnection\n\n  \"\"\"ID of this GeoNode.\"\"\"\n  id: ID!\n\n  \"\"\"\n  The URL defined on the primary node that secondary nodes should use to contact it.\n  \"\"\"\n  internalUrl: String\n\n  \"\"\"Find merge request diff registries on this Geo node.\"\"\"\n  mergeRequestDiffRegistries(\n    \"\"\"Filters registries by their ID.\"\"\"\n    ids: [ID!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestDiffRegistryConnection\n\n  \"\"\"\n  The interval (in days) in which the repository verification is valid. Once expired, it will be reverified.\n  \"\"\"\n  minimumReverificationInterval: Int\n\n  \"\"\"The unique identifier for this Geo node.\"\"\"\n  name: String\n\n  \"\"\"Package file registries of the GeoNode.\"\"\"\n  packageFileRegistries(\n    \"\"\"Filters registries by their ID.\"\"\"\n    ids: [ID!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PackageFileRegistryConnection\n\n  \"\"\"Find pipeline artifact registries on this Geo node.\"\"\"\n  pipelineArtifactRegistries(\n    \"\"\"Filters registries by their ID.\"\"\"\n    ids: [ID!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PipelineArtifactRegistryConnection\n\n  \"\"\"Indicates whether this Geo node is the primary.\"\"\"\n  primary: Boolean\n\n  \"\"\"\n  The maximum concurrency of repository backfill for this secondary node.\n  \"\"\"\n  reposMaxCapacity: Int\n\n  \"\"\"\n  The namespaces that should be synced, if `selective_sync_type` == `namespaces`.\n  \"\"\"\n  selectiveSyncNamespaces(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NamespaceConnection\n\n  \"\"\"\n  The repository storages whose projects should be synced, if `selective_sync_type` == `shards`.\n  \"\"\"\n  selectiveSyncShards: [String!]\n\n  \"\"\"Indicates if syncing is limited to only specific groups, or shards.\"\"\"\n  selectiveSyncType: String\n\n  \"\"\"Find snippet repository registries on this Geo node.\"\"\"\n  snippetRepositoryRegistries(\n    \"\"\"Filters registries by their ID.\"\"\"\n    ids: [ID!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SnippetRepositoryRegistryConnection\n\n  \"\"\"\n  Indicates if this secondary node will replicate blobs in Object Storage.\n  \"\"\"\n  syncObjectStorage: Boolean\n\n  \"\"\"Find terraform state version registries on this Geo node.\"\"\"\n  terraformStateVersionRegistries(\n    \"\"\"Filters registries by their ID.\"\"\"\n    ids: [ID!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TerraformStateVersionRegistryConnection\n\n  \"\"\"The user-facing URL for this Geo node.\"\"\"\n  url: String\n\n  \"\"\"\n  The maximum concurrency of repository verification for this secondary node.\n  \"\"\"\n  verificationMaxCapacity: Int\n}\n\n\"\"\"\nA `GitlabErrorTrackingDetailedErrorID` is a global ID. It is encoded as a string.\n\nAn example `GitlabErrorTrackingDetailedErrorID` is: `\"gid://gitlab/Gitlab::ErrorTracking::DetailedError/1\"`.\n\n\"\"\"\nscalar GitlabErrorTrackingDetailedErrorID\n\n\"\"\"Autogenerated input type of GitlabSubscriptionActivate\"\"\"\ninput GitlabSubscriptionActivateInput {\n  \"\"\"Activation code received after purchasing a GitLab subscription.\"\"\"\n  activationCode: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of GitlabSubscriptionActivate\"\"\"\ntype GitlabSubscriptionActivatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The current license.\"\"\"\n  license: CurrentLicense\n}\n\n\"\"\"\nA global identifier.\n\nA global identifier represents an object uniquely across the application.\nAn example of such an identifier is `\"gid://gitlab/User/1\"`.\n\nGlobal identifiers are encoded as strings.\n\n\"\"\"\nscalar GlobalID\n\ntype GrafanaIntegration {\n  \"\"\"Timestamp of the issue's creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Indicates whether Grafana integration is enabled.\"\"\"\n  enabled: Boolean!\n\n  \"\"\"URL for the Grafana host for the Grafana integration.\"\"\"\n  grafanaUrl: String!\n\n  \"\"\"Internal ID of the Grafana integration.\"\"\"\n  id: ID!\n\n  \"\"\"Timestamp of the issue's last activity.\"\"\"\n  updatedAt: Time!\n}\n\ntype Group {\n  \"\"\"Size limit for repositories in the namespace in bytes.\"\"\"\n  actualRepositorySizeLimit: Float\n\n  \"\"\"Additional storage purchased for the root namespace in bytes.\"\"\"\n  additionalPurchasedStorageSize: Float\n\n  \"\"\"\n  Indicates whether Auto DevOps is enabled for all projects within this group.\n  \"\"\"\n  autoDevopsEnabled: Boolean\n\n  \"\"\"Avatar URL of the group.\"\"\"\n  avatarUrl: String\n\n  \"\"\"The number of billable users in the group.\"\"\"\n  billableMembersCount: Int\n\n  \"\"\"A single board of the group.\"\"\"\n  board(\n    \"\"\"The board's ID.\"\"\"\n    id: BoardID!\n  ): Board\n\n  \"\"\"Boards of the group.\"\"\"\n  boards(\n    \"\"\"Find a board by its ID.\"\"\"\n    id: BoardID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): BoardConnection\n\n  \"\"\"Represents the code coverage activity for this group.\"\"\"\n  codeCoverageActivities(\n    \"\"\"\n    First day for which to fetch code coverage activity (maximum time window is set to 90 days).\n    \"\"\"\n    startDate: Date!\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CodeCoverageActivityConnection\n\n  \"\"\"\n  Compliance frameworks available to projects in this namespace. Available only when feature flag `ff_custom_compliance_frameworks` is enabled.\n  \"\"\"\n  complianceFrameworks(\n    \"\"\"Global ID of a specific compliance framework to return.\"\"\"\n    id: ComplianceManagementFrameworkID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ComplianceFrameworkConnection\n\n  \"\"\"Container repositories of the group.\"\"\"\n  containerRepositories(\n    \"\"\"Filter the container repositories by their name.\"\"\"\n    name: String\n\n    \"\"\"Sort container repositories by this criteria.\"\"\"\n    sort: ContainerRepositorySort = null\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ContainerRepositoryConnection\n\n  \"\"\"Number of container repositories in the group.\"\"\"\n  containerRepositoriesCount: Int!\n\n  \"\"\"\n  Includes at least one project where the repository size exceeds the limit.\n  \"\"\"\n  containsLockedProjects: Boolean!\n\n  \"\"\"Description of the namespace.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"Indicates if a group has email notifications disabled.\"\"\"\n  emailsDisabled: Boolean\n\n  \"\"\"Find a single epic.\"\"\"\n  epic(\n    \"\"\"List items overlapping the given timeframe.\"\"\"\n    timeframe: Timeframe\n\n    \"\"\"IID of the epic, e.g., \"1\".\"\"\"\n    iid: ID\n\n    \"\"\"List of IIDs of epics, e.g., [1, 2].\"\"\"\n    iids: [ID!]\n\n    \"\"\"Filter epics by state.\"\"\"\n    state: EpicState\n\n    \"\"\"Search query for epic title or description.\"\"\"\n    search: String\n\n    \"\"\"List epics by sort order.\"\"\"\n    sort: EpicSort\n\n    \"\"\"Filter epics by author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Filter epics by labels.\"\"\"\n    labelName: [String!]\n\n    \"\"\"Filter epics by milestone title, computed from epic's issues.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Filter epics by IID for autocomplete.\"\"\"\n    iidStartsWith: String\n\n    \"\"\"Include epics from descendant groups.\"\"\"\n    includeDescendantGroups: Boolean = true\n\n    \"\"\"Filter epics by given confidentiality.\"\"\"\n    confidential: Boolean\n\n    \"\"\"Filter by reaction emoji applied by the current user.\"\"\"\n    myReactionEmoji: String\n  ): Epic\n\n  \"\"\"Find a single epic board.\"\"\"\n  epicBoard(\n    \"\"\"Find an epic board by ID.\"\"\"\n    id: BoardsEpicBoardID!\n  ): EpicBoard\n\n  \"\"\"Find epic boards.\"\"\"\n  epicBoards(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EpicBoardConnection\n\n  \"\"\"Find epics.\"\"\"\n  epics(\n    \"\"\"List items overlapping the given timeframe.\"\"\"\n    timeframe: Timeframe\n\n    \"\"\"IID of the epic, e.g., \"1\".\"\"\"\n    iid: ID\n\n    \"\"\"List of IIDs of epics, e.g., [1, 2].\"\"\"\n    iids: [ID!]\n\n    \"\"\"Filter epics by state.\"\"\"\n    state: EpicState\n\n    \"\"\"Search query for epic title or description.\"\"\"\n    search: String\n\n    \"\"\"List epics by sort order.\"\"\"\n    sort: EpicSort\n\n    \"\"\"Filter epics by author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Filter epics by labels.\"\"\"\n    labelName: [String!]\n\n    \"\"\"Filter epics by milestone title, computed from epic's issues.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Filter epics by IID for autocomplete.\"\"\"\n    iidStartsWith: String\n\n    \"\"\"Include epics from descendant groups.\"\"\"\n    includeDescendantGroups: Boolean = true\n\n    \"\"\"Filter epics by given confidentiality.\"\"\"\n    confidential: Boolean\n\n    \"\"\"Filter by reaction emoji applied by the current user.\"\"\"\n    myReactionEmoji: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EpicConnection\n\n  \"\"\"Indicates if Epics are enabled for namespace\"\"\"\n  epicsEnabled: Boolean\n\n  \"\"\"Full name of the namespace.\"\"\"\n  fullName: String!\n\n  \"\"\"Full path of the namespace.\"\"\"\n  fullPath: ID!\n\n  \"\"\"A membership of a user within this group.\"\"\"\n  groupMembers(\n    \"\"\"Search query.\"\"\"\n    search: String\n\n    \"\"\"Filter members by the given member relations.\"\"\"\n    relations: [GroupMemberRelation!] = []\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): GroupMemberConnection\n\n  \"\"\"ID of the namespace.\"\"\"\n  id: ID!\n\n  \"\"\"Status of the temporary storage increase.\"\"\"\n  isTemporaryStorageIncreaseEnabled: Boolean!\n\n  \"\"\"Issues for projects in this group.\"\"\"\n  issues(\n    \"\"\"IID of the issue. For example, \"1\".\"\"\"\n    iid: String\n\n    \"\"\"List of IIDs of issues. For example, [\"1\", \"2\"].\"\"\"\n    iids: [String!]\n\n    \"\"\"Labels applied to this issue.\"\"\"\n    labelName: [String]\n\n    \"\"\"Milestone applied to this issue.\"\"\"\n    milestoneTitle: [String]\n\n    \"\"\"Username of the author of the issue.\"\"\"\n    authorUsername: String\n\n    \"\"\"Usernames of users assigned to the issue.\"\"\"\n    assigneeUsernames: [String!]\n\n    \"\"\"\n    ID of a user assigned to the issues, \"none\" and \"any\" values are supported.\n    \"\"\"\n    assigneeId: String\n\n    \"\"\"Issues created before this date.\"\"\"\n    createdBefore: Time\n\n    \"\"\"Issues created after this date.\"\"\"\n    createdAfter: Time\n\n    \"\"\"Issues updated before this date.\"\"\"\n    updatedBefore: Time\n\n    \"\"\"Issues updated after this date.\"\"\"\n    updatedAfter: Time\n\n    \"\"\"Issues closed before this date.\"\"\"\n    closedBefore: Time\n\n    \"\"\"Issues closed after this date.\"\"\"\n    closedAfter: Time\n\n    \"\"\"Search query for issue title or description.\"\"\"\n    search: String\n\n    \"\"\"Filter issues by the given issue types.\"\"\"\n    types: [IssueType!]\n\n    \"\"\"Negated arguments.\"\"\"\n    not: NegatedIssueFilterInput\n\n    \"\"\"Current state of this issue.\"\"\"\n    state: IssuableState\n\n    \"\"\"Sort issues by this criteria.\"\"\"\n    sort: IssueSort = null\n\n    \"\"\"List of iteration Global IDs applied to the issue.\"\"\"\n    iterationId: [ID]\n\n    \"\"\"Filter by iteration ID wildcard.\"\"\"\n    iterationWildcardId: IterationWildcardId\n\n    \"\"\"\n    ID of an epic associated with the issues, \"none\" and \"any\" values are supported.\n    \"\"\"\n    epicId: String\n\n    \"\"\"Weight applied to the issue, \"none\" and \"any\" values are supported.\"\"\"\n    weight: String\n\n    \"\"\"Include issues belonging to subgroups\"\"\"\n    includeSubgroups: Boolean = false\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IssueConnection\n\n  \"\"\"Find iteration cadences.\"\"\"\n  iterationCadences(\n    \"\"\"Global ID of the iteration cadence to look up.\"\"\"\n    id: IterationsCadenceID\n\n    \"\"\"Fuzzy search by title.\"\"\"\n    title: String\n\n    \"\"\"Duration in weeks of the iterations within this cadence.\"\"\"\n    durationInWeeks: Int\n\n    \"\"\"\n    Whether the iteration cadence should automatically generate future iterations.\n    \"\"\"\n    automatic: Boolean\n\n    \"\"\"Whether the iteration cadence is active.\"\"\"\n    active: Boolean\n\n    \"\"\"Whether to include ancestor groups to search iterations cadences in.\"\"\"\n    includeAncestorGroups: Boolean\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IterationCadenceConnection\n\n  \"\"\"Find iterations.\"\"\"\n  iterations(\n    \"\"\"List items overlapping the given timeframe.\"\"\"\n    timeframe: Timeframe\n\n    \"\"\"Filter iterations by state.\"\"\"\n    state: IterationState\n\n    \"\"\"Fuzzy search by title.\"\"\"\n    title: String\n\n    \"\"\"Global ID of the Iteration to look up.\"\"\"\n    id: ID\n\n    \"\"\"Internal ID of the Iteration to look up.\"\"\"\n    iid: ID\n\n    \"\"\"Whether to include ancestor iterations. Defaults to true.\"\"\"\n    includeAncestors: Boolean\n\n    \"\"\"Global iteration cadence IDs by which to look up the iterations.\"\"\"\n    iterationCadenceIds: [IterationsCadenceID!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IterationConnection\n\n  \"\"\"A label available on this group.\"\"\"\n  label(\n    \"\"\"Title of the label.\"\"\"\n    title: String!\n  ): Label\n\n  \"\"\"Labels available on this group.\"\"\"\n  labels(\n    \"\"\"A search term to find labels with.\"\"\"\n    searchTerm: String\n\n    \"\"\"Include labels from ancestor groups.\"\"\"\n    includeAncestorGroups: Boolean = false\n\n    \"\"\"Include labels from descendant groups.\"\"\"\n    includeDescendantGroups: Boolean = false\n\n    \"\"\"Include only group level labels.\"\"\"\n    onlyGroupLabels: Boolean = false\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LabelConnection\n\n  \"\"\"Indicates if Large File Storage (LFS) is enabled for namespace.\"\"\"\n  lfsEnabled: Boolean\n\n  \"\"\"Indicates if a group is disabled from getting mentioned.\"\"\"\n  mentionsDisabled: Boolean\n\n  \"\"\"Merge requests for projects in this group.\"\"\"\n  mergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"Include merge requests belonging to subgroups\"\"\"\n    includeSubgroups: Boolean = false\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Milestones of the group.\"\"\"\n  milestones(\n    \"\"\"List items overlapping the given timeframe.\"\"\"\n    timeframe: Timeframe\n\n    \"\"\"Array of global milestone IDs, e.g., `\"gid://gitlab/Milestone/1\"`.\"\"\"\n    ids: [ID!]\n\n    \"\"\"Filter milestones by state.\"\"\"\n    state: MilestoneStateEnum\n\n    \"\"\"The title of the milestone.\"\"\"\n    title: String\n\n    \"\"\"A search string for the title.\"\"\"\n    searchTitle: String\n\n    \"\"\"A date that the milestone contains.\"\"\"\n    containingDate: Time\n\n    \"\"\"Include milestones from all subgroups and subprojects.\"\"\"\n    includeDescendants: Boolean\n\n    \"\"\"Include milestones from all parent groups.\"\"\"\n    includeAncestors: Boolean\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MilestoneConnection\n\n  \"\"\"Name of the namespace.\"\"\"\n  name: String!\n\n  \"\"\"The package settings for the namespace.\"\"\"\n  packageSettings: PackageSettings\n\n  \"\"\"Packages of the group.\"\"\"\n  packages(\n    \"\"\"Sort packages by this criteria.\"\"\"\n    sort: PackageGroupSort = null\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PackageConnection\n\n  \"\"\"Parent group.\"\"\"\n  parent: Group\n\n  \"\"\"Path of the namespace.\"\"\"\n  path: String!\n\n  \"\"\"The permission level required to create projects in the group.\"\"\"\n  projectCreationLevel: String\n\n  \"\"\"Projects within this namespace.\"\"\"\n  projects(\n    \"\"\"Include also subgroup projects.\"\"\"\n    includeSubgroups: Boolean = false\n\n    \"\"\"Search project with most similar names or paths.\"\"\"\n    search: String = null\n\n    \"\"\"Sort projects by this criteria.\"\"\"\n    sort: NamespaceProjectSort = null\n\n    \"\"\"Filter projects by IDs.\"\"\"\n    ids: [ID!] = null\n\n    \"\"\"Returns only the projects which have code coverage.\"\"\"\n    hasCodeCoverage: Boolean = false\n\n    \"\"\"Returns only the projects which have vulnerabilities.\"\"\"\n    hasVulnerabilities: Boolean = false\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectConnection!\n\n  \"\"\"\n  Number of projects in the root namespace where the repository size exceeds the limit.\n  \"\"\"\n  repositorySizeExcessProjectCount: Int!\n\n  \"\"\"Indicates if users can request access to namespace.\"\"\"\n  requestAccessEnabled: Boolean\n\n  \"\"\"\n  Indicates if all users in this group are required to set up two-factor authentication.\n  \"\"\"\n  requireTwoFactorAuthentication: Boolean\n\n  \"\"\"\n  Aggregated storage statistics of the namespace. Only available for root namespaces.\n  \"\"\"\n  rootStorageStatistics: RootStorageStatistics\n\n  \"\"\"\n  Indicates if sharing a project with another group within this group is prevented.\n  \"\"\"\n  shareWithGroupLock: Boolean\n\n  \"\"\"Group statistics.\"\"\"\n  stats: GroupStats\n\n  \"\"\"Total storage limit of the root namespace in bytes.\"\"\"\n  storageSizeLimit: Float\n\n  \"\"\"The permission level required to create subgroups within the group.\"\"\"\n  subgroupCreationLevel: String\n\n  \"\"\"Date until the temporary storage increase is active.\"\"\"\n  temporaryStorageIncreaseEndsOn: Time\n\n  \"\"\"Time logged on issues in the group and its subgroups.\"\"\"\n  timelogs(\n    \"\"\"\n    List time logs within a date range where the logged date is equal to or after startDate.\n    \"\"\"\n    startDate: Time\n\n    \"\"\"\n    List time logs within a date range where the logged date is equal to or before endDate.\n    \"\"\"\n    endDate: Time\n\n    \"\"\"\n    List time-logs within a time range where the logged time is equal to or after startTime.\n    \"\"\"\n    startTime: Time\n\n    \"\"\"\n    List time-logs within a time range where the logged time is equal to or before endTime.\n    \"\"\"\n    endTime: Time\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TimelogConnection!\n\n  \"\"\"Total repository size of all projects in the root namespace in bytes.\"\"\"\n  totalRepositorySize: Float\n\n  \"\"\"\n  Total excess repository size of all projects in the root namespace in bytes.\n  \"\"\"\n  totalRepositorySizeExcess: Float\n\n  \"\"\"Time before two-factor authentication is enforced.\"\"\"\n  twoFactorGracePeriod: Int\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: GroupPermissions!\n\n  \"\"\"Visibility of the namespace.\"\"\"\n  visibility: String\n\n  \"\"\"\n  Vulnerabilities reported on the projects in the group and its subgroups.\n  \"\"\"\n  vulnerabilities(\n    \"\"\"Filter vulnerabilities by project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"Filter vulnerabilities by report type.\"\"\"\n    reportType: [VulnerabilityReportType!]\n\n    \"\"\"Filter vulnerabilities by severity.\"\"\"\n    severity: [VulnerabilitySeverity!]\n\n    \"\"\"Filter vulnerabilities by state.\"\"\"\n    state: [VulnerabilityState!]\n\n    \"\"\"Filter vulnerabilities by VulnerabilityScanner.externalId.\"\"\"\n    scanner: [String!]\n\n    \"\"\"Filter vulnerabilities by scanner ID.\"\"\"\n    scannerId: [VulnerabilitiesScannerID!]\n\n    \"\"\"List vulnerabilities by sort order.\"\"\"\n    sort: VulnerabilitySort = null\n\n    \"\"\"\n    Returns only the vulnerabilities which have been resolved on default branch.\n    \"\"\"\n    hasResolution: Boolean\n\n    \"\"\"Returns only the vulnerabilities which have linked issues.\"\"\"\n    hasIssues: Boolean\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilityConnection\n\n  \"\"\"\n  Number of vulnerabilities per day for the projects in the group and its subgroups.\n  \"\"\"\n  vulnerabilitiesCountByDay(\n    \"\"\"First day for which to fetch vulnerability history.\"\"\"\n    startDate: ISO8601Date!\n\n    \"\"\"Last day for which to fetch vulnerability history.\"\"\"\n    endDate: ISO8601Date!\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilitiesCountByDayConnection\n\n  \"\"\"\n  Number of vulnerabilities per severity level, per day, for the projects in the group and its subgroups. Deprecated in 13.3: Use `vulnerabilitiesCountByDay`.\n  \"\"\"\n  vulnerabilitiesCountByDayAndSeverity(\n    \"\"\"First day for which to fetch vulnerability history.\"\"\"\n    startDate: ISO8601Date!\n\n    \"\"\"Last day for which to fetch vulnerability history.\"\"\"\n    endDate: ISO8601Date!\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilitiesCountByDayAndSeverityConnection @deprecated(reason: \"Use `vulnerabilitiesCountByDay`. Deprecated in 13.3.\")\n\n  \"\"\"Represents vulnerable project counts for each grade.\"\"\"\n  vulnerabilityGrades(\n    \"\"\"Include grades belonging to subgroups.\"\"\"\n    includeSubgroups: Boolean = false\n  ): [VulnerableProjectsByGrade!]!\n\n  \"\"\"\n  Vulnerability scanners reported on the project vulnerabilities of the group and its subgroups.\n  \"\"\"\n  vulnerabilityScanners(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilityScannerConnection\n\n  \"\"\"Counts for each vulnerability severity in the group and its subgroups.\"\"\"\n  vulnerabilitySeveritiesCount(\n    \"\"\"Filter vulnerabilities by project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"Filter vulnerabilities by report type.\"\"\"\n    reportType: [VulnerabilityReportType!]\n\n    \"\"\"Filter vulnerabilities by severity.\"\"\"\n    severity: [VulnerabilitySeverity!]\n\n    \"\"\"Filter vulnerabilities by state.\"\"\"\n    state: [VulnerabilityState!]\n\n    \"\"\"Filter vulnerabilities by scanner.\"\"\"\n    scanner: [String!]\n  ): VulnerabilitySeveritiesCount\n\n  \"\"\"Web URL of the group.\"\"\"\n  webUrl: String!\n}\n\n\"\"\"\nA `GroupID` is a global ID. It is encoded as a string.\n\nAn example `GroupID` is: `\"gid://gitlab/Group/1\"`.\n\n\"\"\"\nscalar GroupID\n\n\"\"\"Represents a Group Membership\"\"\"\ntype GroupMember implements MemberInterface {\n  \"\"\"GitLab::Access level.\"\"\"\n  accessLevel: AccessLevel\n\n  \"\"\"Date and time the membership was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"User that authorized membership.\"\"\"\n  createdBy: UserCore\n\n  \"\"\"Date and time the membership expires.\"\"\"\n  expiresAt: Time\n\n  \"\"\"Group that a User is a member of.\"\"\"\n  group: Group\n\n  \"\"\"ID of the member.\"\"\"\n  id: ID!\n\n  \"\"\"Date and time the membership was last updated.\"\"\"\n  updatedAt: Time\n\n  \"\"\"User that is associated with the member object.\"\"\"\n  user: UserCore!\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: GroupPermissions!\n}\n\n\"\"\"The connection type for GroupMember.\"\"\"\ntype GroupMemberConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [GroupMemberEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [GroupMember]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype GroupMemberEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: GroupMember\n}\n\n\"\"\"Group member relation\"\"\"\nenum GroupMemberRelation {\n  \"\"\"Direct members\"\"\"\n  DIRECT\n\n  \"\"\"Inherited members\"\"\"\n  INHERITED\n\n  \"\"\"Descendants members\"\"\"\n  DESCENDANTS\n}\n\ntype GroupPermissions {\n  \"\"\"Indicates the user can perform `read_group` on this resource\"\"\"\n  readGroup: Boolean!\n}\n\n\"\"\"Contains release-related statistics about a group\"\"\"\ntype GroupReleaseStats {\n  \"\"\"\n  Total number of releases in all descendant projects of the group. Will always return `null` if `group_level_release_statistics` feature flag is disabled\n  \"\"\"\n  releasesCount: Int\n\n  \"\"\"\n  Percentage of the group's descendant projects that have at least one release. Will always return `null` if `group_level_release_statistics` feature flag is disabled\n  \"\"\"\n  releasesPercentage: Int\n}\n\n\"\"\"Contains statistics about a group\"\"\"\ntype GroupStats {\n  \"\"\"Statistics related to releases within the group.\"\"\"\n  releaseStats: GroupReleaseStats\n}\n\n\"\"\"\nRepresents the Geo sync and verification state of a group wiki repository\n\"\"\"\ntype GroupWikiRepositoryRegistry {\n  \"\"\"Timestamp when the GroupWikiRepositoryRegistry was created\"\"\"\n  createdAt: Time\n\n  \"\"\"ID of the Group Wiki Repository.\"\"\"\n  groupWikiRepositoryId: ID!\n\n  \"\"\"ID of the GroupWikiRepositoryRegistry\"\"\"\n  id: ID!\n\n  \"\"\"Error message during sync of the GroupWikiRepositoryRegistry\"\"\"\n  lastSyncFailure: String\n\n  \"\"\"\n  Timestamp of the most recent successful sync of the GroupWikiRepositoryRegistry\n  \"\"\"\n  lastSyncedAt: Time\n\n  \"\"\"\n  Timestamp after which the GroupWikiRepositoryRegistry should be resynced\n  \"\"\"\n  retryAt: Time\n\n  \"\"\"\n  Number of consecutive failed sync attempts of the GroupWikiRepositoryRegistry\n  \"\"\"\n  retryCount: Int\n\n  \"\"\"Sync state of the GroupWikiRepositoryRegistry\"\"\"\n  state: RegistryState\n}\n\n\"\"\"The connection type for GroupWikiRepositoryRegistry.\"\"\"\ntype GroupWikiRepositoryRegistryConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [GroupWikiRepositoryRegistryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [GroupWikiRepositoryRegistry]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype GroupWikiRepositoryRegistryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: GroupWikiRepositoryRegistry\n}\n\n\"\"\"Health status of an issue or epic\"\"\"\nenum HealthStatus {\n  onTrack\n  needsAttention\n  atRisk\n}\n\n\"\"\"Autogenerated input type of HttpIntegrationCreate\"\"\"\ninput HttpIntegrationCreateInput {\n  \"\"\"The project to create the integration in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The name of the integration.\"\"\"\n  name: String!\n\n  \"\"\"Whether the integration is receiving alerts.\"\"\"\n  active: Boolean!\n\n  \"\"\"The example of an alert payload.\"\"\"\n  payloadExample: JsonString\n\n  \"\"\"\n  The custom mapping of GitLab alert attributes to fields from the payload_example.\n  \"\"\"\n  payloadAttributeMappings: [AlertManagementPayloadAlertFieldInput!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of HttpIntegrationCreate\"\"\"\ntype HttpIntegrationCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The HTTP integration.\"\"\"\n  integration: AlertManagementHttpIntegration\n}\n\n\"\"\"Autogenerated input type of HttpIntegrationDestroy\"\"\"\ninput HttpIntegrationDestroyInput {\n  \"\"\"The ID of the integration to remove.\"\"\"\n  id: AlertManagementHttpIntegrationID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of HttpIntegrationDestroy\"\"\"\ntype HttpIntegrationDestroyPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The HTTP integration.\"\"\"\n  integration: AlertManagementHttpIntegration\n}\n\n\"\"\"Autogenerated input type of HttpIntegrationResetToken\"\"\"\ninput HttpIntegrationResetTokenInput {\n  \"\"\"The ID of the integration to mutate.\"\"\"\n  id: AlertManagementHttpIntegrationID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of HttpIntegrationResetToken\"\"\"\ntype HttpIntegrationResetTokenPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The HTTP integration.\"\"\"\n  integration: AlertManagementHttpIntegration\n}\n\n\"\"\"Autogenerated input type of HttpIntegrationUpdate\"\"\"\ninput HttpIntegrationUpdateInput {\n  \"\"\"The ID of the integration to mutate.\"\"\"\n  id: AlertManagementHttpIntegrationID!\n\n  \"\"\"The name of the integration.\"\"\"\n  name: String\n\n  \"\"\"Whether the integration is receiving alerts.\"\"\"\n  active: Boolean\n\n  \"\"\"The example of an alert payload.\"\"\"\n  payloadExample: JsonString\n\n  \"\"\"\n  The custom mapping of GitLab alert attributes to fields from the payload_example.\n  \"\"\"\n  payloadAttributeMappings: [AlertManagementPayloadAlertFieldInput!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of HttpIntegrationUpdate\"\"\"\ntype HttpIntegrationUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The HTTP integration.\"\"\"\n  integration: AlertManagementHttpIntegration\n}\n\n\"\"\"An ISO 8601-encoded date\"\"\"\nscalar ISO8601Date\n\n\"\"\"\nA `IncidentManagementOncallParticipantID` is a global ID. It is encoded as a string.\n\nAn example `IncidentManagementOncallParticipantID` is: `\"gid://gitlab/IncidentManagement::OncallParticipant/1\"`.\n\n\"\"\"\nscalar IncidentManagementOncallParticipantID\n\n\"\"\"Describes an incident management on-call rotation\"\"\"\ntype IncidentManagementOncallRotation {\n  \"\"\"Active period for the on-call rotation.\"\"\"\n  activePeriod: OncallRotationActivePeriodType\n\n  \"\"\"End date and time of the on-call rotation.\"\"\"\n  endsAt: Time\n\n  \"\"\"ID of the on-call rotation.\"\"\"\n  id: IncidentManagementOncallRotationID!\n\n  \"\"\"Length of the on-call schedule, in the units specified by lengthUnit.\"\"\"\n  length: Int\n\n  \"\"\"Unit of the on-call rotation length.\"\"\"\n  lengthUnit: OncallRotationUnitEnum\n\n  \"\"\"Name of the on-call rotation.\"\"\"\n  name: String!\n\n  \"\"\"Participants of the on-call rotation.\"\"\"\n  participants(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): OncallParticipantTypeConnection\n\n  \"\"\"\n  Blocks of time for which a participant is on-call within a given time frame. Time frame cannot exceed one month.\n  \"\"\"\n  shifts(\n    \"\"\"Start of timeframe to include shifts for.\"\"\"\n    startTime: Time!\n\n    \"\"\"\n    End of timeframe to include shifts for. Cannot exceed one month after start.\n    \"\"\"\n    endTime: Time!\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IncidentManagementOncallShiftConnection\n\n  \"\"\"Start date of the on-call rotation.\"\"\"\n  startsAt: Time\n}\n\n\"\"\"The connection type for IncidentManagementOncallRotation.\"\"\"\ntype IncidentManagementOncallRotationConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [IncidentManagementOncallRotationEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [IncidentManagementOncallRotation]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype IncidentManagementOncallRotationEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: IncidentManagementOncallRotation\n}\n\n\"\"\"\nA `IncidentManagementOncallRotationID` is a global ID. It is encoded as a string.\n\nAn example `IncidentManagementOncallRotationID` is: `\"gid://gitlab/IncidentManagement::OncallRotation/1\"`.\n\n\"\"\"\nscalar IncidentManagementOncallRotationID\n\n\"\"\"Describes an incident management on-call schedule\"\"\"\ntype IncidentManagementOncallSchedule {\n  \"\"\"Description of the on-call schedule.\"\"\"\n  description: String\n\n  \"\"\"Internal ID of the on-call schedule.\"\"\"\n  iid: ID!\n\n  \"\"\"Name of the on-call schedule.\"\"\"\n  name: String!\n\n  \"\"\"On-call rotation for the on-call schedule.\"\"\"\n  rotation(\n    \"\"\"ID of the on-call rotation.\"\"\"\n    id: IncidentManagementOncallRotationID!\n  ): IncidentManagementOncallRotation\n\n  \"\"\"On-call rotations for the on-call schedule.\"\"\"\n  rotations(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IncidentManagementOncallRotationConnection!\n\n  \"\"\"Time zone of the on-call schedule.\"\"\"\n  timezone: String!\n}\n\n\"\"\"The connection type for IncidentManagementOncallSchedule.\"\"\"\ntype IncidentManagementOncallScheduleConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [IncidentManagementOncallScheduleEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [IncidentManagementOncallSchedule]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype IncidentManagementOncallScheduleEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: IncidentManagementOncallSchedule\n}\n\n\"\"\"A block of time for which a participant is on-call.\"\"\"\ntype IncidentManagementOncallShift {\n  \"\"\"End time of the on-call shift.\"\"\"\n  endsAt: Time\n\n  \"\"\"Participant assigned to the on-call shift.\"\"\"\n  participant: OncallParticipantType\n\n  \"\"\"Start time of the on-call shift.\"\"\"\n  startsAt: Time\n}\n\n\"\"\"The connection type for IncidentManagementOncallShift.\"\"\"\ntype IncidentManagementOncallShiftConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [IncidentManagementOncallShiftEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [IncidentManagementOncallShift]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype IncidentManagementOncallShiftEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: IncidentManagementOncallShift\n}\n\ntype InstanceSecurityDashboard {\n  \"\"\"Projects selected in Instance Security Dashboard.\"\"\"\n  projects(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectConnection!\n\n  \"\"\"Represents vulnerable project counts for each grade.\"\"\"\n  vulnerabilityGrades: [VulnerableProjectsByGrade!]!\n\n  \"\"\"\n  Vulnerability scanners reported on the vulnerabilities from projects selected in Instance Security Dashboard.\n  \"\"\"\n  vulnerabilityScanners(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilityScannerConnection\n\n  \"\"\"\n  Counts for each vulnerability severity from projects selected in Instance Security Dashboard.\n  \"\"\"\n  vulnerabilitySeveritiesCount(\n    \"\"\"Filter vulnerabilities by project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"Filter vulnerabilities by report type.\"\"\"\n    reportType: [VulnerabilityReportType!]\n\n    \"\"\"Filter vulnerabilities by severity.\"\"\"\n    severity: [VulnerabilitySeverity!]\n\n    \"\"\"Filter vulnerabilities by state.\"\"\"\n    state: [VulnerabilityState!]\n\n    \"\"\"Filter vulnerabilities by scanner.\"\"\"\n    scanner: [String!]\n  ): VulnerabilitySeveritiesCount\n}\n\n\"\"\"Represents an issuable.\"\"\"\nunion Issuable = Epic | Issue | MergeRequest\n\n\"\"\"\nA `IssuableID` is a global ID. It is encoded as a string.\n\nAn example `IssuableID` is: `\"gid://gitlab/Issuable/1\"`.\n\n\"\"\"\nscalar IssuableID\n\n\"\"\"Incident severity\"\"\"\nenum IssuableSeverity {\n  \"\"\"Unknown severity\"\"\"\n  UNKNOWN\n\n  \"\"\"Low severity\"\"\"\n  LOW\n\n  \"\"\"Medium severity\"\"\"\n  MEDIUM\n\n  \"\"\"High severity\"\"\"\n  HIGH\n\n  \"\"\"Critical severity\"\"\"\n  CRITICAL\n}\n\n\"\"\"State of a GitLab issue or merge request\"\"\"\nenum IssuableState {\n  \"\"\"In open state.\"\"\"\n  opened\n\n  \"\"\"In closed state.\"\"\"\n  closed\n\n  \"\"\"Discussion has been locked.\"\"\"\n  locked\n\n  \"\"\"All available.\"\"\"\n  all\n}\n\ntype Issue implements Noteable & CurrentUserTodos {\n  \"\"\"Alert associated to this issue.\"\"\"\n  alertManagementAlert: AlertManagementAlert\n\n  \"\"\"Assignees of the issue.\"\"\"\n  assignees(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"User that created the issue.\"\"\"\n  author: UserCore!\n\n  \"\"\"Indicates the issue is blocked.\"\"\"\n  blocked: Boolean!\n\n  \"\"\"Count of issues blocking this issue.\"\"\"\n  blockedByCount: Int\n\n  \"\"\"Issues blocking this issue.\"\"\"\n  blockedByIssues(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IssueConnection\n\n  \"\"\"Timestamp of when the issue was closed.\"\"\"\n  closedAt: Time\n\n  \"\"\"Indicates the issue is confidential.\"\"\"\n  confidential: Boolean!\n\n  \"\"\"User specific email address for the issue.\"\"\"\n  createNoteEmail: String\n\n  \"\"\"Timestamp of when the issue was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"To-do items for the current user.\"\"\"\n  currentUserTodos(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n\n    \"\"\"State of the to-do items.\"\"\"\n    state: TodoStateEnum\n  ): TodoConnection!\n\n  \"\"\"Description of the issue.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"Collection of design images associated with this issue.\"\"\"\n  designCollection: DesignCollection\n\n  \"\"\"Indicates discussion is locked on the issue.\"\"\"\n  discussionLocked: Boolean!\n\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"Number of downvotes the issue has received.\"\"\"\n  downvotes: Int!\n\n  \"\"\"Due date of the issue.\"\"\"\n  dueDate: Time\n\n  \"\"\"\n  Indicates if a project has email notifications disabled: `true` if email notifications are disabled.\n  \"\"\"\n  emailsDisabled: Boolean!\n\n  \"\"\"Epic to which this issue belongs.\"\"\"\n  epic: Epic\n\n  \"\"\"Current health status.\"\"\"\n  healthStatus: HealthStatus\n\n  \"\"\"Human-readable time estimate of the issue.\"\"\"\n  humanTimeEstimate: String\n\n  \"\"\"Human-readable total time reported as spent on the issue.\"\"\"\n  humanTotalTimeSpent: String\n\n  \"\"\"ID of the issue.\"\"\"\n  id: ID!\n\n  \"\"\"Internal ID of the issue.\"\"\"\n  iid: ID!\n\n  \"\"\"Iteration of the issue.\"\"\"\n  iteration: Iteration\n\n  \"\"\"Labels of the issue.\"\"\"\n  labels(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LabelConnection\n\n  \"\"\"Metric images associated to the issue.\"\"\"\n  metricImages: [MetricImage!]\n\n  \"\"\"Milestone of the issue.\"\"\"\n  milestone: Milestone\n\n  \"\"\"Indicates if issue got moved from other project.\"\"\"\n  moved: Boolean\n\n  \"\"\"Updated Issue after it got moved to another project.\"\"\"\n  movedTo: Issue\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"List of participants in the issue.\"\"\"\n  participants(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"\n  Internal reference of the issue. Returned in shortened format by default.\n  \"\"\"\n  reference(\n    \"\"\"\n    Boolean option specifying whether the reference should be returned in full.\n    \"\"\"\n    full: Boolean = false\n  ): String!\n\n  \"\"\"\n  Relative position of the issue (used for positioning in epic tree and issue boards).\n  \"\"\"\n  relativePosition: Int\n\n  \"\"\"Severity level of the incident.\"\"\"\n  severity: IssuableSeverity\n\n  \"\"\"Timestamp of when the issue SLA expires.\"\"\"\n  slaDueAt: Time\n\n  \"\"\"State of the issue.\"\"\"\n  state: IssueState!\n\n  \"\"\"Indicates whether an issue is published to the status page.\"\"\"\n  statusPagePublishedIncident: Boolean\n\n  \"\"\"Indicates the currently logged in user is subscribed to the issue.\"\"\"\n  subscribed: Boolean!\n\n  \"\"\"Task completion status of the issue.\"\"\"\n  taskCompletionStatus: TaskCompletionStatus!\n\n  \"\"\"Time estimate of the issue.\"\"\"\n  timeEstimate: Int!\n\n  \"\"\"Timelogs on the issue.\"\"\"\n  timelogs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TimelogConnection!\n\n  \"\"\"Title of the issue.\"\"\"\n  title: String!\n\n  \"\"\"The GitLab Flavored Markdown rendering of `title`\"\"\"\n  titleHtml: String\n\n  \"\"\"Total time reported as spent on the issue.\"\"\"\n  totalTimeSpent: Int!\n\n  \"\"\"Type of the issue.\"\"\"\n  type: IssueType\n\n  \"\"\"Timestamp of when the issue was last updated.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"User that last updated the issue.\"\"\"\n  updatedBy: UserCore\n\n  \"\"\"Number of upvotes the issue has received.\"\"\"\n  upvotes: Int!\n\n  \"\"\"Number of user discussions in the issue.\"\"\"\n  userDiscussionsCount: Int!\n\n  \"\"\"Number of user notes of the issue.\"\"\"\n  userNotesCount: Int!\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: IssuePermissions!\n\n  \"\"\"Web path of the issue.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the issue.\"\"\"\n  webUrl: String!\n\n  \"\"\"Weight of the issue.\"\"\"\n  weight: Int\n}\n\n\"\"\"The connection type for Issue.\"\"\"\ntype IssueConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [IssueEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Issue]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Total weight of issues collection.\"\"\"\n  weight: Int!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype IssueEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Issue\n}\n\n\"\"\"\nA `IssueID` is a global ID. It is encoded as a string.\n\nAn example `IssueID` is: `\"gid://gitlab/Issue/1\"`.\n\n\"\"\"\nscalar IssueID\n\n\"\"\"Autogenerated input type of IssueMove\"\"\"\ninput IssueMoveInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"The project to move the issue to.\"\"\"\n  targetProjectPath: ID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated input type of IssueMoveList\"\"\"\ninput IssueMoveListInput {\n  \"\"\"Project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"Global ID of the board that the issue is in.\"\"\"\n  boardId: BoardID!\n\n  \"\"\"ID of the board list that the issue will be moved from.\"\"\"\n  fromListId: ID\n\n  \"\"\"ID of the board list that the issue will be moved to.\"\"\"\n  toListId: ID\n\n  \"\"\"ID of issue that should be placed before the current issue.\"\"\"\n  moveBeforeId: ID\n\n  \"\"\"ID of issue that should be placed after the current issue.\"\"\"\n  moveAfterId: ID\n\n  \"\"\"The ID of the parent epic. NULL when removing the association.\"\"\"\n  epicId: EpicID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueMoveList\"\"\"\ntype IssueMoveListPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated return type of IssueMove\"\"\"\ntype IssueMovePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Check permissions for the current user on a issue\"\"\"\ntype IssuePermissions {\n  \"\"\"Indicates the user can perform `admin_issue` on this resource\"\"\"\n  adminIssue: Boolean!\n\n  \"\"\"Indicates the user can perform `create_design` on this resource\"\"\"\n  createDesign: Boolean!\n\n  \"\"\"Indicates the user can perform `create_note` on this resource\"\"\"\n  createNote: Boolean!\n\n  \"\"\"Indicates the user can perform `destroy_design` on this resource\"\"\"\n  destroyDesign: Boolean!\n\n  \"\"\"Indicates the user can perform `read_design` on this resource\"\"\"\n  readDesign: Boolean!\n\n  \"\"\"Indicates the user can perform `read_issue` on this resource\"\"\"\n  readIssue: Boolean!\n\n  \"\"\"Indicates the user can perform `reopen_issue` on this resource\"\"\"\n  reopenIssue: Boolean!\n\n  \"\"\"Indicates the user can perform `update_issue` on this resource\"\"\"\n  updateIssue: Boolean!\n}\n\n\"\"\"Autogenerated input type of IssueSetAssignees\"\"\"\ninput IssueSetAssigneesInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  The usernames to assign to the resource. Replaces existing assignees by default.\n  \"\"\"\n  assigneeUsernames: [String!]!\n\n  \"\"\"The operation to perform. Defaults to REPLACE.\"\"\"\n  operationMode: MutationOperationMode = null\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueSetAssignees\"\"\"\ntype IssueSetAssigneesPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of IssueSetConfidential\"\"\"\ninput IssueSetConfidentialInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"Whether or not to set the issue as a confidential.\"\"\"\n  confidential: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueSetConfidential\"\"\"\ntype IssueSetConfidentialPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of IssueSetDueDate\"\"\"\ninput IssueSetDueDateInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"The desired due date for the issue.\"\"\"\n  dueDate: Time!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueSetDueDate\"\"\"\ntype IssueSetDueDatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of IssueSetEpic\"\"\"\ninput IssueSetEpicInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  Global ID of the epic to be assigned to the issue, epic will be removed if absent or set to null\n  \"\"\"\n  epicId: EpicID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueSetEpic\"\"\"\ntype IssueSetEpicPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of IssueSetIteration\"\"\"\ninput IssueSetIterationInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  The iteration to assign to the issue.\n  \n  \"\"\"\n  iterationId: IterationID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueSetIteration\"\"\"\ntype IssueSetIterationPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of IssueSetLocked\"\"\"\ninput IssueSetLockedInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"Whether or not to lock discussion on the issue.\"\"\"\n  locked: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueSetLocked\"\"\"\ntype IssueSetLockedPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of IssueSetSeverity\"\"\"\ninput IssueSetSeverityInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"Set the incident severity level.\"\"\"\n  severity: IssuableSeverity!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueSetSeverity\"\"\"\ntype IssueSetSeverityPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of IssueSetSubscription\"\"\"\ninput IssueSetSubscriptionInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"The desired state of the subscription.\"\"\"\n  subscribedState: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueSetSubscription\"\"\"\ntype IssueSetSubscriptionPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of IssueSetWeight\"\"\"\ninput IssueSetWeightInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"The desired weight for the issue.\"\"\"\n  weight: Int!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IssueSetWeight\"\"\"\ntype IssueSetWeightPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Values for sorting issues\"\"\"\nenum IssueSort {\n  \"\"\"Updated at descending order.\"\"\"\n  updated_desc @deprecated(reason: \"This was renamed. Please use `UPDATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at ascending order.\"\"\"\n  updated_asc @deprecated(reason: \"This was renamed. Please use `UPDATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at descending order.\"\"\"\n  created_desc @deprecated(reason: \"This was renamed. Please use `CREATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at ascending order.\"\"\"\n  created_asc @deprecated(reason: \"This was renamed. Please use `CREATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at descending order.\"\"\"\n  UPDATED_DESC\n\n  \"\"\"Updated at ascending order.\"\"\"\n  UPDATED_ASC\n\n  \"\"\"Created at descending order.\"\"\"\n  CREATED_DESC\n\n  \"\"\"Created at ascending order.\"\"\"\n  CREATED_ASC\n\n  \"\"\"Priority by ascending order.\"\"\"\n  PRIORITY_ASC\n\n  \"\"\"Priority by descending order.\"\"\"\n  PRIORITY_DESC\n\n  \"\"\"Label priority by ascending order.\"\"\"\n  LABEL_PRIORITY_ASC\n\n  \"\"\"Label priority by descending order.\"\"\"\n  LABEL_PRIORITY_DESC\n\n  \"\"\"Milestone due date by ascending order.\"\"\"\n  MILESTONE_DUE_ASC\n\n  \"\"\"Milestone due date by descending order.\"\"\"\n  MILESTONE_DUE_DESC\n\n  \"\"\"Due date by ascending order.\"\"\"\n  DUE_DATE_ASC\n\n  \"\"\"Due date by descending order.\"\"\"\n  DUE_DATE_DESC\n\n  \"\"\"Relative position by ascending order.\"\"\"\n  RELATIVE_POSITION_ASC\n\n  \"\"\"Severity from less critical to more critical.\"\"\"\n  SEVERITY_ASC\n\n  \"\"\"Severity from more critical to less critical.\"\"\"\n  SEVERITY_DESC\n\n  \"\"\"Weight by ascending order.\"\"\"\n  WEIGHT_ASC\n\n  \"\"\"Weight by descending order.\"\"\"\n  WEIGHT_DESC\n\n  \"\"\"Published issues shown last.\"\"\"\n  PUBLISHED_ASC\n\n  \"\"\"Published issues shown first.\"\"\"\n  PUBLISHED_DESC\n\n  \"\"\"Issues with earliest SLA due time shown first.\"\"\"\n  SLA_DUE_AT_ASC\n\n  \"\"\"Issues with latest SLA due time shown first.\"\"\"\n  SLA_DUE_AT_DESC\n}\n\n\"\"\"State of a GitLab issue\"\"\"\nenum IssueState {\n  \"\"\"In open state.\"\"\"\n  opened\n\n  \"\"\"In closed state.\"\"\"\n  closed\n\n  \"\"\"Discussion has been locked.\"\"\"\n  locked\n\n  \"\"\"All available.\"\"\"\n  all\n}\n\n\"\"\"Values for issue state events\"\"\"\nenum IssueStateEvent {\n  \"\"\"Reopens the issue.\"\"\"\n  REOPEN\n\n  \"\"\"Closes the issue.\"\"\"\n  CLOSE\n}\n\n\"\"\"Represents total number of issues for the represented statuses\"\"\"\ntype IssueStatusCountsType {\n  \"\"\"Number of issues with status ALL for the project\"\"\"\n  all: Int\n\n  \"\"\"Number of issues with status CLOSED for the project\"\"\"\n  closed: Int\n\n  \"\"\"Number of issues with status OPENED for the project\"\"\"\n  opened: Int\n}\n\n\"\"\"Issue type\"\"\"\nenum IssueType {\n  \"\"\"Issue issue type\"\"\"\n  ISSUE\n\n  \"\"\"Incident issue type\"\"\"\n  INCIDENT\n\n  \"\"\"Test Case issue type\"\"\"\n  TEST_CASE\n\n  \"\"\"Requirement issue type\"\"\"\n  REQUIREMENT\n}\n\n\"\"\"Represents an iteration object\"\"\"\ntype Iteration implements TimeboxReportInterface {\n  \"\"\"Timestamp of iteration creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Description of the iteration.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"Timestamp of the iteration due date.\"\"\"\n  dueDate: Time\n\n  \"\"\"ID of the iteration.\"\"\"\n  id: ID!\n\n  \"\"\"Internal ID of the iteration.\"\"\"\n  iid: ID!\n\n  \"\"\"Cadence of the iteration.\"\"\"\n  iterationCadence: IterationCadence!\n\n  \"\"\"Historically accurate report about the timebox.\"\"\"\n  report: TimeboxReport\n\n  \"\"\"\n  Web path of the iteration, scoped to the query parent. Only valid for Project parents. Returns null in other contexts.\n  \"\"\"\n  scopedPath: String\n\n  \"\"\"\n  Web URL of the iteration, scoped to the query parent. Only valid for Project parents. Returns null in other contexts.\n  \"\"\"\n  scopedUrl: String\n\n  \"\"\"Timestamp of the iteration start date.\"\"\"\n  startDate: Time\n\n  \"\"\"State of the iteration.\"\"\"\n  state: IterationState!\n\n  \"\"\"Title of the iteration.\"\"\"\n  title: String!\n\n  \"\"\"Timestamp of last iteration update.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Web path of the iteration.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the iteration.\"\"\"\n  webUrl: String!\n}\n\n\"\"\"Represents an iteration cadence\"\"\"\ntype IterationCadence {\n  \"\"\"Whether the iteration cadence is active.\"\"\"\n  active: Boolean\n\n  \"\"\"\n  Whether the iteration cadence should automatically generate future iterations.\n  \"\"\"\n  automatic: Boolean\n\n  \"\"\"Duration in weeks of the iterations within this cadence.\"\"\"\n  durationInWeeks: Int\n\n  \"\"\"Global ID of the iteration cadence.\"\"\"\n  id: IterationsCadenceID!\n\n  \"\"\"\n  Future iterations to be created when iteration cadence is set to automatic.\n  \"\"\"\n  iterationsInAdvance: Int\n\n  \"\"\"Timestamp of the iteration cadence start date.\"\"\"\n  startDate: Time\n\n  \"\"\"Title of the iteration cadence.\"\"\"\n  title: String!\n}\n\n\"\"\"The connection type for IterationCadence.\"\"\"\ntype IterationCadenceConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [IterationCadenceEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [IterationCadence]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of IterationCadenceCreate\"\"\"\ninput IterationCadenceCreateInput {\n  \"\"\"The group where the iteration cadence is created.\"\"\"\n  groupPath: ID!\n\n  \"\"\"Title of the iteration cadence.\"\"\"\n  title: String\n\n  \"\"\"Duration in weeks of the iterations within this cadence.\"\"\"\n  durationInWeeks: Int\n\n  \"\"\"\n  Future iterations to be created when iteration cadence is set to automatic.\n  \"\"\"\n  iterationsInAdvance: Int\n\n  \"\"\"Timestamp of the iteration cadence start date.\"\"\"\n  startDate: Time\n\n  \"\"\"\n  Whether the iteration cadence should automatically generate future iterations.\n  \"\"\"\n  automatic: Boolean!\n\n  \"\"\"Whether the iteration cadence is active.\"\"\"\n  active: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IterationCadenceCreate\"\"\"\ntype IterationCadenceCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The created iteration cadence.\"\"\"\n  iterationCadence: IterationCadence\n}\n\n\"\"\"Autogenerated input type of IterationCadenceDestroy\"\"\"\ninput IterationCadenceDestroyInput {\n  \"\"\"Global ID of the iteration cadence.\"\"\"\n  id: IterationsCadenceID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IterationCadenceDestroy\"\"\"\ntype IterationCadenceDestroyPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Group the iteration cadence belongs to.\"\"\"\n  group: Group!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype IterationCadenceEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: IterationCadence\n}\n\n\"\"\"Autogenerated input type of IterationCadenceUpdate\"\"\"\ninput IterationCadenceUpdateInput {\n  \"\"\"Global ID of the iteration cadence.\"\"\"\n  id: IterationsCadenceID!\n\n  \"\"\"Title of the iteration cadence.\"\"\"\n  title: String\n\n  \"\"\"Duration in weeks of the iterations within this cadence.\"\"\"\n  durationInWeeks: Int\n\n  \"\"\"\n  Future iterations to be created when iteration cadence is set to automatic.\n  \"\"\"\n  iterationsInAdvance: Int\n\n  \"\"\"Timestamp of the iteration cadence start date.\"\"\"\n  startDate: Time\n\n  \"\"\"\n  Whether the iteration cadence should automatically generate future iterations.\n  \"\"\"\n  automatic: Boolean\n\n  \"\"\"Whether the iteration cadence is active.\"\"\"\n  active: Boolean\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of IterationCadenceUpdate\"\"\"\ntype IterationCadenceUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The updated iteration cadence.\"\"\"\n  iterationCadence: IterationCadence\n}\n\n\"\"\"The connection type for Iteration.\"\"\"\ntype IterationConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [IterationEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Iteration]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype IterationEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Iteration\n}\n\n\"\"\"\nA `IterationID` is a global ID. It is encoded as a string.\n\nAn example `IterationID` is: `\"gid://gitlab/Iteration/1\"`.\n\n\"\"\"\nscalar IterationID\n\n\"\"\"State of a GitLab iteration\"\"\"\nenum IterationState {\n  upcoming\n  started\n  opened\n  closed\n  all\n}\n\n\"\"\"Iteration ID wildcard values\"\"\"\nenum IterationWildcardId {\n  \"\"\"No iteration is assigned.\"\"\"\n  NONE\n\n  \"\"\"An iteration is assigned.\"\"\"\n  ANY\n\n  \"\"\"Current iteration.\"\"\"\n  CURRENT\n}\n\n\"\"\"\nA `IterationsCadenceID` is a global ID. It is encoded as a string.\n\nAn example `IterationsCadenceID` is: `\"gid://gitlab/Iterations::Cadence/1\"`.\n\n\"\"\"\nscalar IterationsCadenceID\n\n\"\"\"Represents untyped JSON\"\"\"\nscalar JSON\n\ntype JiraImport {\n  \"\"\"Timestamp of when the Jira import was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"Count of issues that failed to import.\"\"\"\n  failedToImportCount: Int!\n\n  \"\"\"Count of issues that were successfully imported.\"\"\"\n  importedIssuesCount: Int!\n\n  \"\"\"Project key for the imported Jira project.\"\"\"\n  jiraProjectKey: String!\n\n  \"\"\"Timestamp of when the Jira import was scheduled.\"\"\"\n  scheduledAt: Time\n\n  \"\"\"User that started the Jira import.\"\"\"\n  scheduledBy: UserCore\n\n  \"\"\"Total count of issues that were attempted to import.\"\"\"\n  totalIssueCount: Int!\n}\n\n\"\"\"The connection type for JiraImport.\"\"\"\ntype JiraImportConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [JiraImportEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [JiraImport]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype JiraImportEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: JiraImport\n}\n\n\"\"\"Autogenerated input type of JiraImportStart\"\"\"\ninput JiraImportStartInput {\n  \"\"\"The project to import the Jira project into.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Project key of the importer Jira project.\"\"\"\n  jiraProjectKey: String!\n\n  \"\"\"Project name of the importer Jira project.\"\"\"\n  jiraProjectName: String\n\n  \"\"\"The mapping of Jira to GitLab users.\"\"\"\n  usersMapping: [JiraUsersMappingInputType!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of JiraImportStart\"\"\"\ntype JiraImportStartPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The Jira import data after mutation.\"\"\"\n  jiraImport: JiraImport\n}\n\n\"\"\"Autogenerated input type of JiraImportUsers\"\"\"\ninput JiraImportUsersInput {\n  \"\"\"The project to import the Jira users into.\"\"\"\n  projectPath: ID!\n\n  \"\"\"\n  The index of the record the import should started at, default 0 (50 records returned).\n  \"\"\"\n  startAt: Int\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of JiraImportUsers\"\"\"\ntype JiraImportUsersPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Users returned from Jira, matched by email and name if possible.\"\"\"\n  jiraUsers: [JiraUser!]\n}\n\ntype JiraProject {\n  \"\"\"Key of the Jira project.\"\"\"\n  key: String!\n\n  \"\"\"Name of the Jira project.\"\"\"\n  name: String\n\n  \"\"\"ID of the Jira project.\"\"\"\n  projectId: Int!\n}\n\n\"\"\"The connection type for JiraProject.\"\"\"\ntype JiraProjectConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [JiraProjectEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [JiraProject]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype JiraProjectEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: JiraProject\n}\n\ntype JiraService implements Service {\n  \"\"\"Indicates if the service is active.\"\"\"\n  active: Boolean\n\n  \"\"\"List of all Jira projects fetched through Jira REST API.\"\"\"\n  projects(\n    \"\"\"Project name or key.\"\"\"\n    name: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): JiraProjectConnection\n\n  \"\"\"Class name of the service.\"\"\"\n  type: String\n}\n\ntype JiraUser {\n  \"\"\"ID of the matched GitLab user.\"\"\"\n  gitlabId: Int\n\n  \"\"\"Name of the matched GitLab user.\"\"\"\n  gitlabName: String\n\n  \"\"\"Username of the matched GitLab user.\"\"\"\n  gitlabUsername: String\n\n  \"\"\"Account ID of the Jira user.\"\"\"\n  jiraAccountId: String!\n\n  \"\"\"Display name of the Jira user.\"\"\"\n  jiraDisplayName: String!\n\n  \"\"\"Email of the Jira user, returned only for users with public emails.\"\"\"\n  jiraEmail: String\n}\n\ninput JiraUsersMappingInputType {\n  \"\"\"Jira account ID of the user.\"\"\"\n  jiraAccountId: String!\n\n  \"\"\"ID of the GitLab user.\"\"\"\n  gitlabId: Int\n}\n\nenum JobArtifactFileType {\n  \"\"\"ARCHIVE job artifact file type.\"\"\"\n  ARCHIVE\n\n  \"\"\"METADATA job artifact file type.\"\"\"\n  METADATA\n\n  \"\"\"TRACE job artifact file type.\"\"\"\n  TRACE\n\n  \"\"\"JUNIT job artifact file type.\"\"\"\n  JUNIT\n\n  \"\"\"METRICS job artifact file type.\"\"\"\n  METRICS\n\n  \"\"\"METRICS REFEREE job artifact file type.\"\"\"\n  METRICS_REFEREE\n\n  \"\"\"NETWORK REFEREE job artifact file type.\"\"\"\n  NETWORK_REFEREE\n\n  \"\"\"DOTENV job artifact file type.\"\"\"\n  DOTENV\n\n  \"\"\"COBERTURA job artifact file type.\"\"\"\n  COBERTURA\n\n  \"\"\"CLUSTER APPLICATIONS job artifact file type.\"\"\"\n  CLUSTER_APPLICATIONS\n\n  \"\"\"LSIF job artifact file type.\"\"\"\n  LSIF\n\n  \"\"\"SAST job artifact file type.\"\"\"\n  SAST\n\n  \"\"\"SECRET DETECTION job artifact file type.\"\"\"\n  SECRET_DETECTION\n\n  \"\"\"DEPENDENCY SCANNING job artifact file type.\"\"\"\n  DEPENDENCY_SCANNING\n\n  \"\"\"CONTAINER SCANNING job artifact file type.\"\"\"\n  CONTAINER_SCANNING\n\n  \"\"\"DAST job artifact file type.\"\"\"\n  DAST\n\n  \"\"\"LICENSE MANAGEMENT job artifact file type.\"\"\"\n  LICENSE_MANAGEMENT\n\n  \"\"\"LICENSE SCANNING job artifact file type.\"\"\"\n  LICENSE_SCANNING\n\n  \"\"\"ACCESSIBILITY job artifact file type.\"\"\"\n  ACCESSIBILITY\n\n  \"\"\"CODE QUALITY job artifact file type.\"\"\"\n  CODEQUALITY\n\n  \"\"\"PERFORMANCE job artifact file type.\"\"\"\n  PERFORMANCE\n\n  \"\"\"BROWSER PERFORMANCE job artifact file type.\"\"\"\n  BROWSER_PERFORMANCE\n\n  \"\"\"LOAD PERFORMANCE job artifact file type.\"\"\"\n  LOAD_PERFORMANCE\n\n  \"\"\"TERRAFORM job artifact file type.\"\"\"\n  TERRAFORM\n\n  \"\"\"REQUIREMENTS job artifact file type.\"\"\"\n  REQUIREMENTS\n\n  \"\"\"COVERAGE FUZZING job artifact file type.\"\"\"\n  COVERAGE_FUZZING\n\n  \"\"\"API FUZZING job artifact file type.\"\"\"\n  API_FUZZING\n}\n\n\"\"\"\nA `CommitStatusID` is a global ID. It is encoded as a string.\n\nAn example `CommitStatusID` is: `\"gid://gitlab/CommitStatus/1\"`.\n\n\"\"\"\nscalar JobID\n\n\"\"\"JSON object as raw string\"\"\"\nscalar JsonString\n\ntype Label {\n  \"\"\"Background color of the label.\"\"\"\n  color: String!\n\n  \"\"\"When this label was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Description of the label (Markdown rendered as HTML for caching).\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"Label ID.\"\"\"\n  id: ID!\n\n  \"\"\"Text color of the label.\"\"\"\n  textColor: String!\n\n  \"\"\"Content of the label.\"\"\"\n  title: String!\n\n  \"\"\"When this label was last updated.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"The connection type for Label.\"\"\"\ntype LabelConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LabelEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Label]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of LabelCreate\"\"\"\ninput LabelCreateInput {\n  \"\"\"Full path of the project with which the resource is associated.\"\"\"\n  projectPath: ID\n\n  \"\"\"Full path of the group with which the resource is associated.\"\"\"\n  groupPath: ID\n\n  \"\"\"Title of the label.\"\"\"\n  title: String!\n\n  \"\"\"Description of the label.\"\"\"\n  description: String\n\n  \"\"\"\n  The color of the label given in 6-digit hex notation with leading '#' sign\n  (for example, `#FFAABB`) or one of the CSS color names\n  <https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords>.\n  \n  \"\"\"\n  color: String = \"#6699cc\"\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of LabelCreate\"\"\"\ntype LabelCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The label after mutation.\"\"\"\n  label: Label\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LabelEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Label\n}\n\n\"\"\"\nA `LabelID` is a global ID. It is encoded as a string.\n\nAn example `LabelID` is: `\"gid://gitlab/Label/1\"`.\n\n\"\"\"\nscalar LabelID\n\n\"\"\"Represents an entry from the Cloud License history\"\"\"\ntype LicenseHistoryEntry {\n  \"\"\"Date when the license was activated.\"\"\"\n  activatedAt: Date\n\n  \"\"\"Company of the licensee.\"\"\"\n  company: String\n\n  \"\"\"Email of the licensee.\"\"\"\n  email: String\n\n  \"\"\"Date when the license expires.\"\"\"\n  expiresAt: Date\n\n  \"\"\"ID of the license.\"\"\"\n  id: ID!\n\n  \"\"\"Name of the licensee.\"\"\"\n  name: String\n\n  \"\"\"Name of the subscription plan.\"\"\"\n  plan: String!\n\n  \"\"\"Date when the license started.\"\"\"\n  startsAt: Date\n\n  \"\"\"Type of the license.\"\"\"\n  type: String!\n\n  \"\"\"Number of paid users in the license.\"\"\"\n  usersInLicenseCount: Int\n}\n\n\"\"\"The connection type for LicenseHistoryEntry.\"\"\"\ntype LicenseHistoryEntryConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [LicenseHistoryEntryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [LicenseHistoryEntry]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LicenseHistoryEntryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: LicenseHistoryEntry\n}\n\n\"\"\"\nA `ListID` is a global ID. It is encoded as a string.\n\nAn example `ListID` is: `\"gid://gitlab/List/1\"`.\n\n\"\"\"\nscalar ListID\n\n\"\"\"List limit metric setting\"\"\"\nenum ListLimitMetric {\n  all_metrics\n  issue_count\n  issue_weights\n}\n\n\"\"\"Autogenerated input type of MarkAsSpamSnippet\"\"\"\ninput MarkAsSpamSnippetInput {\n  \"\"\"The global ID of the snippet to update.\"\"\"\n  id: SnippetID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MarkAsSpamSnippet\"\"\"\ntype MarkAsSpamSnippetPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The snippet after mutation.\"\"\"\n  snippet: Snippet\n}\n\n\"\"\"Possible identifier types for a measurement\"\"\"\nenum MeasurementIdentifier {\n  \"\"\"Project count.\"\"\"\n  PROJECTS\n\n  \"\"\"User count.\"\"\"\n  USERS\n\n  \"\"\"Issue count.\"\"\"\n  ISSUES\n\n  \"\"\"Merge request count.\"\"\"\n  MERGE_REQUESTS\n\n  \"\"\"Group count.\"\"\"\n  GROUPS\n\n  \"\"\"Pipeline count.\"\"\"\n  PIPELINES\n\n  \"\"\"Pipeline count with success status.\"\"\"\n  PIPELINES_SUCCEEDED\n\n  \"\"\"Pipeline count with failed status.\"\"\"\n  PIPELINES_FAILED\n\n  \"\"\"Pipeline count with canceled status.\"\"\"\n  PIPELINES_CANCELED\n\n  \"\"\"Pipeline count with skipped status.\"\"\"\n  PIPELINES_SKIPPED\n}\n\ninterface MemberInterface {\n  \"\"\"GitLab::Access level.\"\"\"\n  accessLevel: AccessLevel\n\n  \"\"\"Date and time the membership was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"User that authorized membership.\"\"\"\n  createdBy: UserCore\n\n  \"\"\"Date and time the membership expires.\"\"\"\n  expiresAt: Time\n\n  \"\"\"ID of the member.\"\"\"\n  id: ID!\n\n  \"\"\"Date and time the membership was last updated.\"\"\"\n  updatedAt: Time\n\n  \"\"\"User that is associated with the member object.\"\"\"\n  user: UserCore!\n}\n\n\"\"\"The connection type for MemberInterface.\"\"\"\ntype MemberInterfaceConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [MemberInterfaceEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [MemberInterface]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MemberInterfaceEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: MemberInterface\n}\n\ntype MergeRequest implements Noteable & CurrentUserTodos {\n  \"\"\"Indicates if members of the target project can push to the fork.\"\"\"\n  allowCollaboration: Boolean\n\n  \"\"\"Number of approvals left.\"\"\"\n  approvalsLeft: Int\n\n  \"\"\"Number of approvals required.\"\"\"\n  approvalsRequired: Int\n\n  \"\"\"\n  Indicates if the merge request has all the required approvals. Returns true if no required approvals are configured.\n  \"\"\"\n  approved: Boolean!\n\n  \"\"\"Users who approved the merge request.\"\"\"\n  approvedBy(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"Assignees of the merge request.\"\"\"\n  assignees(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestAssigneeConnection\n\n  \"\"\"User who created this merge request.\"\"\"\n  author: UserCore\n\n  \"\"\"Indicates if auto merge is enabled for the merge request.\"\"\"\n  autoMergeEnabled: Boolean!\n\n  \"\"\"Selected auto merge strategy.\"\"\"\n  autoMergeStrategy: String\n\n  \"\"\"Array of available auto merge strategies.\"\"\"\n  availableAutoMergeStrategies: [String!]\n\n  \"\"\"Number of commits in the merge request.\"\"\"\n  commitCount: Int\n\n  \"\"\"Merge request commits excluding merge commits.\"\"\"\n  commitsWithoutMergeCommits(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CommitConnection\n\n  \"\"\"Indicates if the merge request has conflicts.\"\"\"\n  conflicts: Boolean!\n\n  \"\"\"Timestamp of when the merge request was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"To-do items for the current user.\"\"\"\n  currentUserTodos(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n\n    \"\"\"State of the to-do items.\"\"\"\n    state: TodoStateEnum\n  ): TodoConnection!\n\n  \"\"\"Default merge commit message of the merge request.\"\"\"\n  defaultMergeCommitMessage: String\n\n  \"\"\"Default merge commit message of the merge request with description.\"\"\"\n  defaultMergeCommitMessageWithDescription: String\n\n  \"\"\"Default squash commit message of the merge request.\"\"\"\n  defaultSquashCommitMessage: String\n\n  \"\"\"\n  Description of the merge request (Markdown rendered as HTML for caching).\n  \"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"Diff head SHA of the merge request.\"\"\"\n  diffHeadSha: String\n\n  \"\"\"\n  References of the base SHA, the head SHA, and the start SHA for this merge request.\n  \"\"\"\n  diffRefs: DiffRefs\n\n  \"\"\"Details about which files were changed in this merge request.\"\"\"\n  diffStats(\n    \"\"\"A specific file-path.\"\"\"\n    path: String\n  ): [DiffStats!]\n\n  \"\"\"Summary of which files were changed in this merge request.\"\"\"\n  diffStatsSummary: DiffStatsSummary\n\n  \"\"\"Indicates if comments on the merge request are locked to members only.\"\"\"\n  discussionLocked: Boolean!\n\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"Indicates if the source branch is behind the target branch.\"\"\"\n  divergedFromTargetBranch: Boolean!\n\n  \"\"\"Number of downvotes for the merge request.\"\"\"\n  downvotes: Int!\n\n  \"\"\"\n  Indicates if the project settings will lead to source branch deletion after merge.\n  \"\"\"\n  forceRemoveSourceBranch: Boolean\n\n  \"\"\"Indicates if the merge request has CI.\"\"\"\n  hasCi: Boolean!\n\n  \"\"\"Indicates if the source branch has any security reports.\"\"\"\n  hasSecurityReports: Boolean!\n\n  \"\"\"The pipeline running on the branch HEAD of the merge request.\"\"\"\n  headPipeline: Pipeline\n\n  \"\"\"ID of the merge request.\"\"\"\n  id: ID!\n\n  \"\"\"Internal ID of the merge request.\"\"\"\n  iid: String!\n\n  \"\"\"Commit SHA of the merge request if merge is in progress.\"\"\"\n  inProgressMergeCommitSha: String\n\n  \"\"\"Labels of the merge request.\"\"\"\n  labels(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LabelConnection\n\n  \"\"\"SHA of the merge request commit (set once merged).\"\"\"\n  mergeCommitSha: String\n\n  \"\"\"Error message due to a merge error.\"\"\"\n  mergeError: String\n\n  \"\"\"Indicates if a merge is currently occurring.\"\"\"\n  mergeOngoing: Boolean!\n\n  \"\"\"Status of the merge request.\"\"\"\n  mergeStatus: String\n\n  \"\"\"Number of merge requests in the merge train.\"\"\"\n  mergeTrainsCount: Int\n\n  \"\"\"User who merged this merge request.\"\"\"\n  mergeUser: UserCore\n\n  \"\"\"\n  Indicates if the merge has been set to be merged when its pipeline succeeds (MWPS).\n  \"\"\"\n  mergeWhenPipelineSucceeds: Boolean\n\n  \"\"\"Indicates if the merge request is mergeable.\"\"\"\n  mergeable: Boolean!\n\n  \"\"\"\n  Indicates if all discussions in the merge request have been resolved, allowing the merge request to be merged.\n  \"\"\"\n  mergeableDiscussionsState: Boolean\n\n  \"\"\"Timestamp of when the merge request was merged, null if not merged.\"\"\"\n  mergedAt: Time\n\n  \"\"\"The milestone of the merge request.\"\"\"\n  milestone: Milestone\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"\n  Participants in the merge request. This includes the author, assignees, reviewers, and users mentioned in notes.\n  \"\"\"\n  participants(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"\n  Pipelines for the merge request. Note: for performance reasons, no more than the most recent 500 pipelines will be returned.\n  \"\"\"\n  pipelines(\n    \"\"\"Filter pipelines by their status.\"\"\"\n    status: PipelineStatusEnum\n\n    \"\"\"Filter pipelines by the ref they are run for.\"\"\"\n    ref: String\n\n    \"\"\"Filter pipelines by the sha of the commit they are run for.\"\"\"\n    sha: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PipelineConnection\n\n  \"\"\"Alias for target_project.\"\"\"\n  project: Project!\n\n  \"\"\"ID of the merge request project.\"\"\"\n  projectId: Int!\n\n  \"\"\"Rebase commit SHA of the merge request.\"\"\"\n  rebaseCommitSha: String\n\n  \"\"\"\n  Indicates if there is a rebase currently in progress for the merge request.\n  \"\"\"\n  rebaseInProgress: Boolean!\n\n  \"\"\"\n  Internal reference of the merge request. Returned in shortened format by default.\n  \"\"\"\n  reference(\n    \"\"\"\n    Boolean option specifying whether the reference should be returned in full.\n    \"\"\"\n    full: Boolean = false\n  ): String!\n\n  \"\"\"Users from whom a review has been requested.\"\"\"\n  reviewers(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestReviewerConnection\n\n  \"\"\"Indicates if the merge request is created by @GitLab-Security-Bot.\"\"\"\n  securityAutoFix: Boolean\n\n  \"\"\"Indicates if the target branch security reports are out of date.\"\"\"\n  securityReportsUpToDateOnTargetBranch: Boolean!\n\n  \"\"\"Indicates if the merge request will be rebased.\"\"\"\n  shouldBeRebased: Boolean!\n\n  \"\"\"\n  Indicates if the source branch of the merge request will be deleted after merge.\n  \"\"\"\n  shouldRemoveSourceBranch: Boolean\n\n  \"\"\"Source branch of the merge request.\"\"\"\n  sourceBranch: String!\n\n  \"\"\"Indicates if the source branch of the merge request exists.\"\"\"\n  sourceBranchExists: Boolean!\n\n  \"\"\"Indicates if the source branch is protected.\"\"\"\n  sourceBranchProtected: Boolean!\n\n  \"\"\"Source project of the merge request.\"\"\"\n  sourceProject: Project\n\n  \"\"\"ID of the merge request source project.\"\"\"\n  sourceProjectId: Int\n\n  \"\"\"Indicates if squash on merge is enabled.\"\"\"\n  squash: Boolean!\n\n  \"\"\"Indicates if squash on merge is enabled.\"\"\"\n  squashOnMerge: Boolean!\n\n  \"\"\"State of the merge request.\"\"\"\n  state: MergeRequestState!\n\n  \"\"\"\n  Indicates if the currently logged in user is subscribed to this merge request.\n  \"\"\"\n  subscribed: Boolean!\n\n  \"\"\"Target branch of the merge request.\"\"\"\n  targetBranch: String!\n\n  \"\"\"Indicates if the target branch of the merge request exists.\"\"\"\n  targetBranchExists: Boolean!\n\n  \"\"\"Target project of the merge request.\"\"\"\n  targetProject: Project!\n\n  \"\"\"ID of the merge request target project.\"\"\"\n  targetProjectId: Int!\n\n  \"\"\"Completion status of tasks\"\"\"\n  taskCompletionStatus: TaskCompletionStatus!\n\n  \"\"\"Time estimate of the merge request.\"\"\"\n  timeEstimate: Int!\n\n  \"\"\"Timelogs on the merge request.\"\"\"\n  timelogs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TimelogConnection!\n\n  \"\"\"Title of the merge request.\"\"\"\n  title: String!\n\n  \"\"\"The GitLab Flavored Markdown rendering of `title`\"\"\"\n  titleHtml: String\n\n  \"\"\"Total time reported as spent on the merge request.\"\"\"\n  totalTimeSpent: Int!\n\n  \"\"\"Timestamp of when the merge request was last updated.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Number of upvotes for the merge request.\"\"\"\n  upvotes: Int!\n\n  \"\"\"Number of user discussions in the merge request.\"\"\"\n  userDiscussionsCount: Int\n\n  \"\"\"User notes count of the merge request.\"\"\"\n  userNotesCount: Int\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: MergeRequestPermissions!\n\n  \"\"\"Web URL of the merge request.\"\"\"\n  webUrl: String\n\n  \"\"\"Indicates if the merge request is a draft.\"\"\"\n  workInProgress: Boolean!\n}\n\n\"\"\"Autogenerated input type of MergeRequestAccept\"\"\"\ninput MergeRequestAcceptInput {\n  \"\"\"The project the merge request to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the merge request to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"How to merge this merge request.\"\"\"\n  strategy: MergeStrategyEnum\n\n  \"\"\"Custom merge commit message.\"\"\"\n  commitMessage: String\n\n  \"\"\"Custom squash commit message (if squash is true).\"\"\"\n  squashCommitMessage: String\n\n  \"\"\"The HEAD SHA at the time when this merge was requested.\"\"\"\n  sha: String!\n\n  \"\"\"Should the source branch be removed.\"\"\"\n  shouldRemoveSourceBranch: Boolean\n\n  \"\"\"Squash commits on the source branch before merge.\"\"\"\n  squash: Boolean = false\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestAccept\"\"\"\ntype MergeRequestAcceptPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\n\"\"\"A user assigned to a merge request.\"\"\"\ntype MergeRequestAssignee implements User {\n  \"\"\"Merge requests assigned to the user.\"\"\"\n  assignedMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Username of the reviewer.\"\"\"\n    reviewerUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Merge requests authored by the user.\"\"\"\n  authoredMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Username of the reviewer.\"\"\"\n    reviewerUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"URL of the user's avatar.\"\"\"\n  avatarUrl: String\n\n  \"\"\"Indicates if the user is a bot.\"\"\"\n  bot: Boolean!\n\n  \"\"\"User callouts that belong to the user.\"\"\"\n  callouts(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCalloutConnection\n\n  \"\"\"User email. Deprecated in 13.7: This was renamed.\"\"\"\n  email: String @deprecated(reason: \"This was renamed. Please use `User.publicEmail`. Deprecated in 13.7.\")\n\n  \"\"\"Group memberships of the user.\"\"\"\n  groupMemberships(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): GroupMemberConnection\n\n  \"\"\"ID of the user.\"\"\"\n  id: ID!\n\n  \"\"\"The location of the user.\"\"\"\n  location: String\n\n  \"\"\"Details of this user's interactions with the merge request.\"\"\"\n  mergeRequestInteraction: UserMergeRequestInteraction\n\n  \"\"\"Human-readable name of the user.\"\"\"\n  name: String!\n\n  \"\"\"Project memberships of the user.\"\"\"\n  projectMemberships(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectMemberConnection\n\n  \"\"\"User's public email.\"\"\"\n  publicEmail: String\n\n  \"\"\"Merge requests assigned to the user for review.\"\"\"\n  reviewRequestedMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Snippets authored by the user.\"\"\"\n  snippets(\n    \"\"\"\n    Array of global snippet IDs. For example, `gid://gitlab/ProjectSnippet/1`.\n    \"\"\"\n    ids: [SnippetID!]\n\n    \"\"\"The visibility of the snippet.\"\"\"\n    visibility: VisibilityScopesEnum\n\n    \"\"\"The type of snippet.\"\"\"\n    type: TypeEnum\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SnippetConnection\n\n  \"\"\"Projects starred by the user.\"\"\"\n  starredProjects(\n    \"\"\"Search query.\"\"\"\n    search: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectConnection\n\n  \"\"\"State of the user.\"\"\"\n  state: UserState!\n\n  \"\"\"User status.\"\"\"\n  status: UserStatus\n\n  \"\"\"To-do items of the user.\"\"\"\n  todos(\n    \"\"\"The action to be filtered.\"\"\"\n    action: [TodoActionEnum!]\n\n    \"\"\"The ID of an author.\"\"\"\n    authorId: [ID!]\n\n    \"\"\"The ID of a project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"The ID of a group.\"\"\"\n    groupId: [ID!]\n\n    \"\"\"The state of the todo.\"\"\"\n    state: [TodoStateEnum!]\n\n    \"\"\"The type of the todo.\"\"\"\n    type: [TodoTargetEnum!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TodoConnection\n\n  \"\"\"Permissions for the current user on the resource.\"\"\"\n  userPermissions: UserPermissions!\n\n  \"\"\"Username of the user. Unique within this instance of GitLab.\"\"\"\n  username: String!\n\n  \"\"\"Web path of the user.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the user.\"\"\"\n  webUrl: String!\n}\n\n\"\"\"The connection type for MergeRequestAssignee.\"\"\"\ntype MergeRequestAssigneeConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [MergeRequestAssigneeEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [MergeRequestAssignee]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MergeRequestAssigneeEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: MergeRequestAssignee\n}\n\n\"\"\"The connection type for MergeRequest.\"\"\"\ntype MergeRequestConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [MergeRequestEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [MergeRequest]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"\n  Total sum of time to merge, in seconds, for the collection of merge requests.\n  \"\"\"\n  totalTimeToMerge: Float\n}\n\n\"\"\"Autogenerated input type of MergeRequestCreate\"\"\"\ninput MergeRequestCreateInput {\n  \"\"\"Project full path the merge request is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Title of the merge request.\"\"\"\n  title: String!\n\n  \"\"\"Source branch of the merge request.\"\"\"\n  sourceBranch: String!\n\n  \"\"\"Target branch of the merge request.\"\"\"\n  targetBranch: String!\n\n  \"\"\"\n  Description of the merge request (Markdown rendered as HTML for caching).\n  \"\"\"\n  description: String\n\n  \"\"\"Labels of the merge request.\"\"\"\n  labels: [String!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestCreate\"\"\"\ntype MergeRequestCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\n\"\"\"Represents the Geo sync and verification state of a Merge Request diff\"\"\"\ntype MergeRequestDiffRegistry {\n  \"\"\"Timestamp when the MergeRequestDiffRegistry was created\"\"\"\n  createdAt: Time\n\n  \"\"\"ID of the MergeRequestDiffRegistry\"\"\"\n  id: ID!\n\n  \"\"\"Error message during sync of the MergeRequestDiffRegistry\"\"\"\n  lastSyncFailure: String\n\n  \"\"\"\n  Timestamp of the most recent successful sync of the MergeRequestDiffRegistry\n  \"\"\"\n  lastSyncedAt: Time\n\n  \"\"\"ID of the Merge Request diff.\"\"\"\n  mergeRequestDiffId: ID!\n\n  \"\"\"Timestamp after which the MergeRequestDiffRegistry should be resynced\"\"\"\n  retryAt: Time\n\n  \"\"\"\n  Number of consecutive failed sync attempts of the MergeRequestDiffRegistry\n  \"\"\"\n  retryCount: Int\n\n  \"\"\"Sync state of the MergeRequestDiffRegistry\"\"\"\n  state: RegistryState\n}\n\n\"\"\"The connection type for MergeRequestDiffRegistry.\"\"\"\ntype MergeRequestDiffRegistryConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [MergeRequestDiffRegistryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [MergeRequestDiffRegistry]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MergeRequestDiffRegistryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: MergeRequestDiffRegistry\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MergeRequestEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: MergeRequest\n}\n\n\"\"\"\nA `MergeRequestID` is a global ID. It is encoded as a string.\n\nAn example `MergeRequestID` is: `\"gid://gitlab/MergeRequest/1\"`.\n\n\"\"\"\nscalar MergeRequestID\n\n\"\"\"New state to apply to a merge request.\"\"\"\nenum MergeRequestNewState {\n  \"\"\"Open the merge request if it is closed.\"\"\"\n  OPEN\n\n  \"\"\"Close the merge request if it is open.\"\"\"\n  CLOSED\n}\n\n\"\"\"Check permissions for the current user on a merge request\"\"\"\ntype MergeRequestPermissions {\n  \"\"\"Indicates the user can perform `admin_merge_request` on this resource\"\"\"\n  adminMergeRequest: Boolean!\n\n  \"\"\"Indicates the user can perform `can_merge` on this resource\"\"\"\n  canMerge: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `cherry_pick_on_current_merge_request` on this resource\n  \"\"\"\n  cherryPickOnCurrentMergeRequest: Boolean!\n\n  \"\"\"Indicates the user can perform `create_note` on this resource\"\"\"\n  createNote: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `push_to_source_branch` on this resource\n  \"\"\"\n  pushToSourceBranch: Boolean!\n\n  \"\"\"Indicates the user can perform `read_merge_request` on this resource\"\"\"\n  readMergeRequest: Boolean!\n\n  \"\"\"Indicates the user can perform `remove_source_branch` on this resource\"\"\"\n  removeSourceBranch: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `revert_on_current_merge_request` on this resource\n  \"\"\"\n  revertOnCurrentMergeRequest: Boolean!\n\n  \"\"\"Indicates the user can perform `update_merge_request` on this resource\"\"\"\n  updateMergeRequest: Boolean!\n}\n\n\"\"\"State of a review of a GitLab merge request.\"\"\"\nenum MergeRequestReviewState {\n  \"\"\"The merge request is unreviewed.\"\"\"\n  UNREVIEWED\n\n  \"\"\"The merge request is reviewed.\"\"\"\n  REVIEWED\n}\n\n\"\"\"A user assigned to a merge request as a reviewer.\"\"\"\ntype MergeRequestReviewer implements User {\n  \"\"\"Merge requests assigned to the user.\"\"\"\n  assignedMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Username of the reviewer.\"\"\"\n    reviewerUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Merge requests authored by the user.\"\"\"\n  authoredMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Username of the reviewer.\"\"\"\n    reviewerUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"URL of the user's avatar.\"\"\"\n  avatarUrl: String\n\n  \"\"\"Indicates if the user is a bot.\"\"\"\n  bot: Boolean!\n\n  \"\"\"User callouts that belong to the user.\"\"\"\n  callouts(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCalloutConnection\n\n  \"\"\"User email. Deprecated in 13.7: This was renamed.\"\"\"\n  email: String @deprecated(reason: \"This was renamed. Please use `User.publicEmail`. Deprecated in 13.7.\")\n\n  \"\"\"Group memberships of the user.\"\"\"\n  groupMemberships(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): GroupMemberConnection\n\n  \"\"\"ID of the user.\"\"\"\n  id: ID!\n\n  \"\"\"The location of the user.\"\"\"\n  location: String\n\n  \"\"\"Details of this user's interactions with the merge request.\"\"\"\n  mergeRequestInteraction: UserMergeRequestInteraction\n\n  \"\"\"Human-readable name of the user.\"\"\"\n  name: String!\n\n  \"\"\"Project memberships of the user.\"\"\"\n  projectMemberships(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectMemberConnection\n\n  \"\"\"User's public email.\"\"\"\n  publicEmail: String\n\n  \"\"\"Merge requests assigned to the user for review.\"\"\"\n  reviewRequestedMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Snippets authored by the user.\"\"\"\n  snippets(\n    \"\"\"\n    Array of global snippet IDs. For example, `gid://gitlab/ProjectSnippet/1`.\n    \"\"\"\n    ids: [SnippetID!]\n\n    \"\"\"The visibility of the snippet.\"\"\"\n    visibility: VisibilityScopesEnum\n\n    \"\"\"The type of snippet.\"\"\"\n    type: TypeEnum\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SnippetConnection\n\n  \"\"\"Projects starred by the user.\"\"\"\n  starredProjects(\n    \"\"\"Search query.\"\"\"\n    search: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectConnection\n\n  \"\"\"State of the user.\"\"\"\n  state: UserState!\n\n  \"\"\"User status.\"\"\"\n  status: UserStatus\n\n  \"\"\"To-do items of the user.\"\"\"\n  todos(\n    \"\"\"The action to be filtered.\"\"\"\n    action: [TodoActionEnum!]\n\n    \"\"\"The ID of an author.\"\"\"\n    authorId: [ID!]\n\n    \"\"\"The ID of a project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"The ID of a group.\"\"\"\n    groupId: [ID!]\n\n    \"\"\"The state of the todo.\"\"\"\n    state: [TodoStateEnum!]\n\n    \"\"\"The type of the todo.\"\"\"\n    type: [TodoTargetEnum!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TodoConnection\n\n  \"\"\"Permissions for the current user on the resource.\"\"\"\n  userPermissions: UserPermissions!\n\n  \"\"\"Username of the user. Unique within this instance of GitLab.\"\"\"\n  username: String!\n\n  \"\"\"Web path of the user.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the user.\"\"\"\n  webUrl: String!\n}\n\n\"\"\"The connection type for MergeRequestReviewer.\"\"\"\ntype MergeRequestReviewerConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [MergeRequestReviewerEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [MergeRequestReviewer]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MergeRequestReviewerEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: MergeRequestReviewer\n}\n\n\"\"\"Autogenerated input type of MergeRequestReviewerRereview\"\"\"\ninput MergeRequestReviewerRereviewInput {\n  \"\"\"The project the merge request to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the merge request to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  The user ID for the user that has been requested for a new review.\n  \n  \"\"\"\n  userId: UserID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestReviewerRereview\"\"\"\ntype MergeRequestReviewerRereviewPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\n\"\"\"Autogenerated input type of MergeRequestSetAssignees\"\"\"\ninput MergeRequestSetAssigneesInput {\n  \"\"\"The project the merge request to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the merge request to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  The usernames to assign to the resource. Replaces existing assignees by default.\n  \"\"\"\n  assigneeUsernames: [String!]!\n\n  \"\"\"The operation to perform. Defaults to REPLACE.\"\"\"\n  operationMode: MutationOperationMode = null\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestSetAssignees\"\"\"\ntype MergeRequestSetAssigneesPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\n\"\"\"Autogenerated input type of MergeRequestSetLabels\"\"\"\ninput MergeRequestSetLabelsInput {\n  \"\"\"The project the merge request to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the merge request to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  The Label IDs to set. Replaces existing labels by default.\n  \n  \"\"\"\n  labelIds: [LabelID!]!\n\n  \"\"\"\n  Changes the operation mode. Defaults to REPLACE.\n  \n  \"\"\"\n  operationMode: MutationOperationMode\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestSetLabels\"\"\"\ntype MergeRequestSetLabelsPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\n\"\"\"Autogenerated input type of MergeRequestSetLocked\"\"\"\ninput MergeRequestSetLockedInput {\n  \"\"\"The project the merge request to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the merge request to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  Whether or not to lock the merge request.\n  \n  \"\"\"\n  locked: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestSetLocked\"\"\"\ntype MergeRequestSetLockedPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\n\"\"\"Autogenerated input type of MergeRequestSetMilestone\"\"\"\ninput MergeRequestSetMilestoneInput {\n  \"\"\"The project the merge request to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the merge request to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  The milestone to assign to the merge request.\n  \n  \"\"\"\n  milestoneId: MilestoneID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestSetMilestone\"\"\"\ntype MergeRequestSetMilestonePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\n\"\"\"Autogenerated input type of MergeRequestSetSubscription\"\"\"\ninput MergeRequestSetSubscriptionInput {\n  \"\"\"The project the merge request to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the merge request to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"The desired state of the subscription.\"\"\"\n  subscribedState: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestSetSubscription\"\"\"\ntype MergeRequestSetSubscriptionPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\n\"\"\"Autogenerated input type of MergeRequestSetWip\"\"\"\ninput MergeRequestSetWipInput {\n  \"\"\"The project the merge request to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the merge request to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"\n  Whether or not to set the merge request as a draft.\n  \n  \"\"\"\n  wip: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestSetWip\"\"\"\ntype MergeRequestSetWipPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\n\"\"\"Values for sorting merge requests\"\"\"\nenum MergeRequestSort {\n  \"\"\"Updated at descending order.\"\"\"\n  updated_desc @deprecated(reason: \"This was renamed. Please use `UPDATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at ascending order.\"\"\"\n  updated_asc @deprecated(reason: \"This was renamed. Please use `UPDATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at descending order.\"\"\"\n  created_desc @deprecated(reason: \"This was renamed. Please use `CREATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at ascending order.\"\"\"\n  created_asc @deprecated(reason: \"This was renamed. Please use `CREATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at descending order.\"\"\"\n  UPDATED_DESC\n\n  \"\"\"Updated at ascending order.\"\"\"\n  UPDATED_ASC\n\n  \"\"\"Created at descending order.\"\"\"\n  CREATED_DESC\n\n  \"\"\"Created at ascending order.\"\"\"\n  CREATED_ASC\n\n  \"\"\"Priority by ascending order.\"\"\"\n  PRIORITY_ASC\n\n  \"\"\"Priority by descending order.\"\"\"\n  PRIORITY_DESC\n\n  \"\"\"Label priority by ascending order.\"\"\"\n  LABEL_PRIORITY_ASC\n\n  \"\"\"Label priority by descending order.\"\"\"\n  LABEL_PRIORITY_DESC\n\n  \"\"\"Milestone due date by ascending order.\"\"\"\n  MILESTONE_DUE_ASC\n\n  \"\"\"Milestone due date by descending order.\"\"\"\n  MILESTONE_DUE_DESC\n\n  \"\"\"Merge time by ascending order.\"\"\"\n  MERGED_AT_ASC\n\n  \"\"\"Merge time by descending order.\"\"\"\n  MERGED_AT_DESC\n}\n\n\"\"\"State of a GitLab merge request\"\"\"\nenum MergeRequestState {\n  \"\"\"In open state.\"\"\"\n  opened\n\n  \"\"\"In closed state.\"\"\"\n  closed\n\n  \"\"\"Discussion has been locked.\"\"\"\n  locked\n\n  \"\"\"All available.\"\"\"\n  all\n\n  \"\"\"Merge request has been merged.\"\"\"\n  merged\n}\n\n\"\"\"Autogenerated input type of MergeRequestUpdate\"\"\"\ninput MergeRequestUpdateInput {\n  \"\"\"The project the merge request to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the merge request to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"Title of the merge request.\"\"\"\n  title: String\n\n  \"\"\"Target branch of the merge request.\"\"\"\n  targetBranch: String\n\n  \"\"\"\n  Description of the merge request (Markdown rendered as HTML for caching).\n  \"\"\"\n  description: String\n\n  \"\"\"The action to perform to change the state.\"\"\"\n  state: MergeRequestNewState\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of MergeRequestUpdate\"\"\"\ntype MergeRequestUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The merge request after mutation.\"\"\"\n  mergeRequest: MergeRequest\n}\n\ninput MergeRequestsResolverNegatedParams {\n  \"\"\"\n  Array of label names. All resolved merge requests will not have these labels.\n  \"\"\"\n  labels: [String!]\n\n  \"\"\"Title of the milestone.\"\"\"\n  milestoneTitle: String\n}\n\nenum MergeStrategyEnum {\n  \"\"\"Use the merge_train merge strategy.\"\"\"\n  MERGE_TRAIN\n\n  \"\"\"Use the add_to_merge_train_when_pipeline_succeeds merge strategy.\"\"\"\n  ADD_TO_MERGE_TRAIN_WHEN_PIPELINE_SUCCEEDS\n\n  \"\"\"Use the merge_when_pipeline_succeeds merge strategy.\"\"\"\n  MERGE_WHEN_PIPELINE_SUCCEEDS\n}\n\ntype Metadata {\n  \"\"\"Revision.\"\"\"\n  revision: String!\n\n  \"\"\"Version.\"\"\"\n  version: String!\n}\n\n\"\"\"Represents a metric image upload\"\"\"\ntype MetricImage {\n  \"\"\"File name of the metric image.\"\"\"\n  fileName: String\n\n  \"\"\"File path of the metric image.\"\"\"\n  filePath: String\n\n  \"\"\"ID of the metric upload.\"\"\"\n  id: ID!\n\n  \"\"\"Internal ID of the metric upload.\"\"\"\n  iid: ID!\n\n  \"\"\"URL of the metric source.\"\"\"\n  url: String!\n}\n\ntype MetricsDashboard {\n  \"\"\"Annotations added to the dashboard.\"\"\"\n  annotations(\n    \"\"\"\n    Timestamp marking date and time from which annotations need to be fetched.\n    \"\"\"\n    from: Time!\n\n    \"\"\"\n    Timestamp marking date and time to which annotations need to be fetched.\n    \"\"\"\n    to: Time\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MetricsDashboardAnnotationConnection\n\n  \"\"\"Path to a file with the dashboard definition.\"\"\"\n  path: String\n\n  \"\"\"Dashboard schema validation warnings.\"\"\"\n  schemaValidationWarnings: [String!]\n}\n\ntype MetricsDashboardAnnotation {\n  \"\"\"Description of the annotation.\"\"\"\n  description: String\n\n  \"\"\"Timestamp marking end of annotated time span.\"\"\"\n  endingAt: Time\n\n  \"\"\"ID of the annotation.\"\"\"\n  id: ID!\n\n  \"\"\"ID of a dashboard panel to which the annotation should be scoped.\"\"\"\n  panelId: String\n\n  \"\"\"Timestamp marking start of annotated time span.\"\"\"\n  startingAt: Time\n}\n\n\"\"\"The connection type for MetricsDashboardAnnotation.\"\"\"\ntype MetricsDashboardAnnotationConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [MetricsDashboardAnnotationEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [MetricsDashboardAnnotation]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MetricsDashboardAnnotationEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: MetricsDashboardAnnotation\n}\n\n\"\"\"\nA `MetricsDashboardAnnotationID` is a global ID. It is encoded as a string.\n\nAn example `MetricsDashboardAnnotationID` is: `\"gid://gitlab/Metrics::Dashboard::Annotation/1\"`.\n\n\"\"\"\nscalar MetricsDashboardAnnotationID\n\n\"\"\"Represents a milestone\"\"\"\ntype Milestone implements TimeboxReportInterface {\n  \"\"\"Timestamp of milestone creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Description of the milestone.\"\"\"\n  description: String\n\n  \"\"\"Timestamp of the milestone due date.\"\"\"\n  dueDate: Time\n\n  \"\"\"Indicates if milestone is at group level.\"\"\"\n  groupMilestone: Boolean!\n\n  \"\"\"ID of the milestone.\"\"\"\n  id: ID!\n\n  \"\"\"Internal ID of the milestone.\"\"\"\n  iid: ID!\n\n  \"\"\"Indicates if milestone is at project level.\"\"\"\n  projectMilestone: Boolean!\n\n  \"\"\"Historically accurate report about the timebox.\"\"\"\n  report: TimeboxReport\n\n  \"\"\"Timestamp of the milestone start date.\"\"\"\n  startDate: Time\n\n  \"\"\"State of the milestone.\"\"\"\n  state: MilestoneStateEnum!\n\n  \"\"\"Milestone statistics.\"\"\"\n  stats: MilestoneStats\n\n  \"\"\"Indicates if milestone is at subgroup level.\"\"\"\n  subgroupMilestone: Boolean!\n\n  \"\"\"Title of the milestone.\"\"\"\n  title: String!\n\n  \"\"\"Timestamp of last milestone update.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Web path of the milestone.\"\"\"\n  webPath: String!\n}\n\n\"\"\"The connection type for Milestone.\"\"\"\ntype MilestoneConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [MilestoneEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Milestone]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype MilestoneEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Milestone\n}\n\n\"\"\"\nA `MilestoneID` is a global ID. It is encoded as a string.\n\nAn example `MilestoneID` is: `\"gid://gitlab/Milestone/1\"`.\n\n\"\"\"\nscalar MilestoneID\n\n\"\"\"Current state of milestone\"\"\"\nenum MilestoneStateEnum {\n  \"\"\"Milestone is currently active.\"\"\"\n  active\n\n  \"\"\"Milestone is closed.\"\"\"\n  closed\n}\n\n\"\"\"Contains statistics about a milestone\"\"\"\ntype MilestoneStats {\n  \"\"\"Number of closed issues associated with the milestone.\"\"\"\n  closedIssuesCount: Int\n\n  \"\"\"Total number of issues associated with the milestone.\"\"\"\n  totalIssuesCount: Int\n}\n\n\"\"\"The position to which the adjacent object should be moved\"\"\"\nenum MoveType {\n  \"\"\"\n  The adjacent object will be moved before the object that is being moved.\n  \"\"\"\n  before\n\n  \"\"\"\n  The adjacent object will be moved after the object that is being moved.\n  \"\"\"\n  after\n}\n\ntype Mutation {\n  addAwardEmoji(\n    \"\"\"Parameters for AddAwardEmoji\"\"\"\n    input: AddAwardEmojiInput!\n  ): AddAwardEmojiPayload @deprecated(reason: \"Use awardEmojiAdd. Deprecated in 13.2.\")\n  addProjectToSecurityDashboard(\n    \"\"\"Parameters for AddProjectToSecurityDashboard\"\"\"\n    input: AddProjectToSecurityDashboardInput!\n  ): AddProjectToSecurityDashboardPayload\n  adminSidekiqQueuesDeleteJobs(\n    \"\"\"Parameters for AdminSidekiqQueuesDeleteJobs\"\"\"\n    input: AdminSidekiqQueuesDeleteJobsInput!\n  ): AdminSidekiqQueuesDeleteJobsPayload\n  alertSetAssignees(\n    \"\"\"Parameters for AlertSetAssignees\"\"\"\n    input: AlertSetAssigneesInput!\n  ): AlertSetAssigneesPayload\n  alertTodoCreate(\n    \"\"\"Parameters for AlertTodoCreate\"\"\"\n    input: AlertTodoCreateInput!\n  ): AlertTodoCreatePayload\n  apiFuzzingCiConfigurationCreate(\n    \"\"\"Parameters for ApiFuzzingCiConfigurationCreate\"\"\"\n    input: ApiFuzzingCiConfigurationCreateInput!\n  ): ApiFuzzingCiConfigurationCreatePayload\n  awardEmojiAdd(\n    \"\"\"Parameters for AwardEmojiAdd\"\"\"\n    input: AwardEmojiAddInput!\n  ): AwardEmojiAddPayload\n  awardEmojiRemove(\n    \"\"\"Parameters for AwardEmojiRemove\"\"\"\n    input: AwardEmojiRemoveInput!\n  ): AwardEmojiRemovePayload\n  awardEmojiToggle(\n    \"\"\"Parameters for AwardEmojiToggle\"\"\"\n    input: AwardEmojiToggleInput!\n  ): AwardEmojiTogglePayload\n  boardListCreate(\n    \"\"\"Parameters for BoardListCreate\"\"\"\n    input: BoardListCreateInput!\n  ): BoardListCreatePayload\n  boardListUpdateLimitMetrics(\n    \"\"\"Parameters for BoardListUpdateLimitMetrics\"\"\"\n    input: BoardListUpdateLimitMetricsInput!\n  ): BoardListUpdateLimitMetricsPayload\n  bulkFindOrCreateDevopsAdoptionSegments(\n    \"\"\"Parameters for BulkFindOrCreateDevopsAdoptionSegments\"\"\"\n    input: BulkFindOrCreateDevopsAdoptionSegmentsInput!\n  ): BulkFindOrCreateDevopsAdoptionSegmentsPayload\n  ciCdSettingsUpdate(\n    \"\"\"Parameters for CiCdSettingsUpdate\"\"\"\n    input: CiCdSettingsUpdateInput!\n  ): CiCdSettingsUpdatePayload\n  clusterAgentDelete(\n    \"\"\"Parameters for ClusterAgentDelete\"\"\"\n    input: ClusterAgentDeleteInput!\n  ): ClusterAgentDeletePayload\n  clusterAgentTokenCreate(\n    \"\"\"Parameters for ClusterAgentTokenCreate\"\"\"\n    input: ClusterAgentTokenCreateInput!\n  ): ClusterAgentTokenCreatePayload\n  clusterAgentTokenDelete(\n    \"\"\"Parameters for ClusterAgentTokenDelete\"\"\"\n    input: ClusterAgentTokenDeleteInput!\n  ): ClusterAgentTokenDeletePayload\n  commitCreate(\n    \"\"\"Parameters for CommitCreate\"\"\"\n    input: CommitCreateInput!\n  ): CommitCreatePayload\n  configureSast(\n    \"\"\"Parameters for ConfigureSast\"\"\"\n    input: ConfigureSastInput!\n  ): ConfigureSastPayload\n  createAlertIssue(\n    \"\"\"Parameters for CreateAlertIssue\"\"\"\n    input: CreateAlertIssueInput!\n  ): CreateAlertIssuePayload\n  createAnnotation(\n    \"\"\"Parameters for CreateAnnotation\"\"\"\n    input: CreateAnnotationInput!\n  ): CreateAnnotationPayload\n  createBoard(\n    \"\"\"Parameters for CreateBoard\"\"\"\n    input: CreateBoardInput!\n  ): CreateBoardPayload\n  createBranch(\n    \"\"\"Parameters for CreateBranch\"\"\"\n    input: CreateBranchInput!\n  ): CreateBranchPayload\n  createClusterAgent(\n    \"\"\"Parameters for CreateClusterAgent\"\"\"\n    input: CreateClusterAgentInput!\n  ): CreateClusterAgentPayload\n  createComplianceFramework(\n    \"\"\"Parameters for CreateComplianceFramework\"\"\"\n    input: CreateComplianceFrameworkInput!\n  ): CreateComplianceFrameworkPayload\n  createDevopsAdoptionSegment(\n    \"\"\"Parameters for CreateDevopsAdoptionSegment\"\"\"\n    input: CreateDevopsAdoptionSegmentInput!\n  ): CreateDevopsAdoptionSegmentPayload\n  createDiffNote(\n    \"\"\"Parameters for CreateDiffNote\"\"\"\n    input: CreateDiffNoteInput!\n  ): CreateDiffNotePayload\n  createEpic(\n    \"\"\"Parameters for CreateEpic\"\"\"\n    input: CreateEpicInput!\n  ): CreateEpicPayload\n  createImageDiffNote(\n    \"\"\"Parameters for CreateImageDiffNote\"\"\"\n    input: CreateImageDiffNoteInput!\n  ): CreateImageDiffNotePayload\n  createIssue(\n    \"\"\"Parameters for CreateIssue\"\"\"\n    input: CreateIssueInput!\n  ): CreateIssuePayload\n  createIteration(\n    \"\"\"Parameters for CreateIteration\"\"\"\n    input: CreateIterationInput!\n  ): CreateIterationPayload\n  createNote(\n    \"\"\"Parameters for CreateNote\"\"\"\n    input: CreateNoteInput!\n  ): CreateNotePayload\n  createRequirement(\n    \"\"\"Parameters for CreateRequirement\"\"\"\n    input: CreateRequirementInput!\n  ): CreateRequirementPayload\n  createSnippet(\n    \"\"\"Parameters for CreateSnippet\"\"\"\n    input: CreateSnippetInput!\n  ): CreateSnippetPayload\n  createTestCase(\n    \"\"\"Parameters for CreateTestCase\"\"\"\n    input: CreateTestCaseInput!\n  ): CreateTestCasePayload\n  dastOnDemandScanCreate(\n    \"\"\"Parameters for DastOnDemandScanCreate\"\"\"\n    input: DastOnDemandScanCreateInput!\n  ): DastOnDemandScanCreatePayload\n  dastProfileCreate(\n    \"\"\"Parameters for DastProfileCreate\"\"\"\n    input: DastProfileCreateInput!\n  ): DastProfileCreatePayload\n  dastProfileDelete(\n    \"\"\"Parameters for DastProfileDelete\"\"\"\n    input: DastProfileDeleteInput!\n  ): DastProfileDeletePayload\n  dastProfileRun(\n    \"\"\"Parameters for DastProfileRun\"\"\"\n    input: DastProfileRunInput!\n  ): DastProfileRunPayload\n  dastProfileUpdate(\n    \"\"\"Parameters for DastProfileUpdate\"\"\"\n    input: DastProfileUpdateInput!\n  ): DastProfileUpdatePayload\n  dastScannerProfileCreate(\n    \"\"\"Parameters for DastScannerProfileCreate\"\"\"\n    input: DastScannerProfileCreateInput!\n  ): DastScannerProfileCreatePayload\n  dastScannerProfileDelete(\n    \"\"\"Parameters for DastScannerProfileDelete\"\"\"\n    input: DastScannerProfileDeleteInput!\n  ): DastScannerProfileDeletePayload\n  dastScannerProfileUpdate(\n    \"\"\"Parameters for DastScannerProfileUpdate\"\"\"\n    input: DastScannerProfileUpdateInput!\n  ): DastScannerProfileUpdatePayload\n  dastSiteProfileCreate(\n    \"\"\"Parameters for DastSiteProfileCreate\"\"\"\n    input: DastSiteProfileCreateInput!\n  ): DastSiteProfileCreatePayload\n  dastSiteProfileDelete(\n    \"\"\"Parameters for DastSiteProfileDelete\"\"\"\n    input: DastSiteProfileDeleteInput!\n  ): DastSiteProfileDeletePayload\n  dastSiteProfileUpdate(\n    \"\"\"Parameters for DastSiteProfileUpdate\"\"\"\n    input: DastSiteProfileUpdateInput!\n  ): DastSiteProfileUpdatePayload\n  dastSiteTokenCreate(\n    \"\"\"Parameters for DastSiteTokenCreate\"\"\"\n    input: DastSiteTokenCreateInput!\n  ): DastSiteTokenCreatePayload\n  dastSiteValidationCreate(\n    \"\"\"Parameters for DastSiteValidationCreate\"\"\"\n    input: DastSiteValidationCreateInput!\n  ): DastSiteValidationCreatePayload\n  dastSiteValidationRevoke(\n    \"\"\"Parameters for DastSiteValidationRevoke\"\"\"\n    input: DastSiteValidationRevokeInput!\n  ): DastSiteValidationRevokePayload\n  deleteAnnotation(\n    \"\"\"Parameters for DeleteAnnotation\"\"\"\n    input: DeleteAnnotationInput!\n  ): DeleteAnnotationPayload\n  deleteDevopsAdoptionSegment(\n    \"\"\"Parameters for DeleteDevopsAdoptionSegment\"\"\"\n    input: DeleteDevopsAdoptionSegmentInput!\n  ): DeleteDevopsAdoptionSegmentPayload\n  designManagementDelete(\n    \"\"\"Parameters for DesignManagementDelete\"\"\"\n    input: DesignManagementDeleteInput!\n  ): DesignManagementDeletePayload\n  designManagementMove(\n    \"\"\"Parameters for DesignManagementMove\"\"\"\n    input: DesignManagementMoveInput!\n  ): DesignManagementMovePayload\n  designManagementUpload(\n    \"\"\"Parameters for DesignManagementUpload\"\"\"\n    input: DesignManagementUploadInput!\n  ): DesignManagementUploadPayload\n  destroyBoard(\n    \"\"\"Parameters for DestroyBoard\"\"\"\n    input: DestroyBoardInput!\n  ): DestroyBoardPayload\n  destroyBoardList(\n    \"\"\"Parameters for DestroyBoardList\"\"\"\n    input: DestroyBoardListInput!\n  ): DestroyBoardListPayload\n  destroyComplianceFramework(\n    \"\"\"Parameters for DestroyComplianceFramework\"\"\"\n    input: DestroyComplianceFrameworkInput!\n  ): DestroyComplianceFrameworkPayload\n  destroyContainerRepository(\n    \"\"\"Parameters for DestroyContainerRepository\"\"\"\n    input: DestroyContainerRepositoryInput!\n  ): DestroyContainerRepositoryPayload\n  destroyContainerRepositoryTags(\n    \"\"\"Parameters for DestroyContainerRepositoryTags\"\"\"\n    input: DestroyContainerRepositoryTagsInput!\n  ): DestroyContainerRepositoryTagsPayload\n  destroyEpicBoard(\n    \"\"\"Parameters for DestroyEpicBoard\"\"\"\n    input: DestroyEpicBoardInput!\n  ): DestroyEpicBoardPayload\n  destroyNote(\n    \"\"\"Parameters for DestroyNote\"\"\"\n    input: DestroyNoteInput!\n  ): DestroyNotePayload\n  destroySnippet(\n    \"\"\"Parameters for DestroySnippet\"\"\"\n    input: DestroySnippetInput!\n  ): DestroySnippetPayload\n\n  \"\"\"Toggles the resolved state of a discussion\"\"\"\n  discussionToggleResolve(\n    \"\"\"Parameters for DiscussionToggleResolve\"\"\"\n    input: DiscussionToggleResolveInput!\n  ): DiscussionToggleResolvePayload\n  dismissVulnerability(\n    \"\"\"Parameters for DismissVulnerability\"\"\"\n    input: DismissVulnerabilityInput!\n  ): DismissVulnerabilityPayload @deprecated(reason: \"Use vulnerabilityDismiss. Deprecated in 13.5.\")\n  environmentsCanaryIngressUpdate(\n    \"\"\"Parameters for EnvironmentsCanaryIngressUpdate\"\"\"\n    input: EnvironmentsCanaryIngressUpdateInput!\n  ): EnvironmentsCanaryIngressUpdatePayload\n  epicAddIssue(\n    \"\"\"Parameters for EpicAddIssue\"\"\"\n    input: EpicAddIssueInput!\n  ): EpicAddIssuePayload\n  epicBoardCreate(\n    \"\"\"Parameters for EpicBoardCreate\"\"\"\n    input: EpicBoardCreateInput!\n  ): EpicBoardCreatePayload\n  epicBoardListCreate(\n    \"\"\"Parameters for EpicBoardListCreate\"\"\"\n    input: EpicBoardListCreateInput!\n  ): EpicBoardListCreatePayload\n  epicBoardUpdate(\n    \"\"\"Parameters for EpicBoardUpdate\"\"\"\n    input: EpicBoardUpdateInput!\n  ): EpicBoardUpdatePayload\n  epicMoveList(\n    \"\"\"Parameters for EpicMoveList\"\"\"\n    input: EpicMoveListInput!\n  ): EpicMoveListPayload\n  epicSetSubscription(\n    \"\"\"Parameters for EpicSetSubscription\"\"\"\n    input: EpicSetSubscriptionInput!\n  ): EpicSetSubscriptionPayload\n  epicTreeReorder(\n    \"\"\"Parameters for EpicTreeReorder\"\"\"\n    input: EpicTreeReorderInput!\n  ): EpicTreeReorderPayload\n  exportRequirements(\n    \"\"\"Parameters for ExportRequirements\"\"\"\n    input: ExportRequirementsInput!\n  ): ExportRequirementsPayload\n  gitlabSubscriptionActivate(\n    \"\"\"Parameters for GitlabSubscriptionActivate\"\"\"\n    input: GitlabSubscriptionActivateInput!\n  ): GitlabSubscriptionActivatePayload\n  httpIntegrationCreate(\n    \"\"\"Parameters for HttpIntegrationCreate\"\"\"\n    input: HttpIntegrationCreateInput!\n  ): HttpIntegrationCreatePayload\n  httpIntegrationDestroy(\n    \"\"\"Parameters for HttpIntegrationDestroy\"\"\"\n    input: HttpIntegrationDestroyInput!\n  ): HttpIntegrationDestroyPayload\n  httpIntegrationResetToken(\n    \"\"\"Parameters for HttpIntegrationResetToken\"\"\"\n    input: HttpIntegrationResetTokenInput!\n  ): HttpIntegrationResetTokenPayload\n  httpIntegrationUpdate(\n    \"\"\"Parameters for HttpIntegrationUpdate\"\"\"\n    input: HttpIntegrationUpdateInput!\n  ): HttpIntegrationUpdatePayload\n  issueMove(\n    \"\"\"Parameters for IssueMove\"\"\"\n    input: IssueMoveInput!\n  ): IssueMovePayload\n  issueMoveList(\n    \"\"\"Parameters for IssueMoveList\"\"\"\n    input: IssueMoveListInput!\n  ): IssueMoveListPayload\n  issueSetAssignees(\n    \"\"\"Parameters for IssueSetAssignees\"\"\"\n    input: IssueSetAssigneesInput!\n  ): IssueSetAssigneesPayload\n  issueSetConfidential(\n    \"\"\"Parameters for IssueSetConfidential\"\"\"\n    input: IssueSetConfidentialInput!\n  ): IssueSetConfidentialPayload\n  issueSetDueDate(\n    \"\"\"Parameters for IssueSetDueDate\"\"\"\n    input: IssueSetDueDateInput!\n  ): IssueSetDueDatePayload\n  issueSetEpic(\n    \"\"\"Parameters for IssueSetEpic\"\"\"\n    input: IssueSetEpicInput!\n  ): IssueSetEpicPayload\n  issueSetIteration(\n    \"\"\"Parameters for IssueSetIteration\"\"\"\n    input: IssueSetIterationInput!\n  ): IssueSetIterationPayload\n  issueSetLocked(\n    \"\"\"Parameters for IssueSetLocked\"\"\"\n    input: IssueSetLockedInput!\n  ): IssueSetLockedPayload\n  issueSetSeverity(\n    \"\"\"Parameters for IssueSetSeverity\"\"\"\n    input: IssueSetSeverityInput!\n  ): IssueSetSeverityPayload\n  issueSetSubscription(\n    \"\"\"Parameters for IssueSetSubscription\"\"\"\n    input: IssueSetSubscriptionInput!\n  ): IssueSetSubscriptionPayload\n  issueSetWeight(\n    \"\"\"Parameters for IssueSetWeight\"\"\"\n    input: IssueSetWeightInput!\n  ): IssueSetWeightPayload\n  iterationCadenceCreate(\n    \"\"\"Parameters for IterationCadenceCreate\"\"\"\n    input: IterationCadenceCreateInput!\n  ): IterationCadenceCreatePayload\n  iterationCadenceDestroy(\n    \"\"\"Parameters for IterationCadenceDestroy\"\"\"\n    input: IterationCadenceDestroyInput!\n  ): IterationCadenceDestroyPayload\n  iterationCadenceUpdate(\n    \"\"\"Parameters for IterationCadenceUpdate\"\"\"\n    input: IterationCadenceUpdateInput!\n  ): IterationCadenceUpdatePayload\n  jiraImportStart(\n    \"\"\"Parameters for JiraImportStart\"\"\"\n    input: JiraImportStartInput!\n  ): JiraImportStartPayload\n  jiraImportUsers(\n    \"\"\"Parameters for JiraImportUsers\"\"\"\n    input: JiraImportUsersInput!\n  ): JiraImportUsersPayload\n  labelCreate(\n    \"\"\"Parameters for LabelCreate\"\"\"\n    input: LabelCreateInput!\n  ): LabelCreatePayload\n  markAsSpamSnippet(\n    \"\"\"Parameters for MarkAsSpamSnippet\"\"\"\n    input: MarkAsSpamSnippetInput!\n  ): MarkAsSpamSnippetPayload\n\n  \"\"\"\n  Accepts a merge request.\n  When accepted, the source branch will be merged into the target branch, either\n  immediately if possible, or using one of the automatic merge strategies.\n  \n  \"\"\"\n  mergeRequestAccept(\n    \"\"\"Parameters for MergeRequestAccept\"\"\"\n    input: MergeRequestAcceptInput!\n  ): MergeRequestAcceptPayload\n  mergeRequestCreate(\n    \"\"\"Parameters for MergeRequestCreate\"\"\"\n    input: MergeRequestCreateInput!\n  ): MergeRequestCreatePayload\n  mergeRequestReviewerRereview(\n    \"\"\"Parameters for MergeRequestReviewerRereview\"\"\"\n    input: MergeRequestReviewerRereviewInput!\n  ): MergeRequestReviewerRereviewPayload\n  mergeRequestSetAssignees(\n    \"\"\"Parameters for MergeRequestSetAssignees\"\"\"\n    input: MergeRequestSetAssigneesInput!\n  ): MergeRequestSetAssigneesPayload\n  mergeRequestSetLabels(\n    \"\"\"Parameters for MergeRequestSetLabels\"\"\"\n    input: MergeRequestSetLabelsInput!\n  ): MergeRequestSetLabelsPayload\n  mergeRequestSetLocked(\n    \"\"\"Parameters for MergeRequestSetLocked\"\"\"\n    input: MergeRequestSetLockedInput!\n  ): MergeRequestSetLockedPayload\n  mergeRequestSetMilestone(\n    \"\"\"Parameters for MergeRequestSetMilestone\"\"\"\n    input: MergeRequestSetMilestoneInput!\n  ): MergeRequestSetMilestonePayload\n  mergeRequestSetSubscription(\n    \"\"\"Parameters for MergeRequestSetSubscription\"\"\"\n    input: MergeRequestSetSubscriptionInput!\n  ): MergeRequestSetSubscriptionPayload\n  mergeRequestSetWip(\n    \"\"\"Parameters for MergeRequestSetWip\"\"\"\n    input: MergeRequestSetWipInput!\n  ): MergeRequestSetWipPayload\n\n  \"\"\"Update attributes of a merge request\"\"\"\n  mergeRequestUpdate(\n    \"\"\"Parameters for MergeRequestUpdate\"\"\"\n    input: MergeRequestUpdateInput!\n  ): MergeRequestUpdatePayload\n  namespaceIncreaseStorageTemporarily(\n    \"\"\"Parameters for NamespaceIncreaseStorageTemporarily\"\"\"\n    input: NamespaceIncreaseStorageTemporarilyInput!\n  ): NamespaceIncreaseStorageTemporarilyPayload\n  oncallRotationCreate(\n    \"\"\"Parameters for OncallRotationCreate\"\"\"\n    input: OncallRotationCreateInput!\n  ): OncallRotationCreatePayload\n  oncallRotationDestroy(\n    \"\"\"Parameters for OncallRotationDestroy\"\"\"\n    input: OncallRotationDestroyInput!\n  ): OncallRotationDestroyPayload\n  oncallRotationUpdate(\n    \"\"\"Parameters for OncallRotationUpdate\"\"\"\n    input: OncallRotationUpdateInput!\n  ): OncallRotationUpdatePayload\n  oncallScheduleCreate(\n    \"\"\"Parameters for OncallScheduleCreate\"\"\"\n    input: OncallScheduleCreateInput!\n  ): OncallScheduleCreatePayload\n  oncallScheduleDestroy(\n    \"\"\"Parameters for OncallScheduleDestroy\"\"\"\n    input: OncallScheduleDestroyInput!\n  ): OncallScheduleDestroyPayload\n  oncallScheduleUpdate(\n    \"\"\"Parameters for OncallScheduleUpdate\"\"\"\n    input: OncallScheduleUpdateInput!\n  ): OncallScheduleUpdatePayload\n  pipelineCancel(\n    \"\"\"Parameters for PipelineCancel\"\"\"\n    input: PipelineCancelInput!\n  ): PipelineCancelPayload\n  pipelineDestroy(\n    \"\"\"Parameters for PipelineDestroy\"\"\"\n    input: PipelineDestroyInput!\n  ): PipelineDestroyPayload\n  pipelineRetry(\n    \"\"\"Parameters for PipelineRetry\"\"\"\n    input: PipelineRetryInput!\n  ): PipelineRetryPayload\n  prometheusIntegrationCreate(\n    \"\"\"Parameters for PrometheusIntegrationCreate\"\"\"\n    input: PrometheusIntegrationCreateInput!\n  ): PrometheusIntegrationCreatePayload\n  prometheusIntegrationResetToken(\n    \"\"\"Parameters for PrometheusIntegrationResetToken\"\"\"\n    input: PrometheusIntegrationResetTokenInput!\n  ): PrometheusIntegrationResetTokenPayload\n  prometheusIntegrationUpdate(\n    \"\"\"Parameters for PrometheusIntegrationUpdate\"\"\"\n    input: PrometheusIntegrationUpdateInput!\n  ): PrometheusIntegrationUpdatePayload\n  promoteToEpic(\n    \"\"\"Parameters for PromoteToEpic\"\"\"\n    input: PromoteToEpicInput!\n  ): PromoteToEpicPayload\n  releaseAssetLinkCreate(\n    \"\"\"Parameters for ReleaseAssetLinkCreate\"\"\"\n    input: ReleaseAssetLinkCreateInput!\n  ): ReleaseAssetLinkCreatePayload\n  releaseAssetLinkDelete(\n    \"\"\"Parameters for ReleaseAssetLinkDelete\"\"\"\n    input: ReleaseAssetLinkDeleteInput!\n  ): ReleaseAssetLinkDeletePayload\n  releaseAssetLinkUpdate(\n    \"\"\"Parameters for ReleaseAssetLinkUpdate\"\"\"\n    input: ReleaseAssetLinkUpdateInput!\n  ): ReleaseAssetLinkUpdatePayload\n  releaseCreate(\n    \"\"\"Parameters for ReleaseCreate\"\"\"\n    input: ReleaseCreateInput!\n  ): ReleaseCreatePayload\n  releaseDelete(\n    \"\"\"Parameters for ReleaseDelete\"\"\"\n    input: ReleaseDeleteInput!\n  ): ReleaseDeletePayload\n  releaseUpdate(\n    \"\"\"Parameters for ReleaseUpdate\"\"\"\n    input: ReleaseUpdateInput!\n  ): ReleaseUpdatePayload\n  removeAwardEmoji(\n    \"\"\"Parameters for RemoveAwardEmoji\"\"\"\n    input: RemoveAwardEmojiInput!\n  ): RemoveAwardEmojiPayload @deprecated(reason: \"Use awardEmojiRemove. Deprecated in 13.2.\")\n  removeProjectFromSecurityDashboard(\n    \"\"\"Parameters for RemoveProjectFromSecurityDashboard\"\"\"\n    input: RemoveProjectFromSecurityDashboardInput!\n  ): RemoveProjectFromSecurityDashboardPayload\n\n  \"\"\"\n  Repositions a DiffNote on an image (a `Note` where the `position.positionType` is `\"image\"`)\n  \"\"\"\n  repositionImageDiffNote(\n    \"\"\"Parameters for RepositionImageDiffNote\"\"\"\n    input: RepositionImageDiffNoteInput!\n  ): RepositionImageDiffNotePayload\n  revertVulnerabilityToDetected(\n    \"\"\"Parameters for RevertVulnerabilityToDetected\"\"\"\n    input: RevertVulnerabilityToDetectedInput!\n  ): RevertVulnerabilityToDetectedPayload @deprecated(reason: \"Use vulnerabilityRevertToDetected. Deprecated in 13.5.\")\n  runDastScan(\n    \"\"\"Parameters for RunDASTScan\"\"\"\n    input: RunDASTScanInput!\n  ): RunDASTScanPayload @deprecated(reason: \"Use DastOnDemandScanCreate. Deprecated in 13.4.\")\n  terraformStateDelete(\n    \"\"\"Parameters for TerraformStateDelete\"\"\"\n    input: TerraformStateDeleteInput!\n  ): TerraformStateDeletePayload\n  terraformStateLock(\n    \"\"\"Parameters for TerraformStateLock\"\"\"\n    input: TerraformStateLockInput!\n  ): TerraformStateLockPayload\n  terraformStateUnlock(\n    \"\"\"Parameters for TerraformStateUnlock\"\"\"\n    input: TerraformStateUnlockInput!\n  ): TerraformStateUnlockPayload\n  todoCreate(\n    \"\"\"Parameters for TodoCreate\"\"\"\n    input: TodoCreateInput!\n  ): TodoCreatePayload\n  todoMarkDone(\n    \"\"\"Parameters for TodoMarkDone\"\"\"\n    input: TodoMarkDoneInput!\n  ): TodoMarkDonePayload\n  todoRestore(\n    \"\"\"Parameters for TodoRestore\"\"\"\n    input: TodoRestoreInput!\n  ): TodoRestorePayload\n  todoRestoreMany(\n    \"\"\"Parameters for TodoRestoreMany\"\"\"\n    input: TodoRestoreManyInput!\n  ): TodoRestoreManyPayload\n  todosMarkAllDone(\n    \"\"\"Parameters for TodosMarkAllDone\"\"\"\n    input: TodosMarkAllDoneInput!\n  ): TodosMarkAllDonePayload\n  toggleAwardEmoji(\n    \"\"\"Parameters for ToggleAwardEmoji\"\"\"\n    input: ToggleAwardEmojiInput!\n  ): ToggleAwardEmojiPayload @deprecated(reason: \"Use awardEmojiToggle. Deprecated in 13.2.\")\n  updateAlertStatus(\n    \"\"\"Parameters for UpdateAlertStatus\"\"\"\n    input: UpdateAlertStatusInput!\n  ): UpdateAlertStatusPayload\n  updateBoard(\n    \"\"\"Parameters for UpdateBoard\"\"\"\n    input: UpdateBoardInput!\n  ): UpdateBoardPayload\n  updateBoardEpicUserPreferences(\n    \"\"\"Parameters for UpdateBoardEpicUserPreferences\"\"\"\n    input: UpdateBoardEpicUserPreferencesInput!\n  ): UpdateBoardEpicUserPreferencesPayload\n  updateBoardList(\n    \"\"\"Parameters for UpdateBoardList\"\"\"\n    input: UpdateBoardListInput!\n  ): UpdateBoardListPayload\n  updateComplianceFramework(\n    \"\"\"Parameters for UpdateComplianceFramework\"\"\"\n    input: UpdateComplianceFrameworkInput!\n  ): UpdateComplianceFrameworkPayload\n  updateContainerExpirationPolicy(\n    \"\"\"Parameters for UpdateContainerExpirationPolicy\"\"\"\n    input: UpdateContainerExpirationPolicyInput!\n  ): UpdateContainerExpirationPolicyPayload\n  updateEpic(\n    \"\"\"Parameters for UpdateEpic\"\"\"\n    input: UpdateEpicInput!\n  ): UpdateEpicPayload\n  updateEpicBoardList(\n    \"\"\"Parameters for UpdateEpicBoardList\"\"\"\n    input: UpdateEpicBoardListInput!\n  ): UpdateEpicBoardListPayload\n\n  \"\"\"\n  Updates a DiffNote on an image (a `Note` where the `position.positionType` is `\"image\"`).\n  If the body of the Note contains only quick actions,\n  the Note will be destroyed during the update, and no Note will be\n  returned.\n  \n  \n  \"\"\"\n  updateImageDiffNote(\n    \"\"\"Parameters for UpdateImageDiffNote\"\"\"\n    input: UpdateImageDiffNoteInput!\n  ): UpdateImageDiffNotePayload\n  updateIssue(\n    \"\"\"Parameters for UpdateIssue\"\"\"\n    input: UpdateIssueInput!\n  ): UpdateIssuePayload\n  updateIteration(\n    \"\"\"Parameters for UpdateIteration\"\"\"\n    input: UpdateIterationInput!\n  ): UpdateIterationPayload\n  updateNamespacePackageSettings(\n    \"\"\"Parameters for UpdateNamespacePackageSettings\"\"\"\n    input: UpdateNamespacePackageSettingsInput!\n  ): UpdateNamespacePackageSettingsPayload\n\n  \"\"\"\n  Updates a Note.\n  If the body of the Note contains only quick actions,\n  the Note will be destroyed during the update, and no Note will be\n  returned.\n  \n  \"\"\"\n  updateNote(\n    \"\"\"Parameters for UpdateNote\"\"\"\n    input: UpdateNoteInput!\n  ): UpdateNotePayload\n  updateRequirement(\n    \"\"\"Parameters for UpdateRequirement\"\"\"\n    input: UpdateRequirementInput!\n  ): UpdateRequirementPayload\n  updateSnippet(\n    \"\"\"Parameters for UpdateSnippet\"\"\"\n    input: UpdateSnippetInput!\n  ): UpdateSnippetPayload\n  userCalloutCreate(\n    \"\"\"Parameters for UserCalloutCreate\"\"\"\n    input: UserCalloutCreateInput!\n  ): UserCalloutCreatePayload\n  vulnerabilityConfirm(\n    \"\"\"Parameters for VulnerabilityConfirm\"\"\"\n    input: VulnerabilityConfirmInput!\n  ): VulnerabilityConfirmPayload\n  vulnerabilityDismiss(\n    \"\"\"Parameters for VulnerabilityDismiss\"\"\"\n    input: VulnerabilityDismissInput!\n  ): VulnerabilityDismissPayload\n  vulnerabilityExternalIssueLinkCreate(\n    \"\"\"Parameters for VulnerabilityExternalIssueLinkCreate\"\"\"\n    input: VulnerabilityExternalIssueLinkCreateInput!\n  ): VulnerabilityExternalIssueLinkCreatePayload\n  vulnerabilityExternalIssueLinkDestroy(\n    \"\"\"Parameters for VulnerabilityExternalIssueLinkDestroy\"\"\"\n    input: VulnerabilityExternalIssueLinkDestroyInput!\n  ): VulnerabilityExternalIssueLinkDestroyPayload\n  vulnerabilityResolve(\n    \"\"\"Parameters for VulnerabilityResolve\"\"\"\n    input: VulnerabilityResolveInput!\n  ): VulnerabilityResolvePayload\n  vulnerabilityRevertToDetected(\n    \"\"\"Parameters for VulnerabilityRevertToDetected\"\"\"\n    input: VulnerabilityRevertToDetectedInput!\n  ): VulnerabilityRevertToDetectedPayload\n}\n\n\"\"\"Different toggles for changing mutator behavior\"\"\"\nenum MutationOperationMode {\n  \"\"\"Performs a replace operation.\"\"\"\n  REPLACE\n\n  \"\"\"Performs an append operation.\"\"\"\n  APPEND\n\n  \"\"\"Performs a removal operation.\"\"\"\n  REMOVE\n}\n\ntype Namespace {\n  \"\"\"Size limit for repositories in the namespace in bytes.\"\"\"\n  actualRepositorySizeLimit: Float\n\n  \"\"\"Additional storage purchased for the root namespace in bytes.\"\"\"\n  additionalPurchasedStorageSize: Float\n\n  \"\"\"\n  Compliance frameworks available to projects in this namespace. Available only when feature flag `ff_custom_compliance_frameworks` is enabled.\n  \"\"\"\n  complianceFrameworks(\n    \"\"\"Global ID of a specific compliance framework to return.\"\"\"\n    id: ComplianceManagementFrameworkID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ComplianceFrameworkConnection\n\n  \"\"\"\n  Includes at least one project where the repository size exceeds the limit.\n  \"\"\"\n  containsLockedProjects: Boolean!\n\n  \"\"\"Description of the namespace.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"Full name of the namespace.\"\"\"\n  fullName: String!\n\n  \"\"\"Full path of the namespace.\"\"\"\n  fullPath: ID!\n\n  \"\"\"ID of the namespace.\"\"\"\n  id: ID!\n\n  \"\"\"Status of the temporary storage increase.\"\"\"\n  isTemporaryStorageIncreaseEnabled: Boolean!\n\n  \"\"\"Indicates if Large File Storage (LFS) is enabled for namespace.\"\"\"\n  lfsEnabled: Boolean\n\n  \"\"\"Name of the namespace.\"\"\"\n  name: String!\n\n  \"\"\"The package settings for the namespace.\"\"\"\n  packageSettings: PackageSettings\n\n  \"\"\"Path of the namespace.\"\"\"\n  path: String!\n\n  \"\"\"Projects within this namespace.\"\"\"\n  projects(\n    \"\"\"Include also subgroup projects.\"\"\"\n    includeSubgroups: Boolean = false\n\n    \"\"\"Search project with most similar names or paths.\"\"\"\n    search: String = null\n\n    \"\"\"Sort projects by this criteria.\"\"\"\n    sort: NamespaceProjectSort = null\n\n    \"\"\"Filter projects by IDs.\"\"\"\n    ids: [ID!] = null\n\n    \"\"\"Returns only the projects which have code coverage.\"\"\"\n    hasCodeCoverage: Boolean = false\n\n    \"\"\"Returns only the projects which have vulnerabilities.\"\"\"\n    hasVulnerabilities: Boolean = false\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectConnection!\n\n  \"\"\"\n  Number of projects in the root namespace where the repository size exceeds the limit.\n  \"\"\"\n  repositorySizeExcessProjectCount: Int!\n\n  \"\"\"Indicates if users can request access to namespace.\"\"\"\n  requestAccessEnabled: Boolean\n\n  \"\"\"\n  Aggregated storage statistics of the namespace. Only available for root namespaces.\n  \"\"\"\n  rootStorageStatistics: RootStorageStatistics\n\n  \"\"\"Total storage limit of the root namespace in bytes.\"\"\"\n  storageSizeLimit: Float\n\n  \"\"\"Date until the temporary storage increase is active.\"\"\"\n  temporaryStorageIncreaseEndsOn: Time\n\n  \"\"\"Total repository size of all projects in the root namespace in bytes.\"\"\"\n  totalRepositorySize: Float\n\n  \"\"\"\n  Total excess repository size of all projects in the root namespace in bytes.\n  \"\"\"\n  totalRepositorySizeExcess: Float\n\n  \"\"\"Visibility of the namespace.\"\"\"\n  visibility: String\n}\n\n\"\"\"The connection type for Namespace.\"\"\"\ntype NamespaceConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [NamespaceEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Namespace]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype NamespaceEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Namespace\n}\n\n\"\"\"\nA `NamespaceID` is a global ID. It is encoded as a string.\n\nAn example `NamespaceID` is: `\"gid://gitlab/Namespace/1\"`.\n\n\"\"\"\nscalar NamespaceID\n\n\"\"\"Autogenerated input type of NamespaceIncreaseStorageTemporarily\"\"\"\ninput NamespaceIncreaseStorageTemporarilyInput {\n  \"\"\"The global ID of the namespace to mutate.\"\"\"\n  id: NamespaceID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of NamespaceIncreaseStorageTemporarily\"\"\"\ntype NamespaceIncreaseStorageTemporarilyPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The namespace after mutation.\"\"\"\n  namespace: Namespace\n}\n\n\"\"\"Values for sorting projects\"\"\"\nenum NamespaceProjectSort {\n  \"\"\"Most similar to the search query.\"\"\"\n  SIMILARITY\n\n  \"\"\"Sort by storage size.\"\"\"\n  STORAGE\n}\n\ninput NegatedBoardIssueInput {\n  \"\"\"Filter by label name.\"\"\"\n  labelName: [String]\n\n  \"\"\"Filter by author username.\"\"\"\n  authorUsername: String\n\n  \"\"\"Filter by reaction emoji applied by the current user.\"\"\"\n  myReactionEmoji: String\n\n  \"\"\"List of IIDs of issues. For example [\"1\", \"2\"].\"\"\"\n  iids: [String!]\n\n  \"\"\"Filter by milestone title.\"\"\"\n  milestoneTitle: String\n\n  \"\"\"Filter by assignee username.\"\"\"\n  assigneeUsername: [String]\n\n  \"\"\"Filter by release tag.\"\"\"\n  releaseTag: String\n\n  \"\"\"Filter by epic ID. Incompatible with epicWildcardId.\"\"\"\n  epicId: EpicID\n\n  \"\"\"Filter by iteration title.\"\"\"\n  iterationTitle: String\n\n  \"\"\"Filter by weight.\"\"\"\n  weight: String\n\n  \"\"\"\n  Filter by a list of iteration IDs. Incompatible with iterationWildcardId.\n  \"\"\"\n  iterationId: [IterationID!]\n\n  \"\"\"Filter by iteration ID wildcard.\"\"\"\n  iterationWildcardId: NegatedIterationWildcardId\n}\n\ninput NegatedEpicBoardIssueInput {\n  \"\"\"Filter by label name.\"\"\"\n  labelName: [String]\n\n  \"\"\"Filter by author username.\"\"\"\n  authorUsername: String\n\n  \"\"\"Filter by reaction emoji applied by the current user.\"\"\"\n  myReactionEmoji: String\n}\n\ninput NegatedIssueFilterInput {\n  \"\"\"List of IIDs of issues to exclude. For example, [1, 2].\"\"\"\n  iids: [String!]\n\n  \"\"\"Labels not applied to this issue.\"\"\"\n  labelName: [String!]\n\n  \"\"\"Milestone not applied to this issue.\"\"\"\n  milestoneTitle: [String!]\n\n  \"\"\"Usernames of users not assigned to the issue.\"\"\"\n  assigneeUsernames: [String!]\n\n  \"\"\"ID of a user not assigned to the issues.\"\"\"\n  assigneeId: String\n\n  \"\"\"ID of an epic not associated with the issues.\"\"\"\n  epicId: String\n\n  \"\"\"Weight not applied to the issue.\"\"\"\n  weight: String\n\n  \"\"\"List of iteration Global IDs not applied to the issue.\"\"\"\n  iterationId: [ID!]\n\n  \"\"\"Filter by negated iteration ID wildcard.\"\"\"\n  iterationWildcardId: IterationWildcardId\n}\n\n\"\"\"Negated Iteration ID wildcard values\"\"\"\nenum NegatedIterationWildcardId {\n  \"\"\"Current iteration.\"\"\"\n  CURRENT\n}\n\ntype Note implements ResolvableInterface {\n  \"\"\"User who wrote this note.\"\"\"\n  author: UserCore!\n\n  \"\"\"Content of the note.\"\"\"\n  body: String!\n\n  \"\"\"The GitLab Flavored Markdown rendering of `note`\"\"\"\n  bodyHtml: String\n\n  \"\"\"Indicates if this note is confidential.\"\"\"\n  confidential: Boolean\n\n  \"\"\"Timestamp of the note creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"The discussion this note is a part of.\"\"\"\n  discussion: Discussion\n\n  \"\"\"ID of the note.\"\"\"\n  id: NoteID!\n\n  \"\"\"The position of this note on a diff.\"\"\"\n  position: DiffPosition\n\n  \"\"\"Project associated with the note.\"\"\"\n  project: Project\n\n  \"\"\"Indicates if the object can be resolved.\"\"\"\n  resolvable: Boolean!\n\n  \"\"\"Indicates if the object is resolved.\"\"\"\n  resolved: Boolean!\n\n  \"\"\"Timestamp of when the object was resolved.\"\"\"\n  resolvedAt: Time\n\n  \"\"\"User who resolved the object.\"\"\"\n  resolvedBy: UserCore\n\n  \"\"\"Indicates whether this note was created by the system or by a user.\"\"\"\n  system: Boolean!\n\n  \"\"\"Name of the icon corresponding to a system note.\"\"\"\n  systemNoteIconName: String\n\n  \"\"\"Timestamp of the note's last activity.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"URL to view this Note in the Web UI.\"\"\"\n  url: String\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: NotePermissions!\n}\n\n\"\"\"The connection type for Note.\"\"\"\ntype NoteConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [NoteEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Note]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype NoteEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Note\n}\n\n\"\"\"\nA `NoteID` is a global ID. It is encoded as a string.\n\nAn example `NoteID` is: `\"gid://gitlab/Note/1\"`.\n\n\"\"\"\nscalar NoteID\n\ntype NotePermissions {\n  \"\"\"Indicates the user can perform `admin_note` on this resource\"\"\"\n  adminNote: Boolean!\n\n  \"\"\"Indicates the user can perform `award_emoji` on this resource\"\"\"\n  awardEmoji: Boolean!\n\n  \"\"\"Indicates the user can perform `create_note` on this resource\"\"\"\n  createNote: Boolean!\n\n  \"\"\"Indicates the user can perform `read_note` on this resource\"\"\"\n  readNote: Boolean!\n\n  \"\"\"Indicates the user can perform `reposition_note` on this resource\"\"\"\n  repositionNote: Boolean!\n\n  \"\"\"Indicates the user can perform `resolve_note` on this resource\"\"\"\n  resolveNote: Boolean!\n}\n\ninterface Noteable {\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n}\n\n\"\"\"\nA `NoteableID` is a global ID. It is encoded as a string.\n\nAn example `NoteableID` is: `\"gid://gitlab/Noteable/1\"`.\n\n\"\"\"\nscalar NoteableID\n\n\"\"\"The rotation participant and color palette\"\"\"\ntype OncallParticipantType {\n  \"\"\"The color palette to assign to the on-call user. For example \"blue\".\"\"\"\n  colorPalette: String\n\n  \"\"\"\n  The color weight to assign to for the on-call user, for example \"500\". Max 4 chars. For easy identification of the user.\n  \"\"\"\n  colorWeight: String\n\n  \"\"\"ID of the on-call participant.\"\"\"\n  id: IncidentManagementOncallParticipantID!\n\n  \"\"\"The user who is participating.\"\"\"\n  user: UserCore!\n}\n\n\"\"\"The connection type for OncallParticipantType.\"\"\"\ntype OncallParticipantTypeConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [OncallParticipantTypeEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [OncallParticipantType]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype OncallParticipantTypeEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: OncallParticipantType\n}\n\n\"\"\"Active period time range for on-call rotation\"\"\"\ninput OncallRotationActivePeriodInputType {\n  \"\"\"\n  The start of the rotation active period in 24 hour format, for example \"18:30\".\n  \"\"\"\n  startTime: String!\n\n  \"\"\"\n  The end of the rotation active period in 24 hour format, for example \"18:30\".\n  \"\"\"\n  endTime: String!\n}\n\n\"\"\"Active period time range for on-call rotation\"\"\"\ntype OncallRotationActivePeriodType {\n  \"\"\"The end of the rotation active period.\"\"\"\n  endTime: String\n\n  \"\"\"The start of the rotation active period.\"\"\"\n  startTime: String\n}\n\n\"\"\"Autogenerated input type of OncallRotationCreate\"\"\"\ninput OncallRotationCreateInput {\n  \"\"\"The project to create the on-call schedule in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the on-call schedule to create the on-call rotation in.\"\"\"\n  scheduleIid: String!\n\n  \"\"\"The name of the on-call rotation.\"\"\"\n  name: String!\n\n  \"\"\"\n  The start date and time of the on-call rotation, in the timezone of the on-call schedule.\n  \"\"\"\n  startsAt: OncallRotationDateInputType!\n\n  \"\"\"\n  The end date and time of the on-call rotation, in the timezone of the on-call schedule.\n  \"\"\"\n  endsAt: OncallRotationDateInputType\n\n  \"\"\"The rotation length of the on-call rotation.\"\"\"\n  rotationLength: OncallRotationLengthInputType!\n\n  \"\"\"The active period of time that the on-call rotation should take place.\"\"\"\n  activePeriod: OncallRotationActivePeriodInputType\n\n  \"\"\"\n  The usernames of users participating in the on-call rotation. A maximum limit of 100 participants applies.\n  \"\"\"\n  participants: [OncallUserInputType!]!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of OncallRotationCreate\"\"\"\ntype OncallRotationCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The on-call rotation.\"\"\"\n  oncallRotation: IncidentManagementOncallRotation\n}\n\n\"\"\"Date input type for on-call rotation\"\"\"\ninput OncallRotationDateInputType {\n  \"\"\"The date component of the date in YYYY-MM-DD format.\"\"\"\n  date: String!\n\n  \"\"\"The time component of the date in 24hr HH:MM format.\"\"\"\n  time: String!\n}\n\n\"\"\"Autogenerated input type of OncallRotationDestroy\"\"\"\ninput OncallRotationDestroyInput {\n  \"\"\"The project to remove the on-call schedule from.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the on-call schedule to the on-call rotation belongs to.\"\"\"\n  scheduleIid: String!\n\n  \"\"\"The ID of the on-call rotation to remove.\"\"\"\n  id: IncidentManagementOncallRotationID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of OncallRotationDestroy\"\"\"\ntype OncallRotationDestroyPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The on-call rotation.\"\"\"\n  oncallRotation: IncidentManagementOncallRotation\n}\n\n\"\"\"The rotation length of the on-call rotation\"\"\"\ninput OncallRotationLengthInputType {\n  \"\"\"The rotation length of the on-call rotation.\"\"\"\n  length: Int!\n\n  \"\"\"The unit of the rotation length of the on-call rotation.\"\"\"\n  unit: OncallRotationUnitEnum!\n}\n\n\"\"\"Rotation length unit of an on-call rotation\"\"\"\nenum OncallRotationUnitEnum {\n  \"\"\"Hours\"\"\"\n  HOURS\n\n  \"\"\"Days\"\"\"\n  DAYS\n\n  \"\"\"Weeks\"\"\"\n  WEEKS\n}\n\n\"\"\"Autogenerated input type of OncallRotationUpdate\"\"\"\ninput OncallRotationUpdateInput {\n  \"\"\"The ID of the on-call schedule to create the on-call rotation in.\"\"\"\n  id: IncidentManagementOncallRotationID!\n\n  \"\"\"The name of the on-call rotation.\"\"\"\n  name: String\n\n  \"\"\"\n  The start date and time of the on-call rotation, in the timezone of the on-call schedule.\n  \"\"\"\n  startsAt: OncallRotationDateInputType\n\n  \"\"\"\n  The end date and time of the on-call rotation, in the timezone of the on-call schedule.\n  \"\"\"\n  endsAt: OncallRotationDateInputType\n\n  \"\"\"The rotation length of the on-call rotation.\"\"\"\n  rotationLength: OncallRotationLengthInputType\n\n  \"\"\"The active period of time that the on-call rotation should take place.\"\"\"\n  activePeriod: OncallRotationActivePeriodInputType\n\n  \"\"\"\n  The usernames of users participating in the on-call rotation. A maximum limit of 100 participants applies.\n  \"\"\"\n  participants: [OncallUserInputType!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of OncallRotationUpdate\"\"\"\ntype OncallRotationUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The on-call rotation.\"\"\"\n  oncallRotation: IncidentManagementOncallRotation\n}\n\n\"\"\"Autogenerated input type of OncallScheduleCreate\"\"\"\ninput OncallScheduleCreateInput {\n  \"\"\"The project to create the on-call schedule in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The name of the on-call schedule.\"\"\"\n  name: String!\n\n  \"\"\"The description of the on-call schedule.\"\"\"\n  description: String\n\n  \"\"\"The timezone of the on-call schedule.\"\"\"\n  timezone: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of OncallScheduleCreate\"\"\"\ntype OncallScheduleCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The on-call schedule.\"\"\"\n  oncallSchedule: IncidentManagementOncallSchedule\n}\n\n\"\"\"Autogenerated input type of OncallScheduleDestroy\"\"\"\ninput OncallScheduleDestroyInput {\n  \"\"\"The project to remove the on-call schedule from.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The on-call schedule internal ID to remove.\"\"\"\n  iid: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of OncallScheduleDestroy\"\"\"\ntype OncallScheduleDestroyPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The on-call schedule.\"\"\"\n  oncallSchedule: IncidentManagementOncallSchedule\n}\n\n\"\"\"Autogenerated input type of OncallScheduleUpdate\"\"\"\ninput OncallScheduleUpdateInput {\n  \"\"\"The project to update the on-call schedule in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The on-call schedule internal ID to update.\"\"\"\n  iid: String!\n\n  \"\"\"The name of the on-call schedule.\"\"\"\n  name: String\n\n  \"\"\"The description of the on-call schedule.\"\"\"\n  description: String\n\n  \"\"\"The timezone of the on-call schedule.\"\"\"\n  timezone: String\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of OncallScheduleUpdate\"\"\"\ntype OncallScheduleUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The on-call schedule.\"\"\"\n  oncallSchedule: IncidentManagementOncallSchedule\n}\n\n\"\"\"The rotation user and color palette\"\"\"\ninput OncallUserInputType {\n  \"\"\"\n  The username of the user to participate in the on-call rotation, such as `user_one`.\n  \"\"\"\n  username: String!\n\n  \"\"\"\n  A value of DataVisualizationColorEnum. The color from the palette to assign to the on-call user.\n  \"\"\"\n  colorPalette: DataVisualizationColorEnum\n\n  \"\"\"\n  A value of DataVisualizationWeightEnum. The color weight to assign to for the on-call user. Note: To view on-call schedules in GitLab, do not provide a value below 500. A value between 500 and 950 ensures sufficient contrast.\n  \"\"\"\n  colorWeight: DataVisualizationWeightEnum\n}\n\n\"\"\"\nRepresents a package in the Package Registry. Note that this type is in beta and susceptible to changes\n\"\"\"\ntype Package {\n  \"\"\"Date of creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"ID of the package.\"\"\"\n  id: PackagesPackageID!\n\n  \"\"\"Package metadata.\"\"\"\n  metadata: PackageMetadata\n\n  \"\"\"Name of the package.\"\"\"\n  name: String!\n\n  \"\"\"Package type.\"\"\"\n  packageType: PackageTypeEnum!\n\n  \"\"\"Pipelines that built the package.\"\"\"\n  pipelines(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PipelineConnection\n\n  \"\"\"Project where the package is stored.\"\"\"\n  project: Project!\n\n  \"\"\"Package tags.\"\"\"\n  tags(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PackageTagConnection\n\n  \"\"\"Date of most recent update.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Version string.\"\"\"\n  version: String\n\n  \"\"\"\n  The other versions of the package. Deprecated in 13.11: This field is now only returned in the PackageDetailsType.\n  \"\"\"\n  versions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PackageConnection @deprecated(reason: \"This field is now only returned in the PackageDetailsType. Deprecated in 13.11.\")\n}\n\n\"\"\"Represents a composer JSON file\"\"\"\ntype PackageComposerJsonType {\n  \"\"\"The license set in the Composer JSON file.\"\"\"\n  license: String\n\n  \"\"\"The name set in the Composer JSON file.\"\"\"\n  name: String\n\n  \"\"\"The type set in the Composer JSON file.\"\"\"\n  type: String\n\n  \"\"\"The version set in the Composer JSON file.\"\"\"\n  version: String\n}\n\n\"\"\"The connection type for Package.\"\"\"\ntype PackageConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PackageEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Package]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nRepresents a package details in the Package Registry. Note that this type is in beta and susceptible to changes\n\"\"\"\ntype PackageDetailsType {\n  \"\"\"Date of creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"ID of the package.\"\"\"\n  id: PackagesPackageID!\n\n  \"\"\"Package metadata.\"\"\"\n  metadata: PackageMetadata\n\n  \"\"\"Name of the package.\"\"\"\n  name: String!\n\n  \"\"\"Package files.\"\"\"\n  packageFiles(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PackageFileConnection\n\n  \"\"\"Package type.\"\"\"\n  packageType: PackageTypeEnum!\n\n  \"\"\"Pipelines that built the package.\"\"\"\n  pipelines(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PipelineConnection\n\n  \"\"\"Project where the package is stored.\"\"\"\n  project: Project!\n\n  \"\"\"Package tags.\"\"\"\n  tags(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PackageTagConnection\n\n  \"\"\"Date of most recent update.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Version string.\"\"\"\n  version: String\n\n  \"\"\"The other versions of the package.\"\"\"\n  versions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PackageConnection\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PackageEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Package\n}\n\n\"\"\"Represents a package file\"\"\"\ntype PackageFile {\n  \"\"\"The created date.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Download path of the package file.\"\"\"\n  downloadPath: String!\n\n  \"\"\"Md5 of the package file.\"\"\"\n  fileMd5: String\n\n  \"\"\"File metadata.\"\"\"\n  fileMetadata: PackageFileMetadata\n\n  \"\"\"Name of the package file.\"\"\"\n  fileName: String!\n\n  \"\"\"Sha1 of the package file.\"\"\"\n  fileSha1: String\n\n  \"\"\"Sha256 of the package file.\"\"\"\n  fileSha256: String\n\n  \"\"\"ID of the file.\"\"\"\n  id: PackagesPackageFileID!\n\n  \"\"\"Size of the package file.\"\"\"\n  size: String!\n\n  \"\"\"The updated date.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"The connection type for PackageFile.\"\"\"\ntype PackageFileConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PackageFileEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [PackageFile]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PackageFileEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: PackageFile\n}\n\n\"\"\"Represents metadata associated with a Package file\"\"\"\ninterface PackageFileMetadata {\n  \"\"\"Date of creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Date of most recent update.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"Represents the Geo sync and verification state of a package file\"\"\"\ntype PackageFileRegistry {\n  \"\"\"Timestamp when the PackageFileRegistry was created\"\"\"\n  createdAt: Time\n\n  \"\"\"ID of the PackageFileRegistry\"\"\"\n  id: ID!\n\n  \"\"\"Error message during sync of the PackageFileRegistry\"\"\"\n  lastSyncFailure: String\n\n  \"\"\"\n  Timestamp of the most recent successful sync of the PackageFileRegistry\n  \"\"\"\n  lastSyncedAt: Time\n\n  \"\"\"ID of the PackageFile.\"\"\"\n  packageFileId: ID!\n\n  \"\"\"Timestamp after which the PackageFileRegistry should be resynced\"\"\"\n  retryAt: Time\n\n  \"\"\"Number of consecutive failed sync attempts of the PackageFileRegistry\"\"\"\n  retryCount: Int\n\n  \"\"\"Sync state of the PackageFileRegistry\"\"\"\n  state: RegistryState\n}\n\n\"\"\"The connection type for PackageFileRegistry.\"\"\"\ntype PackageFileRegistryConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PackageFileRegistryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [PackageFileRegistry]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PackageFileRegistryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: PackageFileRegistry\n}\n\n\"\"\"Values for sorting group packages\"\"\"\nenum PackageGroupSort {\n  \"\"\"Ordered by created_at in descending order.\"\"\"\n  CREATED_DESC\n\n  \"\"\"Ordered by created_at in ascending order.\"\"\"\n  CREATED_ASC\n\n  \"\"\"Ordered by name in descending order.\"\"\"\n  NAME_DESC\n\n  \"\"\"Ordered by name in ascending order.\"\"\"\n  NAME_ASC\n\n  \"\"\"Ordered by version in descending order.\"\"\"\n  VERSION_DESC\n\n  \"\"\"Ordered by version in ascending order.\"\"\"\n  VERSION_ASC\n\n  \"\"\"Ordered by type in descending order.\"\"\"\n  TYPE_DESC\n\n  \"\"\"Ordered by type in ascending order.\"\"\"\n  TYPE_ASC\n}\n\n\"\"\"Represents metadata associated with a Package\"\"\"\nunion PackageMetadata = ComposerMetadata | ConanMetadata\n\n\"\"\"Namespace-level Package Registry settings\"\"\"\ntype PackageSettings {\n  \"\"\"\n  When maven_duplicates_allowed is false, you can publish duplicate packages with names that match this regex. Otherwise, this setting has no effect.\n  \"\"\"\n  mavenDuplicateExceptionRegex: UntrustedRegexp\n\n  \"\"\"\n  Indicates whether duplicate Maven packages are allowed for this namespace.\n  \"\"\"\n  mavenDuplicatesAllowed: Boolean!\n}\n\n\"\"\"Values for sorting package\"\"\"\nenum PackageSort {\n  \"\"\"Ordered by created_at in descending order.\"\"\"\n  CREATED_DESC\n\n  \"\"\"Ordered by created_at in ascending order.\"\"\"\n  CREATED_ASC\n\n  \"\"\"Ordered by name in descending order.\"\"\"\n  NAME_DESC\n\n  \"\"\"Ordered by name in ascending order.\"\"\"\n  NAME_ASC\n\n  \"\"\"Ordered by version in descending order.\"\"\"\n  VERSION_DESC\n\n  \"\"\"Ordered by version in ascending order.\"\"\"\n  VERSION_ASC\n\n  \"\"\"Ordered by type in descending order.\"\"\"\n  TYPE_DESC\n\n  \"\"\"Ordered by type in ascending order.\"\"\"\n  TYPE_ASC\n}\n\n\"\"\"Represents a package tag\"\"\"\ntype PackageTag {\n  \"\"\"The created date.\"\"\"\n  createdAt: Time!\n\n  \"\"\"The ID of the tag.\"\"\"\n  id: ID!\n\n  \"\"\"The name of the tag.\"\"\"\n  name: String!\n\n  \"\"\"The updated date.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"The connection type for PackageTag.\"\"\"\ntype PackageTagConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PackageTagEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [PackageTag]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PackageTagEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: PackageTag\n}\n\nenum PackageTypeEnum {\n  \"\"\"Packages from the Maven package manager\"\"\"\n  MAVEN\n\n  \"\"\"Packages from the npm package manager\"\"\"\n  NPM\n\n  \"\"\"Packages from the Conan package manager\"\"\"\n  CONAN\n\n  \"\"\"Packages from the Nuget package manager\"\"\"\n  NUGET\n\n  \"\"\"Packages from the PyPI package manager\"\"\"\n  PYPI\n\n  \"\"\"Packages from the Composer package manager\"\"\"\n  COMPOSER\n\n  \"\"\"Packages from the Generic package manager\"\"\"\n  GENERIC\n\n  \"\"\"Packages from the Golang package manager\"\"\"\n  GOLANG\n\n  \"\"\"Packages from the Debian package manager\"\"\"\n  DEBIAN\n\n  \"\"\"Packages from the Rubygems package manager\"\"\"\n  RUBYGEMS\n}\n\n\"\"\"\nA `PackagesConanFileMetadatumID` is a global ID. It is encoded as a string.\n\nAn example `PackagesConanFileMetadatumID` is: `\"gid://gitlab/Packages::Conan::FileMetadatum/1\"`.\n\n\"\"\"\nscalar PackagesConanFileMetadatumID\n\n\"\"\"\nA `PackagesConanMetadatumID` is a global ID. It is encoded as a string.\n\nAn example `PackagesConanMetadatumID` is: `\"gid://gitlab/Packages::Conan::Metadatum/1\"`.\n\n\"\"\"\nscalar PackagesConanMetadatumID\n\n\"\"\"\nA `PackagesPackageFileID` is a global ID. It is encoded as a string.\n\nAn example `PackagesPackageFileID` is: `\"gid://gitlab/Packages::PackageFile/1\"`.\n\n\"\"\"\nscalar PackagesPackageFileID\n\n\"\"\"\nA `PackagesPackageID` is a global ID. It is encoded as a string.\n\nAn example `PackagesPackageID` is: `\"gid://gitlab/Packages::Package/1\"`.\n\n\"\"\"\nscalar PackagesPackageID\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n}\n\n\"\"\"String or integer.\"\"\"\nscalar PayloadAlertFieldPathSegment\n\ntype Pipeline {\n  \"\"\"Indicates if the pipeline is active.\"\"\"\n  active: Boolean!\n\n  \"\"\"Base SHA of the source branch.\"\"\"\n  beforeSha: String\n\n  \"\"\"Specifies if a pipeline can be canceled.\"\"\"\n  cancelable: Boolean!\n\n  \"\"\"Path to the commit that triggered the pipeline.\"\"\"\n  commitPath: String\n\n  \"\"\"Timestamp of the pipeline's commit.\"\"\"\n  committedAt: Time\n\n  \"\"\"\n  Configuration source of the pipeline (UNKNOWN_SOURCE, REPOSITORY_SOURCE, AUTO_DEVOPS_SOURCE, WEBIDE_SOURCE, REMOTE_SOURCE, EXTERNAL_PROJECT_SOURCE, BRIDGE_SOURCE, PARAMETER_SOURCE, COMPLIANCE_SOURCE)\n  \"\"\"\n  configSource: PipelineConfigSourceEnum\n\n  \"\"\"Coverage percentage.\"\"\"\n  coverage: Float\n\n  \"\"\"Timestamp of the pipeline's creation.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Detailed status of the pipeline.\"\"\"\n  detailedStatus: DetailedStatus!\n\n  \"\"\"Pipelines this pipeline will trigger.\"\"\"\n  downstream(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PipelineConnection\n\n  \"\"\"Duration of the pipeline in seconds.\"\"\"\n  duration: Int\n\n  \"\"\"Timestamp of the pipeline's completion.\"\"\"\n  finishedAt: Time\n\n  \"\"\"ID of the pipeline.\"\"\"\n  id: ID!\n\n  \"\"\"Internal ID of the pipeline.\"\"\"\n  iid: String!\n\n  \"\"\"A specific job in this pipeline, either by name or ID.\"\"\"\n  job(\n    \"\"\"ID of the job.\"\"\"\n    id: JobID\n\n    \"\"\"Name of the job.\"\"\"\n    name: String\n  ): CiJob\n\n  \"\"\"Jobs belonging to the pipeline.\"\"\"\n  jobs(\n    \"\"\"Filter jobs by the type of security report they produce.\"\"\"\n    securityReportTypes: [SecurityReportTypeEnum!]\n\n    \"\"\"Filter jobs by status.\"\"\"\n    statuses: [CiJobStatus!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiJobConnection\n\n  \"\"\"Relative path to the pipeline's page.\"\"\"\n  path: String\n\n  \"\"\"Project the pipeline belongs to.\"\"\"\n  project: Project\n\n  \"\"\"How long the pipeline was queued before starting.\"\"\"\n  queuedDuration: Duration\n\n  \"\"\"Specifies if a pipeline can be retried.\"\"\"\n  retryable: Boolean!\n\n  \"\"\"Vulnerability findings reported on the pipeline.\"\"\"\n  securityReportFindings(\n    \"\"\"Filter vulnerability findings by report type.\"\"\"\n    reportType: [String!]\n\n    \"\"\"Filter vulnerability findings by severity.\"\"\"\n    severity: [String!]\n\n    \"\"\"Filter vulnerability findings by Scanner.externalId.\"\"\"\n    scanner: [String!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PipelineSecurityReportFindingConnection\n\n  \"\"\"\n  Vulnerability and scanned resource counts for each security scanner of the pipeline.\n  \"\"\"\n  securityReportSummary: SecurityReportSummary\n\n  \"\"\"SHA of the pipeline's commit.\"\"\"\n  sha: String!\n\n  \"\"\"Job where pipeline was triggered from.\"\"\"\n  sourceJob: CiJob\n\n  \"\"\"Stages of the pipeline.\"\"\"\n  stages(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiStageConnection\n\n  \"\"\"Timestamp when the pipeline was started.\"\"\"\n  startedAt: Time\n\n  \"\"\"\n  Status of the pipeline (CREATED, WAITING_FOR_RESOURCE, PREPARING, PENDING, RUNNING, FAILED, SUCCESS, CANCELED, SKIPPED, MANUAL, SCHEDULED)\n  \"\"\"\n  status: PipelineStatusEnum!\n\n  \"\"\"Summary of the test report generated by the pipeline.\"\"\"\n  testReportSummary: TestReportSummary!\n\n  \"\"\"A specific test suite in a pipeline test report.\"\"\"\n  testSuite(\n    \"\"\"IDs of the builds used to run the test suite.\"\"\"\n    buildIds: [ID!]!\n  ): TestSuite\n\n  \"\"\"Timestamp of the pipeline's last activity.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Pipeline that triggered the pipeline.\"\"\"\n  upstream: Pipeline\n\n  \"\"\"Pipeline user.\"\"\"\n  user: UserCore\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: PipelinePermissions!\n\n  \"\"\"Indicates if the pipeline has jobs with `needs` dependencies.\"\"\"\n  usesNeeds: Boolean\n\n  \"\"\"Indicates if a pipeline has warnings.\"\"\"\n  warnings: Boolean!\n}\n\ntype PipelineAnalytics {\n  \"\"\"Labels for the monthly pipeline count.\"\"\"\n  monthPipelinesLabels: [String!]\n\n  \"\"\"Total monthly successful pipeline count.\"\"\"\n  monthPipelinesSuccessful: [Int!]\n\n  \"\"\"Total monthly pipeline count.\"\"\"\n  monthPipelinesTotals: [Int!]\n\n  \"\"\"Pipeline times labels.\"\"\"\n  pipelineTimesLabels: [String!]\n\n  \"\"\"Pipeline times.\"\"\"\n  pipelineTimesValues: [Int!]\n\n  \"\"\"Labels for the weekly pipeline count.\"\"\"\n  weekPipelinesLabels: [String!]\n\n  \"\"\"Total weekly successful pipeline count.\"\"\"\n  weekPipelinesSuccessful: [Int!]\n\n  \"\"\"Total weekly pipeline count.\"\"\"\n  weekPipelinesTotals: [Int!]\n\n  \"\"\"Labels for the yearly pipeline count.\"\"\"\n  yearPipelinesLabels: [String!]\n\n  \"\"\"Total yearly successful pipeline count.\"\"\"\n  yearPipelinesSuccessful: [Int!]\n\n  \"\"\"Total yearly pipeline count.\"\"\"\n  yearPipelinesTotals: [Int!]\n}\n\n\"\"\"Represents the Geo sync and verification state of a pipeline artifact\"\"\"\ntype PipelineArtifactRegistry {\n  \"\"\"Timestamp when the PipelineArtifactRegistry was created\"\"\"\n  createdAt: Time\n\n  \"\"\"ID of the PipelineArtifactRegistry\"\"\"\n  id: ID!\n\n  \"\"\"Error message during sync of the PipelineArtifactRegistry\"\"\"\n  lastSyncFailure: String\n\n  \"\"\"\n  Timestamp of the most recent successful sync of the PipelineArtifactRegistry\n  \"\"\"\n  lastSyncedAt: Time\n\n  \"\"\"ID of the pipeline artifact.\"\"\"\n  pipelineArtifactId: ID!\n\n  \"\"\"Timestamp after which the PipelineArtifactRegistry should be resynced\"\"\"\n  retryAt: Time\n\n  \"\"\"\n  Number of consecutive failed sync attempts of the PipelineArtifactRegistry\n  \"\"\"\n  retryCount: Int\n\n  \"\"\"Sync state of the PipelineArtifactRegistry\"\"\"\n  state: RegistryState\n}\n\n\"\"\"The connection type for PipelineArtifactRegistry.\"\"\"\ntype PipelineArtifactRegistryConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PipelineArtifactRegistryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [PipelineArtifactRegistry]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PipelineArtifactRegistryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: PipelineArtifactRegistry\n}\n\n\"\"\"Autogenerated input type of PipelineCancel\"\"\"\ninput PipelineCancelInput {\n  \"\"\"The ID of the pipeline to mutate.\"\"\"\n  id: CiPipelineID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of PipelineCancel\"\"\"\ntype PipelineCancelPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\nenum PipelineConfigSourceEnum {\n  \"\"\"Unknown source.\"\"\"\n  UNKNOWN_SOURCE\n\n  \"\"\"Repository source.\"\"\"\n  REPOSITORY_SOURCE\n\n  \"\"\"Auto DevOps source.\"\"\"\n  AUTO_DEVOPS_SOURCE\n\n  \"\"\"Webide source.\"\"\"\n  WEBIDE_SOURCE\n\n  \"\"\"Remote source.\"\"\"\n  REMOTE_SOURCE\n\n  \"\"\"External project source.\"\"\"\n  EXTERNAL_PROJECT_SOURCE\n\n  \"\"\"Bridge source.\"\"\"\n  BRIDGE_SOURCE\n\n  \"\"\"Parameter source.\"\"\"\n  PARAMETER_SOURCE\n\n  \"\"\"Compliance source.\"\"\"\n  COMPLIANCE_SOURCE\n}\n\n\"\"\"The connection type for Pipeline.\"\"\"\ntype PipelineConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PipelineEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Pipeline]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of PipelineDestroy\"\"\"\ninput PipelineDestroyInput {\n  \"\"\"The ID of the pipeline to mutate.\"\"\"\n  id: CiPipelineID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of PipelineDestroy\"\"\"\ntype PipelineDestroyPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PipelineEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Pipeline\n}\n\ntype PipelinePermissions {\n  \"\"\"Indicates the user can perform `admin_pipeline` on this resource\"\"\"\n  adminPipeline: Boolean!\n\n  \"\"\"Indicates the user can perform `destroy_pipeline` on this resource\"\"\"\n  destroyPipeline: Boolean!\n\n  \"\"\"Indicates the user can perform `update_pipeline` on this resource\"\"\"\n  updatePipeline: Boolean!\n}\n\n\"\"\"Autogenerated input type of PipelineRetry\"\"\"\ninput PipelineRetryInput {\n  \"\"\"The ID of the pipeline to mutate.\"\"\"\n  id: CiPipelineID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of PipelineRetry\"\"\"\ntype PipelineRetryPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The pipeline after mutation.\"\"\"\n  pipeline: Pipeline\n}\n\n\"\"\"Represents vulnerability finding of a security report on the pipeline.\"\"\"\ntype PipelineSecurityReportFinding {\n  \"\"\"Type of the security report that found the vulnerability.\"\"\"\n  confidence: String\n\n  \"\"\"Description of the vulnerability finding.\"\"\"\n  description: String\n\n  \"\"\"Identifiers of the vulnerabilit finding.\"\"\"\n  identifiers: [VulnerabilityIdentifier!]!\n\n  \"\"\"\n  Location metadata for the vulnerability. Its fields depend on the type of security scan that found the vulnerability.\n  \"\"\"\n  location: VulnerabilityLocation\n\n  \"\"\"Name of the vulnerability finding.\"\"\"\n  name: String\n\n  \"\"\"The project on which the vulnerability finding was found.\"\"\"\n  project: Project\n\n  \"\"\"Name of the vulnerability finding.\"\"\"\n  projectFingerprint: String\n\n  \"\"\"Type of the security report that found the vulnerability finding.\"\"\"\n  reportType: VulnerabilityReportType\n\n  \"\"\"Scanner metadata for the vulnerability.\"\"\"\n  scanner: VulnerabilityScanner\n\n  \"\"\"Severity of the vulnerability finding.\"\"\"\n  severity: VulnerabilitySeverity\n\n  \"\"\"URL to the vulnerability's details page.\"\"\"\n  solution: String\n\n  \"\"\"Name of the vulnerability finding.\"\"\"\n  uuid: String\n}\n\n\"\"\"The connection type for PipelineSecurityReportFinding.\"\"\"\ntype PipelineSecurityReportFindingConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [PipelineSecurityReportFindingEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [PipelineSecurityReportFinding]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PipelineSecurityReportFindingEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: PipelineSecurityReportFinding\n}\n\nenum PipelineStatusEnum {\n  \"\"\"Pipeline has been created\"\"\"\n  CREATED\n\n  \"\"\"\n  A resource (for example, a runner) that the pipeline requires to run is unavailable\n  \"\"\"\n  WAITING_FOR_RESOURCE\n\n  \"\"\"Pipeline is preparing to run\"\"\"\n  PREPARING\n\n  \"\"\"Pipeline has not started running yet\"\"\"\n  PENDING\n\n  \"\"\"Pipeline is running\"\"\"\n  RUNNING\n\n  \"\"\"At least one stage of the pipeline failed\"\"\"\n  FAILED\n\n  \"\"\"Pipeline completed successfully\"\"\"\n  SUCCESS\n\n  \"\"\"Pipeline was canceled before completion\"\"\"\n  CANCELED\n\n  \"\"\"Pipeline was skipped\"\"\"\n  SKIPPED\n\n  \"\"\"Pipeline needs to be manually started\"\"\"\n  MANUAL\n\n  \"\"\"Pipeline is scheduled to run\"\"\"\n  SCHEDULED\n}\n\ntype Project {\n  \"\"\"Size limit for the repository in bytes.\"\"\"\n  actualRepositorySizeLimit: Float\n\n  \"\"\"A single Alert Management alert of the project.\"\"\"\n  alertManagementAlert(\n    \"\"\"IID of the alert. For example, \"1\".\"\"\"\n    iid: String\n\n    \"\"\"Alerts with the specified statues. For example, [TRIGGERED].\"\"\"\n    statuses: [AlertManagementStatus!]\n\n    \"\"\"Sort alerts by this criteria.\"\"\"\n    sort: AlertManagementAlertSort\n\n    \"\"\"Filter query for given domain.\"\"\"\n    domain: AlertManagementDomainFilter!\n\n    \"\"\"Search query for title, description, service, or monitoring_tool.\"\"\"\n    search: String\n\n    \"\"\"Username of a user assigned to the issue.\"\"\"\n    assigneeUsername: String\n  ): AlertManagementAlert\n\n  \"\"\"Counts of alerts by status for the project.\"\"\"\n  alertManagementAlertStatusCounts(\n    \"\"\"Search query for title, description, service, or monitoring_tool.\"\"\"\n    search: String\n\n    \"\"\"Username of a user assigned to the issue.\"\"\"\n    assigneeUsername: String\n  ): AlertManagementAlertStatusCountsType\n\n  \"\"\"Alert Management alerts of the project.\"\"\"\n  alertManagementAlerts(\n    \"\"\"IID of the alert. For example, \"1\".\"\"\"\n    iid: String\n\n    \"\"\"Alerts with the specified statues. For example, [TRIGGERED].\"\"\"\n    statuses: [AlertManagementStatus!]\n\n    \"\"\"Sort alerts by this criteria.\"\"\"\n    sort: AlertManagementAlertSort\n\n    \"\"\"Filter query for given domain.\"\"\"\n    domain: AlertManagementDomainFilter!\n\n    \"\"\"Search query for title, description, service, or monitoring_tool.\"\"\"\n    search: String\n\n    \"\"\"Username of a user assigned to the issue.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): AlertManagementAlertConnection\n\n  \"\"\"HTTP Integrations which can receive alerts for the project.\"\"\"\n  alertManagementHttpIntegrations(\n    \"\"\"ID of the integration.\"\"\"\n    id: AlertManagementHttpIntegrationID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): AlertManagementHttpIntegrationConnection\n\n  \"\"\"Integrations which can receive alerts for the project.\"\"\"\n  alertManagementIntegrations(\n    \"\"\"ID of the integration.\"\"\"\n    id: GlobalID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): AlertManagementIntegrationConnection\n\n  \"\"\"Extract alert fields from payload for custom mapping.\"\"\"\n  alertManagementPayloadFields(\n    \"\"\"Sample payload for extracting alert fields for custom mappings.\"\"\"\n    payloadExample: String!\n  ): [AlertManagementPayloadAlertField!]\n\n  \"\"\"\n  If `only_allow_merge_if_pipeline_succeeds` is true, indicates if merge requests of the project can also be merged with skipped jobs.\n  \"\"\"\n  allowMergeOnSkippedPipeline: Boolean\n\n  \"\"\"API fuzzing configuration for the project. \"\"\"\n  apiFuzzingCiConfiguration: ApiFuzzingCiConfiguration\n\n  \"\"\"Indicates the archived status of the project.\"\"\"\n  archived: Boolean\n\n  \"\"\"\n  Indicates if issues referenced by merge requests and commits within the default branch are closed automatically.\n  \"\"\"\n  autocloseReferencedIssues: Boolean\n\n  \"\"\"URL to avatar image file of the project.\"\"\"\n  avatarUrl: String\n\n  \"\"\"A single board of the project.\"\"\"\n  board(\n    \"\"\"The board's ID.\"\"\"\n    id: BoardID!\n  ): Board\n\n  \"\"\"Boards of the project.\"\"\"\n  boards(\n    \"\"\"Find a board by its ID.\"\"\"\n    id: BoardID\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): BoardConnection\n\n  \"\"\"CI/CD settings for the project.\"\"\"\n  ciCdSettings: ProjectCiCdSetting\n\n  \"\"\"Find a single cluster agent by name.\"\"\"\n  clusterAgent(\n    \"\"\"Name of the cluster agent.\"\"\"\n    name: String!\n  ): ClusterAgent\n\n  \"\"\"Cluster agents associated with the project.\"\"\"\n  clusterAgents(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ClusterAgentConnection\n\n  \"\"\"Code coverage summary associated with the project.\"\"\"\n  codeCoverageSummary: CodeCoverageSummary\n\n  \"\"\"Compliance frameworks associated with the project.\"\"\"\n  complianceFrameworks(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ComplianceFrameworkConnection\n\n  \"\"\"The container expiration policy of the project.\"\"\"\n  containerExpirationPolicy: ContainerExpirationPolicy\n\n  \"\"\"\n  Indicates if the project stores Docker container images in a container registry.\n  \"\"\"\n  containerRegistryEnabled: Boolean\n\n  \"\"\"Container repositories of the project.\"\"\"\n  containerRepositories(\n    \"\"\"Filter the container repositories by their name.\"\"\"\n    name: String\n\n    \"\"\"Sort container repositories by this criteria.\"\"\"\n    sort: ContainerRepositorySort = null\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ContainerRepositoryConnection\n\n  \"\"\"Number of container repositories in the project.\"\"\"\n  containerRepositoriesCount: Int!\n\n  \"\"\"Timestamp of the project creation.\"\"\"\n  createdAt: Time\n\n  \"\"\"DAST Profiles associated with the project.\"\"\"\n  dastProfiles(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DastProfileConnection\n\n  \"\"\"The DAST scanner profiles associated with the project.\"\"\"\n  dastScannerProfiles(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DastScannerProfileConnection\n\n  \"\"\"DAST Site Profile associated with the project.\"\"\"\n  dastSiteProfile(\n    \"\"\"ID of the site profile.\"\"\"\n    id: DastSiteProfileID!\n  ): DastSiteProfile\n\n  \"\"\"DAST Site Profiles associated with the project.\"\"\"\n  dastSiteProfiles(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DastSiteProfileConnection\n\n  \"\"\"DAST Site Validations associated with the project.\"\"\"\n  dastSiteValidations(\n    \"\"\"Normalized URL of the target to be scanned.\"\"\"\n    normalizedTargetUrls: [String!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DastSiteValidationConnection\n\n  \"\"\"Short description of the project.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"A single environment of the project.\"\"\"\n  environment(\n    \"\"\"Name of the environment.\"\"\"\n    name: String\n\n    \"\"\"Search query for environment name.\"\"\"\n    search: String\n\n    \"\"\"States of environments that should be included in result.\"\"\"\n    states: [String!]\n  ): Environment\n\n  \"\"\"Environments of the project.\"\"\"\n  environments(\n    \"\"\"Name of the environment.\"\"\"\n    name: String\n\n    \"\"\"Search query for environment name.\"\"\"\n    search: String\n\n    \"\"\"States of environments that should be included in result.\"\"\"\n    states: [String!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): EnvironmentConnection\n\n  \"\"\"Number of times the project has been forked.\"\"\"\n  forksCount: Int!\n\n  \"\"\"Full path of the project.\"\"\"\n  fullPath: ID!\n\n  \"\"\"Grafana integration details for the project.\"\"\"\n  grafanaIntegration: GrafanaIntegration\n\n  \"\"\"Group of the project.\"\"\"\n  group: Group\n\n  \"\"\"URL to connect to the project via HTTPS.\"\"\"\n  httpUrlToRepo: String\n\n  \"\"\"ID of the project.\"\"\"\n  id: ID!\n\n  \"\"\"Status of import background job of the project.\"\"\"\n  importStatus: String\n\n  \"\"\"Incident Management On-call schedules of the project.\"\"\"\n  incidentManagementOncallSchedules(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IncidentManagementOncallScheduleConnection\n\n  \"\"\"A single issue of the project.\"\"\"\n  issue(\n    \"\"\"IID of the issue. For example, \"1\".\"\"\"\n    iid: String\n\n    \"\"\"List of IIDs of issues. For example, [\"1\", \"2\"].\"\"\"\n    iids: [String!]\n\n    \"\"\"Labels applied to this issue.\"\"\"\n    labelName: [String]\n\n    \"\"\"Milestone applied to this issue.\"\"\"\n    milestoneTitle: [String]\n\n    \"\"\"Username of the author of the issue.\"\"\"\n    authorUsername: String\n\n    \"\"\"Usernames of users assigned to the issue.\"\"\"\n    assigneeUsernames: [String!]\n\n    \"\"\"\n    ID of a user assigned to the issues, \"none\" and \"any\" values are supported.\n    \"\"\"\n    assigneeId: String\n\n    \"\"\"Issues created before this date.\"\"\"\n    createdBefore: Time\n\n    \"\"\"Issues created after this date.\"\"\"\n    createdAfter: Time\n\n    \"\"\"Issues updated before this date.\"\"\"\n    updatedBefore: Time\n\n    \"\"\"Issues updated after this date.\"\"\"\n    updatedAfter: Time\n\n    \"\"\"Issues closed before this date.\"\"\"\n    closedBefore: Time\n\n    \"\"\"Issues closed after this date.\"\"\"\n    closedAfter: Time\n\n    \"\"\"Search query for issue title or description.\"\"\"\n    search: String\n\n    \"\"\"Filter issues by the given issue types.\"\"\"\n    types: [IssueType!]\n\n    \"\"\"Negated arguments.\"\"\"\n    not: NegatedIssueFilterInput\n\n    \"\"\"Current state of this issue.\"\"\"\n    state: IssuableState\n\n    \"\"\"Sort issues by this criteria.\"\"\"\n    sort: IssueSort = null\n\n    \"\"\"List of iteration Global IDs applied to the issue.\"\"\"\n    iterationId: [ID]\n\n    \"\"\"Filter by iteration ID wildcard.\"\"\"\n    iterationWildcardId: IterationWildcardId\n\n    \"\"\"\n    ID of an epic associated with the issues, \"none\" and \"any\" values are supported.\n    \"\"\"\n    epicId: String\n\n    \"\"\"Weight applied to the issue, \"none\" and \"any\" values are supported.\"\"\"\n    weight: String\n  ): Issue\n\n  \"\"\"Counts of issues by status for the project.\"\"\"\n  issueStatusCounts(\n    \"\"\"IID of the issue. For example, \"1\".\"\"\"\n    iid: String\n\n    \"\"\"List of IIDs of issues. For example, [\"1\", \"2\"].\"\"\"\n    iids: [String!]\n\n    \"\"\"Labels applied to this issue.\"\"\"\n    labelName: [String]\n\n    \"\"\"Milestone applied to this issue.\"\"\"\n    milestoneTitle: [String]\n\n    \"\"\"Username of the author of the issue.\"\"\"\n    authorUsername: String\n\n    \"\"\"Usernames of users assigned to the issue.\"\"\"\n    assigneeUsernames: [String!]\n\n    \"\"\"\n    ID of a user assigned to the issues, \"none\" and \"any\" values are supported.\n    \"\"\"\n    assigneeId: String\n\n    \"\"\"Issues created before this date.\"\"\"\n    createdBefore: Time\n\n    \"\"\"Issues created after this date.\"\"\"\n    createdAfter: Time\n\n    \"\"\"Issues updated before this date.\"\"\"\n    updatedBefore: Time\n\n    \"\"\"Issues updated after this date.\"\"\"\n    updatedAfter: Time\n\n    \"\"\"Issues closed before this date.\"\"\"\n    closedBefore: Time\n\n    \"\"\"Issues closed after this date.\"\"\"\n    closedAfter: Time\n\n    \"\"\"Search query for issue title or description.\"\"\"\n    search: String\n\n    \"\"\"Filter issues by the given issue types.\"\"\"\n    types: [IssueType!]\n\n    \"\"\"Negated arguments.\"\"\"\n    not: NegatedIssueFilterInput\n  ): IssueStatusCountsType\n\n  \"\"\"Issues of the project.\"\"\"\n  issues(\n    \"\"\"IID of the issue. For example, \"1\".\"\"\"\n    iid: String\n\n    \"\"\"List of IIDs of issues. For example, [\"1\", \"2\"].\"\"\"\n    iids: [String!]\n\n    \"\"\"Labels applied to this issue.\"\"\"\n    labelName: [String]\n\n    \"\"\"Milestone applied to this issue.\"\"\"\n    milestoneTitle: [String]\n\n    \"\"\"Username of the author of the issue.\"\"\"\n    authorUsername: String\n\n    \"\"\"Usernames of users assigned to the issue.\"\"\"\n    assigneeUsernames: [String!]\n\n    \"\"\"\n    ID of a user assigned to the issues, \"none\" and \"any\" values are supported.\n    \"\"\"\n    assigneeId: String\n\n    \"\"\"Issues created before this date.\"\"\"\n    createdBefore: Time\n\n    \"\"\"Issues created after this date.\"\"\"\n    createdAfter: Time\n\n    \"\"\"Issues updated before this date.\"\"\"\n    updatedBefore: Time\n\n    \"\"\"Issues updated after this date.\"\"\"\n    updatedAfter: Time\n\n    \"\"\"Issues closed before this date.\"\"\"\n    closedBefore: Time\n\n    \"\"\"Issues closed after this date.\"\"\"\n    closedAfter: Time\n\n    \"\"\"Search query for issue title or description.\"\"\"\n    search: String\n\n    \"\"\"Filter issues by the given issue types.\"\"\"\n    types: [IssueType!]\n\n    \"\"\"Negated arguments.\"\"\"\n    not: NegatedIssueFilterInput\n\n    \"\"\"Current state of this issue.\"\"\"\n    state: IssuableState\n\n    \"\"\"Sort issues by this criteria.\"\"\"\n    sort: IssueSort = null\n\n    \"\"\"List of iteration Global IDs applied to the issue.\"\"\"\n    iterationId: [ID]\n\n    \"\"\"Filter by iteration ID wildcard.\"\"\"\n    iterationWildcardId: IterationWildcardId\n\n    \"\"\"\n    ID of an epic associated with the issues, \"none\" and \"any\" values are supported.\n    \"\"\"\n    epicId: String\n\n    \"\"\"Weight applied to the issue, \"none\" and \"any\" values are supported.\"\"\"\n    weight: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IssueConnection\n\n  \"\"\"Indicates if Issues are enabled for the current user\"\"\"\n  issuesEnabled: Boolean\n\n  \"\"\"Find iteration cadences.\"\"\"\n  iterationCadences(\n    \"\"\"Global ID of the iteration cadence to look up.\"\"\"\n    id: IterationsCadenceID\n\n    \"\"\"Fuzzy search by title.\"\"\"\n    title: String\n\n    \"\"\"Duration in weeks of the iterations within this cadence.\"\"\"\n    durationInWeeks: Int\n\n    \"\"\"\n    Whether the iteration cadence should automatically generate future iterations.\n    \"\"\"\n    automatic: Boolean\n\n    \"\"\"Whether the iteration cadence is active.\"\"\"\n    active: Boolean\n\n    \"\"\"Whether to include ancestor groups to search iterations cadences in.\"\"\"\n    includeAncestorGroups: Boolean\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IterationCadenceConnection\n\n  \"\"\"Find iterations.\"\"\"\n  iterations(\n    \"\"\"List items overlapping the given timeframe.\"\"\"\n    timeframe: Timeframe\n\n    \"\"\"Filter iterations by state.\"\"\"\n    state: IterationState\n\n    \"\"\"Fuzzy search by title.\"\"\"\n    title: String\n\n    \"\"\"Global ID of the Iteration to look up.\"\"\"\n    id: ID\n\n    \"\"\"Internal ID of the Iteration to look up.\"\"\"\n    iid: ID\n\n    \"\"\"Whether to include ancestor iterations. Defaults to true.\"\"\"\n    includeAncestors: Boolean\n\n    \"\"\"Global iteration cadence IDs by which to look up the iterations.\"\"\"\n    iterationCadenceIds: [IterationsCadenceID!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): IterationConnection\n\n  \"\"\"Status of Jira import background job of the project.\"\"\"\n  jiraImportStatus: String\n\n  \"\"\"Jira imports into the project.\"\"\"\n  jiraImports(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): JiraImportConnection\n\n  \"\"\"\n  Jobs of a project. This field can only be resolved for one project in any single request.\n  \"\"\"\n  jobs(\n    \"\"\"Filter jobs by status.\"\"\"\n    statuses: [CiJobStatus!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): CiJobConnection\n\n  \"\"\"Indicates if CI/CD pipeline jobs are enabled for the current user.\"\"\"\n  jobsEnabled: Boolean\n\n  \"\"\"A label available on this project.\"\"\"\n  label(\n    \"\"\"Title of the label.\"\"\"\n    title: String!\n  ): Label\n\n  \"\"\"Labels available on this project.\"\"\"\n  labels(\n    \"\"\"A search term to find labels with.\"\"\"\n    searchTerm: String\n\n    \"\"\"Include labels from ancestor groups.\"\"\"\n    includeAncestorGroups: Boolean = false\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LabelConnection\n\n  \"\"\"Timestamp of the project last activity.\"\"\"\n  lastActivityAt: Time\n\n  \"\"\"Indicates if the project has Large File Storage (LFS) enabled.\"\"\"\n  lfsEnabled: Boolean\n\n  \"\"\"A single merge request of the project.\"\"\"\n  mergeRequest(\n    \"\"\"IID of the merge request, for example `1`.\"\"\"\n    iid: String!\n  ): MergeRequest\n\n  \"\"\"Merge requests of the project.\"\"\"\n  mergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Username of the reviewer.\"\"\"\n    reviewerUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Indicates if Merge Requests are enabled for the current user\"\"\"\n  mergeRequestsEnabled: Boolean\n\n  \"\"\"\n  Indicates if no merge commits should be created and all merges should instead be fast-forwarded, which means that merging is only allowed if the branch could be fast-forwarded.\n  \"\"\"\n  mergeRequestsFfOnlyEnabled: Boolean\n\n  \"\"\"Milestones of the project.\"\"\"\n  milestones(\n    \"\"\"List items overlapping the given timeframe.\"\"\"\n    timeframe: Timeframe\n\n    \"\"\"Array of global milestone IDs, e.g., `\"gid://gitlab/Milestone/1\"`.\"\"\"\n    ids: [ID!]\n\n    \"\"\"Filter milestones by state.\"\"\"\n    state: MilestoneStateEnum\n\n    \"\"\"The title of the milestone.\"\"\"\n    title: String\n\n    \"\"\"A search string for the title.\"\"\"\n    searchTitle: String\n\n    \"\"\"A date that the milestone contains.\"\"\"\n    containingDate: Time\n\n    \"\"\"\n    Also return milestones in the project's parent group and its ancestors.\n    \"\"\"\n    includeAncestors: Boolean\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MilestoneConnection\n\n  \"\"\"Name of the project (without namespace).\"\"\"\n  name: String!\n\n  \"\"\"Full name of the project with its namespace.\"\"\"\n  nameWithNamespace: String!\n\n  \"\"\"Namespace of the project.\"\"\"\n  namespace: Namespace\n\n  \"\"\"\n  Indicates if merge requests of the project can only be merged when all the discussions are resolved.\n  \"\"\"\n  onlyAllowMergeIfAllDiscussionsAreResolved: Boolean\n\n  \"\"\"\n  Indicates if merge requests of the project can only be merged with successful jobs.\n  \"\"\"\n  onlyAllowMergeIfPipelineSucceeds: Boolean\n\n  \"\"\"Number of open issues for the project.\"\"\"\n  openIssuesCount: Int\n\n  \"\"\"Packages of the project.\"\"\"\n  packages(\n    \"\"\"Sort packages by this criteria.\"\"\"\n    sort: PackageSort = null\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PackageConnection\n\n  \"\"\"Path of the project.\"\"\"\n  path: String!\n\n  \"\"\"Build pipeline of the project.\"\"\"\n  pipeline(\n    \"\"\"IID of the Pipeline. For example, \"1\".\"\"\"\n    iid: ID\n\n    \"\"\"\n    SHA of the Pipeline. For example, \"dyd0f15ay83993f5ab66k927w28673882x99100b\".\n    \"\"\"\n    sha: String\n  ): Pipeline\n\n  \"\"\"Pipeline analytics.\"\"\"\n  pipelineAnalytics: PipelineAnalytics\n\n  \"\"\"Build pipelines of the project.\"\"\"\n  pipelines(\n    \"\"\"Filter pipelines by their status.\"\"\"\n    status: PipelineStatusEnum\n\n    \"\"\"Filter pipelines by the ref they are run for.\"\"\"\n    ref: String\n\n    \"\"\"Filter pipelines by the sha of the commit they are run for.\"\"\"\n    sha: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): PipelineConnection\n\n  \"\"\"\n  Indicates if a link to create or view a merge request should display after a push to Git repositories of the project from the command line.\n  \"\"\"\n  printingMergeRequestLinkEnabled: Boolean\n\n  \"\"\"Members of the project.\"\"\"\n  projectMembers(\n    \"\"\"Search query.\"\"\"\n    search: String\n\n    \"\"\"Filter members by the given member relations.\"\"\"\n    relations: [ProjectMemberRelation!] = []\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MemberInterfaceConnection\n\n  \"\"\"\n  Indicates if there is public access to pipelines and job details of the project, including output logs and artifacts.\n  \"\"\"\n  publicJobs: Boolean\n\n  \"\"\"The project's push rules settings.\"\"\"\n  pushRules: PushRules\n\n  \"\"\"A single release of the project.\"\"\"\n  release(\n    \"\"\"The name of the tag associated to the release.\"\"\"\n    tagName: String!\n  ): Release\n\n  \"\"\"Releases of the project.\"\"\"\n  releases(\n    \"\"\"Sort releases by this criteria.\"\"\"\n    sort: ReleaseSort = null\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ReleaseConnection\n\n  \"\"\"\n  Indicates if `Delete source branch` option should be enabled by default for all new merge requests of the project.\n  \"\"\"\n  removeSourceBranchAfterMerge: Boolean\n\n  \"\"\"Git repository of the project.\"\"\"\n  repository: Repository\n\n  \"\"\"Size of repository that exceeds the limit in bytes.\"\"\"\n  repositorySizeExcess: Float\n\n  \"\"\"Indicates if users can request member access to the project.\"\"\"\n  requestAccessEnabled: Boolean\n\n  \"\"\"Find a single requirement.\"\"\"\n  requirement(\n    \"\"\"List requirements by sort order.\"\"\"\n    sort: Sort\n\n    \"\"\"Filter requirements by state.\"\"\"\n    state: RequirementState\n\n    \"\"\"Search query for requirement title.\"\"\"\n    search: String\n\n    \"\"\"Filter requirements by author username.\"\"\"\n    authorUsername: [String!]\n\n    \"\"\"IID of the requirement, e.g., \"1\".\"\"\"\n    iid: ID\n\n    \"\"\"List of IIDs of requirements, e.g., [1, 2].\"\"\"\n    iids: [ID!]\n\n    \"\"\"The state of latest requirement test report.\"\"\"\n    lastTestReportState: RequirementStatusFilter\n  ): Requirement\n\n  \"\"\"Number of requirements for the project by their state.\"\"\"\n  requirementStatesCount: RequirementStatesCount\n\n  \"\"\"Find requirements.\"\"\"\n  requirements(\n    \"\"\"List requirements by sort order.\"\"\"\n    sort: Sort\n\n    \"\"\"Filter requirements by state.\"\"\"\n    state: RequirementState\n\n    \"\"\"Search query for requirement title.\"\"\"\n    search: String\n\n    \"\"\"Filter requirements by author username.\"\"\"\n    authorUsername: [String!]\n\n    \"\"\"IID of the requirement, e.g., \"1\".\"\"\"\n    iid: ID\n\n    \"\"\"List of IIDs of requirements, e.g., [1, 2].\"\"\"\n    iids: [ID!]\n\n    \"\"\"The state of latest requirement test report.\"\"\"\n    lastTestReportState: RequirementStatusFilter\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): RequirementConnection\n\n  \"\"\"SAST CI configuration for the project.\"\"\"\n  sastCiConfiguration: SastCiConfiguration\n\n  \"\"\"Path to project's security dashboard.\"\"\"\n  securityDashboardPath: String\n\n  \"\"\"Information about security analyzers used in the project.\"\"\"\n  securityScanners: SecurityScanners\n\n  \"\"\"Detailed version of a Sentry error on the project.\"\"\"\n  sentryDetailedError(\n    \"\"\"ID of the Sentry issue.\"\"\"\n    id: GitlabErrorTrackingDetailedErrorID!\n  ): SentryDetailedError\n\n  \"\"\"Paginated collection of Sentry errors on the project.\"\"\"\n  sentryErrors: SentryErrorCollection\n\n  \"\"\"E-mail address of the service desk.\"\"\"\n  serviceDeskAddress: String\n\n  \"\"\"Indicates if the project has service desk enabled.\"\"\"\n  serviceDeskEnabled: Boolean\n\n  \"\"\"Project services.\"\"\"\n  services(\n    \"\"\"Indicates if the service is active.\"\"\"\n    active: Boolean\n\n    \"\"\"Class name of the service.\"\"\"\n    type: ServiceType\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ServiceConnection\n\n  \"\"\"Indicates if shared runners are enabled for the project.\"\"\"\n  sharedRunnersEnabled: Boolean\n\n  \"\"\"Snippets of the project.\"\"\"\n  snippets(\n    \"\"\"\n    Array of global snippet IDs. For example, `gid://gitlab/ProjectSnippet/1`.\n    \"\"\"\n    ids: [SnippetID!]\n\n    \"\"\"The visibility of the snippet.\"\"\"\n    visibility: VisibilityScopesEnum\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SnippetConnection\n\n  \"\"\"Indicates if Snippets are enabled for the current user\"\"\"\n  snippetsEnabled: Boolean\n\n  \"\"\"Indicates if `squashReadOnly` is enabled.\"\"\"\n  squashReadOnly: Boolean!\n\n  \"\"\"URL to connect to the project via SSH.\"\"\"\n  sshUrlToRepo: String\n\n  \"\"\"Number of times the project has been starred.\"\"\"\n  starCount: Int!\n\n  \"\"\"Statistics of the project.\"\"\"\n  statistics: ProjectStatistics\n\n  \"\"\"The commit message used to apply merge request suggestions.\"\"\"\n  suggestionCommitMessage: String\n\n  \"\"\"List of project topics (not Git tags).\"\"\"\n  tagList: String\n\n  \"\"\"Find a single Terraform state by name.\"\"\"\n  terraformState(\n    \"\"\"Name of the Terraform state.\"\"\"\n    name: String!\n  ): TerraformState\n\n  \"\"\"Terraform states associated with the project.\"\"\"\n  terraformStates(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TerraformStateConnection\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: ProjectPermissions!\n\n  \"\"\"Visibility of the project.\"\"\"\n  visibility: String\n\n  \"\"\"Vulnerabilities reported on the project.\"\"\"\n  vulnerabilities(\n    \"\"\"Filter vulnerabilities by project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"Filter vulnerabilities by report type.\"\"\"\n    reportType: [VulnerabilityReportType!]\n\n    \"\"\"Filter vulnerabilities by severity.\"\"\"\n    severity: [VulnerabilitySeverity!]\n\n    \"\"\"Filter vulnerabilities by state.\"\"\"\n    state: [VulnerabilityState!]\n\n    \"\"\"Filter vulnerabilities by VulnerabilityScanner.externalId.\"\"\"\n    scanner: [String!]\n\n    \"\"\"Filter vulnerabilities by scanner ID.\"\"\"\n    scannerId: [VulnerabilitiesScannerID!]\n\n    \"\"\"List vulnerabilities by sort order.\"\"\"\n    sort: VulnerabilitySort = null\n\n    \"\"\"\n    Returns only the vulnerabilities which have been resolved on default branch.\n    \"\"\"\n    hasResolution: Boolean\n\n    \"\"\"Returns only the vulnerabilities which have linked issues.\"\"\"\n    hasIssues: Boolean\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilityConnection\n\n  \"\"\"Number of vulnerabilities per day for the project.\"\"\"\n  vulnerabilitiesCountByDay(\n    \"\"\"First day for which to fetch vulnerability history.\"\"\"\n    startDate: ISO8601Date!\n\n    \"\"\"Last day for which to fetch vulnerability history.\"\"\"\n    endDate: ISO8601Date!\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilitiesCountByDayConnection\n\n  \"\"\"Vulnerability scanners reported on the project vulnerabilities.\"\"\"\n  vulnerabilityScanners(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilityScannerConnection\n\n  \"\"\"Counts for each vulnerability severity in the project.\"\"\"\n  vulnerabilitySeveritiesCount(\n    \"\"\"Filter vulnerabilities by project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"Filter vulnerabilities by report type.\"\"\"\n    reportType: [VulnerabilityReportType!]\n\n    \"\"\"Filter vulnerabilities by severity.\"\"\"\n    severity: [VulnerabilitySeverity!]\n\n    \"\"\"Filter vulnerabilities by state.\"\"\"\n    state: [VulnerabilityState!]\n\n    \"\"\"Filter vulnerabilities by scanner.\"\"\"\n    scanner: [String!]\n  ): VulnerabilitySeveritiesCount\n\n  \"\"\"Web URL of the project.\"\"\"\n  webUrl: String\n\n  \"\"\"Indicates if Wikis are enabled for the current user\"\"\"\n  wikiEnabled: Boolean\n}\n\ntype ProjectCiCdSetting {\n  \"\"\"Whether to keep the latest builds artifacts.\"\"\"\n  keepLatestArtifact: Boolean\n\n  \"\"\"Whether merge pipelines are enabled.\"\"\"\n  mergePipelinesEnabled: Boolean\n\n  \"\"\"Whether merge trains are enabled.\"\"\"\n  mergeTrainsEnabled: Boolean\n\n  \"\"\"Project the CI/CD settings belong to.\"\"\"\n  project: Project\n}\n\n\"\"\"The connection type for Project.\"\"\"\ntype ProjectConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ProjectEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Project]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ProjectEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Project\n}\n\n\"\"\"\nA `ProjectID` is a global ID. It is encoded as a string.\n\nAn example `ProjectID` is: `\"gid://gitlab/Project/1\"`.\n\n\"\"\"\nscalar ProjectID\n\n\"\"\"Represents a Project Membership\"\"\"\ntype ProjectMember implements MemberInterface {\n  \"\"\"GitLab::Access level.\"\"\"\n  accessLevel: AccessLevel\n\n  \"\"\"Date and time the membership was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"User that authorized membership.\"\"\"\n  createdBy: UserCore\n\n  \"\"\"Date and time the membership expires.\"\"\"\n  expiresAt: Time\n\n  \"\"\"ID of the member.\"\"\"\n  id: ID!\n\n  \"\"\"Project that User is a member of.\"\"\"\n  project: Project\n\n  \"\"\"Date and time the membership was last updated.\"\"\"\n  updatedAt: Time\n\n  \"\"\"User that is associated with the member object.\"\"\"\n  user: UserCore!\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: ProjectPermissions!\n}\n\n\"\"\"The connection type for ProjectMember.\"\"\"\ntype ProjectMemberConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ProjectMemberEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ProjectMember]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ProjectMemberEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ProjectMember\n}\n\n\"\"\"Project member relation\"\"\"\nenum ProjectMemberRelation {\n  \"\"\"Direct members\"\"\"\n  DIRECT\n\n  \"\"\"Inherited members\"\"\"\n  INHERITED\n\n  \"\"\"Descendants members\"\"\"\n  DESCENDANTS\n\n  \"\"\"Invited Groups members\"\"\"\n  INVITED_GROUPS\n}\n\ntype ProjectPermissions {\n  \"\"\"Indicates the user can perform `admin_operations` on this resource\"\"\"\n  adminOperations: Boolean!\n\n  \"\"\"Indicates the user can perform `admin_project` on this resource\"\"\"\n  adminProject: Boolean!\n\n  \"\"\"Indicates the user can perform `admin_remote_mirror` on this resource\"\"\"\n  adminRemoteMirror: Boolean!\n\n  \"\"\"Indicates the user can perform `admin_wiki` on this resource\"\"\"\n  adminWiki: Boolean!\n\n  \"\"\"Indicates the user can perform `archive_project` on this resource\"\"\"\n  archiveProject: Boolean!\n\n  \"\"\"Indicates the user can perform `change_namespace` on this resource\"\"\"\n  changeNamespace: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `change_visibility_level` on this resource\n  \"\"\"\n  changeVisibilityLevel: Boolean!\n\n  \"\"\"Indicates the user can perform `create_deployment` on this resource\"\"\"\n  createDeployment: Boolean!\n\n  \"\"\"Indicates the user can perform `create_design` on this resource\"\"\"\n  createDesign: Boolean!\n\n  \"\"\"Indicates the user can perform `create_issue` on this resource\"\"\"\n  createIssue: Boolean!\n\n  \"\"\"Indicates the user can perform `create_label` on this resource\"\"\"\n  createLabel: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `create_merge_request_from` on this resource\n  \"\"\"\n  createMergeRequestFrom: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `create_merge_request_in` on this resource\n  \"\"\"\n  createMergeRequestIn: Boolean!\n\n  \"\"\"Indicates the user can perform `create_pages` on this resource\"\"\"\n  createPages: Boolean!\n\n  \"\"\"Indicates the user can perform `create_pipeline` on this resource\"\"\"\n  createPipeline: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `create_pipeline_schedule` on this resource\n  \"\"\"\n  createPipelineSchedule: Boolean!\n\n  \"\"\"Indicates the user can perform `create_snippet` on this resource\"\"\"\n  createSnippet: Boolean!\n\n  \"\"\"Indicates the user can perform `create_wiki` on this resource\"\"\"\n  createWiki: Boolean!\n\n  \"\"\"Indicates the user can perform `destroy_design` on this resource\"\"\"\n  destroyDesign: Boolean!\n\n  \"\"\"Indicates the user can perform `destroy_pages` on this resource\"\"\"\n  destroyPages: Boolean!\n\n  \"\"\"Indicates the user can perform `destroy_wiki` on this resource\"\"\"\n  destroyWiki: Boolean!\n\n  \"\"\"Indicates the user can perform `download_code` on this resource\"\"\"\n  downloadCode: Boolean!\n\n  \"\"\"Indicates the user can perform `download_wiki_code` on this resource\"\"\"\n  downloadWikiCode: Boolean!\n\n  \"\"\"Indicates the user can perform `fork_project` on this resource\"\"\"\n  forkProject: Boolean!\n\n  \"\"\"Indicates the user can perform `push_code` on this resource\"\"\"\n  pushCode: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `push_to_delete_protected_branch` on this resource\n  \"\"\"\n  pushToDeleteProtectedBranch: Boolean!\n\n  \"\"\"Indicates the user can perform `read_commit_status` on this resource\"\"\"\n  readCommitStatus: Boolean!\n\n  \"\"\"Indicates the user can perform `read_cycle_analytics` on this resource\"\"\"\n  readCycleAnalytics: Boolean!\n\n  \"\"\"Indicates the user can perform `read_design` on this resource\"\"\"\n  readDesign: Boolean!\n\n  \"\"\"Indicates the user can perform `read_merge_request` on this resource\"\"\"\n  readMergeRequest: Boolean!\n\n  \"\"\"Indicates the user can perform `read_pages_content` on this resource\"\"\"\n  readPagesContent: Boolean!\n\n  \"\"\"Indicates the user can perform `read_project` on this resource\"\"\"\n  readProject: Boolean!\n\n  \"\"\"Indicates the user can perform `read_project_member` on this resource\"\"\"\n  readProjectMember: Boolean!\n\n  \"\"\"Indicates the user can perform `read_wiki` on this resource\"\"\"\n  readWiki: Boolean!\n\n  \"\"\"Indicates the user can perform `remove_fork_project` on this resource\"\"\"\n  removeForkProject: Boolean!\n\n  \"\"\"Indicates the user can perform `remove_pages` on this resource\"\"\"\n  removePages: Boolean!\n\n  \"\"\"Indicates the user can perform `remove_project` on this resource\"\"\"\n  removeProject: Boolean!\n\n  \"\"\"Indicates the user can perform `rename_project` on this resource\"\"\"\n  renameProject: Boolean!\n\n  \"\"\"Indicates the user can perform `request_access` on this resource\"\"\"\n  requestAccess: Boolean!\n\n  \"\"\"Indicates the user can perform `update_pages` on this resource\"\"\"\n  updatePages: Boolean!\n\n  \"\"\"Indicates the user can perform `update_wiki` on this resource\"\"\"\n  updateWiki: Boolean!\n\n  \"\"\"Indicates the user can perform `upload_file` on this resource\"\"\"\n  uploadFile: Boolean!\n}\n\ntype ProjectStatistics {\n  \"\"\"Build artifacts size of the project in bytes.\"\"\"\n  buildArtifactsSize: Float!\n\n  \"\"\"Commit count of the project.\"\"\"\n  commitCount: Float!\n\n  \"\"\"Large File Storage (LFS) object size of the project in bytes.\"\"\"\n  lfsObjectsSize: Float!\n\n  \"\"\"Packages size of the project in bytes.\"\"\"\n  packagesSize: Float!\n\n  \"\"\"Repository size of the project in bytes.\"\"\"\n  repositorySize: Float!\n\n  \"\"\"Snippets size of the project in bytes.\"\"\"\n  snippetsSize: Float\n\n  \"\"\"Storage size of the project in bytes.\"\"\"\n  storageSize: Float!\n\n  \"\"\"Uploads size of the project in bytes.\"\"\"\n  uploadsSize: Float\n\n  \"\"\"Wiki size of the project in bytes.\"\"\"\n  wikiSize: Float\n}\n\n\"\"\"The alert condition for Prometheus\"\"\"\ntype PrometheusAlert {\n  \"\"\"The human-readable text of the alert condition.\"\"\"\n  humanizedText: String!\n\n  \"\"\"ID of the alert condition.\"\"\"\n  id: ID!\n}\n\n\"\"\"Autogenerated input type of PrometheusIntegrationCreate\"\"\"\ninput PrometheusIntegrationCreateInput {\n  \"\"\"The project to create the integration in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Whether the integration is receiving alerts.\"\"\"\n  active: Boolean!\n\n  \"\"\"Endpoint at which Prometheus can be queried.\"\"\"\n  apiUrl: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of PrometheusIntegrationCreate\"\"\"\ntype PrometheusIntegrationCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The newly created integration.\"\"\"\n  integration: AlertManagementPrometheusIntegration\n}\n\n\"\"\"Autogenerated input type of PrometheusIntegrationResetToken\"\"\"\ninput PrometheusIntegrationResetTokenInput {\n  \"\"\"The ID of the integration to mutate.\"\"\"\n  id: PrometheusServiceID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of PrometheusIntegrationResetToken\"\"\"\ntype PrometheusIntegrationResetTokenPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The newly created integration.\"\"\"\n  integration: AlertManagementPrometheusIntegration\n}\n\n\"\"\"Autogenerated input type of PrometheusIntegrationUpdate\"\"\"\ninput PrometheusIntegrationUpdateInput {\n  \"\"\"The ID of the integration to mutate.\"\"\"\n  id: PrometheusServiceID!\n\n  \"\"\"Whether the integration is receiving alerts.\"\"\"\n  active: Boolean\n\n  \"\"\"Endpoint at which Prometheus can be queried.\"\"\"\n  apiUrl: String\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of PrometheusIntegrationUpdate\"\"\"\ntype PrometheusIntegrationUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The newly created integration.\"\"\"\n  integration: AlertManagementPrometheusIntegration\n}\n\n\"\"\"\nA `PrometheusServiceID` is a global ID. It is encoded as a string.\n\nAn example `PrometheusServiceID` is: `\"gid://gitlab/PrometheusService/1\"`.\n\n\"\"\"\nscalar PrometheusServiceID\n\n\"\"\"Autogenerated input type of PromoteToEpic\"\"\"\ninput PromoteToEpicInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"The group the promoted epic will belong to.\"\"\"\n  groupPath: ID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of PromoteToEpic\"\"\"\ntype PromoteToEpicPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The epic after issue promotion.\"\"\"\n  epic: Epic\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Represents rules that commit pushes must follow.\"\"\"\ntype PushRules {\n  \"\"\"Indicates whether commits not signed through GPG will be rejected.\"\"\"\n  rejectUnsignedCommits: Boolean!\n}\n\ntype Query {\n  \"\"\"CI related settings that apply to the entire instance.\"\"\"\n  ciApplicationSettings: CiApplicationSettings\n\n  \"\"\"\n  Linted and processed contents of a CI config.\n  Should not be requested more than once per request.\n  \n  \"\"\"\n  ciConfig(\n    \"\"\"The project of the CI config.\"\"\"\n    projectPath: ID!\n\n    \"\"\"Contents of `.gitlab-ci.yml`.\"\"\"\n    content: String!\n\n    \"\"\"Run pipeline creation simulation, or only do static check.\"\"\"\n    dryRun: Boolean\n  ): CiConfig\n\n  \"\"\"Find a container repository.\"\"\"\n  containerRepository(\n    \"\"\"The global ID of the container repository.\"\"\"\n    id: ContainerRepositoryID!\n  ): ContainerRepositoryDetails\n\n  \"\"\"Fields related to the current license.\"\"\"\n  currentLicense: CurrentLicense\n\n  \"\"\"Get information about current user.\"\"\"\n  currentUser: UserCore\n\n  \"\"\"Fields related to design management.\"\"\"\n  designManagement: DesignManagement!\n\n  \"\"\"Get configured DevOps adoption segments on the instance.\"\"\"\n  devopsAdoptionSegments(\n    \"\"\"Filter by ancestor namespace.\"\"\"\n    parentNamespaceId: NamespaceID\n\n    \"\"\"Limits segments to direct descendants of specified parent.\"\"\"\n    directDescendantsOnly: Boolean\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DevopsAdoptionSegmentConnection\n\n  \"\"\"Testing endpoint to validate the API with\"\"\"\n  echo(\n    \"\"\"Text to echo back.\"\"\"\n    text: String!\n  ): String!\n\n  \"\"\"Find a Geo node.\"\"\"\n  geoNode(\n    \"\"\"The name of the Geo node. Defaults to the current Geo node name.\"\"\"\n    name: String\n  ): GeoNode\n\n  \"\"\"Find a group.\"\"\"\n  group(\n    \"\"\"\n    The full path of the project, group or namespace, e.g., `gitlab-org/gitlab-foss`.\n    \"\"\"\n    fullPath: ID!\n  ): Group\n\n  \"\"\"Fields related to Instance Security Dashboard.\"\"\"\n  instanceSecurityDashboard: InstanceSecurityDashboard\n\n  \"\"\"Get statistics on the instance. Deprecated in 13.10: This was renamed.\"\"\"\n  instanceStatisticsMeasurements(\n    \"\"\"The type of measurement/statistics to retrieve.\"\"\"\n    identifier: MeasurementIdentifier!\n\n    \"\"\"Measurement recorded after this date.\"\"\"\n    recordedAfter: Time\n\n    \"\"\"Measurement recorded before this date.\"\"\"\n    recordedBefore: Time\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UsageTrendsMeasurementConnection @deprecated(reason: \"This was renamed. Please use `Query.usageTrendsMeasurements`. Deprecated in 13.10.\")\n\n  \"\"\"Find an issue.\"\"\"\n  issue(\n    \"\"\"The global ID of the issue.\"\"\"\n    id: IssueID!\n  ): Issue\n\n  \"\"\"Find an iteration.\"\"\"\n  iteration(\n    \"\"\"Find an iteration by its ID.\"\"\"\n    id: IterationID!\n  ): Iteration\n\n  \"\"\"Fields related to entries in the license history.\"\"\"\n  licenseHistoryEntries(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): LicenseHistoryEntryConnection\n\n  \"\"\"Find a merge request.\"\"\"\n  mergeRequest(\n    \"\"\"The global ID of the merge request.\"\"\"\n    id: MergeRequestID!\n  ): MergeRequest\n\n  \"\"\"Metadata about GitLab.\"\"\"\n  metadata: Metadata\n\n  \"\"\"Find a milestone.\"\"\"\n  milestone(\n    \"\"\"Find a milestone by its ID.\"\"\"\n    id: MilestoneID!\n  ): Milestone\n\n  \"\"\"Find a namespace.\"\"\"\n  namespace(\n    \"\"\"\n    The full path of the project, group or namespace, e.g., `gitlab-org/gitlab-foss`.\n    \"\"\"\n    fullPath: ID!\n  ): Namespace\n\n  \"\"\"Find a package.\"\"\"\n  package(\n    \"\"\"The global ID of the package.\"\"\"\n    id: PackagesPackageID!\n  ): PackageDetailsType\n\n  \"\"\"Find a project.\"\"\"\n  project(\n    \"\"\"\n    The full path of the project, group or namespace, e.g., `gitlab-org/gitlab-foss`.\n    \"\"\"\n    fullPath: ID!\n  ): Project\n\n  \"\"\"Find projects visible to the current user.\"\"\"\n  projects(\n    \"\"\"Limit projects that the current user is a member of.\"\"\"\n    membership: Boolean\n\n    \"\"\"Search query for project name, path, or description.\"\"\"\n    search: String\n\n    \"\"\"Filter projects by IDs.\"\"\"\n    ids: [ID!]\n\n    \"\"\"Include namespace in project search.\"\"\"\n    searchNamespaces: Boolean\n\n    \"\"\"Sort order of results.\"\"\"\n    sort: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectConnection\n\n  \"\"\"Supported runner platforms.\"\"\"\n  runnerPlatforms(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): RunnerPlatformConnection\n\n  \"\"\"Runner setup instructions.\"\"\"\n  runnerSetup(\n    \"\"\"Platform to generate the instructions for.\"\"\"\n    platform: String!\n\n    \"\"\"Architecture to generate the instructions for.\"\"\"\n    architecture: String!\n  ): RunnerSetup\n\n  \"\"\"Find Snippets visible to the current user.\"\"\"\n  snippets(\n    \"\"\"\n    Array of global snippet IDs. For example, `gid://gitlab/ProjectSnippet/1`.\n    \"\"\"\n    ids: [SnippetID!]\n\n    \"\"\"The visibility of the snippet.\"\"\"\n    visibility: VisibilityScopesEnum\n\n    \"\"\"The ID of an author.\"\"\"\n    authorId: UserID\n\n    \"\"\"The ID of a project.\"\"\"\n    projectId: ProjectID\n\n    \"\"\"The type of snippet.\"\"\"\n    type: TypeEnum\n\n    \"\"\"Explore personal snippets.\"\"\"\n    explore: Boolean\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SnippetConnection\n\n  \"\"\"Get statistics on the instance.\"\"\"\n  usageTrendsMeasurements(\n    \"\"\"The type of measurement/statistics to retrieve.\"\"\"\n    identifier: MeasurementIdentifier!\n\n    \"\"\"Measurement recorded after this date.\"\"\"\n    recordedAfter: Time\n\n    \"\"\"Measurement recorded before this date.\"\"\"\n    recordedBefore: Time\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UsageTrendsMeasurementConnection\n\n  \"\"\"Find a user.\"\"\"\n  user(\n    \"\"\"ID of the User.\"\"\"\n    id: UserID\n\n    \"\"\"Username of the User.\"\"\"\n    username: String\n  ): UserCore\n\n  \"\"\"Find users.\"\"\"\n  users(\n    \"\"\"List of user Global IDs.\"\"\"\n    ids: [ID!]\n\n    \"\"\"List of usernames.\"\"\"\n    usernames: [String!]\n\n    \"\"\"Sort users by this criteria.\"\"\"\n    sort: Sort = null\n\n    \"\"\"Query to search users by name, username, or primary email.\"\"\"\n    search: String\n\n    \"\"\"Return only admin users.\"\"\"\n    admins: Boolean = false\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCoreConnection\n\n  \"\"\"\n  Vulnerabilities reported on projects on the current user's instance security dashboard.\n  \"\"\"\n  vulnerabilities(\n    \"\"\"Filter vulnerabilities by project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"Filter vulnerabilities by report type.\"\"\"\n    reportType: [VulnerabilityReportType!]\n\n    \"\"\"Filter vulnerabilities by severity.\"\"\"\n    severity: [VulnerabilitySeverity!]\n\n    \"\"\"Filter vulnerabilities by state.\"\"\"\n    state: [VulnerabilityState!]\n\n    \"\"\"Filter vulnerabilities by VulnerabilityScanner.externalId.\"\"\"\n    scanner: [String!]\n\n    \"\"\"Filter vulnerabilities by scanner ID.\"\"\"\n    scannerId: [VulnerabilitiesScannerID!]\n\n    \"\"\"List vulnerabilities by sort order.\"\"\"\n    sort: VulnerabilitySort = null\n\n    \"\"\"\n    Returns only the vulnerabilities which have been resolved on default branch.\n    \"\"\"\n    hasResolution: Boolean\n\n    \"\"\"Returns only the vulnerabilities which have linked issues.\"\"\"\n    hasIssues: Boolean\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilityConnection\n\n  \"\"\"\n  Number of vulnerabilities per day for the projects on the current user's instance security dashboard.\n  \n  \"\"\"\n  vulnerabilitiesCountByDay(\n    \"\"\"First day for which to fetch vulnerability history.\"\"\"\n    startDate: ISO8601Date!\n\n    \"\"\"Last day for which to fetch vulnerability history.\"\"\"\n    endDate: ISO8601Date!\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilitiesCountByDayConnection\n\n  \"\"\"\n  Number of vulnerabilities per severity level, per day, for the projects on the\n  current user's instance security dashboard.\n   Deprecated in 13.3: Use of this is not recommended.\n  \"\"\"\n  vulnerabilitiesCountByDayAndSeverity(\n    \"\"\"First day for which to fetch vulnerability history.\"\"\"\n    startDate: ISO8601Date!\n\n    \"\"\"Last day for which to fetch vulnerability history.\"\"\"\n    endDate: ISO8601Date!\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilitiesCountByDayAndSeverityConnection @deprecated(reason: \"Use of this is not recommended. Please use `Query.vulnerabilitiesCountByDay`. Deprecated in 13.3.\")\n\n  \"\"\"Find a vulnerability.\"\"\"\n  vulnerability(\n    \"\"\"The Global ID of the Vulnerability.\"\"\"\n    id: VulnerabilityID!\n  ): Vulnerability\n}\n\n\"\"\"Recent failure history of a test case.\"\"\"\ntype RecentFailures {\n  \"\"\"Name of the base branch of the project.\"\"\"\n  baseBranch: String\n\n  \"\"\"Number of times the test case has failed in the past 14 days.\"\"\"\n  count: Int\n}\n\n\"\"\"State of a Geo registry\"\"\"\nenum RegistryState {\n  \"\"\"Registry waiting to be synced.\"\"\"\n  PENDING\n\n  \"\"\"Registry currently syncing.\"\"\"\n  STARTED\n\n  \"\"\"Registry that is synced.\"\"\"\n  SYNCED\n\n  \"\"\"Registry that failed to sync.\"\"\"\n  FAILED\n}\n\n\"\"\"Represents a release\"\"\"\ntype Release {\n  \"\"\"Assets of the release.\"\"\"\n  assets: ReleaseAssets\n\n  \"\"\"User that created the release.\"\"\"\n  author: UserCore\n\n  \"\"\"The commit associated with the release.\"\"\"\n  commit: Commit\n\n  \"\"\"Timestamp of when the release was created.\"\"\"\n  createdAt: Time\n\n  \"\"\"Description (also known as \"release notes\") of the release.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"Evidence for the release.\"\"\"\n  evidences(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ReleaseEvidenceConnection\n\n  \"\"\"Links of the release.\"\"\"\n  links: ReleaseLinks\n\n  \"\"\"Milestones associated to the release.\"\"\"\n  milestones(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MilestoneConnection\n\n  \"\"\"Name of the release.\"\"\"\n  name: String\n\n  \"\"\"Timestamp of when the release was released.\"\"\"\n  releasedAt: Time\n\n  \"\"\"Name of the tag associated with the release.\"\"\"\n  tagName: String\n\n  \"\"\"Relative web path to the tag associated with the release.\"\"\"\n  tagPath: String\n\n  \"\"\"Indicates the release is an upcoming release.\"\"\"\n  upcomingRelease: Boolean\n}\n\n\"\"\"Represents an asset link associated with a release\"\"\"\ntype ReleaseAssetLink {\n  \"\"\"Direct asset URL of the link.\"\"\"\n  directAssetUrl: String\n\n  \"\"\"Indicates the link points to an external resource.\"\"\"\n  external: Boolean\n\n  \"\"\"ID of the link.\"\"\"\n  id: ID!\n\n  \"\"\"\n  Type of the link: `other`, `runbook`, `image`, `package`; defaults to `other`.\n  \"\"\"\n  linkType: ReleaseAssetLinkType\n\n  \"\"\"Name of the link.\"\"\"\n  name: String\n\n  \"\"\"URL of the link.\"\"\"\n  url: String\n}\n\n\"\"\"The connection type for ReleaseAssetLink.\"\"\"\ntype ReleaseAssetLinkConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ReleaseAssetLinkEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ReleaseAssetLink]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of ReleaseAssetLinkCreate\"\"\"\ninput ReleaseAssetLinkCreateInput {\n  \"\"\"Name of the asset link.\"\"\"\n  name: String!\n\n  \"\"\"URL of the asset link.\"\"\"\n  url: String!\n\n  \"\"\"Relative path for a direct asset link.\"\"\"\n  directAssetPath: String\n\n  \"\"\"The type of the asset link.\"\"\"\n  linkType: ReleaseAssetLinkType = null\n\n  \"\"\"Full path of the project the asset link is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Name of the associated release's tag.\"\"\"\n  tagName: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ReleaseAssetLinkCreate\"\"\"\ntype ReleaseAssetLinkCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The asset link after mutation.\"\"\"\n  link: ReleaseAssetLink\n}\n\n\"\"\"Autogenerated input type of ReleaseAssetLinkDelete\"\"\"\ninput ReleaseAssetLinkDeleteInput {\n  \"\"\"ID of the release asset link to delete.\"\"\"\n  id: ReleasesLinkID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ReleaseAssetLinkDelete\"\"\"\ntype ReleaseAssetLinkDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The deleted release asset link.\"\"\"\n  link: ReleaseAssetLink\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ReleaseAssetLinkEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ReleaseAssetLink\n}\n\n\"\"\"Fields that are available when modifying a release asset link\"\"\"\ninput ReleaseAssetLinkInput {\n  \"\"\"Name of the asset link.\"\"\"\n  name: String!\n\n  \"\"\"URL of the asset link.\"\"\"\n  url: String!\n\n  \"\"\"Relative path for a direct asset link.\"\"\"\n  directAssetPath: String\n\n  \"\"\"The type of the asset link.\"\"\"\n  linkType: ReleaseAssetLinkType = null\n}\n\n\"\"\"Type of the link: `other`, `runbook`, `image`, `package`\"\"\"\nenum ReleaseAssetLinkType {\n  \"\"\"Other link type\"\"\"\n  OTHER\n\n  \"\"\"Runbook link type\"\"\"\n  RUNBOOK\n\n  \"\"\"Package link type\"\"\"\n  PACKAGE\n\n  \"\"\"Image link type\"\"\"\n  IMAGE\n}\n\n\"\"\"Autogenerated input type of ReleaseAssetLinkUpdate\"\"\"\ninput ReleaseAssetLinkUpdateInput {\n  \"\"\"ID of the release asset link to update.\"\"\"\n  id: ReleasesLinkID!\n\n  \"\"\"Name of the asset link.\"\"\"\n  name: String\n\n  \"\"\"URL of the asset link.\"\"\"\n  url: String\n\n  \"\"\"Relative path for a direct asset link.\"\"\"\n  directAssetPath: String\n\n  \"\"\"The type of the asset link.\"\"\"\n  linkType: ReleaseAssetLinkType\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ReleaseAssetLinkUpdate\"\"\"\ntype ReleaseAssetLinkUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The asset link after mutation.\"\"\"\n  link: ReleaseAssetLink\n}\n\n\"\"\"A container for all assets associated with a release\"\"\"\ntype ReleaseAssets {\n  \"\"\"Number of assets of the release.\"\"\"\n  count: Int\n\n  \"\"\"Asset links of the release.\"\"\"\n  links(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ReleaseAssetLinkConnection\n\n  \"\"\"Sources of the release.\"\"\"\n  sources(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ReleaseSourceConnection\n}\n\n\"\"\"Fields that are available when modifying release assets\"\"\"\ninput ReleaseAssetsInput {\n  \"\"\"A list of asset links to associate to the release.\"\"\"\n  links: [ReleaseAssetLinkInput!]\n}\n\n\"\"\"The connection type for Release.\"\"\"\ntype ReleaseConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ReleaseEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Release]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of ReleaseCreate\"\"\"\ninput ReleaseCreateInput {\n  \"\"\"Full path of the project the release is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Name of the tag to associate with the release.\"\"\"\n  tagName: String!\n\n  \"\"\"The commit SHA or branch name to use if creating a new tag.\"\"\"\n  ref: String\n\n  \"\"\"Name of the release.\"\"\"\n  name: String\n\n  \"\"\"Description (also known as \"release notes\") of the release.\"\"\"\n  description: String\n\n  \"\"\"\n  The date when the release will be/was ready. Defaults to the current time.\n  \"\"\"\n  releasedAt: Time\n\n  \"\"\"\n  The title of each milestone the release is associated with. GitLab Premium customers can specify group milestones.\n  \"\"\"\n  milestones: [String!]\n\n  \"\"\"Assets associated to the release.\"\"\"\n  assets: ReleaseAssetsInput\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ReleaseCreate\"\"\"\ntype ReleaseCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The release after mutation.\"\"\"\n  release: Release\n}\n\n\"\"\"Autogenerated input type of ReleaseDelete\"\"\"\ninput ReleaseDeleteInput {\n  \"\"\"Full path of the project the release is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Name of the tag associated with the release to delete.\"\"\"\n  tagName: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ReleaseDelete\"\"\"\ntype ReleaseDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The deleted release.\"\"\"\n  release: Release\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ReleaseEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Release\n}\n\n\"\"\"Evidence for a release\"\"\"\ntype ReleaseEvidence {\n  \"\"\"Timestamp when the evidence was collected.\"\"\"\n  collectedAt: Time\n\n  \"\"\"URL from where the evidence can be downloaded.\"\"\"\n  filepath: String\n\n  \"\"\"ID of the evidence.\"\"\"\n  id: ID!\n\n  \"\"\"SHA1 ID of the evidence hash.\"\"\"\n  sha: String\n}\n\n\"\"\"The connection type for ReleaseEvidence.\"\"\"\ntype ReleaseEvidenceConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ReleaseEvidenceEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ReleaseEvidence]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ReleaseEvidenceEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ReleaseEvidence\n}\n\ntype ReleaseLinks {\n  \"\"\"\n  HTTP URL of the issues page, filtered by this release and `state=closed`.\n  \"\"\"\n  closedIssuesUrl: String\n\n  \"\"\"\n  HTTP URL of the merge request page , filtered by this release and `state=closed`.\n  \"\"\"\n  closedMergeRequestsUrl: String\n\n  \"\"\"HTTP URL of the release's edit page.\"\"\"\n  editUrl: String\n\n  \"\"\"\n  HTTP URL of the merge request page , filtered by this release and `state=merged`.\n  \"\"\"\n  mergedMergeRequestsUrl: String\n\n  \"\"\"\n  HTTP URL of the issues page, filtered by this release and `state=open`.\n  \"\"\"\n  openedIssuesUrl: String\n\n  \"\"\"\n  HTTP URL of the merge request page, filtered by this release and `state=open`.\n  \"\"\"\n  openedMergeRequestsUrl: String\n\n  \"\"\"HTTP URL of the release.\"\"\"\n  selfUrl: String\n}\n\n\"\"\"Values for sorting releases\"\"\"\nenum ReleaseSort {\n  \"\"\"Created at descending order.\"\"\"\n  CREATED_DESC\n\n  \"\"\"Created at ascending order.\"\"\"\n  CREATED_ASC\n\n  \"\"\"Released at by descending order.\"\"\"\n  RELEASED_AT_DESC\n\n  \"\"\"Released at by ascending order.\"\"\"\n  RELEASED_AT_ASC\n}\n\n\"\"\"\nRepresents the source code attached to a release in a particular format\n\"\"\"\ntype ReleaseSource {\n  \"\"\"Format of the source.\"\"\"\n  format: String\n\n  \"\"\"Download URL of the source.\"\"\"\n  url: String\n}\n\n\"\"\"The connection type for ReleaseSource.\"\"\"\ntype ReleaseSourceConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ReleaseSourceEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ReleaseSource]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ReleaseSourceEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ReleaseSource\n}\n\n\"\"\"Autogenerated input type of ReleaseUpdate\"\"\"\ninput ReleaseUpdateInput {\n  \"\"\"Full path of the project the release is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Name of the tag associated with the release.\"\"\"\n  tagName: String!\n\n  \"\"\"Name of the release.\"\"\"\n  name: String\n\n  \"\"\"Description (release notes) of the release.\"\"\"\n  description: String\n\n  \"\"\"The release date.\"\"\"\n  releasedAt: Time\n\n  \"\"\"\n  The title of each milestone the release is associated with. GitLab Premium customers can specify group milestones.\n  \"\"\"\n  milestones: [String!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ReleaseUpdate\"\"\"\ntype ReleaseUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The release after mutation.\"\"\"\n  release: Release\n}\n\n\"\"\"\nA `ReleasesLinkID` is a global ID. It is encoded as a string.\n\nAn example `ReleasesLinkID` is: `\"gid://gitlab/Releases::Link/1\"`.\n\n\"\"\"\nscalar ReleasesLinkID\n\n\"\"\"Autogenerated input type of RemoveAwardEmoji\"\"\"\ninput RemoveAwardEmojiInput {\n  \"\"\"The global ID of the awardable resource.\"\"\"\n  awardableId: AwardableID!\n\n  \"\"\"The emoji name.\"\"\"\n  name: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of RemoveAwardEmoji\"\"\"\ntype RemoveAwardEmojiPayload {\n  \"\"\"The award emoji after mutation.\"\"\"\n  awardEmoji: AwardEmoji\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of RemoveProjectFromSecurityDashboard\"\"\"\ninput RemoveProjectFromSecurityDashboardInput {\n  \"\"\"ID of the project to remove from the Instance Security Dashboard.\"\"\"\n  id: ProjectID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of RemoveProjectFromSecurityDashboard\"\"\"\ntype RemoveProjectFromSecurityDashboardPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of RepositionImageDiffNote\"\"\"\ninput RepositionImageDiffNoteInput {\n  \"\"\"The global ID of the DiffNote to update.\"\"\"\n  id: DiffNoteID!\n\n  \"\"\"The position of this note on a diff.\"\"\"\n  position: UpdateDiffImagePositionInput!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of RepositionImageDiffNote\"\"\"\ntype RepositionImageDiffNotePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The note after mutation.\"\"\"\n  note: Note\n}\n\ntype Repository {\n  \"\"\"Blobs contained within the repository\"\"\"\n  blobs(\n    \"\"\"Array of desired blob paths.\"\"\"\n    paths: [String!]!\n\n    \"\"\"The commit ref to get the blobs from. Default value is HEAD.\"\"\"\n    ref: String = null\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): RepositoryBlobConnection\n\n  \"\"\"\n  Names of branches available in this repository that match the search pattern.\n  \"\"\"\n  branchNames(\n    \"\"\"The pattern to search for branch names by.\"\"\"\n    searchPattern: String!\n  ): [String!]\n\n  \"\"\"Indicates repository has no visible content.\"\"\"\n  empty: Boolean!\n\n  \"\"\"Indicates a corresponding Git repository exists on disk.\"\"\"\n  exists: Boolean!\n\n  \"\"\"Default branch of the repository.\"\"\"\n  rootRef: String\n\n  \"\"\"Tree of the repository.\"\"\"\n  tree(\n    \"\"\"\n    The path to get the tree for. Default value is the root of the repository.\n    \"\"\"\n    path: String = \"\"\n\n    \"\"\"The commit ref to get the tree for. Default value is HEAD.\"\"\"\n    ref: String = \"head\"\n\n    \"\"\"Used to get a recursive tree. Default is false.\"\"\"\n    recursive: Boolean = false\n  ): Tree\n}\n\ntype RepositoryBlob {\n  \"\"\"Web path to edit the blob in the old-style editor.\"\"\"\n  editBlobPath: String\n\n  \"\"\"The expected format of the blob based on the extension.\"\"\"\n  fileType: String\n\n  \"\"\"ID of the blob.\"\"\"\n  id: ID!\n\n  \"\"\"LFS OID of the blob.\"\"\"\n  lfsOid: String\n\n  \"\"\"Blob mode.\"\"\"\n  mode: String\n\n  \"\"\"Blob name.\"\"\"\n  name: String\n\n  \"\"\"OID of the blob.\"\"\"\n  oid: String!\n\n  \"\"\"Path of the blob.\"\"\"\n  path: String!\n\n  \"\"\"The raw content of the blob.\"\"\"\n  rawBlob: String\n\n  \"\"\"Web path to download the raw blob.\"\"\"\n  rawPath: String\n\n  \"\"\"Size (in bytes) of the blob, or the blob target if stored externally.\"\"\"\n  rawSize: Int\n\n  \"\"\"The raw content of the blob, if the blob is text data.\"\"\"\n  rawTextBlob: String\n\n  \"\"\"Web path to replace the blob content.\"\"\"\n  replacePath: String\n\n  \"\"\"Blob content rich viewer.\"\"\"\n  richViewer: BlobViewer\n\n  \"\"\"Blob content simple viewer.\"\"\"\n  simpleViewer: BlobViewer!\n\n  \"\"\"Size (in bytes) of the blob.\"\"\"\n  size: Int\n\n  \"\"\"\n  Whether the blob's content is stored externally (for instance, in LFS).\n  \"\"\"\n  storedExternally: Boolean\n\n  \"\"\"Web path of the blob.\"\"\"\n  webPath: String\n}\n\n\"\"\"The connection type for RepositoryBlob.\"\"\"\ntype RepositoryBlobConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [RepositoryBlobEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [RepositoryBlob]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype RepositoryBlobEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: RepositoryBlob\n}\n\n\"\"\"Represents a requirement\"\"\"\ntype Requirement {\n  \"\"\"Author of the requirement.\"\"\"\n  author: UserCore!\n\n  \"\"\"Timestamp of when the requirement was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Description of the requirement.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"ID of the requirement.\"\"\"\n  id: ID!\n\n  \"\"\"Internal ID of the requirement.\"\"\"\n  iid: ID!\n\n  \"\"\"Indicates if latest test report was created by user.\"\"\"\n  lastTestReportManuallyCreated: Boolean\n\n  \"\"\"Latest requirement test report state.\"\"\"\n  lastTestReportState: TestReportState\n\n  \"\"\"Project to which the requirement belongs.\"\"\"\n  project: Project!\n\n  \"\"\"State of the requirement.\"\"\"\n  state: RequirementState!\n\n  \"\"\"Test reports of the requirement.\"\"\"\n  testReports(\n    \"\"\"List test reports by sort order.\"\"\"\n    sort: Sort\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TestReportConnection\n\n  \"\"\"Title of the requirement.\"\"\"\n  title: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `title`\"\"\"\n  titleHtml: String\n\n  \"\"\"Timestamp of when the requirement was last updated.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: RequirementPermissions!\n}\n\n\"\"\"The connection type for Requirement.\"\"\"\ntype RequirementConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [RequirementEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Requirement]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype RequirementEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Requirement\n}\n\n\"\"\"Check permissions for the current user on a requirement\"\"\"\ntype RequirementPermissions {\n  \"\"\"Indicates the user can perform `admin_requirement` on this resource\"\"\"\n  adminRequirement: Boolean!\n\n  \"\"\"Indicates the user can perform `create_requirement` on this resource\"\"\"\n  createRequirement: Boolean!\n\n  \"\"\"Indicates the user can perform `destroy_requirement` on this resource\"\"\"\n  destroyRequirement: Boolean!\n\n  \"\"\"Indicates the user can perform `read_requirement` on this resource\"\"\"\n  readRequirement: Boolean!\n\n  \"\"\"Indicates the user can perform `update_requirement` on this resource\"\"\"\n  updateRequirement: Boolean!\n}\n\n\"\"\"State of a requirement\"\"\"\nenum RequirementState {\n  OPENED\n  ARCHIVED\n}\n\n\"\"\"Counts of requirements by their state\"\"\"\ntype RequirementStatesCount {\n  \"\"\"Number of archived requirements.\"\"\"\n  archived: Int\n\n  \"\"\"Number of opened requirements.\"\"\"\n  opened: Int\n}\n\n\"\"\"Status of a requirement based on last test report\"\"\"\nenum RequirementStatusFilter {\n  PASSED\n  FAILED\n\n  \"\"\"Requirements without any test report.\"\"\"\n  MISSING\n}\n\ninterface ResolvableInterface {\n  \"\"\"Indicates if the object can be resolved.\"\"\"\n  resolvable: Boolean!\n\n  \"\"\"Indicates if the object is resolved.\"\"\"\n  resolved: Boolean!\n\n  \"\"\"Timestamp of when the object was resolved.\"\"\"\n  resolvedAt: Time\n\n  \"\"\"User who resolved the object.\"\"\"\n  resolvedBy: UserCore\n}\n\n\"\"\"Autogenerated input type of RevertVulnerabilityToDetected\"\"\"\ninput RevertVulnerabilityToDetectedInput {\n  \"\"\"ID of the vulnerability to be reverted.\"\"\"\n  id: VulnerabilityID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of RevertVulnerabilityToDetected\"\"\"\ntype RevertVulnerabilityToDetectedPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The vulnerability after revert.\"\"\"\n  vulnerability: Vulnerability\n}\n\ntype RootStorageStatistics {\n  \"\"\"The CI artifacts size in bytes.\"\"\"\n  buildArtifactsSize: Float!\n\n  \"\"\"The LFS objects size in bytes.\"\"\"\n  lfsObjectsSize: Float!\n\n  \"\"\"The packages size in bytes.\"\"\"\n  packagesSize: Float!\n\n  \"\"\"The CI pipeline artifacts size in bytes.\"\"\"\n  pipelineArtifactsSize: Float!\n\n  \"\"\"The Git repository size in bytes.\"\"\"\n  repositorySize: Float!\n\n  \"\"\"The snippets size in bytes.\"\"\"\n  snippetsSize: Float!\n\n  \"\"\"The total storage in bytes.\"\"\"\n  storageSize: Float!\n\n  \"\"\"The uploads size in bytes.\"\"\"\n  uploadsSize: Float!\n\n  \"\"\"The wiki size in bytes.\"\"\"\n  wikiSize: Float!\n}\n\n\"\"\"Autogenerated input type of RunDASTScan\"\"\"\ninput RunDASTScanInput {\n  \"\"\"The project the DAST scan belongs to.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The URL of the target to be scanned.\"\"\"\n  targetUrl: String!\n\n  \"\"\"The branch to be associated with the scan.\"\"\"\n  branch: String!\n\n  \"\"\"The type of scan to be run.\"\"\"\n  scanType: DastScanTypeEnum!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of RunDASTScan\"\"\"\ntype RunDASTScanPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"URL of the pipeline that was created.\"\"\"\n  pipelineUrl: String\n}\n\ntype RunnerArchitecture {\n  \"\"\"Download location for the runner for the platform architecture.\"\"\"\n  downloadLocation: String!\n\n  \"\"\"Name of the runner platform architecture.\"\"\"\n  name: String!\n}\n\n\"\"\"The connection type for RunnerArchitecture.\"\"\"\ntype RunnerArchitectureConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [RunnerArchitectureEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [RunnerArchitecture]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype RunnerArchitectureEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: RunnerArchitecture\n}\n\ntype RunnerPlatform {\n  \"\"\"Runner architectures supported for the platform.\"\"\"\n  architectures(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): RunnerArchitectureConnection\n\n  \"\"\"Human readable name of the runner platform.\"\"\"\n  humanReadableName: String!\n\n  \"\"\"Name slug of the runner platform.\"\"\"\n  name: String!\n}\n\n\"\"\"The connection type for RunnerPlatform.\"\"\"\ntype RunnerPlatformConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [RunnerPlatformEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [RunnerPlatform]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype RunnerPlatformEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: RunnerPlatform\n}\n\ntype RunnerSetup {\n  \"\"\"Instructions for installing the runner on the specified architecture.\"\"\"\n  installInstructions: String!\n\n  \"\"\"Instructions for registering the runner.\"\"\"\n  registerInstructions: String\n}\n\n\"\"\"Represents a CI configuration of SAST\"\"\"\ntype SastCiConfiguration {\n  \"\"\"List of analyzers entities attached to SAST configuration.\"\"\"\n  analyzers(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SastCiConfigurationAnalyzersEntityConnection\n\n  \"\"\"List of global entities related to SAST configuration.\"\"\"\n  global(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SastCiConfigurationEntityConnection\n\n  \"\"\"List of pipeline entities related to SAST configuration.\"\"\"\n  pipeline(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SastCiConfigurationEntityConnection\n}\n\n\"\"\"Represents an analyzer entity in SAST CI configuration\"\"\"\ntype SastCiConfigurationAnalyzersEntity {\n  \"\"\"Analyzer description that is displayed on the form.\"\"\"\n  description: String\n\n  \"\"\"Indicates whether an analyzer is enabled.\"\"\"\n  enabled: Boolean\n\n  \"\"\"Analyzer label used in the config UI.\"\"\"\n  label: String\n\n  \"\"\"Name of the analyzer.\"\"\"\n  name: String\n\n  \"\"\"List of supported variables.\"\"\"\n  variables(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SastCiConfigurationEntityConnection\n}\n\n\"\"\"The connection type for SastCiConfigurationAnalyzersEntity.\"\"\"\ntype SastCiConfigurationAnalyzersEntityConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SastCiConfigurationAnalyzersEntityEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [SastCiConfigurationAnalyzersEntity]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SastCiConfigurationAnalyzersEntityEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: SastCiConfigurationAnalyzersEntity\n}\n\n\"\"\"Represents the analyzers entity in SAST CI configuration\"\"\"\ninput SastCiConfigurationAnalyzersEntityInput {\n  \"\"\"Name of analyzer.\"\"\"\n  name: String!\n\n  \"\"\"State of the analyzer.\"\"\"\n  enabled: Boolean!\n\n  \"\"\"List of variables for the analyzer.\"\"\"\n  variables: [SastCiConfigurationEntityInput!]\n}\n\n\"\"\"Represents an entity in SAST CI configuration\"\"\"\ntype SastCiConfigurationEntity {\n  \"\"\"Default value that is used if value is empty.\"\"\"\n  defaultValue: String\n\n  \"\"\"Entity description that is displayed on the form.\"\"\"\n  description: String\n\n  \"\"\"CI keyword of entity.\"\"\"\n  field: String\n\n  \"\"\"Label for entity used in the form.\"\"\"\n  label: String\n\n  \"\"\"Different possible values of the field.\"\"\"\n  options(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SastCiConfigurationOptionsEntityConnection\n\n  \"\"\"Size of the UI component.\"\"\"\n  size: SastUiComponentSize\n\n  \"\"\"Type of the field value.\"\"\"\n  type: String\n\n  \"\"\"Current value of the entity.\"\"\"\n  value: String\n}\n\n\"\"\"The connection type for SastCiConfigurationEntity.\"\"\"\ntype SastCiConfigurationEntityConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SastCiConfigurationEntityEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [SastCiConfigurationEntity]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SastCiConfigurationEntityEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: SastCiConfigurationEntity\n}\n\n\"\"\"Represents an entity in SAST CI configuration\"\"\"\ninput SastCiConfigurationEntityInput {\n  \"\"\"CI keyword of entity.\"\"\"\n  field: String!\n\n  \"\"\"Default value that is used if value is empty.\"\"\"\n  defaultValue: String!\n\n  \"\"\"Current value of the entity.\"\"\"\n  value: String!\n}\n\n\"\"\"Represents a CI configuration of SAST\"\"\"\ninput SastCiConfigurationInput {\n  \"\"\"List of global entities related to SAST configuration.\"\"\"\n  global: [SastCiConfigurationEntityInput!]\n\n  \"\"\"List of pipeline entities related to SAST configuration.\"\"\"\n  pipeline: [SastCiConfigurationEntityInput!]\n\n  \"\"\"List of analyzers and related variables for the SAST configuration.\"\"\"\n  analyzers: [SastCiConfigurationAnalyzersEntityInput!]\n}\n\n\"\"\"Represents an entity for options in SAST CI configuration\"\"\"\ntype SastCiConfigurationOptionsEntity {\n  \"\"\"Label of option entity.\"\"\"\n  label: String\n\n  \"\"\"Value of option entity.\"\"\"\n  value: String\n}\n\n\"\"\"The connection type for SastCiConfigurationOptionsEntity.\"\"\"\ntype SastCiConfigurationOptionsEntityConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SastCiConfigurationOptionsEntityEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [SastCiConfigurationOptionsEntity]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SastCiConfigurationOptionsEntityEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: SastCiConfigurationOptionsEntity\n}\n\n\"\"\"Size of UI component in SAST configuration page\"\"\"\nenum SastUiComponentSize {\n  \"\"\"The size of UI component in SAST configuration page is small.\"\"\"\n  SMALL\n\n  \"\"\"The size of UI component in SAST configuration page is medium.\"\"\"\n  MEDIUM\n\n  \"\"\"The size of UI component in SAST configuration page is large.\"\"\"\n  LARGE\n}\n\n\"\"\"Represents the security scan information\"\"\"\ntype Scan {\n  \"\"\"List of errors.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Name of the scan.\"\"\"\n  name: String!\n}\n\n\"\"\"The connection type for Scan.\"\"\"\ntype ScanConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ScanEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Scan]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ScanEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Scan\n}\n\n\"\"\"Represents a resource scanned by a security scan\"\"\"\ntype ScannedResource {\n  \"\"\"The HTTP request method used to access the URL.\"\"\"\n  requestMethod: String\n\n  \"\"\"The URL scanned by the scanner.\"\"\"\n  url: String\n}\n\n\"\"\"The connection type for ScannedResource.\"\"\"\ntype ScannedResourceConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ScannedResourceEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [ScannedResource]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ScannedResourceEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: ScannedResource\n}\n\n\"\"\"Represents summary of a security report\"\"\"\ntype SecurityReportSummary {\n  \"\"\"Aggregated counts for the `api_fuzzing` scan\"\"\"\n  apiFuzzing: SecurityReportSummarySection\n\n  \"\"\"Aggregated counts for the `container_scanning` scan\"\"\"\n  containerScanning: SecurityReportSummarySection\n\n  \"\"\"Aggregated counts for the `coverage_fuzzing` scan\"\"\"\n  coverageFuzzing: SecurityReportSummarySection\n\n  \"\"\"Aggregated counts for the `dast` scan\"\"\"\n  dast: SecurityReportSummarySection\n\n  \"\"\"Aggregated counts for the `dependency_scanning` scan\"\"\"\n  dependencyScanning: SecurityReportSummarySection\n\n  \"\"\"Aggregated counts for the `sast` scan\"\"\"\n  sast: SecurityReportSummarySection\n\n  \"\"\"Aggregated counts for the `secret_detection` scan\"\"\"\n  secretDetection: SecurityReportSummarySection\n}\n\n\"\"\"Represents a section of a summary of a security report\"\"\"\ntype SecurityReportSummarySection {\n  \"\"\"A list of the first 20 scanned resources.\"\"\"\n  scannedResources(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ScannedResourceConnection\n\n  \"\"\"Total number of scanned resources.\"\"\"\n  scannedResourcesCount: Int\n\n  \"\"\"Path to download all the scanned resources in CSV format.\"\"\"\n  scannedResourcesCsvPath: String\n\n  \"\"\"List of security scans ran for the type.\"\"\"\n  scans(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ScanConnection!\n\n  \"\"\"Total number of vulnerabilities.\"\"\"\n  vulnerabilitiesCount: Int\n}\n\nenum SecurityReportTypeEnum {\n  \"\"\"SAST scan report\"\"\"\n  SAST\n\n  \"\"\"DAST scan report\"\"\"\n  DAST\n\n  \"\"\"DEPENDENCY SCANNING scan report\"\"\"\n  DEPENDENCY_SCANNING\n\n  \"\"\"CONTAINER SCANNING scan report\"\"\"\n  CONTAINER_SCANNING\n\n  \"\"\"SECRET DETECTION scan report\"\"\"\n  SECRET_DETECTION\n\n  \"\"\"COVERAGE FUZZING scan report\"\"\"\n  COVERAGE_FUZZING\n\n  \"\"\"API FUZZING scan report\"\"\"\n  API_FUZZING\n}\n\n\"\"\"The type of the security scanner\"\"\"\nenum SecurityScannerType {\n  SAST\n  DAST\n  DEPENDENCY_SCANNING\n  CONTAINER_SCANNING\n  SECRET_DETECTION\n  COVERAGE_FUZZING\n  API_FUZZING\n}\n\n\"\"\"Represents a list of security scanners\"\"\"\ntype SecurityScanners {\n  \"\"\"List of analyzers which are available for the project.\"\"\"\n  available: [SecurityScannerType!]\n\n  \"\"\"List of analyzers which are enabled for the project.\"\"\"\n  enabled: [SecurityScannerType!]\n\n  \"\"\"List of analyzers which ran successfully in the latest pipeline.\"\"\"\n  pipelineRun: [SecurityScannerType!]\n}\n\n\"\"\"A Sentry error\"\"\"\ntype SentryDetailedError {\n  \"\"\"Count of occurrences.\"\"\"\n  count: Int!\n\n  \"\"\"Culprit of the error.\"\"\"\n  culprit: String!\n\n  \"\"\"External Base URL of the Sentry Instance.\"\"\"\n  externalBaseUrl: String!\n\n  \"\"\"External URL of the error.\"\"\"\n  externalUrl: String!\n\n  \"\"\"Commit the error was first seen.\"\"\"\n  firstReleaseLastCommit: String\n\n  \"\"\"Release short version the error was first seen.\"\"\"\n  firstReleaseShortVersion: String\n\n  \"\"\"Release version the error was first seen.\"\"\"\n  firstReleaseVersion: String\n\n  \"\"\"Timestamp when the error was first seen.\"\"\"\n  firstSeen: Time!\n\n  \"\"\"Last 24hr stats of the error.\"\"\"\n  frequency: [SentryErrorFrequency!]!\n\n  \"\"\"\n  GitLab commit SHA attributed to the Error based on the release version.\n  \"\"\"\n  gitlabCommit: String\n\n  \"\"\"Path to the GitLab page for the GitLab commit attributed to the error.\"\"\"\n  gitlabCommitPath: String\n\n  \"\"\"URL of GitLab Issue.\"\"\"\n  gitlabIssuePath: String\n\n  \"\"\"ID (global ID) of the error.\"\"\"\n  id: ID!\n\n  \"\"\"Commit the error was last seen.\"\"\"\n  lastReleaseLastCommit: String\n\n  \"\"\"Release short version the error was last seen.\"\"\"\n  lastReleaseShortVersion: String\n\n  \"\"\"Release version the error was last seen.\"\"\"\n  lastReleaseVersion: String\n\n  \"\"\"Timestamp when the error was last seen.\"\"\"\n  lastSeen: Time!\n\n  \"\"\"Sentry metadata message of the error.\"\"\"\n  message: String\n\n  \"\"\"ID (Sentry ID) of the error.\"\"\"\n  sentryId: String!\n\n  \"\"\"ID of the project (Sentry project).\"\"\"\n  sentryProjectId: ID!\n\n  \"\"\"Name of the project affected by the error.\"\"\"\n  sentryProjectName: String!\n\n  \"\"\"Slug of the project affected by the error.\"\"\"\n  sentryProjectSlug: String!\n\n  \"\"\"Short ID (Sentry ID) of the error.\"\"\"\n  shortId: String!\n\n  \"\"\"Status of the error.\"\"\"\n  status: SentryErrorStatus!\n\n  \"\"\"Tags associated with the Sentry Error.\"\"\"\n  tags: SentryErrorTags!\n\n  \"\"\"Title of the error.\"\"\"\n  title: String!\n\n  \"\"\"Type of the error.\"\"\"\n  type: String!\n\n  \"\"\"Count of users affected by the error.\"\"\"\n  userCount: Int!\n}\n\n\"\"\"A Sentry error. A simplified version of SentryDetailedError\"\"\"\ntype SentryError {\n  \"\"\"Count of occurrences.\"\"\"\n  count: Int!\n\n  \"\"\"Culprit of the error.\"\"\"\n  culprit: String!\n\n  \"\"\"External URL of the error.\"\"\"\n  externalUrl: String!\n\n  \"\"\"Timestamp when the error was first seen.\"\"\"\n  firstSeen: Time!\n\n  \"\"\"Last 24hr stats of the error.\"\"\"\n  frequency: [SentryErrorFrequency!]!\n\n  \"\"\"ID (global ID) of the error.\"\"\"\n  id: ID!\n\n  \"\"\"Timestamp when the error was last seen.\"\"\"\n  lastSeen: Time!\n\n  \"\"\"Sentry metadata message of the error.\"\"\"\n  message: String\n\n  \"\"\"ID (Sentry ID) of the error.\"\"\"\n  sentryId: String!\n\n  \"\"\"ID of the project (Sentry project).\"\"\"\n  sentryProjectId: ID!\n\n  \"\"\"Name of the project affected by the error.\"\"\"\n  sentryProjectName: String!\n\n  \"\"\"Slug of the project affected by the error.\"\"\"\n  sentryProjectSlug: String!\n\n  \"\"\"Short ID (Sentry ID) of the error.\"\"\"\n  shortId: String!\n\n  \"\"\"Status of the error.\"\"\"\n  status: SentryErrorStatus!\n\n  \"\"\"Title of the error.\"\"\"\n  title: String!\n\n  \"\"\"Type of the error.\"\"\"\n  type: String!\n\n  \"\"\"Count of users affected by the error.\"\"\"\n  userCount: Int!\n}\n\n\"\"\"\nAn object containing a collection of Sentry errors, and a detailed error\n\"\"\"\ntype SentryErrorCollection {\n  \"\"\"Detailed version of a Sentry error on the project.\"\"\"\n  detailedError(\n    \"\"\"ID of the Sentry issue.\"\"\"\n    id: GitlabErrorTrackingDetailedErrorID!\n  ): SentryDetailedError\n\n  \"\"\"Stack Trace of Sentry Error.\"\"\"\n  errorStackTrace(\n    \"\"\"ID of the Sentry issue.\"\"\"\n    id: GitlabErrorTrackingDetailedErrorID!\n  ): SentryErrorStackTrace\n\n  \"\"\"Collection of Sentry Errors.\"\"\"\n  errors(\n    \"\"\"Search query for the Sentry error details.\"\"\"\n    searchTerm: String\n\n    \"\"\"\n    Attribute to sort on. Options are frequency, first_seen, last_seen. last_seen is default.\n    \"\"\"\n    sort: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SentryErrorConnection\n\n  \"\"\"External URL for Sentry.\"\"\"\n  externalUrl: String\n}\n\n\"\"\"The connection type for SentryError.\"\"\"\ntype SentryErrorConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SentryErrorEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [SentryError]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SentryErrorEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: SentryError\n}\n\ntype SentryErrorFrequency {\n  \"\"\"Count of errors received since the previously recorded time.\"\"\"\n  count: Int!\n\n  \"\"\"Time the error frequency stats were recorded.\"\"\"\n  time: Time!\n}\n\n\"\"\"An object containing a stack trace entry for a Sentry error\"\"\"\ntype SentryErrorStackTrace {\n  \"\"\"Time the stack trace was received by Sentry.\"\"\"\n  dateReceived: String!\n\n  \"\"\"ID of the Sentry error.\"\"\"\n  issueId: String!\n\n  \"\"\"Stack trace entries for the Sentry error.\"\"\"\n  stackTraceEntries: [SentryErrorStackTraceEntry!]!\n}\n\n\"\"\"An object context for a Sentry error stack trace\"\"\"\ntype SentryErrorStackTraceContext {\n  \"\"\"Code number of the context.\"\"\"\n  code: String!\n\n  \"\"\"Line number of the context.\"\"\"\n  line: Int!\n}\n\n\"\"\"An object containing a stack trace entry for a Sentry error\"\"\"\ntype SentryErrorStackTraceEntry {\n  \"\"\"Function in which the Sentry error occurred.\"\"\"\n  col: String\n\n  \"\"\"File in which the Sentry error occurred.\"\"\"\n  fileName: String\n\n  \"\"\"Function in which the Sentry error occurred.\"\"\"\n  function: String\n\n  \"\"\"Function in which the Sentry error occurred.\"\"\"\n  line: String\n\n  \"\"\"Context of the Sentry error.\"\"\"\n  traceContext: [SentryErrorStackTraceContext!]\n}\n\n\"\"\"State of a Sentry error\"\"\"\nenum SentryErrorStatus {\n  \"\"\"Error has been resolved.\"\"\"\n  RESOLVED\n\n  \"\"\"Error has been ignored until next release.\"\"\"\n  RESOLVED_IN_NEXT_RELEASE\n\n  \"\"\"Error is unresolved.\"\"\"\n  UNRESOLVED\n\n  \"\"\"Error has been ignored.\"\"\"\n  IGNORED\n}\n\n\"\"\"State of a Sentry error\"\"\"\ntype SentryErrorTags {\n  \"\"\"Severity level of the Sentry Error.\"\"\"\n  level: String\n\n  \"\"\"Logger of the Sentry Error.\"\"\"\n  logger: String\n}\n\ninterface Service {\n  \"\"\"Indicates if the service is active.\"\"\"\n  active: Boolean\n\n  \"\"\"Class name of the service.\"\"\"\n  type: String\n}\n\n\"\"\"The connection type for Service.\"\"\"\ntype ServiceConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [ServiceEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Service]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ServiceEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Service\n}\n\nenum ServiceType {\n  \"\"\"AsanaService type\"\"\"\n  ASANA_SERVICE\n\n  \"\"\"AssemblaService type\"\"\"\n  ASSEMBLA_SERVICE\n\n  \"\"\"BambooService type\"\"\"\n  BAMBOO_SERVICE\n\n  \"\"\"BugzillaService type\"\"\"\n  BUGZILLA_SERVICE\n\n  \"\"\"BuildkiteService type\"\"\"\n  BUILDKITE_SERVICE\n\n  \"\"\"CampfireService type\"\"\"\n  CAMPFIRE_SERVICE\n\n  \"\"\"ConfluenceService type\"\"\"\n  CONFLUENCE_SERVICE\n\n  \"\"\"CustomIssueTrackerService type\"\"\"\n  CUSTOM_ISSUE_TRACKER_SERVICE\n\n  \"\"\"DatadogService type\"\"\"\n  DATADOG_SERVICE\n\n  \"\"\"DiscordService type\"\"\"\n  DISCORD_SERVICE\n\n  \"\"\"DroneCiService type\"\"\"\n  DRONE_CI_SERVICE\n\n  \"\"\"EmailsOnPushService type\"\"\"\n  EMAILS_ON_PUSH_SERVICE\n\n  \"\"\"EwmService type\"\"\"\n  EWM_SERVICE\n\n  \"\"\"ExternalWikiService type\"\"\"\n  EXTERNAL_WIKI_SERVICE\n\n  \"\"\"FlowdockService type\"\"\"\n  FLOWDOCK_SERVICE\n\n  \"\"\"GithubService type\"\"\"\n  GITHUB_SERVICE\n\n  \"\"\"GitlabSlackApplicationService type\"\"\"\n  GITLAB_SLACK_APPLICATION_SERVICE\n\n  \"\"\"HangoutsChatService type\"\"\"\n  HANGOUTS_CHAT_SERVICE\n\n  \"\"\"IrkerService type\"\"\"\n  IRKER_SERVICE\n\n  \"\"\"JenkinsService type\"\"\"\n  JENKINS_SERVICE\n\n  \"\"\"JiraService type\"\"\"\n  JIRA_SERVICE\n\n  \"\"\"MattermostService type\"\"\"\n  MATTERMOST_SERVICE\n\n  \"\"\"MattermostSlashCommandsService type\"\"\"\n  MATTERMOST_SLASH_COMMANDS_SERVICE\n\n  \"\"\"MicrosoftTeamsService type\"\"\"\n  MICROSOFT_TEAMS_SERVICE\n\n  \"\"\"PackagistService type\"\"\"\n  PACKAGIST_SERVICE\n\n  \"\"\"PipelinesEmailService type\"\"\"\n  PIPELINES_EMAIL_SERVICE\n\n  \"\"\"PivotaltrackerService type\"\"\"\n  PIVOTALTRACKER_SERVICE\n\n  \"\"\"PrometheusService type\"\"\"\n  PROMETHEUS_SERVICE\n\n  \"\"\"PushoverService type\"\"\"\n  PUSHOVER_SERVICE\n\n  \"\"\"RedmineService type\"\"\"\n  REDMINE_SERVICE\n\n  \"\"\"SlackService type\"\"\"\n  SLACK_SERVICE\n\n  \"\"\"SlackSlashCommandsService type\"\"\"\n  SLACK_SLASH_COMMANDS_SERVICE\n\n  \"\"\"TeamcityService type\"\"\"\n  TEAMCITY_SERVICE\n\n  \"\"\"UnifyCircuitService type\"\"\"\n  UNIFY_CIRCUIT_SERVICE\n\n  \"\"\"WebexTeamsService type\"\"\"\n  WEBEX_TEAMS_SERVICE\n\n  \"\"\"YoutrackService type\"\"\"\n  YOUTRACK_SERVICE\n}\n\n\"\"\"Represents a snippet entry\"\"\"\ntype Snippet implements Noteable {\n  \"\"\"The owner of the snippet.\"\"\"\n  author: UserCore\n\n  \"\"\"Snippet blob. Deprecated in 13.3: Use `blobs`.\"\"\"\n  blob: SnippetBlob! @deprecated(reason: \"Use `blobs`. Deprecated in 13.3.\")\n\n  \"\"\"Snippet blobs.\"\"\"\n  blobs(\n    \"\"\"Paths of the blobs.\"\"\"\n    paths: [String!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SnippetBlobConnection\n\n  \"\"\"Timestamp this snippet was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Description of the snippet.\"\"\"\n  description: String\n\n  \"\"\"The GitLab Flavored Markdown rendering of `description`\"\"\"\n  descriptionHtml: String\n\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"File Name of the snippet.\"\"\"\n  fileName: String\n\n  \"\"\"HTTP URL to the snippet repository.\"\"\"\n  httpUrlToRepo: String\n\n  \"\"\"ID of the snippet.\"\"\"\n  id: SnippetID!\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"The project the snippet is associated with.\"\"\"\n  project: Project\n\n  \"\"\"Raw URL of the snippet.\"\"\"\n  rawUrl: String!\n\n  \"\"\"SSH URL to the snippet repository.\"\"\"\n  sshUrlToRepo: String\n\n  \"\"\"Title of the snippet.\"\"\"\n  title: String!\n\n  \"\"\"Timestamp this snippet was updated.\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: SnippetPermissions!\n\n  \"\"\"Visibility Level of the snippet.\"\"\"\n  visibilityLevel: VisibilityLevelsEnum!\n\n  \"\"\"Web URL of the snippet.\"\"\"\n  webUrl: String!\n}\n\n\"\"\"Represents the snippet blob\"\"\"\ntype SnippetBlob {\n  \"\"\"Shows whether the blob is binary.\"\"\"\n  binary: Boolean!\n\n  \"\"\"Blob external storage.\"\"\"\n  externalStorage: String\n\n  \"\"\"Blob mode.\"\"\"\n  mode: String\n\n  \"\"\"Blob name.\"\"\"\n  name: String\n\n  \"\"\"Blob path.\"\"\"\n  path: String\n\n  \"\"\"Blob plain highlighted data.\"\"\"\n  plainData: String\n\n  \"\"\"Blob raw content endpoint path.\"\"\"\n  rawPath: String!\n\n  \"\"\"Shows whether the blob is rendered as text.\"\"\"\n  renderedAsText: Boolean!\n\n  \"\"\"Blob highlighted data.\"\"\"\n  richData: String\n\n  \"\"\"Blob content rich viewer.\"\"\"\n  richViewer: SnippetBlobViewer\n\n  \"\"\"Blob content simple viewer.\"\"\"\n  simpleViewer: SnippetBlobViewer!\n\n  \"\"\"Blob size.\"\"\"\n  size: Int!\n}\n\n\"\"\"Type of a snippet blob input action\"\"\"\nenum SnippetBlobActionEnum {\n  create\n  update\n  delete\n  move\n}\n\n\"\"\"Represents an action to perform over a snippet file\"\"\"\ninput SnippetBlobActionInputType {\n  \"\"\"Type of input action.\"\"\"\n  action: SnippetBlobActionEnum!\n\n  \"\"\"Previous path of the snippet file.\"\"\"\n  previousPath: String\n\n  \"\"\"Path of the snippet file.\"\"\"\n  filePath: String!\n\n  \"\"\"Snippet file content.\"\"\"\n  content: String\n}\n\n\"\"\"The connection type for SnippetBlob.\"\"\"\ntype SnippetBlobConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SnippetBlobEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [SnippetBlob]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SnippetBlobEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: SnippetBlob\n}\n\n\"\"\"Represents how the blob content should be displayed\"\"\"\ntype SnippetBlobViewer {\n  \"\"\"Shows whether the blob should be displayed collapsed.\"\"\"\n  collapsed: Boolean!\n\n  \"\"\"Content file type.\"\"\"\n  fileType: String!\n\n  \"\"\"Shows whether the blob content is loaded asynchronously.\"\"\"\n  loadAsync: Boolean!\n\n  \"\"\"Loading partial name.\"\"\"\n  loadingPartialName: String!\n\n  \"\"\"Error rendering the blob content.\"\"\"\n  renderError: String\n\n  \"\"\"Shows whether the blob is too large to be displayed.\"\"\"\n  tooLarge: Boolean!\n\n  \"\"\"Type of blob viewer.\"\"\"\n  type: BlobViewersType!\n}\n\n\"\"\"The connection type for Snippet.\"\"\"\ntype SnippetConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SnippetEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Snippet]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SnippetEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Snippet\n}\n\n\"\"\"\nA `SnippetID` is a global ID. It is encoded as a string.\n\nAn example `SnippetID` is: `\"gid://gitlab/Snippet/1\"`.\n\n\"\"\"\nscalar SnippetID\n\ntype SnippetPermissions {\n  \"\"\"Indicates the user can perform `admin_snippet` on this resource\"\"\"\n  adminSnippet: Boolean!\n\n  \"\"\"Indicates the user can perform `award_emoji` on this resource\"\"\"\n  awardEmoji: Boolean!\n\n  \"\"\"Indicates the user can perform `create_note` on this resource\"\"\"\n  createNote: Boolean!\n\n  \"\"\"Indicates the user can perform `read_snippet` on this resource\"\"\"\n  readSnippet: Boolean!\n\n  \"\"\"Indicates the user can perform `report_snippet` on this resource\"\"\"\n  reportSnippet: Boolean!\n\n  \"\"\"Indicates the user can perform `update_snippet` on this resource\"\"\"\n  updateSnippet: Boolean!\n}\n\n\"\"\"Represents the Geo sync and verification state of a snippet repository\"\"\"\ntype SnippetRepositoryRegistry {\n  \"\"\"Timestamp when the SnippetRepositoryRegistry was created\"\"\"\n  createdAt: Time\n\n  \"\"\"ID of the SnippetRepositoryRegistry\"\"\"\n  id: ID!\n\n  \"\"\"Error message during sync of the SnippetRepositoryRegistry\"\"\"\n  lastSyncFailure: String\n\n  \"\"\"\n  Timestamp of the most recent successful sync of the SnippetRepositoryRegistry\n  \"\"\"\n  lastSyncedAt: Time\n\n  \"\"\"Timestamp after which the SnippetRepositoryRegistry should be resynced\"\"\"\n  retryAt: Time\n\n  \"\"\"\n  Number of consecutive failed sync attempts of the SnippetRepositoryRegistry\n  \"\"\"\n  retryCount: Int\n\n  \"\"\"ID of the Snippet Repository.\"\"\"\n  snippetRepositoryId: ID!\n\n  \"\"\"Sync state of the SnippetRepositoryRegistry\"\"\"\n  state: RegistryState\n}\n\n\"\"\"The connection type for SnippetRepositoryRegistry.\"\"\"\ntype SnippetRepositoryRegistryConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SnippetRepositoryRegistryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [SnippetRepositoryRegistry]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SnippetRepositoryRegistryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: SnippetRepositoryRegistry\n}\n\n\"\"\"Common sort values\"\"\"\nenum Sort {\n  \"\"\"Updated at descending order.\"\"\"\n  updated_desc @deprecated(reason: \"This was renamed. Please use `UPDATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at ascending order.\"\"\"\n  updated_asc @deprecated(reason: \"This was renamed. Please use `UPDATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at descending order.\"\"\"\n  created_desc @deprecated(reason: \"This was renamed. Please use `CREATED_DESC`. Deprecated in 13.5.\")\n\n  \"\"\"Created at ascending order.\"\"\"\n  created_asc @deprecated(reason: \"This was renamed. Please use `CREATED_ASC`. Deprecated in 13.5.\")\n\n  \"\"\"Updated at descending order.\"\"\"\n  UPDATED_DESC\n\n  \"\"\"Updated at ascending order.\"\"\"\n  UPDATED_ASC\n\n  \"\"\"Created at descending order.\"\"\"\n  CREATED_DESC\n\n  \"\"\"Created at ascending order.\"\"\"\n  CREATED_ASC\n}\n\ntype StatusAction {\n  \"\"\"Title for the button, for example: Retry this job.\"\"\"\n  buttonTitle: String\n\n  \"\"\"Icon used in the action button.\"\"\"\n  icon: String\n\n  \"\"\"Method for the action, for example: :post.\"\"\"\n  method: String\n\n  \"\"\"Path for the action.\"\"\"\n  path: String\n\n  \"\"\"Title for the action, for example: Retry.\"\"\"\n  title: String\n}\n\ntype Submodule implements Entry {\n  \"\"\"Flat path of the entry.\"\"\"\n  flatPath: String!\n\n  \"\"\"ID of the entry.\"\"\"\n  id: ID!\n\n  \"\"\"Name of the entry.\"\"\"\n  name: String!\n\n  \"\"\"Path of the entry.\"\"\"\n  path: String!\n\n  \"\"\"Last commit SHA for the entry.\"\"\"\n  sha: String!\n\n  \"\"\"Tree URL for the sub-module.\"\"\"\n  treeUrl: String\n\n  \"\"\"Type of tree entry.\"\"\"\n  type: EntryType!\n\n  \"\"\"Web URL for the sub-module.\"\"\"\n  webUrl: String\n}\n\n\"\"\"The connection type for Submodule.\"\"\"\ntype SubmoduleConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [SubmoduleEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Submodule]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SubmoduleEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Submodule\n}\n\ntype Subscription {\n  \"\"\"Triggered when the assignees of an issuable are updated.\"\"\"\n  issuableAssigneesUpdated(\n    \"\"\"ID of the issuable.\"\"\"\n    issuableId: IssuableID!\n  ): Issuable\n}\n\n\"\"\"Completion status of tasks\"\"\"\ntype TaskCompletionStatus {\n  \"\"\"Number of completed tasks.\"\"\"\n  completedCount: Int!\n\n  \"\"\"Number of total tasks.\"\"\"\n  count: Int!\n}\n\ntype TerraformState {\n  \"\"\"Timestamp the Terraform state was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"ID of the Terraform state.\"\"\"\n  id: ID!\n\n  \"\"\"The latest version of the Terraform state.\"\"\"\n  latestVersion: TerraformStateVersion\n\n  \"\"\"Timestamp the Terraform state was locked.\"\"\"\n  lockedAt: Time\n\n  \"\"\"The user currently holding a lock on the Terraform state.\"\"\"\n  lockedByUser: UserCore\n\n  \"\"\"Name of the Terraform state.\"\"\"\n  name: String!\n\n  \"\"\"Timestamp the Terraform state was updated.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"The connection type for TerraformState.\"\"\"\ntype TerraformStateConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TerraformStateEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [TerraformState]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of TerraformStateDelete\"\"\"\ninput TerraformStateDeleteInput {\n  \"\"\"Global ID of the Terraform state.\"\"\"\n  id: TerraformStateID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of TerraformStateDelete\"\"\"\ntype TerraformStateDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TerraformStateEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TerraformState\n}\n\n\"\"\"\nA `TerraformStateID` is a global ID. It is encoded as a string.\n\nAn example `TerraformStateID` is: `\"gid://gitlab/Terraform::State/1\"`.\n\n\"\"\"\nscalar TerraformStateID\n\n\"\"\"Autogenerated input type of TerraformStateLock\"\"\"\ninput TerraformStateLockInput {\n  \"\"\"Global ID of the Terraform state.\"\"\"\n  id: TerraformStateID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of TerraformStateLock\"\"\"\ntype TerraformStateLockPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of TerraformStateUnlock\"\"\"\ninput TerraformStateUnlockInput {\n  \"\"\"Global ID of the Terraform state.\"\"\"\n  id: TerraformStateID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of TerraformStateUnlock\"\"\"\ntype TerraformStateUnlockPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\ntype TerraformStateVersion {\n  \"\"\"Timestamp the version was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"The user that created this version.\"\"\"\n  createdByUser: UserCore\n\n  \"\"\"URL for downloading the version's JSON file.\"\"\"\n  downloadPath: String\n\n  \"\"\"ID of the Terraform state version.\"\"\"\n  id: ID!\n\n  \"\"\"The job that created this version.\"\"\"\n  job: CiJob\n\n  \"\"\"Serial number of the version.\"\"\"\n  serial: Int\n\n  \"\"\"Timestamp the version was updated.\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"\nRepresents the Geo sync and verification state of a terraform state version\n\"\"\"\ntype TerraformStateVersionRegistry {\n  \"\"\"Timestamp when the TerraformStateVersionRegistry was created\"\"\"\n  createdAt: Time\n\n  \"\"\"ID of the TerraformStateVersionRegistry\"\"\"\n  id: ID!\n\n  \"\"\"Error message during sync of the TerraformStateVersionRegistry\"\"\"\n  lastSyncFailure: String\n\n  \"\"\"\n  Timestamp of the most recent successful sync of the TerraformStateVersionRegistry\n  \"\"\"\n  lastSyncedAt: Time\n\n  \"\"\"\n  Timestamp after which the TerraformStateVersionRegistry should be resynced\n  \"\"\"\n  retryAt: Time\n\n  \"\"\"\n  Number of consecutive failed sync attempts of the TerraformStateVersionRegistry\n  \"\"\"\n  retryCount: Int\n\n  \"\"\"Sync state of the TerraformStateVersionRegistry\"\"\"\n  state: RegistryState\n\n  \"\"\"ID of the terraform state version.\"\"\"\n  terraformStateVersionId: ID!\n}\n\n\"\"\"The connection type for TerraformStateVersionRegistry.\"\"\"\ntype TerraformStateVersionRegistryConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [TerraformStateVersionRegistryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [TerraformStateVersionRegistry]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TerraformStateVersionRegistryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TerraformStateVersionRegistry\n}\n\n\"\"\"Test case in pipeline test report.\"\"\"\ntype TestCase {\n  \"\"\"URL of the test case attachment file.\"\"\"\n  attachmentUrl: String\n\n  \"\"\"Classname of the test case.\"\"\"\n  classname: String\n\n  \"\"\"Test case execution time in seconds.\"\"\"\n  executionTime: Float\n\n  \"\"\"Path to the file of the test case.\"\"\"\n  file: String\n\n  \"\"\"Name of the test case.\"\"\"\n  name: String\n\n  \"\"\"Recent failure history of the test case on the base branch.\"\"\"\n  recentFailures: RecentFailures\n\n  \"\"\"Stack trace of the test case.\"\"\"\n  stackTrace: String\n\n  \"\"\"Status of the test case (error, failed, success, skipped).\"\"\"\n  status: TestCaseStatus\n\n  \"\"\"System output of the test case.\"\"\"\n  systemOutput: String\n}\n\n\"\"\"The connection type for TestCase.\"\"\"\ntype TestCaseConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TestCaseEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [TestCase]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TestCaseEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TestCase\n}\n\nenum TestCaseStatus {\n  \"\"\"Test case that has a status of error.\"\"\"\n  error\n\n  \"\"\"Test case that has a status of failed.\"\"\"\n  failed\n\n  \"\"\"Test case that has a status of success.\"\"\"\n  success\n\n  \"\"\"Test case that has a status of skipped.\"\"\"\n  skipped\n}\n\n\"\"\"Represents a requirement test report\"\"\"\ntype TestReport {\n  \"\"\"Author of the test report.\"\"\"\n  author: UserCore\n\n  \"\"\"Timestamp of when the test report was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"ID of the test report.\"\"\"\n  id: ID!\n\n  \"\"\"State of the test report.\"\"\"\n  state: TestReportState!\n}\n\n\"\"\"The connection type for TestReport.\"\"\"\ntype TestReportConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [TestReportEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [TestReport]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TestReportEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TestReport\n}\n\n\"\"\"State of a test report\"\"\"\nenum TestReportState {\n  PASSED\n  FAILED\n}\n\n\"\"\"Test report for a pipeline\"\"\"\ntype TestReportSummary {\n  \"\"\"Test suites belonging to a pipeline test report.\"\"\"\n  testSuites(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TestSuiteSummaryConnection!\n\n  \"\"\"Total report statistics for a pipeline test report.\"\"\"\n  total: TestReportTotal!\n}\n\n\"\"\"Total test report statistics.\"\"\"\ntype TestReportTotal {\n  \"\"\"Total number of the test cases.\"\"\"\n  count: Int\n\n  \"\"\"Total number of test cases that had an error.\"\"\"\n  error: Int\n\n  \"\"\"Total number of test cases that failed.\"\"\"\n  failed: Int\n\n  \"\"\"Total number of test cases that were skipped.\"\"\"\n  skipped: Int\n\n  \"\"\"Total number of test cases that succeeded.\"\"\"\n  success: Int\n\n  \"\"\"Test suite error message.\"\"\"\n  suiteError: String\n\n  \"\"\"Total duration of the tests.\"\"\"\n  time: Float\n}\n\n\"\"\"Test suite in a pipeline test report.\"\"\"\ntype TestSuite {\n  \"\"\"Total number of test cases that had an error.\"\"\"\n  errorCount: Int\n\n  \"\"\"Total number of test cases that failed in the test suite.\"\"\"\n  failedCount: Int\n\n  \"\"\"Name of the test suite.\"\"\"\n  name: String\n\n  \"\"\"Total number of test cases that were skipped in the test suite.\"\"\"\n  skippedCount: Int\n\n  \"\"\"Total number of test cases that succeeded in the test suite.\"\"\"\n  successCount: Int\n\n  \"\"\"Test suite error message.\"\"\"\n  suiteError: String\n\n  \"\"\"Test cases in the test suite.\"\"\"\n  testCases(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TestCaseConnection\n\n  \"\"\"Total number of the test cases in the test suite.\"\"\"\n  totalCount: Int\n\n  \"\"\"Total duration of the tests in the test suite.\"\"\"\n  totalTime: Float\n}\n\n\"\"\"Test suite summary in a pipeline test report.\"\"\"\ntype TestSuiteSummary {\n  \"\"\"IDs of the builds used to run the test suite.\"\"\"\n  buildIds: [ID!]\n\n  \"\"\"Total number of test cases that had an error.\"\"\"\n  errorCount: Int\n\n  \"\"\"Total number of test cases that failed in the test suite.\"\"\"\n  failedCount: Int\n\n  \"\"\"Name of the test suite.\"\"\"\n  name: String\n\n  \"\"\"Total number of test cases that were skipped in the test suite.\"\"\"\n  skippedCount: Int\n\n  \"\"\"Total number of test cases that succeeded in the test suite.\"\"\"\n  successCount: Int\n\n  \"\"\"Test suite error message.\"\"\"\n  suiteError: String\n\n  \"\"\"Total number of the test cases in the test suite.\"\"\"\n  totalCount: Int\n\n  \"\"\"Total duration of the tests in the test suite.\"\"\"\n  totalTime: Float\n}\n\n\"\"\"The connection type for TestSuiteSummary.\"\"\"\ntype TestSuiteSummaryConnection {\n  \"\"\"Total count of collection.\"\"\"\n  count: Int!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TestSuiteSummaryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [TestSuiteSummary]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TestSuiteSummaryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TestSuiteSummary\n}\n\n\"\"\"\nTime represented in ISO 8601.\n\nFor example: \"2021-03-09T14:58:50+00:00\".\n\nSee `https://www.iso.org/iso-8601-date-and-time-format.html`.\n\n\"\"\"\nscalar Time\n\n\"\"\"Represents the time report stats for timeboxes\"\"\"\ntype TimeReportStats {\n  \"\"\"Completed issues metrics.\"\"\"\n  complete: TimeboxMetrics\n\n  \"\"\"Incomplete issues metrics.\"\"\"\n  incomplete: TimeboxMetrics\n\n  \"\"\"Total issues metrics.\"\"\"\n  total: TimeboxMetrics\n}\n\n\"\"\"Represents measured stats metrics for timeboxes\"\"\"\ntype TimeboxMetrics {\n  \"\"\"The count metric.\"\"\"\n  count: Int!\n\n  \"\"\"The weight metric.\"\"\"\n  weight: Int!\n}\n\n\"\"\"Represents a historically accurate report about the timebox\"\"\"\ntype TimeboxReport {\n  \"\"\"Daily scope and completed totals for burnup charts.\"\"\"\n  burnupTimeSeries: [BurnupChartDailyTotals!]\n\n  \"\"\"Represents the time report stats for the timebox.\"\"\"\n  stats: TimeReportStats\n}\n\ninterface TimeboxReportInterface {\n  \"\"\"Historically accurate report about the timebox.\"\"\"\n  report: TimeboxReport\n}\n\n\"\"\"A time-frame defined as a closed inclusive range of two dates\"\"\"\ninput Timeframe {\n  \"\"\"The start of the range.\"\"\"\n  start: Date!\n\n  \"\"\"The end of the range.\"\"\"\n  end: Date!\n}\n\ntype Timelog {\n  \"\"\"The issue that logged time was added to.\"\"\"\n  issue: Issue\n\n  \"\"\"The note where the quick action to add the logged time was executed.\"\"\"\n  note: Note\n\n  \"\"\"Timestamp of when the time tracked was spent at.\"\"\"\n  spentAt: Time\n\n  \"\"\"The time spent displayed in seconds.\"\"\"\n  timeSpent: Int!\n\n  \"\"\"The user that logged the time.\"\"\"\n  user: UserCore!\n}\n\n\"\"\"The connection type for Timelog.\"\"\"\ntype TimelogConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [TimelogEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Timelog]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TimelogEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Timelog\n}\n\n\"\"\"Representing a to-do entry\"\"\"\ntype Todo {\n  \"\"\"Action of the to-do item.\"\"\"\n  action: TodoActionEnum!\n\n  \"\"\"The author of this to-do item.\"\"\"\n  author: UserCore!\n\n  \"\"\"Body of the to-do item.\"\"\"\n  body: String!\n\n  \"\"\"Timestamp this to-do item was created.\"\"\"\n  createdAt: Time!\n\n  \"\"\"Group this to-do item is associated with.\"\"\"\n  group: Group\n\n  \"\"\"ID of the to-do item.\"\"\"\n  id: ID!\n\n  \"\"\"The project this to-do item is associated with.\"\"\"\n  project: Project\n\n  \"\"\"State of the to-do item.\"\"\"\n  state: TodoStateEnum!\n\n  \"\"\"Target type of the to-do item.\"\"\"\n  targetType: TodoTargetEnum!\n}\n\nenum TodoActionEnum {\n  \"\"\"User was assigned.\"\"\"\n  assigned\n\n  \"\"\"User was mentioned.\"\"\"\n  mentioned\n\n  \"\"\"Build triggered by the user failed.\"\"\"\n  build_failed\n\n  \"\"\"User added a TODO.\"\"\"\n  marked\n\n  \"\"\"User was set as an approver.\"\"\"\n  approval_required\n\n  \"\"\"Merge request authored by the user could not be merged.\"\"\"\n  unmergeable\n\n  \"\"\"User was directly addressed.\"\"\"\n  directly_addressed\n\n  \"\"\"Merge request authored by the user was removed from the merge train.\"\"\"\n  merge_train_removed\n\n  \"\"\"Review was requested from the user.\"\"\"\n  review_requested\n}\n\n\"\"\"The connection type for Todo.\"\"\"\ntype TodoConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [TodoEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Todo]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of TodoCreate\"\"\"\ninput TodoCreateInput {\n  \"\"\"\n  The global ID of the to-do item's parent. Issues, merge requests, designs and epics are supported.\n  \"\"\"\n  targetId: TodoableID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of TodoCreate\"\"\"\ntype TodoCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The to-do item created.\"\"\"\n  todo: Todo\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TodoEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Todo\n}\n\n\"\"\"\nA `TodoID` is a global ID. It is encoded as a string.\n\nAn example `TodoID` is: `\"gid://gitlab/Todo/1\"`.\n\n\"\"\"\nscalar TodoID\n\n\"\"\"Autogenerated input type of TodoMarkDone\"\"\"\ninput TodoMarkDoneInput {\n  \"\"\"The global ID of the to-do item to mark as done.\"\"\"\n  id: TodoID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of TodoMarkDone\"\"\"\ntype TodoMarkDonePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The requested to-do item.\"\"\"\n  todo: Todo!\n}\n\n\"\"\"Autogenerated input type of TodoRestore\"\"\"\ninput TodoRestoreInput {\n  \"\"\"The global ID of the to-do item to restore.\"\"\"\n  id: TodoID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated input type of TodoRestoreMany\"\"\"\ninput TodoRestoreManyInput {\n  \"\"\"\n  The global IDs of the to-do items to restore (a maximum of 50 is supported at once).\n  \"\"\"\n  ids: [TodoID!]!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of TodoRestoreMany\"\"\"\ntype TodoRestoreManyPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Updated to-do items.\"\"\"\n  todos: [Todo!]!\n\n  \"\"\"\n  The IDs of the updated to-do items. Deprecated in 13.2: Use to-do items.\n  \"\"\"\n  updatedIds: [TodoID!]! @deprecated(reason: \"Use to-do items. Deprecated in 13.2.\")\n}\n\n\"\"\"Autogenerated return type of TodoRestore\"\"\"\ntype TodoRestorePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The requested to-do item.\"\"\"\n  todo: Todo!\n}\n\nenum TodoStateEnum {\n  \"\"\"The state of the todo is pending.\"\"\"\n  pending\n\n  \"\"\"The state of the todo is done.\"\"\"\n  done\n}\n\nenum TodoTargetEnum {\n  \"\"\"A Commit.\"\"\"\n  COMMIT\n\n  \"\"\"An Issue.\"\"\"\n  ISSUE\n\n  \"\"\"A MergeRequest.\"\"\"\n  MERGEREQUEST\n\n  \"\"\"A Design.\"\"\"\n  DESIGN\n\n  \"\"\"An Alert.\"\"\"\n  ALERT\n\n  \"\"\"An Epic.\"\"\"\n  EPIC\n}\n\n\"\"\"\nA `TodoableID` is a global ID. It is encoded as a string.\n\nAn example `TodoableID` is: `\"gid://gitlab/Todoable/1\"`.\n\n\"\"\"\nscalar TodoableID\n\n\"\"\"Autogenerated input type of TodosMarkAllDone\"\"\"\ninput TodosMarkAllDoneInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of TodosMarkAllDone\"\"\"\ntype TodosMarkAllDonePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Updated to-do items.\"\"\"\n  todos: [Todo!]!\n\n  \"\"\"IDs of the updated to-do items. Deprecated in 13.2: Use to-do items.\"\"\"\n  updatedIds: [TodoID!]! @deprecated(reason: \"Use to-do items. Deprecated in 13.2.\")\n}\n\n\"\"\"Autogenerated input type of ToggleAwardEmoji\"\"\"\ninput ToggleAwardEmojiInput {\n  \"\"\"The global ID of the awardable resource.\"\"\"\n  awardableId: AwardableID!\n\n  \"\"\"The emoji name.\"\"\"\n  name: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of ToggleAwardEmoji\"\"\"\ntype ToggleAwardEmojiPayload {\n  \"\"\"The award emoji after mutation.\"\"\"\n  awardEmoji: AwardEmoji\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"\n  Indicates the status of the emoji. True if the toggle awarded the emoji, and false if the toggle removed the emoji.\n  \"\"\"\n  toggledOn: Boolean!\n}\n\ntype Tree {\n  \"\"\"Blobs of the tree.\"\"\"\n  blobs(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): BlobConnection!\n\n  \"\"\"Last commit for the tree.\"\"\"\n  lastCommit: Commit\n\n  \"\"\"Sub-modules of the tree.\"\"\"\n  submodules(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SubmoduleConnection!\n\n  \"\"\"Trees of the tree.\"\"\"\n  trees(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TreeEntryConnection!\n}\n\n\"\"\"Represents a directory\"\"\"\ntype TreeEntry implements Entry {\n  \"\"\"Flat path of the entry.\"\"\"\n  flatPath: String!\n\n  \"\"\"ID of the entry.\"\"\"\n  id: ID!\n\n  \"\"\"Name of the entry.\"\"\"\n  name: String!\n\n  \"\"\"Path of the entry.\"\"\"\n  path: String!\n\n  \"\"\"Last commit SHA for the entry.\"\"\"\n  sha: String!\n\n  \"\"\"Type of tree entry.\"\"\"\n  type: EntryType!\n\n  \"\"\"Web path for the tree entry (directory).\"\"\"\n  webPath: String\n\n  \"\"\"Web URL for the tree entry (directory).\"\"\"\n  webUrl: String\n}\n\n\"\"\"The connection type for TreeEntry.\"\"\"\ntype TreeEntryConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [TreeEntryEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [TreeEntry]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TreeEntryEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: TreeEntry\n}\n\nenum TypeEnum {\n  personal\n  project\n}\n\n\"\"\"A regexp containing patterns sourced from user input\"\"\"\nscalar UntrustedRegexp\n\n\"\"\"Autogenerated input type of UpdateAlertStatus\"\"\"\ninput UpdateAlertStatusInput {\n  \"\"\"The project the alert to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the alert to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"The status to set the alert.\"\"\"\n  status: AlertManagementStatus!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateAlertStatus\"\"\"\ntype UpdateAlertStatusPayload {\n  \"\"\"The alert after mutation.\"\"\"\n  alert: AlertManagementAlert\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue created after mutation.\"\"\"\n  issue: Issue\n\n  \"\"\"The to-do item after mutation.\"\"\"\n  todo: Todo\n}\n\n\"\"\"Autogenerated input type of UpdateBoardEpicUserPreferences\"\"\"\ninput UpdateBoardEpicUserPreferencesInput {\n  \"\"\"The board global ID.\"\"\"\n  boardId: BoardID!\n\n  \"\"\"ID of an epic to set preferences for.\"\"\"\n  epicId: EpicID!\n\n  \"\"\"Whether the epic should be collapsed in the board.\"\"\"\n  collapsed: Boolean!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateBoardEpicUserPreferences\"\"\"\ntype UpdateBoardEpicUserPreferencesPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"User preferences for the epic in the board after mutation.\"\"\"\n  epicUserPreferences: BoardEpicUserPreferences\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of UpdateBoard\"\"\"\ninput UpdateBoardInput {\n  \"\"\"The board name.\"\"\"\n  name: String\n\n  \"\"\"Whether or not backlog list is hidden.\"\"\"\n  hideBacklogList: Boolean\n\n  \"\"\"Whether or not closed list is hidden.\"\"\"\n  hideClosedList: Boolean\n\n  \"\"\"The board global ID.\"\"\"\n  id: BoardID!\n\n  \"\"\"ID of user to be assigned to the board.\"\"\"\n  assigneeId: UserID\n\n  \"\"\"ID of milestone to be assigned to the board.\"\"\"\n  milestoneId: MilestoneID\n\n  \"\"\"ID of iteration to be assigned to the board.\"\"\"\n  iterationId: IterationID\n\n  \"\"\"Weight value to be assigned to the board.\"\"\"\n  weight: Int\n\n  \"\"\"Labels of the issue.\"\"\"\n  labels: [String!]\n\n  \"\"\"IDs of labels to be added to the board.\"\"\"\n  labelIds: [LabelID!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated input type of UpdateBoardList\"\"\"\ninput UpdateBoardListInput {\n  \"\"\"Position of list within the board.\"\"\"\n  position: Int\n\n  \"\"\"Indicates if the list is collapsed for this user.\"\"\"\n  collapsed: Boolean\n\n  \"\"\"Global ID of the list.\"\"\"\n  listId: ListID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateBoardList\"\"\"\ntype UpdateBoardListPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Mutated list.\"\"\"\n  list: BoardList\n}\n\n\"\"\"Autogenerated return type of UpdateBoard\"\"\"\ntype UpdateBoardPayload {\n  \"\"\"The board after mutation.\"\"\"\n  board: Board\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of UpdateComplianceFramework\"\"\"\ninput UpdateComplianceFrameworkInput {\n  \"\"\"The global ID of the compliance framework to update.\"\"\"\n  id: ComplianceManagementFrameworkID!\n\n  \"\"\"Parameters to update the compliance framework with.\"\"\"\n  params: ComplianceFrameworkInput!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateComplianceFramework\"\"\"\ntype UpdateComplianceFrameworkPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The compliance framework after mutation.\"\"\"\n  complianceFramework: ComplianceFramework\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of UpdateContainerExpirationPolicy\"\"\"\ninput UpdateContainerExpirationPolicyInput {\n  \"\"\"The project path where the container expiration policy is located.\"\"\"\n  projectPath: ID!\n\n  \"\"\"Indicates whether this container expiration policy is enabled.\"\"\"\n  enabled: Boolean\n\n  \"\"\"This container expiration policy schedule.\"\"\"\n  cadence: ContainerExpirationPolicyCadenceEnum\n\n  \"\"\"Tags older that this will expire.\"\"\"\n  olderThan: ContainerExpirationPolicyOlderThanEnum\n\n  \"\"\"Number of tags to retain.\"\"\"\n  keepN: ContainerExpirationPolicyKeepEnum\n\n  \"\"\"Tags with names matching this regex pattern will expire.\"\"\"\n  nameRegex: UntrustedRegexp\n\n  \"\"\"Tags with names matching this regex pattern will be preserved.\"\"\"\n  nameRegexKeep: UntrustedRegexp\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateContainerExpirationPolicy\"\"\"\ntype UpdateContainerExpirationPolicyPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The container expiration policy after mutation.\"\"\"\n  containerExpirationPolicy: ContainerExpirationPolicy\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\ninput UpdateDiffImagePositionInput {\n  \"\"\"X position of the note.\"\"\"\n  x: Int\n\n  \"\"\"Y position of the note.\"\"\"\n  y: Int\n\n  \"\"\"Total width of the image.\"\"\"\n  width: Int\n\n  \"\"\"Total height of the image.\"\"\"\n  height: Int\n}\n\n\"\"\"Autogenerated input type of UpdateEpicBoardList\"\"\"\ninput UpdateEpicBoardListInput {\n  \"\"\"Position of list within the board.\"\"\"\n  position: Int\n\n  \"\"\"Indicates if the list is collapsed for this user.\"\"\"\n  collapsed: Boolean\n\n  \"\"\"Global ID of the epic list.\"\"\"\n  listId: BoardsEpicListID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateEpicBoardList\"\"\"\ntype UpdateEpicBoardListPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Mutated epic list.\"\"\"\n  list: EpicList\n}\n\n\"\"\"Autogenerated input type of UpdateEpic\"\"\"\ninput UpdateEpicInput {\n  \"\"\"The IID of the epic to mutate.\"\"\"\n  iid: ID!\n\n  \"\"\"The group the epic to mutate is in.\"\"\"\n  groupPath: ID!\n\n  \"\"\"The title of the epic.\"\"\"\n  title: String\n\n  \"\"\"The description of the epic.\"\"\"\n  description: String\n\n  \"\"\"Indicates if the epic is confidential.\"\"\"\n  confidential: Boolean\n\n  \"\"\"The start date of the epic.\"\"\"\n  startDateFixed: String\n\n  \"\"\"The end date of the epic.\"\"\"\n  dueDateFixed: String\n\n  \"\"\"\n  Indicates start date should be sourced from start_date_fixed field not the issue milestones.\n  \"\"\"\n  startDateIsFixed: Boolean\n\n  \"\"\"\n  Indicates end date should be sourced from due_date_fixed field not the issue milestones.\n  \"\"\"\n  dueDateIsFixed: Boolean\n\n  \"\"\"The IDs of labels to be added to the epic.\"\"\"\n  addLabelIds: [ID!]\n\n  \"\"\"The IDs of labels to be removed from the epic.\"\"\"\n  removeLabelIds: [ID!]\n\n  \"\"\"State event for the epic.\"\"\"\n  stateEvent: EpicStateEvent\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateEpic\"\"\"\ntype UpdateEpicPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"The epic after mutation.\"\"\"\n  epic: Epic\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"Autogenerated input type of UpdateImageDiffNote\"\"\"\ninput UpdateImageDiffNoteInput {\n  \"\"\"The global ID of the note to update.\"\"\"\n  id: NoteID!\n\n  \"\"\"Content of the note.\"\"\"\n  body: String\n\n  \"\"\"The position of this note on a diff.\"\"\"\n  position: UpdateDiffImagePositionInput\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateImageDiffNote\"\"\"\ntype UpdateImageDiffNotePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The note after mutation.\"\"\"\n  note: Note\n}\n\n\"\"\"Autogenerated input type of UpdateIssue\"\"\"\ninput UpdateIssueInput {\n  \"\"\"The project the issue to mutate is in.\"\"\"\n  projectPath: ID!\n\n  \"\"\"The IID of the issue to mutate.\"\"\"\n  iid: String!\n\n  \"\"\"Description of the issue.\"\"\"\n  description: String\n\n  \"\"\"Due date of the issue.\"\"\"\n  dueDate: ISO8601Date\n\n  \"\"\"Indicates the issue is confidential.\"\"\"\n  confidential: Boolean\n\n  \"\"\"Indicates discussion is locked on the issue.\"\"\"\n  locked: Boolean\n\n  \"\"\"Title of the issue.\"\"\"\n  title: String\n\n  \"\"\"\n  The ID of the milestone to assign to the issue. On update milestone will be removed if set to null.\n  \"\"\"\n  milestoneId: ID\n\n  \"\"\"The IDs of labels to be added to the issue.\"\"\"\n  addLabelIds: [ID!]\n\n  \"\"\"The IDs of labels to be removed from the issue.\"\"\"\n  removeLabelIds: [ID!]\n\n  \"\"\"Close or reopen an issue.\"\"\"\n  stateEvent: IssueStateEvent\n\n  \"\"\"The desired health status.\"\"\"\n  healthStatus: HealthStatus\n\n  \"\"\"The weight of the issue.\"\"\"\n  weight: Int\n\n  \"\"\"The ID of the parent epic. NULL when removing the association.\"\"\"\n  epicId: EpicID\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateIssue\"\"\"\ntype UpdateIssuePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The issue after mutation.\"\"\"\n  issue: Issue\n}\n\n\"\"\"Autogenerated input type of UpdateIteration\"\"\"\ninput UpdateIterationInput {\n  \"\"\"Group of the iteration.\"\"\"\n  groupPath: ID!\n\n  \"\"\"Global ID of the iteration.\"\"\"\n  id: ID!\n\n  \"\"\"Title of the iteration.\"\"\"\n  title: String\n\n  \"\"\"Description of the iteration.\"\"\"\n  description: String\n\n  \"\"\"Start date of the iteration.\"\"\"\n  startDate: String\n\n  \"\"\"End date of the iteration.\"\"\"\n  dueDate: String\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateIteration\"\"\"\ntype UpdateIterationPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Updated iteration.\"\"\"\n  iteration: Iteration\n}\n\n\"\"\"Autogenerated input type of UpdateNamespacePackageSettings\"\"\"\ninput UpdateNamespacePackageSettingsInput {\n  \"\"\"The namespace path where the namespace package setting is located.\"\"\"\n  namespacePath: ID!\n\n  \"\"\"\n  Indicates whether duplicate Maven packages are allowed for this namespace.\n  \"\"\"\n  mavenDuplicatesAllowed: Boolean\n\n  \"\"\"\n  When maven_duplicates_allowed is false, you can publish duplicate packages with names that match this regex. Otherwise, this setting has no effect.\n  \"\"\"\n  mavenDuplicateExceptionRegex: UntrustedRegexp\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateNamespacePackageSettings\"\"\"\ntype UpdateNamespacePackageSettingsPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The namespace package setting after mutation.\"\"\"\n  packageSettings: PackageSettings\n}\n\n\"\"\"Autogenerated input type of UpdateNote\"\"\"\ninput UpdateNoteInput {\n  \"\"\"The global ID of the note to update.\"\"\"\n  id: NoteID!\n\n  \"\"\"Content of the note.\"\"\"\n  body: String\n\n  \"\"\"The confidentiality flag of a note. Default is false.\"\"\"\n  confidential: Boolean\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateNote\"\"\"\ntype UpdateNotePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The note after mutation.\"\"\"\n  note: Note\n}\n\n\"\"\"Autogenerated input type of UpdateRequirement\"\"\"\ninput UpdateRequirementInput {\n  \"\"\"Title of the requirement.\"\"\"\n  title: String\n\n  \"\"\"Description of the requirement.\"\"\"\n  description: String\n\n  \"\"\"Full project path the requirement is associated with.\"\"\"\n  projectPath: ID!\n\n  \"\"\"State of the requirement.\"\"\"\n  state: RequirementState\n\n  \"\"\"The IID of the requirement to update.\"\"\"\n  iid: String!\n\n  \"\"\"Creates a test report for the requirement with the given state.\"\"\"\n  lastTestReportState: TestReportState\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateRequirement\"\"\"\ntype UpdateRequirementPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"Requirement after mutation.\"\"\"\n  requirement: Requirement\n}\n\n\"\"\"Autogenerated input type of UpdateSnippet\"\"\"\ninput UpdateSnippetInput {\n  \"\"\"The global ID of the snippet to update.\"\"\"\n  id: SnippetID!\n\n  \"\"\"Title of the snippet.\"\"\"\n  title: String\n\n  \"\"\"Description of the snippet.\"\"\"\n  description: String\n\n  \"\"\"The visibility level of the snippet.\"\"\"\n  visibilityLevel: VisibilityLevelsEnum\n\n  \"\"\"Actions to perform over the snippet repository and blobs.\"\"\"\n  blobActions: [SnippetBlobActionInputType!]\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UpdateSnippet\"\"\"\ntype UpdateSnippetPayload {\n  \"\"\"\n  The CAPTCHA site key which must be used to render a challenge for the user to solve to obtain a valid captchaResponse value. Included only when an operation was not completed because \"NeedsCaptchaResponse\" is true. Deprecated in 13.11: Use spam protection with HTTP headers instead.\n  \"\"\"\n  captchaSiteKey: String @deprecated(reason: \"Use spam protection with HTTP headers instead. Deprecated in 13.11.\")\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"\n  Indicates whether the operation was detected as possible spam and not completed. If CAPTCHA is enabled, the request must be resubmitted with a valid CAPTCHA response and spam_log_id included for the operation to be completed. Included only when an operation was not completed because \"NeedsCaptchaResponse\" is true. Deprecated in 13.11: Use spam protection with HTTP headers instead.\n  \"\"\"\n  needsCaptchaResponse: Boolean @deprecated(reason: \"Use spam protection with HTTP headers instead. Deprecated in 13.11.\")\n\n  \"\"\"The snippet after mutation.\"\"\"\n  snippet: Snippet\n\n  \"\"\"\n  Indicates whether the operation was detected as definite spam. There is no option to resubmit the request with a CAPTCHA response. Deprecated in 13.11: Use spam protection with HTTP headers instead.\n  \"\"\"\n  spam: Boolean @deprecated(reason: \"Use spam protection with HTTP headers instead. Deprecated in 13.11.\")\n\n  \"\"\"\n  The spam log ID which must be passed along with a valid CAPTCHA response for an operation to be completed. Included only when an operation was not completed because \"NeedsCaptchaResponse\" is true. Deprecated in 13.11: Use spam protection with HTTP headers instead.\n  \"\"\"\n  spamLogId: Int @deprecated(reason: \"Use spam protection with HTTP headers instead. Deprecated in 13.11.\")\n}\n\nscalar Upload\n\n\"\"\"Represents a recorded measurement (object count) for the Admins\"\"\"\ntype UsageTrendsMeasurement {\n  \"\"\"Object count.\"\"\"\n  count: Int!\n\n  \"\"\"The type of objects being measured.\"\"\"\n  identifier: MeasurementIdentifier!\n\n  \"\"\"The time the measurement was recorded.\"\"\"\n  recordedAt: Time\n}\n\n\"\"\"The connection type for UsageTrendsMeasurement.\"\"\"\ntype UsageTrendsMeasurementConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [UsageTrendsMeasurementEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [UsageTrendsMeasurement]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UsageTrendsMeasurementEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: UsageTrendsMeasurement\n}\n\n\"\"\"Representation of a GitLab user.\"\"\"\ninterface User {\n  \"\"\"Merge requests assigned to the user.\"\"\"\n  assignedMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Username of the reviewer.\"\"\"\n    reviewerUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Merge requests authored by the user.\"\"\"\n  authoredMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Username of the reviewer.\"\"\"\n    reviewerUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"URL of the user's avatar.\"\"\"\n  avatarUrl: String\n\n  \"\"\"Indicates if the user is a bot.\"\"\"\n  bot: Boolean!\n\n  \"\"\"User callouts that belong to the user.\"\"\"\n  callouts(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCalloutConnection\n\n  \"\"\"User email. Deprecated in 13.7: This was renamed.\"\"\"\n  email: String @deprecated(reason: \"This was renamed. Please use `User.publicEmail`. Deprecated in 13.7.\")\n\n  \"\"\"Group memberships of the user.\"\"\"\n  groupMemberships(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): GroupMemberConnection\n\n  \"\"\"ID of the user.\"\"\"\n  id: ID!\n\n  \"\"\"The location of the user.\"\"\"\n  location: String\n\n  \"\"\"Human-readable name of the user.\"\"\"\n  name: String!\n\n  \"\"\"Project memberships of the user.\"\"\"\n  projectMemberships(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectMemberConnection\n\n  \"\"\"User's public email.\"\"\"\n  publicEmail: String\n\n  \"\"\"Merge requests assigned to the user for review.\"\"\"\n  reviewRequestedMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Snippets authored by the user.\"\"\"\n  snippets(\n    \"\"\"\n    Array of global snippet IDs. For example, `gid://gitlab/ProjectSnippet/1`.\n    \"\"\"\n    ids: [SnippetID!]\n\n    \"\"\"The visibility of the snippet.\"\"\"\n    visibility: VisibilityScopesEnum\n\n    \"\"\"The type of snippet.\"\"\"\n    type: TypeEnum\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SnippetConnection\n\n  \"\"\"Projects starred by the user.\"\"\"\n  starredProjects(\n    \"\"\"Search query.\"\"\"\n    search: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectConnection\n\n  \"\"\"State of the user.\"\"\"\n  state: UserState!\n\n  \"\"\"User status.\"\"\"\n  status: UserStatus\n\n  \"\"\"To-do items of the user.\"\"\"\n  todos(\n    \"\"\"The action to be filtered.\"\"\"\n    action: [TodoActionEnum!]\n\n    \"\"\"The ID of an author.\"\"\"\n    authorId: [ID!]\n\n    \"\"\"The ID of a project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"The ID of a group.\"\"\"\n    groupId: [ID!]\n\n    \"\"\"The state of the todo.\"\"\"\n    state: [TodoStateEnum!]\n\n    \"\"\"The type of the todo.\"\"\"\n    type: [TodoTargetEnum!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TodoConnection\n\n  \"\"\"Permissions for the current user on the resource.\"\"\"\n  userPermissions: UserPermissions!\n\n  \"\"\"Username of the user. Unique within this instance of GitLab.\"\"\"\n  username: String!\n\n  \"\"\"Web path of the user.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the user.\"\"\"\n  webUrl: String!\n}\n\ntype UserCallout {\n  \"\"\"Date when the callout was dismissed.\"\"\"\n  dismissedAt: Time\n\n  \"\"\"Name of the feature that the callout is for.\"\"\"\n  featureName: UserCalloutFeatureNameEnum!\n}\n\n\"\"\"The connection type for UserCallout.\"\"\"\ntype UserCalloutConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserCalloutEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [UserCallout]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of UserCalloutCreate\"\"\"\ninput UserCalloutCreateInput {\n  \"\"\"The feature name you want to dismiss the callout for.\"\"\"\n  featureName: String!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of UserCalloutCreate\"\"\"\ntype UserCalloutCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The user callout dismissed.\"\"\"\n  userCallout: UserCallout!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserCalloutEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: UserCallout\n}\n\n\"\"\"Name of the feature that the callout is for.\"\"\"\nenum UserCalloutFeatureNameEnum {\n  \"\"\"Callout feature name for gke_cluster_integration.\"\"\"\n  GKE_CLUSTER_INTEGRATION\n\n  \"\"\"Callout feature name for gcp_signup_offer.\"\"\"\n  GCP_SIGNUP_OFFER\n\n  \"\"\"Callout feature name for cluster_security_warning.\"\"\"\n  CLUSTER_SECURITY_WARNING\n\n  \"\"\"Callout feature name for ultimate_trial.\"\"\"\n  ULTIMATE_TRIAL\n\n  \"\"\"Callout feature name for geo_enable_hashed_storage.\"\"\"\n  GEO_ENABLE_HASHED_STORAGE\n\n  \"\"\"Callout feature name for geo_migrate_hashed_storage.\"\"\"\n  GEO_MIGRATE_HASHED_STORAGE\n\n  \"\"\"Callout feature name for canary_deployment.\"\"\"\n  CANARY_DEPLOYMENT\n\n  \"\"\"Callout feature name for gold_trial_billings.\"\"\"\n  GOLD_TRIAL_BILLINGS\n\n  \"\"\"Callout feature name for suggest_popover_dismissed.\"\"\"\n  SUGGEST_POPOVER_DISMISSED\n\n  \"\"\"Callout feature name for tabs_position_highlight.\"\"\"\n  TABS_POSITION_HIGHLIGHT\n\n  \"\"\"Callout feature name for threat_monitoring_info.\"\"\"\n  THREAT_MONITORING_INFO\n\n  \"\"\"Callout feature name for account_recovery_regular_check.\"\"\"\n  ACCOUNT_RECOVERY_REGULAR_CHECK\n\n  \"\"\"Callout feature name for webhooks_moved.\"\"\"\n  WEBHOOKS_MOVED\n\n  \"\"\"Callout feature name for service_templates_deprecated_callout.\"\"\"\n  SERVICE_TEMPLATES_DEPRECATED_CALLOUT\n\n  \"\"\"Callout feature name for admin_integrations_moved.\"\"\"\n  ADMIN_INTEGRATIONS_MOVED\n\n  \"\"\"Callout feature name for web_ide_alert_dismissed.\"\"\"\n  WEB_IDE_ALERT_DISMISSED\n\n  \"\"\"Callout feature name for active_user_count_threshold.\"\"\"\n  ACTIVE_USER_COUNT_THRESHOLD\n\n  \"\"\"Callout feature name for buy_pipeline_minutes_notification_dot.\"\"\"\n  BUY_PIPELINE_MINUTES_NOTIFICATION_DOT\n\n  \"\"\"Callout feature name for personal_access_token_expiry.\"\"\"\n  PERSONAL_ACCESS_TOKEN_EXPIRY\n\n  \"\"\"Callout feature name for suggest_pipeline.\"\"\"\n  SUGGEST_PIPELINE\n\n  \"\"\"Callout feature name for customize_homepage.\"\"\"\n  CUSTOMIZE_HOMEPAGE\n\n  \"\"\"Callout feature name for feature_flags_new_version.\"\"\"\n  FEATURE_FLAGS_NEW_VERSION\n\n  \"\"\"Callout feature name for registration_enabled_callout.\"\"\"\n  REGISTRATION_ENABLED_CALLOUT\n\n  \"\"\"Callout feature name for new_user_signups_cap_reached.\"\"\"\n  NEW_USER_SIGNUPS_CAP_REACHED\n\n  \"\"\"Callout feature name for unfinished_tag_cleanup_callout.\"\"\"\n  UNFINISHED_TAG_CLEANUP_CALLOUT\n\n  \"\"\"Callout feature name for eoa_bronze_plan_banner.\"\"\"\n  EOA_BRONZE_PLAN_BANNER\n\n  \"\"\"Callout feature name for pipeline_needs_banner.\"\"\"\n  PIPELINE_NEEDS_BANNER\n\n  \"\"\"Callout feature name for pipeline_needs_hover_tip.\"\"\"\n  PIPELINE_NEEDS_HOVER_TIP\n}\n\n\"\"\"Core represention of a GitLab user.\"\"\"\ntype UserCore implements User {\n  \"\"\"Merge requests assigned to the user.\"\"\"\n  assignedMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Username of the reviewer.\"\"\"\n    reviewerUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Merge requests authored by the user.\"\"\"\n  authoredMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Username of the reviewer.\"\"\"\n    reviewerUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"URL of the user's avatar.\"\"\"\n  avatarUrl: String\n\n  \"\"\"Indicates if the user is a bot.\"\"\"\n  bot: Boolean!\n\n  \"\"\"User callouts that belong to the user.\"\"\"\n  callouts(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): UserCalloutConnection\n\n  \"\"\"User email. Deprecated in 13.7: This was renamed.\"\"\"\n  email: String @deprecated(reason: \"This was renamed. Please use `User.publicEmail`. Deprecated in 13.7.\")\n\n  \"\"\"Group memberships of the user.\"\"\"\n  groupMemberships(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): GroupMemberConnection\n\n  \"\"\"ID of the user.\"\"\"\n  id: ID!\n\n  \"\"\"The location of the user.\"\"\"\n  location: String\n\n  \"\"\"Human-readable name of the user.\"\"\"\n  name: String!\n\n  \"\"\"Project memberships of the user.\"\"\"\n  projectMemberships(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectMemberConnection\n\n  \"\"\"User's public email.\"\"\"\n  publicEmail: String\n\n  \"\"\"Merge requests assigned to the user for review.\"\"\"\n  reviewRequestedMergeRequests(\n    \"\"\"Array of IIDs of merge requests, for example `[1, 2]`.\"\"\"\n    iids: [String!]\n\n    \"\"\"\n    Array of source branch names.\n    All resolved merge requests will have one of these branches as their source.\n    \n    \"\"\"\n    sourceBranches: [String!]\n\n    \"\"\"\n    Array of target branch names.\n    All resolved merge requests will have one of these branches as their target.\n    \n    \"\"\"\n    targetBranches: [String!]\n\n    \"\"\"\n    A merge request state. If provided, all resolved merge requests will have this state.\n    \"\"\"\n    state: MergeRequestState\n\n    \"\"\"\n    Array of label names. All resolved merge requests will have all of these labels.\n    \"\"\"\n    labels: [String!]\n\n    \"\"\"Merge requests merged after this date.\"\"\"\n    mergedAfter: Time\n\n    \"\"\"Merge requests merged before this date.\"\"\"\n    mergedBefore: Time\n\n    \"\"\"Title of the milestone.\"\"\"\n    milestoneTitle: String\n\n    \"\"\"Sort merge requests by this criteria.\"\"\"\n    sort: MergeRequestSort = null\n\n    \"\"\"\n    List of negated arguments.\n    Warning: this argument is experimental and a subject to change in future.\n    \n    \"\"\"\n    not: MergeRequestsResolverNegatedParams\n\n    \"\"\"\n    The full-path of the project the authored merge requests should be in.\n    Incompatible with projectId.\n    \n    \"\"\"\n    projectPath: String\n\n    \"\"\"\n    The global ID of the project the authored merge requests should be in.\n    Incompatible with projectPath.\n    \n    \"\"\"\n    projectId: ProjectID\n\n    \"\"\"Username of the author.\"\"\"\n    authorUsername: String\n\n    \"\"\"Username of the assignee.\"\"\"\n    assigneeUsername: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): MergeRequestConnection\n\n  \"\"\"Snippets authored by the user.\"\"\"\n  snippets(\n    \"\"\"\n    Array of global snippet IDs. For example, `gid://gitlab/ProjectSnippet/1`.\n    \"\"\"\n    ids: [SnippetID!]\n\n    \"\"\"The visibility of the snippet.\"\"\"\n    visibility: VisibilityScopesEnum\n\n    \"\"\"The type of snippet.\"\"\"\n    type: TypeEnum\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): SnippetConnection\n\n  \"\"\"Projects starred by the user.\"\"\"\n  starredProjects(\n    \"\"\"Search query.\"\"\"\n    search: String\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectConnection\n\n  \"\"\"State of the user.\"\"\"\n  state: UserState!\n\n  \"\"\"User status.\"\"\"\n  status: UserStatus\n\n  \"\"\"To-do items of the user.\"\"\"\n  todos(\n    \"\"\"The action to be filtered.\"\"\"\n    action: [TodoActionEnum!]\n\n    \"\"\"The ID of an author.\"\"\"\n    authorId: [ID!]\n\n    \"\"\"The ID of a project.\"\"\"\n    projectId: [ID!]\n\n    \"\"\"The ID of a group.\"\"\"\n    groupId: [ID!]\n\n    \"\"\"The state of the todo.\"\"\"\n    state: [TodoStateEnum!]\n\n    \"\"\"The type of the todo.\"\"\"\n    type: [TodoTargetEnum!]\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): TodoConnection\n\n  \"\"\"Permissions for the current user on the resource.\"\"\"\n  userPermissions: UserPermissions!\n\n  \"\"\"Username of the user. Unique within this instance of GitLab.\"\"\"\n  username: String!\n\n  \"\"\"Web path of the user.\"\"\"\n  webPath: String!\n\n  \"\"\"Web URL of the user.\"\"\"\n  webUrl: String!\n}\n\n\"\"\"The connection type for UserCore.\"\"\"\ntype UserCoreConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [UserCoreEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [UserCore]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype UserCoreEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: UserCore\n}\n\n\"\"\"\nA `UserID` is a global ID. It is encoded as a string.\n\nAn example `UserID` is: `\"gid://gitlab/User/1\"`.\n\n\"\"\"\nscalar UserID\n\n\"\"\"\nInformation about a merge request given a specific user.\n\nThis object has two parts to its state: a `User` and a `MergeRequest`. All\nfields relate to interactions between the two entities.\n\n\"\"\"\ntype UserMergeRequestInteraction {\n  \"\"\"Approval rules that apply to this user for this merge request.\"\"\"\n  applicableApprovalRules: [ApprovalRule!]\n\n  \"\"\"Whether this user has approved this merge request.\"\"\"\n  approved: Boolean!\n\n  \"\"\"Whether this user can merge this merge request.\"\"\"\n  canMerge: Boolean!\n\n  \"\"\"Whether this user can update this merge request.\"\"\"\n  canUpdate: Boolean!\n\n  \"\"\"The state of the review by this user.\"\"\"\n  reviewState: MergeRequestReviewState\n\n  \"\"\"Whether this user has provided a review for this merge request.\"\"\"\n  reviewed: Boolean!\n}\n\ntype UserPermissions {\n  \"\"\"Indicates the user can perform `create_snippet` on this resource\"\"\"\n  createSnippet: Boolean!\n}\n\n\"\"\"Possible states of a user\"\"\"\nenum UserState {\n  \"\"\"The user is active and is able to use the system.\"\"\"\n  active\n\n  \"\"\"The user has been blocked and is prevented from using the system.\"\"\"\n  blocked\n\n  \"\"\"The user is no longer active and is unable to use the system.\"\"\"\n  deactivated\n}\n\ntype UserStatus {\n  \"\"\"User availability status.\"\"\"\n  availability: AvailabilityEnum!\n\n  \"\"\"String representation of emoji.\"\"\"\n  emoji: String\n\n  \"\"\"User status message.\"\"\"\n  message: String\n\n  \"\"\"HTML of the user status message\"\"\"\n  messageHtml: String\n}\n\nenum VisibilityLevelsEnum {\n  \"\"\"Private visibility level.\"\"\"\n  private\n\n  \"\"\"Internal visibility level.\"\"\"\n  internal\n\n  \"\"\"Public visibility level.\"\"\"\n  public\n}\n\nenum VisibilityScopesEnum {\n  private\n  internal\n  public\n}\n\n\"\"\"\nRepresents the count of vulnerabilities by severity on a particular day. This data is retained for 365 days\n\"\"\"\ntype VulnerabilitiesCountByDay {\n  \"\"\"\n  Total number of vulnerabilities on a particular day with critical severity\n  \"\"\"\n  critical: Int!\n\n  \"\"\"Date for the count.\"\"\"\n  date: ISO8601Date!\n\n  \"\"\"Total number of vulnerabilities on a particular day with high severity\"\"\"\n  high: Int!\n\n  \"\"\"Total number of vulnerabilities on a particular day with info severity\"\"\"\n  info: Int!\n\n  \"\"\"Total number of vulnerabilities on a particular day with low severity\"\"\"\n  low: Int!\n\n  \"\"\"\n  Total number of vulnerabilities on a particular day with medium severity\n  \"\"\"\n  medium: Int!\n\n  \"\"\"Total number of vulnerabilities on a particular day.\"\"\"\n  total: Int!\n\n  \"\"\"\n  Total number of vulnerabilities on a particular day with unknown severity\n  \"\"\"\n  unknown: Int!\n}\n\n\"\"\"\nRepresents the number of vulnerabilities for a particular severity on a particular day. This data is retained for 365 days\n\"\"\"\ntype VulnerabilitiesCountByDayAndSeverity {\n  \"\"\"Number of vulnerabilities.\"\"\"\n  count: Int\n\n  \"\"\"Date for the count.\"\"\"\n  day: ISO8601Date\n\n  \"\"\"Severity of the counted vulnerabilities.\"\"\"\n  severity: VulnerabilitySeverity\n}\n\n\"\"\"The connection type for VulnerabilitiesCountByDayAndSeverity.\"\"\"\ntype VulnerabilitiesCountByDayAndSeverityConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [VulnerabilitiesCountByDayAndSeverityEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [VulnerabilitiesCountByDayAndSeverity]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VulnerabilitiesCountByDayAndSeverityEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: VulnerabilitiesCountByDayAndSeverity\n}\n\n\"\"\"The connection type for VulnerabilitiesCountByDay.\"\"\"\ntype VulnerabilitiesCountByDayConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [VulnerabilitiesCountByDayEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [VulnerabilitiesCountByDay]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VulnerabilitiesCountByDayEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: VulnerabilitiesCountByDay\n}\n\n\"\"\"\nA `VulnerabilitiesExternalIssueLinkID` is a global ID. It is encoded as a string.\n\nAn example `VulnerabilitiesExternalIssueLinkID` is: `\"gid://gitlab/Vulnerabilities::ExternalIssueLink/1\"`.\n\n\"\"\"\nscalar VulnerabilitiesExternalIssueLinkID\n\n\"\"\"\nA `VulnerabilitiesScannerID` is a global ID. It is encoded as a string.\n\nAn example `VulnerabilitiesScannerID` is: `\"gid://gitlab/Vulnerabilities::Scanner/1\"`.\n\n\"\"\"\nscalar VulnerabilitiesScannerID\n\n\"\"\"Represents a vulnerability\"\"\"\ntype Vulnerability implements Noteable {\n  \"\"\"Timestamp of when the vulnerability state was changed to confirmed.\"\"\"\n  confirmedAt: Time\n\n  \"\"\"The user that confirmed the vulnerability.\"\"\"\n  confirmedBy: UserCore\n\n  \"\"\"Description of the vulnerability.\"\"\"\n  description: String\n\n  \"\"\"Details of the vulnerability.\"\"\"\n  details: [VulnerabilityDetail!]!\n\n  \"\"\"Timestamp of when the vulnerability was first detected.\"\"\"\n  detectedAt: Time!\n\n  \"\"\"All discussions on this noteable.\"\"\"\n  discussions(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): DiscussionConnection!\n\n  \"\"\"Timestamp of when the vulnerability state was changed to dismissed.\"\"\"\n  dismissedAt: Time\n\n  \"\"\"The user that dismissed the vulnerability.\"\"\"\n  dismissedBy: UserCore\n\n  \"\"\"List of external issue links related to the vulnerability.\"\"\"\n  externalIssueLinks(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilityExternalIssueLinkConnection!\n\n  \"\"\"\n  Indicates whether there is a solution available for this vulnerability.\n  \"\"\"\n  hasSolutions: Boolean\n\n  \"\"\"GraphQL ID of the vulnerability.\"\"\"\n  id: ID!\n\n  \"\"\"Identifiers of the vulnerability.\"\"\"\n  identifiers: [VulnerabilityIdentifier!]!\n\n  \"\"\"List of issue links related to the vulnerability.\"\"\"\n  issueLinks(\n    \"\"\"Filter issue links by link type.\"\"\"\n    linkType: VulnerabilityIssueLinkType\n\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): VulnerabilityIssueLinkConnection!\n\n  \"\"\"\n  Location metadata for the vulnerability. Its fields depend on the type of security scan that found the vulnerability.\n  \"\"\"\n  location: VulnerabilityLocation\n\n  \"\"\"Merge request that fixes the vulnerability.\"\"\"\n  mergeRequest: MergeRequest\n\n  \"\"\"All notes on this noteable.\"\"\"\n  notes(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): NoteConnection!\n\n  \"\"\"Primary identifier of the vulnerability.\"\"\"\n  primaryIdentifier: VulnerabilityIdentifier\n\n  \"\"\"The project on which the vulnerability was found.\"\"\"\n  project: Project\n\n  \"\"\"\n  Type of the security report that found the vulnerability (SAST, DEPENDENCY_SCANNING, CONTAINER_SCANNING, DAST, SECRET_DETECTION, COVERAGE_FUZZING, API_FUZZING). `Scan Type` in the UI.\n  \"\"\"\n  reportType: VulnerabilityReportType\n\n  \"\"\"Timestamp of when the vulnerability state was changed to resolved.\"\"\"\n  resolvedAt: Time\n\n  \"\"\"The user that resolved the vulnerability.\"\"\"\n  resolvedBy: UserCore\n\n  \"\"\"\n  Indicates whether the vulnerability is fixed on the default branch or not.\n  \"\"\"\n  resolvedOnDefaultBranch: Boolean!\n\n  \"\"\"Scanner metadata for the vulnerability.\"\"\"\n  scanner: VulnerabilityScanner\n\n  \"\"\"\n  Severity of the vulnerability (INFO, UNKNOWN, LOW, MEDIUM, HIGH, CRITICAL)\n  \"\"\"\n  severity: VulnerabilitySeverity\n\n  \"\"\"State of the vulnerability (DETECTED, CONFIRMED, RESOLVED, DISMISSED)\"\"\"\n  state: VulnerabilityState\n\n  \"\"\"Title of the vulnerability.\"\"\"\n  title: String\n\n  \"\"\"Number of user notes attached to the vulnerability.\"\"\"\n  userNotesCount: Int!\n\n  \"\"\"Permissions for the current user on the resource\"\"\"\n  userPermissions: VulnerabilityPermissions!\n\n  \"\"\"URL to the vulnerability's details page.\"\"\"\n  vulnerabilityPath: String\n}\n\n\"\"\"Autogenerated input type of VulnerabilityConfirm\"\"\"\ninput VulnerabilityConfirmInput {\n  \"\"\"ID of the vulnerability to be confirmed.\"\"\"\n  id: VulnerabilityID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of VulnerabilityConfirm\"\"\"\ntype VulnerabilityConfirmPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The vulnerability after state change.\"\"\"\n  vulnerability: Vulnerability\n}\n\n\"\"\"The connection type for Vulnerability.\"\"\"\ntype VulnerabilityConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [VulnerabilityEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [Vulnerability]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"\nRepresents a vulnerability detail field. The fields with data will depend on the vulnerability detail type\n\"\"\"\nunion VulnerabilityDetail = VulnerabilityDetailBase | VulnerabilityDetailBoolean | VulnerabilityDetailCode | VulnerabilityDetailCommit | VulnerabilityDetailDiff | VulnerabilityDetailFileLocation | VulnerabilityDetailInt | VulnerabilityDetailList | VulnerabilityDetailMarkdown | VulnerabilityDetailModuleLocation | VulnerabilityDetailTable | VulnerabilityDetailText | VulnerabilityDetailUrl\n\n\"\"\"Represents the vulnerability details base\"\"\"\ntype VulnerabilityDetailBase {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n}\n\n\"\"\"Represents the vulnerability details boolean value\"\"\"\ntype VulnerabilityDetailBoolean {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n\n  \"\"\"Value of the field.\"\"\"\n  value: Boolean!\n}\n\n\"\"\"Represents the vulnerability details code field\"\"\"\ntype VulnerabilityDetailCode {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Language of the code.\"\"\"\n  lang: String\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n\n  \"\"\"Source code.\"\"\"\n  value: String!\n}\n\n\"\"\"Represents the vulnerability details commit field\"\"\"\ntype VulnerabilityDetailCommit {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n\n  \"\"\"The commit SHA value.\"\"\"\n  value: String!\n}\n\n\"\"\"Represents the vulnerability details diff field\"\"\"\ntype VulnerabilityDetailDiff {\n  \"\"\"Value of the field after the change.\"\"\"\n  after: String!\n\n  \"\"\"Value of the field before the change.\"\"\"\n  before: String!\n\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n}\n\n\"\"\"\nRepresents the vulnerability details location within a file in the project\n\"\"\"\ntype VulnerabilityDetailFileLocation {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"File name.\"\"\"\n  fileName: String!\n\n  \"\"\"End line number of the file location.\"\"\"\n  lineEnd: Int!\n\n  \"\"\"Start line number of the file location.\"\"\"\n  lineStart: Int!\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n}\n\n\"\"\"Represents the vulnerability details integer value\"\"\"\ntype VulnerabilityDetailInt {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n\n  \"\"\"Value of the field.\"\"\"\n  value: Int!\n}\n\n\"\"\"Represents the vulnerability details list value\"\"\"\ntype VulnerabilityDetailList {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"List of details.\"\"\"\n  items: [VulnerabilityDetail!]!\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n}\n\n\"\"\"Represents the vulnerability details Markdown field\"\"\"\ntype VulnerabilityDetailMarkdown {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n\n  \"\"\"Value of the Markdown field.\"\"\"\n  value: String!\n}\n\n\"\"\"\nRepresents the vulnerability details location within a file in the project\n\"\"\"\ntype VulnerabilityDetailModuleLocation {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Module name.\"\"\"\n  moduleName: String!\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n\n  \"\"\"Offset of the module location.\"\"\"\n  offset: Int!\n}\n\n\"\"\"Represents the vulnerability details table value\"\"\"\ntype VulnerabilityDetailTable {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Table headers.\"\"\"\n  headers: [VulnerabilityDetail!]!\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n\n  \"\"\"Table rows.\"\"\"\n  rows: [VulnerabilityDetail!]!\n}\n\n\"\"\"Represents the vulnerability details text field\"\"\"\ntype VulnerabilityDetailText {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n\n  \"\"\"Value of the text field.\"\"\"\n  value: String!\n}\n\n\"\"\"Represents the vulnerability details URL field\"\"\"\ntype VulnerabilityDetailUrl {\n  \"\"\"Description of the field.\"\"\"\n  description: String\n\n  \"\"\"Name of the field.\"\"\"\n  fieldName: String\n\n  \"\"\"Href of the URL.\"\"\"\n  href: String!\n\n  \"\"\"Name of the field.\"\"\"\n  name: String\n\n  \"\"\"Text of the URL.\"\"\"\n  text: String\n}\n\n\"\"\"Autogenerated input type of VulnerabilityDismiss\"\"\"\ninput VulnerabilityDismissInput {\n  \"\"\"ID of the vulnerability to be dismissed.\"\"\"\n  id: VulnerabilityID!\n\n  \"\"\"Comment why vulnerability should be dismissed.\"\"\"\n  comment: String\n\n  \"\"\"Reason why vulnerability should be dismissed.\"\"\"\n  dismissalReason: VulnerabilityDismissalReason\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of VulnerabilityDismiss\"\"\"\ntype VulnerabilityDismissPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The vulnerability after dismissal.\"\"\"\n  vulnerability: Vulnerability\n}\n\n\"\"\"The dismissal reason of the Vulnerability\"\"\"\nenum VulnerabilityDismissalReason {\n  \"\"\"\n  The vulnerability is known, and has not been remediated or mitigated, but is considered to be an acceptable business risk.\n  \"\"\"\n  ACCEPTABLE_RISK\n\n  \"\"\"\n  An error in reporting in which a test result incorrectly indicates the presence of a vulnerability in a system when the vulnerability is not present.\n  \"\"\"\n  FALSE_POSITIVE\n\n  \"\"\"\n  A management, operational, or technical control (that is, safeguard or countermeasure) employed by an organization that provides equivalent or comparable protection for an information system.\n  \"\"\"\n  MITIGATING_CONTROL\n\n  \"\"\"\n  The finding is not a vulnerability because it is part of a test or is test data.\n  \"\"\"\n  USED_IN_TESTS\n\n  \"\"\"\n  The vulnerability is known, and has not been remediated or mitigated, but is considered to be in a part of the application that will not be updated.\n  \"\"\"\n  NOT_APPLICABLE\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VulnerabilityEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: Vulnerability\n}\n\n\"\"\"Represents an external issue link of a vulnerability\"\"\"\ntype VulnerabilityExternalIssueLink {\n  \"\"\"The external issue attached to the issue link.\"\"\"\n  externalIssue: ExternalIssue\n\n  \"\"\"GraphQL ID of the external issue link.\"\"\"\n  id: VulnerabilitiesExternalIssueLinkID!\n\n  \"\"\"Type of the external issue link.\"\"\"\n  linkType: VulnerabilityExternalIssueLinkType!\n}\n\n\"\"\"The connection type for VulnerabilityExternalIssueLink.\"\"\"\ntype VulnerabilityExternalIssueLinkConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [VulnerabilityExternalIssueLinkEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [VulnerabilityExternalIssueLink]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Autogenerated input type of VulnerabilityExternalIssueLinkCreate\"\"\"\ninput VulnerabilityExternalIssueLinkCreateInput {\n  \"\"\"ID of the vulnerability.\"\"\"\n  id: VulnerabilityID!\n\n  \"\"\"Type of the external issue link.\"\"\"\n  linkType: VulnerabilityExternalIssueLinkType!\n\n  \"\"\"External tracker type of the external issue link.\"\"\"\n  externalTracker: VulnerabilityExternalIssueLinkExternalTracker!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of VulnerabilityExternalIssueLinkCreate\"\"\"\ntype VulnerabilityExternalIssueLinkCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The created external issue link.\"\"\"\n  externalIssueLink: VulnerabilityExternalIssueLink\n}\n\n\"\"\"Autogenerated input type of VulnerabilityExternalIssueLinkDestroy\"\"\"\ninput VulnerabilityExternalIssueLinkDestroyInput {\n  \"\"\"The global ID of the vulnerability external issue link.\"\"\"\n  id: VulnerabilitiesExternalIssueLinkID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of VulnerabilityExternalIssueLinkDestroy\"\"\"\ntype VulnerabilityExternalIssueLinkDestroyPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VulnerabilityExternalIssueLinkEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: VulnerabilityExternalIssueLink\n}\n\n\"\"\"\nThe external tracker of the external issue link related to a vulnerability\n\"\"\"\nenum VulnerabilityExternalIssueLinkExternalTracker {\n  \"\"\"Jira external tracker\"\"\"\n  JIRA\n}\n\n\"\"\"The type of the external issue link related to a vulnerability\"\"\"\nenum VulnerabilityExternalIssueLinkType {\n  \"\"\"Created link type\"\"\"\n  CREATED\n}\n\n\"\"\"The grade of the vulnerable project\"\"\"\nenum VulnerabilityGrade {\n  A\n  B\n  C\n  D\n  F\n}\n\n\"\"\"\nA `VulnerabilityID` is a global ID. It is encoded as a string.\n\nAn example `VulnerabilityID` is: `\"gid://gitlab/Vulnerability/1\"`.\n\n\"\"\"\nscalar VulnerabilityID\n\n\"\"\"Represents a vulnerability identifier\"\"\"\ntype VulnerabilityIdentifier {\n  \"\"\"External ID of the vulnerability identifier.\"\"\"\n  externalId: String\n\n  \"\"\"External type of the vulnerability identifier.\"\"\"\n  externalType: String\n\n  \"\"\"Name of the vulnerability identifier.\"\"\"\n  name: String\n\n  \"\"\"URL of the vulnerability identifier.\"\"\"\n  url: String\n}\n\n\"\"\"Represents an issue link of a vulnerability\"\"\"\ntype VulnerabilityIssueLink {\n  \"\"\"GraphQL ID of the vulnerability.\"\"\"\n  id: ID!\n\n  \"\"\"The issue attached to issue link.\"\"\"\n  issue: Issue!\n\n  \"\"\"Type of the issue link.\"\"\"\n  linkType: VulnerabilityIssueLinkType!\n}\n\n\"\"\"The connection type for VulnerabilityIssueLink.\"\"\"\ntype VulnerabilityIssueLinkConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [VulnerabilityIssueLinkEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [VulnerabilityIssueLink]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VulnerabilityIssueLinkEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: VulnerabilityIssueLink\n}\n\n\"\"\"The type of the issue link related to a vulnerability\"\"\"\nenum VulnerabilityIssueLinkType {\n  RELATED\n  CREATED\n}\n\n\"\"\"\nRepresents a vulnerability location. The fields with data will depend on the vulnerability report type\n\"\"\"\nunion VulnerabilityLocation = VulnerabilityLocationContainerScanning | VulnerabilityLocationCoverageFuzzing | VulnerabilityLocationDast | VulnerabilityLocationDependencyScanning | VulnerabilityLocationSast | VulnerabilityLocationSecretDetection\n\n\"\"\"\nRepresents the location of a vulnerability found by a container security scan\n\"\"\"\ntype VulnerabilityLocationContainerScanning {\n  \"\"\"Dependency containing the vulnerability.\"\"\"\n  dependency: VulnerableDependency\n\n  \"\"\"Name of the vulnerable container image.\"\"\"\n  image: String\n\n  \"\"\"Operating system that runs on the vulnerable container image.\"\"\"\n  operatingSystem: String\n}\n\n\"\"\"\nRepresents the location of a vulnerability found by a Coverage Fuzzing scan\n\"\"\"\ntype VulnerabilityLocationCoverageFuzzing {\n  \"\"\"Blob path to the vulnerable file.\"\"\"\n  blobPath: String\n\n  \"\"\"Number of the last relevant line in the vulnerable file.\"\"\"\n  endLine: String\n\n  \"\"\"Path to the vulnerable file.\"\"\"\n  file: String\n\n  \"\"\"Number of the first relevant line in the vulnerable file.\"\"\"\n  startLine: String\n\n  \"\"\"Class containing the vulnerability.\"\"\"\n  vulnerableClass: String\n\n  \"\"\"Method containing the vulnerability.\"\"\"\n  vulnerableMethod: String\n}\n\n\"\"\"Represents the location of a vulnerability found by a DAST scan\"\"\"\ntype VulnerabilityLocationDast {\n  \"\"\"Domain name of the vulnerable request.\"\"\"\n  hostname: String\n\n  \"\"\"Query parameter for the URL on which the vulnerability occurred.\"\"\"\n  param: String\n\n  \"\"\"URL path and query string of the vulnerable request.\"\"\"\n  path: String\n\n  \"\"\"HTTP method of the vulnerable request.\"\"\"\n  requestMethod: String\n}\n\n\"\"\"\nRepresents the location of a vulnerability found by a dependency security scan\n\"\"\"\ntype VulnerabilityLocationDependencyScanning {\n  \"\"\"Blob path to the vulnerable file.\"\"\"\n  blobPath: String\n\n  \"\"\"Dependency containing the vulnerability.\"\"\"\n  dependency: VulnerableDependency\n\n  \"\"\"Path to the vulnerable file.\"\"\"\n  file: String\n}\n\n\"\"\"Represents the location of a vulnerability found by a SAST scan\"\"\"\ntype VulnerabilityLocationSast {\n  \"\"\"Blob path to the vulnerable file.\"\"\"\n  blobPath: String\n\n  \"\"\"Number of the last relevant line in the vulnerable file.\"\"\"\n  endLine: String\n\n  \"\"\"Path to the vulnerable file.\"\"\"\n  file: String\n\n  \"\"\"Number of the first relevant line in the vulnerable file.\"\"\"\n  startLine: String\n\n  \"\"\"Class containing the vulnerability.\"\"\"\n  vulnerableClass: String\n\n  \"\"\"Method containing the vulnerability.\"\"\"\n  vulnerableMethod: String\n}\n\n\"\"\"\nRepresents the location of a vulnerability found by a secret detection scan\n\"\"\"\ntype VulnerabilityLocationSecretDetection {\n  \"\"\"Blob path to the vulnerable file.\"\"\"\n  blobPath: String\n\n  \"\"\"Number of the last relevant line in the vulnerable file.\"\"\"\n  endLine: String\n\n  \"\"\"Path to the vulnerable file.\"\"\"\n  file: String\n\n  \"\"\"Number of the first relevant line in the vulnerable file.\"\"\"\n  startLine: String\n\n  \"\"\"Class containing the vulnerability.\"\"\"\n  vulnerableClass: String\n\n  \"\"\"Method containing the vulnerability.\"\"\"\n  vulnerableMethod: String\n}\n\n\"\"\"Check permissions for the current user on a vulnerability\"\"\"\ntype VulnerabilityPermissions {\n  \"\"\"Indicates the user can perform `admin_vulnerability` on this resource\"\"\"\n  adminVulnerability: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `admin_vulnerability_external_issue_link` on this resource\n  \"\"\"\n  adminVulnerabilityExternalIssueLink: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `admin_vulnerability_issue_link` on this resource\n  \"\"\"\n  adminVulnerabilityIssueLink: Boolean!\n\n  \"\"\"Indicates the user can perform `create_vulnerability` on this resource\"\"\"\n  createVulnerability: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `create_vulnerability_export` on this resource\n  \"\"\"\n  createVulnerabilityExport: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `create_vulnerability_feedback` on this resource\n  \"\"\"\n  createVulnerabilityFeedback: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `destroy_vulnerability_feedback` on this resource\n  \"\"\"\n  destroyVulnerabilityFeedback: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `read_vulnerability_feedback` on this resource\n  \"\"\"\n  readVulnerabilityFeedback: Boolean!\n\n  \"\"\"\n  Indicates the user can perform `update_vulnerability_feedback` on this resource\n  \"\"\"\n  updateVulnerabilityFeedback: Boolean!\n}\n\n\"\"\"The type of the security scan that found the vulnerability\"\"\"\nenum VulnerabilityReportType {\n  SAST\n  DEPENDENCY_SCANNING\n  CONTAINER_SCANNING\n  DAST\n  SECRET_DETECTION\n  COVERAGE_FUZZING\n  API_FUZZING\n}\n\n\"\"\"Autogenerated input type of VulnerabilityResolve\"\"\"\ninput VulnerabilityResolveInput {\n  \"\"\"ID of the vulnerability to be resolved.\"\"\"\n  id: VulnerabilityID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of VulnerabilityResolve\"\"\"\ntype VulnerabilityResolvePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The vulnerability after state change.\"\"\"\n  vulnerability: Vulnerability\n}\n\n\"\"\"Autogenerated input type of VulnerabilityRevertToDetected\"\"\"\ninput VulnerabilityRevertToDetectedInput {\n  \"\"\"ID of the vulnerability to be reverted.\"\"\"\n  id: VulnerabilityID!\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n}\n\n\"\"\"Autogenerated return type of VulnerabilityRevertToDetected\"\"\"\ntype VulnerabilityRevertToDetectedPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n\n  \"\"\"Errors encountered during execution of the mutation.\"\"\"\n  errors: [String!]!\n\n  \"\"\"The vulnerability after revert.\"\"\"\n  vulnerability: Vulnerability\n}\n\n\"\"\"Represents a vulnerability scanner\"\"\"\ntype VulnerabilityScanner {\n  \"\"\"External ID of the vulnerability scanner.\"\"\"\n  externalId: String\n\n  \"\"\"ID of the scanner.\"\"\"\n  id: ID\n\n  \"\"\"Name of the vulnerability scanner.\"\"\"\n  name: String\n\n  \"\"\"Type of the vulnerability report.\"\"\"\n  reportType: VulnerabilityReportType\n\n  \"\"\"Vendor of the vulnerability scanner.\"\"\"\n  vendor: String\n}\n\n\"\"\"The connection type for VulnerabilityScanner.\"\"\"\ntype VulnerabilityScannerConnection {\n  \"\"\"A list of edges.\"\"\"\n  edges: [VulnerabilityScannerEdge]\n\n  \"\"\"A list of nodes.\"\"\"\n  nodes: [VulnerabilityScanner]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VulnerabilityScannerEdge {\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: VulnerabilityScanner\n}\n\n\"\"\"Represents vulnerability counts by severity\"\"\"\ntype VulnerabilitySeveritiesCount {\n  \"\"\"Number of vulnerabilities of CRITICAL severity of the project\"\"\"\n  critical: Int\n\n  \"\"\"Number of vulnerabilities of HIGH severity of the project\"\"\"\n  high: Int\n\n  \"\"\"Number of vulnerabilities of INFO severity of the project\"\"\"\n  info: Int\n\n  \"\"\"Number of vulnerabilities of LOW severity of the project\"\"\"\n  low: Int\n\n  \"\"\"Number of vulnerabilities of MEDIUM severity of the project\"\"\"\n  medium: Int\n\n  \"\"\"Number of vulnerabilities of UNKNOWN severity of the project\"\"\"\n  unknown: Int\n}\n\n\"\"\"The severity of the vulnerability\"\"\"\nenum VulnerabilitySeverity {\n  INFO\n  UNKNOWN\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n\n\"\"\"Vulnerability sort values\"\"\"\nenum VulnerabilitySort {\n  \"\"\"Severity in descending order.\"\"\"\n  severity_desc\n\n  \"\"\"Severity in ascending order.\"\"\"\n  severity_asc\n\n  \"\"\"Title in descending order.\"\"\"\n  title_desc\n\n  \"\"\"Title in ascending order.\"\"\"\n  title_asc\n\n  \"\"\"Detection timestamp in descending order.\"\"\"\n  detected_desc\n\n  \"\"\"Detection timestamp in ascending order.\"\"\"\n  detected_asc\n\n  \"\"\"Report Type in descending order.\"\"\"\n  report_type_desc\n\n  \"\"\"Report Type in ascending order.\"\"\"\n  report_type_asc\n\n  \"\"\"State in descending order.\"\"\"\n  state_desc\n\n  \"\"\"State in ascending order.\"\"\"\n  state_asc\n}\n\n\"\"\"The state of the vulnerability\"\"\"\nenum VulnerabilityState {\n  DETECTED\n  CONFIRMED\n  RESOLVED\n  DISMISSED\n}\n\n\"\"\"\nRepresents a vulnerable dependency. Used in vulnerability location data\n\"\"\"\ntype VulnerableDependency {\n  \"\"\"The package associated with the vulnerable dependency.\"\"\"\n  package: VulnerablePackage\n\n  \"\"\"The version of the vulnerable dependency.\"\"\"\n  version: String\n}\n\n\"\"\"Represents a vulnerable package. Used in vulnerability dependency data\"\"\"\ntype VulnerablePackage {\n  \"\"\"The name of the vulnerable package.\"\"\"\n  name: String\n}\n\n\"\"\"Represents vulnerability letter grades with associated projects\"\"\"\ntype VulnerableProjectsByGrade {\n  \"\"\"Number of projects within this grade.\"\"\"\n  count: Int!\n\n  \"\"\"Grade based on the highest severity vulnerability present.\"\"\"\n  grade: VulnerabilityGrade!\n\n  \"\"\"Projects within this grade.\"\"\"\n  projects(\n    \"\"\"Returns the elements in the list that come after the specified cursor.\"\"\"\n    after: String\n\n    \"\"\"\n    Returns the elements in the list that come before the specified cursor.\n    \"\"\"\n    before: String\n\n    \"\"\"Returns the first _n_ elements from the list.\"\"\"\n    first: Int\n\n    \"\"\"Returns the last _n_ elements from the list.\"\"\"\n    last: Int\n  ): ProjectConnection!\n}\n\n\"\"\"Weight ID wildcard values\"\"\"\nenum WeightWildcardId {\n  \"\"\"No weight is assigned.\"\"\"\n  NONE\n\n  \"\"\"Weight is assigned.\"\"\"\n  ANY\n}",
    "Google directions API": "\"\"\"\"\"\"\ndirective @rateLimit(max: Int, window: String, message: String, identityArgs: [String], arrayLengthField: String) on FIELD_DEFINITION\n\n\"\"\"\"\"\"\ndirective @authentication on OBJECT | FIELD_DEFINITION\n\n\"\"\"\"\"\"\ndirective @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE\n\n\"\"\"\"\"\"\ntype Query {\n  \"\"\"\"\"\"\n  _: Boolean\n\n  \"\"\"\"\"\"\n  users: [User]!\n\n  \"\"\"\"\"\"\n  direction(coordinates: PlaceCoordinatesInput!, travelMode: AllowTravelModes!): Direction\n}\n\n\"\"\"\"\"\"\ntype User {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  username: String!\n\n  \"\"\"\"\"\"\n  email: String!\n}\n\n\"\"\"\"\"\"\ninput PlaceCoordinatesInput {\n  \"\"\"\"\"\"\n  startLat: Float!\n\n  \"\"\"\"\"\"\n  startLng: Float!\n\n  \"\"\"\"\"\"\n  endLat: Float!\n\n  \"\"\"\"\"\"\n  endLng: Float!\n}\n\n\"\"\"\"\"\"\nenum AllowTravelModes {\n  \"\"\"\"\"\"\n  transit\n\n  \"\"\"\"\"\"\n  driving\n\n  \"\"\"\"\"\"\n  walking\n}\n\n\"\"\"\"\"\"\ntype Direction {\n  \"\"\"\"\"\"\n  fare: Fare\n\n  \"\"\"\"\"\"\n  tripData: TripData!\n\n  \"\"\"\"\"\"\n  steps: [StepNode]!\n}\n\n\"\"\"\"\"\"\ntype Fare {\n  \"\"\"\"\"\"\n  currency: String!\n\n  \"\"\"\"\"\"\n  formattedFare: String!\n\n  \"\"\"\"\"\"\n  fareValue: Float!\n}\n\n\"\"\"\"\"\"\ntype TripData {\n  \"\"\"\"\"\"\n  arrival: PointDetails!\n\n  \"\"\"\"\"\"\n  departure: PointDetails!\n\n  \"\"\"\"\"\"\n  tripDistance: TypedData!\n\n  \"\"\"\"\"\"\n  tripDuration: TypedData!\n}\n\n\"\"\"\"\"\"\nunion PointDetails = TransitPointDetails | OtherPointDetails\n\n\"\"\"\"\"\"\ntype TransitPointDetails {\n  \"\"\"\"\"\"\n  formatedTime: String!\n\n  \"\"\"\"\"\"\n  timeZone: String!\n\n  \"\"\"\"\"\"\n  timeValue: Int!\n\n  \"\"\"\"\"\"\n  address: String!\n\n  \"\"\"\"\"\"\n  location: Coords!\n}\n\n\"\"\"\"\"\"\ntype Coords {\n  \"\"\"\"\"\"\n  latitude: Float!\n\n  \"\"\"\"\"\"\n  longitude: Float!\n}\n\n\"\"\"\"\"\"\ntype OtherPointDetails {\n  \"\"\"\"\"\"\n  address: String!\n\n  \"\"\"\"\"\"\n  location: Coords!\n}\n\n\"\"\"\"\"\"\ntype TypedData {\n  \"\"\"\"\"\"\n  formattedValue: String!\n\n  \"\"\"\"\"\"\n  rawValue: Int!\n}\n\n\"\"\"\"\"\"\ninterface StepNode {\n  \"\"\"\"\"\"\n  stepTravelMode: String!\n\n  \"\"\"\"\"\"\n  stepDistance: TypedData!\n\n  \"\"\"\"\"\"\n  stepDuration: TypedData!\n\n  \"\"\"\"\"\"\n  startLocation: Coords!\n\n  \"\"\"\"\"\"\n  endLocation: Coords!\n\n  \"\"\"\"\"\"\n  polyline: String!\n\n  \"\"\"\"\"\"\n  stepInstruction: String!\n}\n\n\"\"\"\"\"\"\ntype Mutation {\n  \"\"\"\"\"\"\n  _: Boolean\n\n  \"\"\"\"\"\"\n  signUp(username: String!, email: String!, password: String!): User!\n\n  \"\"\"\"\"\"\n  signIn(userIdentifier: String!, password: String!): AuthData!\n\n  \"\"\"\"\"\"\n  updateUser(username: String): Boolean!\n}\n\n\"\"\"\"\"\"\ntype AuthData {\n  \"\"\"\"\"\"\n  token: String!\n\n  \"\"\"\"\"\"\n  user: User!\n}\n\n\"\"\"\"\"\"\ntype Subscription {\n  \"\"\"\"\"\"\n  _: Boolean\n}\n\n\"\"\"\"\"\"\nscalar Date\n\n\"\"\"\"\"\"\ntype DriveStep implements StepNode {\n  \"\"\"\"\"\"\n  stepTravelMode: String!\n\n  \"\"\"\"\"\"\n  stepDistance: TypedData!\n\n  \"\"\"\"\"\"\n  stepDuration: TypedData!\n\n  \"\"\"\"\"\"\n  startLocation: Coords!\n\n  \"\"\"\"\"\"\n  endLocation: Coords!\n\n  \"\"\"\"\"\"\n  polyline: String!\n\n  \"\"\"\"\"\"\n  stepInstruction: String!\n\n  \"\"\"\"\"\"\n  maneuver: String\n}\n\n\"\"\"\"\"\"\ntype WalkStep implements StepNode {\n  \"\"\"\"\"\"\n  stepTravelMode: String!\n\n  \"\"\"\"\"\"\n  stepDistance: TypedData!\n\n  \"\"\"\"\"\"\n  stepDuration: TypedData!\n\n  \"\"\"\"\"\"\n  startLocation: Coords!\n\n  \"\"\"\"\"\"\n  endLocation: Coords!\n\n  \"\"\"\"\"\"\n  polyline: String!\n\n  \"\"\"\"\"\"\n  stepInstruction: String!\n\n  \"\"\"\"\"\"\n  walkSteps: [WalkStep!]\n}\n\n\"\"\"\"\"\"\ntype TransitStep implements StepNode {\n  \"\"\"\"\"\"\n  stepTravelMode: String!\n\n  \"\"\"\"\"\"\n  stepDistance: TypedData!\n\n  \"\"\"\"\"\"\n  stepDuration: TypedData!\n\n  \"\"\"\"\"\"\n  startLocation: Coords!\n\n  \"\"\"\"\"\"\n  endLocation: Coords!\n\n  \"\"\"\"\"\"\n  polyline: String!\n\n  \"\"\"\"\"\"\n  stepInstruction: String!\n\n  \"\"\"\"\"\"\n  arrival: TransitPointDetails!\n\n  \"\"\"\"\"\"\n  departure: TransitPointDetails!\n\n  \"\"\"\"\"\"\n  transitData: TransitData!\n}\n\n\"\"\"\"\"\"\ntype TransitData {\n  \"\"\"\"\"\"\n  headSign: String!\n\n  \"\"\"\"\"\"\n  tripName: String\n\n  \"\"\"\"\"\"\n  url: String\n\n  \"\"\"\"\"\"\n  tripShortName: String\n\n  \"\"\"\"\"\"\n  stopsCount: Int\n\n  \"\"\"\"\"\"\n  vehicleIcon: String!\n\n  \"\"\"\"\"\"\n  vehicleName: String!\n\n  \"\"\"\"\"\"\n  vehicleType: String!\n}\n\n\"\"\"\"\"\"\nenum CacheControlScope {\n  \"\"\"\"\"\"\n  PUBLIC\n\n  \"\"\"\"\"\"\n  PRIVATE\n}\n\n\"\"\"\"\"\"\nscalar Upload",
    "HIVDB": "schema {\n  query: Root\n}\n\n\"\"\"ASI algorithm.\"\"\"\nenum ASIAlgorithm {\n  HIVDB_7_0\n  HIVDB_7_5\n  HIVDB_7_6\n  HIVDB_7_8\n  HIVDB_7_9\n  HIVDB_7_10\n  HIVDB_8_0\n  HIVDB_8_0_1\n  HIVDB_8_1\n  HIVDB_8_1_1\n  HIVDB_8_2\n  HIVDB_8_3\n  HIVDB_8_4\n  HIVDB_8_5\n  HIVDB_8_6\n  HIVDB_8_6_1\n  HIVDB_8_7\n  HIVDB_8_8\n  HIVDB_8_9\n  HIVDB_8_9p1\n  HIVDB_9_0\n  ANRS_26\n  ANRS_27\n  ANRS_27stanford2\n  ANRS_28\n  ANRS_29\n  ANRS_30\n  Rega_9_1\n  Rega_10_0\n}\n\ntype AlgorithmComparison {\n  drugClass: DrugClass\n  drugScores: [ComparableDrugScore]\n}\n\ntype AlignedGeneSequence {\n  \"\"\"Sequence gene and the reference sequence.\"\"\"\n  gene: Gene\n\n  \"\"\"\n  The first aligned position (start from 1) in protein relative to the reference sequence.\n  \"\"\"\n  firstAA: Int\n\n  \"\"\"\n  The last aligned position (start from 1) in protein relative to the reference sequence.\n  \"\"\"\n  lastAA: Int\n\n  \"\"\"\n  The first aligned position (start from 1) in DNA relative to the input sequence.\n  \"\"\"\n  firstNA: Int\n\n  \"\"\"\n  The last aligned position (start from 1) in DNA relative to the input sequence.\n  \"\"\"\n  lastNA: Int\n\n  \"\"\"\n  The match percentage of input sequence aligned to the reference sequence.\n  \"\"\"\n  matchPcnt: Float\n\n  \"\"\"The amino acid size of this sequence without unsequenced region (Ns).\"\"\"\n  size: Int\n\n  \"\"\"Formatted pairwise output of the aligned sequence.\"\"\"\n  prettyPairwise: PrettyPairwise\n\n  \"\"\"Aligned DNA sequence without insertions and insertion gaps.\"\"\"\n  alignedNAs: String\n\n  \"\"\"\n  Aligned protein sequence without insertions and insertion gaps. Mixtures are represented as \"X\".\n  \"\"\"\n  alignedAAs: String\n\n  \"\"\"\n  (HXB2 numbering) adjusted aligned DNA sequence without insertions and insertion gaps.\n  \"\"\"\n  adjustedAlignedNAs(\n    \"\"\"Sequences alignment target strain.\"\"\"\n    targetStrain: String\n  ): String\n\n  \"\"\"\n  (HXB2 numbering) adjusted aligned protein sequence without insertions and insertion gaps. Mixtures are represented as \"X\".\n  \"\"\"\n  adjustedAlignedAAs(\n    \"\"\"Sequences alignment target strain.\"\"\"\n    targetStrain: String\n  ): String\n\n  \"\"\"All mutations found in the aligned sequence.\"\"\"\n  mutations(\n    \"\"\"List of filter options for the mutation set.\"\"\"\n    filterOptions: [MutationSetFilterOption]\n\n    \"\"\"\n    List of possible mutation strings that should be included in this query if presented. Gene need to be prepend if the gene is not able to be inferred from the context.\n    \"\"\"\n    customList: [String]\n  ): [Mutation]\n\n  \"\"\"All frame shifts found in the aligned sequence.\"\"\"\n  frameShifts: [FrameShift]\n}\n\n\"\"\"Comment bound to a certain mutation object.\"\"\"\ntype BoundMutationComment {\n  \"\"\"Unique name of the comment.\"\"\"\n  name: String\n\n  \"\"\"Corresponding gene.\"\"\"\n  gene: Gene\n\n  \"\"\"Corresponding drug class.\"\"\"\n  drugClass: DrugClass\n\n  \"\"\"Mutation type of this comment.\"\"\"\n  type: CommentType\n\n  \"\"\"Comment text.\"\"\"\n  text: String\n\n  \"\"\"Mutated amino acid(s) that triggered the comment.\"\"\"\n  triggeredAAs: String @deprecated(reason: \"Use `boundMutation { displayAAs }` instead.\")\n\n  \"\"\"The mutation that bound to this comment.\"\"\"\n  boundMutation: Mutation\n\n  \"\"\"Text should be highlighted in the comment.\"\"\"\n  highlightText: [String]\n}\n\n\"\"\"Prevalence data for an input mutation.\"\"\"\ntype BoundMutationPrevalence {\n  \"\"\"The mutation matched these prevalence data.\"\"\"\n  boundMutation: Mutation\n\n  \"\"\"Prevalence data that matched the mutation.\"\"\"\n  matched: [MutationPrevalenceByAA]\n\n  \"\"\"Other prevalence data at the mutation position.\"\"\"\n  others: [MutationPrevalenceByAA]\n}\n\n\"\"\"Subtype of certain sequence.\"\"\"\ntype BoundSubtype {\n  \"\"\"Name of the subtype.\"\"\"\n  name: Subtype\n\n  \"\"\"\n  The distance percentage compares to the subtype of given sequence. 0.0 means completely the same.\n  \"\"\"\n  distancePcnt: Float\n\n  \"\"\"\n  String of shown subtype and distance percentage. The shown subtype can be in the form of unknown subtype of recombination like \"B + C\".\n  \"\"\"\n  display: String\n}\n\n\"\"\"Comment type.\"\"\"\nenum CommentType {\n  Major\n  Accessory\n  NRTI\n  NNRTI\n  Other\n  Dosage\n}\n\ntype CommentsByType {\n  \"\"\"Type of these comments.\"\"\"\n  mutationType: CommentType @deprecated(reason: \"Use `commentType` instead.\")\n\n  \"\"\"Type of these comments.\"\"\"\n  commentType: CommentType\n\n  \"\"\"Comments belong to this type.\"\"\"\n  comments: [BoundMutationComment]\n}\n\ntype ComparableDrugScore {\n  \"\"\"Drug of this score.\"\"\"\n  drug: Drug\n\n  \"\"\"The name of algorithm which calculated this score.\"\"\"\n  algorithm: String\n\n  \"\"\"One of the three step resistance levels of the drug.\"\"\"\n  SIR: SIR\n\n  \"\"\"Readable resistance level defined by the algorithm for the drug.\"\"\"\n  interpretation: String\n\n  \"\"\"Text explanation on how this level get calculated.\"\"\"\n  explanation: String\n}\n\ninput CustomASIAlgorithm {\n  \"\"\"Algorithm name.\"\"\"\n  name: String\n\n  \"\"\"ASI XML data.\"\"\"\n  xml: String\n}\n\n\"\"\"Descriptive statistics for a list of values.\"\"\"\ntype DescriptiveStatistics {\n  \"\"\"The arithmetic mean of the available values.\"\"\"\n  mean: Float\n\n  \"\"\"The standard deviation of the available values.\"\"\"\n  standardDeviation: Float\n\n  \"\"\"The minimum of the available values.\"\"\"\n  min: Float\n\n  \"\"\"The maximum of the available values.\"\"\"\n  max: Float\n\n  \"\"\"The number of the available values.\"\"\"\n  n: Float\n\n  \"\"\"The sum of the available values.\"\"\"\n  sum: Float\n\n  \"\"\"The set of available values.\"\"\"\n  values: [Float]\n\n  \"\"\"An estimate for the pth percentile of the stored values.\"\"\"\n  percentile(\n    \"\"\"The requested percentile (scaled from 0 - 100)\"\"\"\n    p: Float\n  ): Float\n}\n\n\"\"\"HIV drug.\"\"\"\ntype Drug {\n  \"\"\"Name of the drug.\"\"\"\n  name: DrugEnum\n\n  \"\"\"Display abbreviation of the drug.\"\"\"\n  displayAbbr: String\n\n  \"\"\"Full name of the drug.\"\"\"\n  fullName: String\n\n  \"\"\"Drug class the drug belongs to.\"\"\"\n  drugClass: DrugClass\n}\n\n\"\"\"HIV drug class.\"\"\"\ntype DrugClass {\n  \"\"\"Name of the drug class.\"\"\"\n  name: DrugClassEnum\n\n  \"\"\"Full name of the drug class.\"\"\"\n  fullName: String\n\n  \"\"\"Drugs of this drug class.\"\"\"\n  drugs: [Drug]\n\n  \"\"\"Gene the drug class belongs to.\"\"\"\n  gene: Gene\n}\n\nenum DrugClassEnum {\n  PI\n  NRTI\n  NNRTI\n  INSTI\n}\n\nenum DrugEnum {\n  ABC\n  ATV\n  AZT\n  BIC\n  CAB\n  D4T\n  DDI\n  DOR\n  DRV\n  DTG\n  EFV\n  ETR\n  EVG\n  FPV\n  FTC\n  IDV\n  LMV\n  LPV\n  NFV\n  NVP\n  RAL\n  RPV\n  SQV\n  TDF\n  TPV\n}\n\n\"\"\"Partial score by mutation.\"\"\"\ntype DrugPartialScore {\n  \"\"\"Score triggering mutations.\"\"\"\n  mutations: [Mutation]\n\n  \"\"\"Score number.\"\"\"\n  score: Float\n}\n\ntype DrugResistance {\n  version: DrugResistanceAlgorithm @deprecated(reason: \"Use field `algorithm` instead.\")\n\n  \"\"\"Get used drug resistance algorithm.\"\"\"\n  algorithm: DrugResistanceAlgorithm\n\n  \"\"\"Gene of the drug resistance report.\"\"\"\n  gene: Gene\n\n  \"\"\"List of drug levels and scores.\"\"\"\n  drugScores(\n    \"\"\"Specify drug class. Leave this argument empty will return all drugs.\"\"\"\n    drugClass: DrugClassEnum\n  ): [DrugScore]\n  mutationsByTypes: [MutationsByType]\n  commentsByTypes: [CommentsByType]\n}\n\n\"\"\"A drug resistance algorithm.\"\"\"\ntype DrugResistanceAlgorithm {\n  \"\"\"get key name of this algorithm.\"\"\"\n  text: String\n\n  \"\"\"algorithm family and version for display.\"\"\"\n  display: String\n\n  \"\"\"algorithm family.\"\"\"\n  family: String\n\n  \"\"\"algorithm version.\"\"\"\n  version: String\n\n  \"\"\"algorithm target strain.\"\"\"\n  strain: Strain\n\n  \"\"\"Publish date of this version.\"\"\"\n  publishDate: String\n}\n\ntype DrugScore {\n  \"\"\"The drug class.\"\"\"\n  drugClass: DrugClass\n\n  \"\"\"The drug.\"\"\"\n  drug: Drug\n\n  \"\"\"One of the three step resistance levels of the drug.\"\"\"\n  SIR: SIR\n\n  \"\"\"Resistance score of the drug.\"\"\"\n  score: Float\n\n  \"\"\"Resistance level (1 - 5) of the drug.\"\"\"\n  level: Int\n\n  \"\"\"Readable resistance level of the drug.\"\"\"\n  text: String\n\n  \"\"\"List of partial scores that contributed to this total score.\"\"\"\n  partialScores: [DrugPartialScore]\n}\n\nenum EnumGene {\n  PR\n  RT\n  IN\n}\n\nenum EnumSequenceReadsHistogramAggregatesOption {\n  Codon\n  AminoAcid\n  Position\n}\n\n\"\"\"Frame shift (NAs length < 3) found in aligned sequence.\"\"\"\ntype FrameShift {\n  \"\"\"Gene the frame shift belongs to.\"\"\"\n  gene: Gene\n\n  \"\"\"Position of the frame shift.\"\"\"\n  position: Int\n\n  \"\"\"The frame shift is an insertion or not.\"\"\"\n  isInsertion: Boolean\n\n  \"\"\"The frame shift is a deletion or not.\"\"\"\n  isDeletion: Boolean\n\n  \"\"\"DNA size of the frame shift.\"\"\"\n  size: Int\n\n  \"\"\"Nucleic acid(s) of the frame shift.\"\"\"\n  NAs: String\n\n  \"\"\"Formatted readable text of this frame shift.\"\"\"\n  text: String\n}\n\n\"\"\"HIV genes. Accept PR, RT or IN.\"\"\"\ntype Gene {\n  \"\"\"Name of the gene (with strain name).\"\"\"\n  nameWithStrain: String\n\n  \"\"\"Name of the gene (without strain name).\"\"\"\n  name: EnumGene\n\n  \"\"\"HIV strain referred by this gene.\"\"\"\n  strain: Strain\n\n  \"\"\"Reference sequence of this gene.\"\"\"\n  refSequence: String\n  reference: String @deprecated(reason: \"Use field `refSequence` instead.\")\n  consensus: String @deprecated(reason: \"Use field `refSequence` instead.\")\n\n  \"\"\"Length of current gene.\"\"\"\n  length: Int\n\n  \"\"\"Supported drug classes of current gene.\"\"\"\n  drugClasses: [DrugClass]\n\n  \"\"\"Supported mutation types of current gene.\"\"\"\n  mutationTypes: [MutationType]\n}\n\ntype GeneSequenceReads {\n  \"\"\"Sequence gene and the reference sequence.\"\"\"\n  gene: Gene\n\n  \"\"\"\n  The first sequenced position (start from 1) in protein relative to the reference sequence.\n  \"\"\"\n  firstAA: Int\n\n  \"\"\"\n  The last sequenced position (start from 1) in protein relative to the reference sequence.\n  \"\"\"\n  lastAA: Int\n\n  \"\"\"Position codon reads in this gene sequence.\"\"\"\n  allPositionCodonReads: [PositionCodonReads]\n\n  \"\"\"Position codon reads in this gene sequence (json formated).\"\"\"\n  internalJsonAllPositionCodonReads(\n    \"\"\"Exclude codons matched subtype B consensus.\"\"\"\n    mutationOnly: Boolean = false\n\n    \"\"\"Exclude codons with proportions higher than specified value (0 - 1).\"\"\"\n    maxProportion: Float\n\n    \"\"\"Exclude codons with proportions lower than specified value (0 - 1).\"\"\"\n    minProportion: Float\n  ): String\n\n  \"\"\"The amino acid size of this sequence including unsequenced region.\"\"\"\n  size: Int\n\n  \"\"\"The sequenced positions of this sequence.\"\"\"\n  numPositions: Int\n\n  \"\"\"Descriptive statistics of all read depth.\"\"\"\n  readDepthStats: DescriptiveStatistics\n\n  \"\"\"Aligned DNA sequence without insertions and insertion gaps.\"\"\"\n  alignedNAs: String\n\n  \"\"\"\n  Aligned protein sequence without insertions and insertion gaps. Mixtures are represented as \"X\".\n  \"\"\"\n  alignedAAs: String\n\n  \"\"\"All mutations found in the aligned sequence.\"\"\"\n  mutations(\n    \"\"\"List of filter options for the mutation set.\"\"\"\n    filterOptions: [MutationSetFilterOption]\n\n    \"\"\"\n    List of possible mutation strings that should be included in this query if presented. Gene need to be prepend if the gene is not able to be inferred from the context.\n    \"\"\"\n    customList: [String]\n  ): [Mutation]\n\n  \"\"\"Histogram data for sequence reads.\"\"\"\n  histogram(\n    \"\"\"Percent lower limit of filtering codon reads (range: 0-100).\"\"\"\n    pcntLowerLimit: Float = 0.001\n\n    \"\"\"Percent lower limit of filtering codon reads (range: 0-100).\"\"\"\n    pcntUpperLimit: Float = 0.2\n\n    \"\"\"\n    Number of bins wanted in this histogram. (either `numBins` or `binTicks` must be provided)\n    \"\"\"\n    numBins: Int\n\n    \"\"\"\n    Bin ticks wanted in this histogram. (either `numBins` or `binTicks` must be provided)\n    \"\"\"\n    binTicks: [Float] = [0.001, 0.002, 0.005, 0.01, 0.02, 0.05, 0.1, 0.2]\n\n    \"\"\"Generate cumulative histogram data instead.\"\"\"\n    cumulative: Boolean = true\n\n    \"\"\"Aggregation option.\"\"\"\n    aggregatesBy: EnumSequenceReadsHistogramAggregatesOption = null\n  ): SequenceReadsHistogram\n}\n\ntype HIVBoundSubtype {\n  \"\"\"The display subtype(s) with the distance percent.\"\"\"\n  display: String\n\n  \"\"\"The display subtype(s) without the distance percent.\"\"\"\n  displayWithoutDistance: String\n\n  \"\"\"\n  The original subtype found by comparison. The value of this field is UNPROCESSED. You probably want to use field `display` for the final result.\n  \"\"\"\n  subtype: HIVSubtype\n  genotype: HIVSubtype @deprecated(reason: \"Use field `subtype` instead.\")\n\n  \"\"\"\n  There are several rules applied for subtype displaying. This field lists subtypes that were used in constructing the final result in `display` and `displayWithoutDistance`.\n  \"\"\"\n  displaySubtypes: [HIVSubtype]\n  displayGenotypes: [HIVSubtype] @deprecated(reason: \"Use field `displaySubtypes` instead.\")\n\n  \"\"\"The first compared/matched NA position in HXB2.\"\"\"\n  firstNA: Int\n\n  \"\"\"The last compared/matched NA position in HXB2.\"\"\"\n  lastNA: Int\n\n  \"\"\"\n  The distance between bound sequence and coressponding reference. Noted that 0 <= distance <= 1.\n  \"\"\"\n  distance: Float\n\n  \"\"\"\n  The distance between bound sequence and coressponding reference. Noted that 0% <= distancePcnt <= 100%.\n  \"\"\"\n  distancePcnt: String\n\n  \"\"\"Accession number of the reference being compared.\"\"\"\n  referenceAccession: String\n\n  \"\"\"Country where this reference sequence was collected.\"\"\"\n  referenceCountry: String\n\n  \"\"\"Year this reference sequence was collected.\"\"\"\n  referenceYear: Int\n\n  \"\"\"A full list of HXB2 positions that present with discordance.\"\"\"\n  discordanceList: [Int]\n}\n\n\"\"\"Classification level of genotypes: species, group or subtype.\"\"\"\nenum HIVClassificationLevel {\n  SPECIES\n  GROUP\n  SUBTYPE\n  CRF\n  SUBSUBTYPE\n}\n\ntype HIVSubtype {\n  \"\"\"\n  Short name of current species, group, or subtype. Also used for indexing internally.\n  \"\"\"\n  indexName: String\n\n  \"\"\"Full name of current species, group, or subtype.\"\"\"\n  displayName: String\n\n  \"\"\"Classification level of the subtype.\"\"\"\n  classificationLevel: HIVClassificationLevel\n}\n\n\"\"\"Long type\"\"\"\nscalar Long\n\ntype Mutation {\n  \"\"\"Mutation gene.\"\"\"\n  gene: Gene\n\n  \"\"\"Amino acid reference at this gene sequence position.\"\"\"\n  reference: String\n  consensus: String @deprecated(reason: \"Use field `reference` instead.\")\n\n  \"\"\"Position of the mutation.\"\"\"\n  position: Int\n\n  \"\"\"The mutated AA(s) with possibly inserted AA(s).\"\"\"\n  displayAAs: String\n\n  \"\"\"\n  The mutated AA(s) with possibly inserted AA(s). Highly ambiguous mixture is not replaced to X.\n  \"\"\"\n  AAs: String\n\n  \"\"\"A list of AAs.\"\"\"\n  displayAAChars: [String]\n\n  \"\"\"A list of AAs. Highly ambiguous mixture is not replaced to X.\"\"\"\n  AAChars: [String]\n\n  \"\"\"\n  The mutated codon when the mutation is extracting from an aligned sequence.\n  \"\"\"\n  triplet: String\n\n  \"\"\"\n  The inserted codon(s) when the mutation is extracting from an aligned sequence.\n  \"\"\"\n  insertedNAs: String\n\n  \"\"\"The mutation is an insertion or not.\"\"\"\n  isInsertion: Boolean\n\n  \"\"\"The mutation is a deletion or not.\"\"\"\n  isDeletion: Boolean\n\n  \"\"\"The mutation is an insertion/deletion, or not.\"\"\"\n  isIndel: Boolean\n\n  \"\"\"The mutation is a highly ambiguous mutation or not.\"\"\"\n  isAmbiguous: Boolean\n\n  \"\"\"\n  The mutation is a signature APOBEC-mediated G-to-A hypermutation or not.\n  \"\"\"\n  isApobecMutation: Boolean\n\n  \"\"\"\n  The mutation is a drug resistance mutation (DRM) might be caused by APOBEC-mediated G-to-A hypermutation or not.\n  \"\"\"\n  isApobecDRM: Boolean\n\n  \"\"\"If the mutation is from unsequenced region.\"\"\"\n  isUnsequenced: Boolean\n\n  \"\"\"If the mutation is a drug resistance mutation (DRM) or not.\"\"\"\n  isDRM: Boolean\n\n  \"\"\"The mutation contains stop codon or not.\"\"\"\n  hasStop: Boolean\n\n  \"\"\"The mutation is a low prevalence (unusual) mutation or not.\"\"\"\n  isUnusual: Boolean\n\n  \"\"\"The mutation is a Surveillance Drug Resistance Mutation (SDRM) or not.\"\"\"\n  isSDRM: Boolean\n\n  \"\"\"\n  Ordered list of mutation type(s). List size can be larger than 1 when the mutation is a mixture.\n  \"\"\"\n  types: [MutationType]\n\n  \"\"\"Primary type of the mutation.\"\"\"\n  primaryType: MutationType\n\n  \"\"\"Mutation comments.\"\"\"\n  comments: [BoundMutationComment]\n\n  \"\"\"Formatted text of the mutation (without gene).\"\"\"\n  text: String\n\n  \"\"\"Formatted short text of the mutation (without gene).\"\"\"\n  shortText: String\n}\n\n\"\"\"Prevalence data for a single mutation.\"\"\"\ntype MutationPrevalence {\n  \"\"\"The amino acid at this position.\"\"\"\n  AA: String\n\n  \"\"\"Subtype this prevalence belongs to.\"\"\"\n  subtype: MutationPrevalenceSubtype\n\n  \"\"\"Total number of naive samples which contain the mutation position.\"\"\"\n  totalNaive: Int\n\n  \"\"\"Total number of naive samples which contain the mutation.\"\"\"\n  frequencyNaive: Int\n\n  \"\"\"\n  Proportion of certain mutation occured in the naive samples which contain that position. Equals to 100 * frequencyNaive / totalNaive.\n  \"\"\"\n  percentageNaive: Float\n\n  \"\"\"Total number of treated samples which contain the mutation position.\"\"\"\n  totalTreated: Int\n\n  \"\"\"Total number of treated samples which contain the mutation.\"\"\"\n  frequencyTreated: Int\n\n  \"\"\"\n  Proportion of certain mutation occured in the treated samples which contain that position. Equals to 100 * frequencyTreated / totalTreated.\n  \"\"\"\n  percentageTreated: Float\n}\n\n\"\"\"Prevalence data for a single AA (or ins/deletion).\"\"\"\ntype MutationPrevalenceByAA {\n  \"\"\"The amino acid.\"\"\"\n  AA: String\n\n  \"\"\"Prevalence data of each subtype.\"\"\"\n  subtypes: [MutationPrevalence]\n}\n\n\"\"\"Main subtype that mutation prevalence supported.\"\"\"\ntype MutationPrevalenceSubtype {\n  \"\"\"Subtype name.\"\"\"\n  name: String\n\n  \"\"\"Sbutype statistics by genes.\"\"\"\n  stats: [MutationPrevalenceSubtypeStat]\n}\n\n\"\"\"Statistics data for the subtype.\"\"\"\ntype MutationPrevalenceSubtypeStat {\n  \"\"\"Gene the statistic belongs to.\"\"\"\n  gene: Gene\n\n  \"\"\"Total number of naive samples.\"\"\"\n  totalNaive: Int\n\n  \"\"\"Total number of treated samples.\"\"\"\n  totalTreated: Int\n}\n\n\"\"\"Filter option for mutation set.\"\"\"\nenum MutationSetFilterOption {\n  \"\"\"List only mutations which are APOBEC-mediated G-to-A hypermutation.\"\"\"\n  APOBEC\n\n  \"\"\"\n  List only drug resistance mutations which are APOBEC-mediated G-to-A hypermutation.\n  \"\"\"\n  APOBEC_DRM\n\n  \"\"\"List only mutations which are drug resistance mutation (DRM).\"\"\"\n  DRM\n\n  \"\"\"List all mutations at DRM positions (no need to be DRMs).\"\"\"\n  DRP\n\n  \"\"\"List only mutations which are not drug resistance mutation (DRM).\"\"\"\n  notDRM\n\n  \"\"\"List only mutations which are PI DRM.\"\"\"\n  PI_DRM\n\n  \"\"\"List only mutations which are NRTI DRM.\"\"\"\n  NRTI_DRM\n\n  \"\"\"List only mutations which are NNRTI DRM.\"\"\"\n  NNRTI_DRM\n\n  \"\"\"List only mutations which are INSTI DRM.\"\"\"\n  INSTI_DRM\n\n  \"\"\"\n  List only mutations which are surveillance drug resistance mutations (SDRM).\n  \"\"\"\n  SDRM\n\n  \"\"\"\n  List only mutations which are not sruveillance drug resistance mutation (SDRM).\n  \"\"\"\n  notSDRM\n\n  \"\"\"List only mutations which are PI SDRM.\"\"\"\n  PI_SDRM\n\n  \"\"\"List only mutations which are NRTI SDRM.\"\"\"\n  NRTI_SDRM\n\n  \"\"\"List only mutations which are NNRTI SDRM.\"\"\"\n  NNRTI_SDRM\n\n  \"\"\"List only mutations which are INSTI SDRM.\"\"\"\n  INSTI_SDRM\n\n  \"\"\"List only mutations which are treatment-selected mutations (TSM).\"\"\"\n  TSM\n\n  \"\"\"List only mutations which are not treatment-selected mutations (TSM).\"\"\"\n  notTSM\n\n  \"\"\"List only mutations which are PI TSM.\"\"\"\n  PI_TSM\n\n  \"\"\"List only mutations which are NRTI TSM.\"\"\"\n  NRTI_TSM\n\n  \"\"\"List only mutations which are NNRTI TSM.\"\"\"\n  NNRTI_TSM\n\n  \"\"\"List only mutations which are INSTI TSM.\"\"\"\n  INSTI_TSM\n  GENE_PR\n  GENE_RT\n  GENE_IN\n  TYPE_MAJOR\n  TYPE_ACCESSORY\n  TYPE_NRTI\n  TYPE_NNRTI\n  TYPE_OTHER\n  INSERTION\n  DELETION\n  UNUSUAL\n\n  \"\"\"List all highly-ambiguous (HBDVN) mutations.\"\"\"\n  AMBIGUOUS\n\n  \"\"\"List only mutations with stop codon(s).\"\"\"\n  STOPCODON\n\n  \"\"\"Accept a custom list of mutations and find the intersects.\"\"\"\n  CUSTOMLIST\n}\n\n\"\"\"Mutation type.\"\"\"\nenum MutationType {\n  NRTI\n  NNRTI\n  Major\n  Accessory\n  Other\n}\n\ntype MutationsAnalysis {\n  \"\"\"Optional name provided by client to identify this mutation list.\"\"\"\n  name: String\n\n  \"\"\"Validation results for the mutation list.\"\"\"\n  validationResults: [ValidationResult]\n\n  \"\"\"List of drug resistance results by genes.\"\"\"\n  drugResistance(\n    \"\"\"One of the built-in ASI algorithms.\"\"\"\n    algorithm: ASIAlgorithm = null\n  ): [DrugResistance]\n\n  \"\"\"List of mutation prevalence results.\"\"\"\n  mutationPrevalences: [BoundMutationPrevalence]\n\n  \"\"\"List of ASI comparison results.\"\"\"\n  algorithmComparison(\n    \"\"\"One or more of the built-in ASI algorithms.\"\"\"\n    algorithms: [ASIAlgorithm]\n\n    \"\"\"One or more of custom ASI algorithms.\"\"\"\n    customAlgorithms: [CustomASIAlgorithm]\n  ): [AlgorithmComparison]\n}\n\ntype MutationsByType {\n  \"\"\"Type of these mutations.\"\"\"\n  mutationType: MutationType\n\n  \"\"\"Mutations belong to this type.\"\"\"\n  mutations: [Mutation]\n}\n\n\"\"\"A single codon reads.\"\"\"\ntype OneCodonReads {\n  \"\"\"\n  The triplet codon. Insertion should be append to the triplet NAs directly. Deletion should use '-'.\n  \"\"\"\n  codon: String\n\n  \"\"\"Number of reads for this codon.\"\"\"\n  reads: Long\n\n  \"\"\"The corresponding reference amino acid.\"\"\"\n  refAminoAcid: String\n\n  \"\"\"The corresponding amino acid.\"\"\"\n  aminoAcid: String\n\n  \"\"\"Codon proportion of current position (0.0 - 1.0)\"\"\"\n  proportion: Float\n\n  \"\"\"Codon prevalence in HIVDB database (0.0 - 1.0)\"\"\"\n  codonPercent: Float\n\n  \"\"\"Amino acid prevalence in HIVDB database (0.0 - 1.0)\"\"\"\n  aaPercent: Float\n\n  \"\"\"The amino acid is the same as the reference (consensus) amino acid.\"\"\"\n  isReference: Boolean\n\n  \"\"\"The amino acid is a known drug resistance mutation (DRM).\"\"\"\n  isDRM: Boolean\n\n  \"\"\"The amino acid is an unusual mutation.\"\"\"\n  isUnusual: Boolean\n\n  \"\"\"The amino acid is a signature APOBEC-mediated hypermutation.\"\"\"\n  isApobecMutation: Boolean\n\n  \"\"\"\n  The amino acid is a drug resistance mutation (DRM) might be caused by APOBEC-mediated G-to-A hypermutation.\n  \"\"\"\n  isApobecDRM: Boolean\n}\n\ntype OneCodonReadsCoverage {\n  \"\"\"Gene of this record.\"\"\"\n  gene: Gene\n\n  \"\"\"Codon position in this gene.\"\"\"\n  position: Long\n\n  \"\"\"Total reads of this position.\"\"\"\n  totalReads: Long\n\n  \"\"\"This position is trimmed or not.\"\"\"\n  isTrimmed: Boolean\n}\n\n\"\"\"A single codon reads.\"\"\"\ninput OneCodonReadsInput {\n  \"\"\"\n  The triplet codon. Insertion should be append to the triplet NAs directly. Deletion should use '-'.\n  \"\"\"\n  codon: String\n\n  \"\"\"Number of reads for this codon.\"\"\"\n  reads: Long\n}\n\n\"\"\"Codon reads at a single position.\"\"\"\ntype PositionCodonReads {\n  \"\"\"Gene of this position.\"\"\"\n  gene: Gene\n\n  \"\"\"Codon/amino acid position.\"\"\"\n  position: Int\n\n  \"\"\"\n  Total reads at this position. The field will be automatically calculated from `allCodonReads` if it's absent.\n  \"\"\"\n  totalReads: Long\n\n  \"\"\"All codon reads at this position.\"\"\"\n  codonReads(\n    \"\"\"Exclude codons matched subtype B consensus.\"\"\"\n    mutationOnly: Boolean = false\n\n    \"\"\"Exclude codons with proportions higher than specified value (0 - 1).\"\"\"\n    maxProportion: Float\n\n    \"\"\"Exclude codons with proportions lower than specified value (0 - 1).\"\"\"\n    minProportion: Float\n  ): [OneCodonReads]\n}\n\n\"\"\"Codon reads at a single position.\"\"\"\ninput PositionCodonReadsInput {\n  \"\"\"Gene of this position.\"\"\"\n  gene: EnumGene\n\n  \"\"\"Codon/amino acid position.\"\"\"\n  position: Int\n\n  \"\"\"\n  Total reads at this position. The field will be automatically calculated from `allCodonReads` if it's absent.\n  \"\"\"\n  totalReads: Long = -1\n\n  \"\"\"All codon reads at this position.\"\"\"\n  allCodonReads: [OneCodonReadsInput]\n}\n\n\"\"\"Formatted pairwise result of the aligned sequence.\"\"\"\ntype PrettyPairwise {\n  \"\"\"Formmated numeric position line.\"\"\"\n  positionLine: [String]\n\n  \"\"\"Formmated reference protein sequence line.\"\"\"\n  refAALine: [String]\n\n  \"\"\"Formmated aligned DNA sequence line.\"\"\"\n  alignedNAsLine: [String]\n\n  \"\"\"Formmated amino acid mutation line.\"\"\"\n  mutationLine: [String]\n}\n\ntype Root {\n  \"\"\"Current HIVDB algorithm version.\"\"\"\n  currentVersion: DrugResistanceAlgorithm\n\n  \"\"\"Current Sierra program version.\"\"\"\n  currentProgramVersion: SierraVersion\n\n  \"\"\"Analyze sequences and output results.\"\"\"\n  sequenceAnalysis(\n    \"\"\"Sequences to be analyzed.\"\"\"\n    sequences: [UnalignedSequenceInput]\n  ): [SequenceAnalysis]\n\n  \"\"\"Analyze sequence reads and output results.\"\"\"\n  sequenceReadsAnalysis(\n    \"\"\"Sequence reads to be analyzed.\"\"\"\n    sequenceReads: [SequenceReadsInput]\n  ): [SequenceReadsAnalysis]\n\n  \"\"\"\n  Analyze a list of mutations belong to a single sequence and output result.\n  \"\"\"\n  mutationsAnalysis(\n    \"\"\"Mutations to be analyzed.\"\"\"\n    mutations: [String]\n  ): MutationsAnalysis\n\n  \"\"\"\n  Analyze mutation patterns (multiple lists of mutations) and output result.\n  The output list will be in the same order as the input list.\n  \"\"\"\n  patternAnalysis(\n    \"\"\"Lists of mutations to be analyzed.\"\"\"\n    patterns: [[String]]\n\n    \"\"\"Optional name for each mutation set. Length must be same to patterns.\"\"\"\n    patternNames: [String]\n  ): [MutationsAnalysis]\n\n  \"\"\"List all supported genes.\"\"\"\n  genes(\n    \"\"\"Genes to be requested.\"\"\"\n    names: [EnumGene]\n  ): [Gene]\n\n  \"\"\"List all supported HIV-1 subtypes by mutation prevalence.\"\"\"\n  mutationPrevalenceSubtypes: [MutationPrevalenceSubtype]\n\n  \"\"\"Same as Root. Keep for compatible reason.\"\"\"\n  viewer: Viewer @deprecated(reason: \"Use `Root` directly.\")\n}\n\n\"\"\"Three steps of resistance level.\"\"\"\nenum SIR {\n  \"\"\"Susceptible level.\"\"\"\n  S\n\n  \"\"\"Intermediate level.\"\"\"\n  I\n\n  \"\"\"Resistance level.\"\"\"\n  R\n}\n\ntype SequenceAnalysis {\n  \"\"\"The original unaligned sequence.\"\"\"\n  inputSequence: UnalignedSequenceOutput\n\n  \"\"\"HIV strain of this sequence.\"\"\"\n  strain: Strain\n\n  \"\"\"\n  True if the alignment result was based on the reverse complement of input sequence.\n  \"\"\"\n  isReverseComplement: Boolean\n\n  \"\"\"Available genes found in the sequence.\"\"\"\n  availableGenes: [Gene]\n\n  \"\"\"Validation results for this sequence.\"\"\"\n  validationResults: [ValidationResult]\n\n  \"\"\"List of aligned sequence distinguished by genes.\"\"\"\n  alignedGeneSequences: [AlignedGeneSequence]\n\n  \"\"\"\n  List of HIV1 groups or subtypes, or HIV species. Sorted by the similarity from most to least.\n  \"\"\"\n  subtypesV2(\n    \"\"\"Fetch only the first nth closest subtypes. Default to 2.\"\"\"\n    first: Int = 2\n  ): [HIVBoundSubtype]\n\n  \"\"\"The best matching subtype.\"\"\"\n  bestMatchingSubtype: HIVBoundSubtype\n\n  \"\"\"\n  List of HIV1 groups or subtypes, or HIV species. Sorted by the similarity from most to least.\n  \"\"\"\n  genotypes(\n    \"\"\"Fetch only the first nth closest genotypes. Default to 2.\"\"\"\n    first: Int = 2\n  ): [HIVBoundSubtype] @deprecated(reason: \"Use field `subtypesV2` instead.\")\n\n  \"\"\"The best matching genotype.\"\"\"\n  bestMatchingGenotype: HIVBoundSubtype @deprecated(reason: \"Use field `bestMatchingSubtype` instead.\")\n\n  \"\"\"Mixture pecentage of the sequence. Notes only RYMWKS are counted.\"\"\"\n  mixturePcnt: Float\n\n  \"\"\"All mutations found in the aligned sequence.\"\"\"\n  mutations(\n    \"\"\"List of filter options for the mutation set.\"\"\"\n    filterOptions: [MutationSetFilterOption]\n\n    \"\"\"\n    List of possible mutation strings that should be included in this query if presented. Gene need to be prepend if the gene is not able to be inferred from the context.\n    \"\"\"\n    customList: [String]\n  ): [Mutation]\n\n  \"\"\"All frame shifts found in the aligned sequence.\"\"\"\n  frameShifts: [FrameShift]\n\n  \"\"\"List of drug resistance results by genes.\"\"\"\n  drugResistance(\n    \"\"\"One of the built-in ASI algorithms.\"\"\"\n    algorithm: ASIAlgorithm = null\n  ): [DrugResistance]\n\n  \"\"\"List of mutation prevalence results.\"\"\"\n  mutationPrevalences: [BoundMutationPrevalence]\n\n  \"\"\"\n  List of HIV1 groups or subtypes, or HIV species. Sorted by the similarity from most to least.\n  \"\"\"\n  subtypes(\n    \"\"\"Fetch only the first nth closest subtypes. Default to 2.\"\"\"\n    first: Int = 2\n  ): [BoundSubtype] @deprecated(reason: \"Use field `subtypesV2` instead.\")\n\n  \"\"\"Formatted text for best matching subtype.\"\"\"\n  subtypeText: String @deprecated(reason: \"Use field `bestMatchingSubtype { display }` instead.\")\n\n  \"\"\"List of ASI comparison results.\"\"\"\n  algorithmComparison(\n    \"\"\"One or more of the built-in ASI algorithms.\"\"\"\n    algorithms: [ASIAlgorithm]\n\n    \"\"\"One or more of custom ASI algorithms.\"\"\"\n    customAlgorithms: [CustomASIAlgorithm]\n  ): [AlgorithmComparison]\n}\n\ntype SequenceReadsAnalysis {\n  \"\"\"Name of this sequence.\"\"\"\n  name: String\n\n  \"\"\"Strain of this sequence.\"\"\"\n  strain: Strain\n\n  \"\"\"\n  Algorithm suggested minimal prevalence cutoff. This cutoff is looser and may include more problematic mutations.\n  \"\"\"\n  cutoffSuggestionLooserLimit: Float\n\n  \"\"\"\n  Algorithm suggested minimal prevalence cutoff. This cutoff is stricter and include less problematic mutations.\n  \"\"\"\n  cutoffSuggestionStricterLimit: Float\n\n  \"\"\"Validation results for the sequence reads.\"\"\"\n  validationResults: [ValidationResult]\n\n  \"\"\"The minimal prevalence cutoff applied on this sequence.\"\"\"\n  minPrevalence: Float\n\n  \"\"\"The minimal codon count cutoff applied on this sequence.\"\"\"\n  minCodonCount: Long\n\n  \"\"\"The minimal read depth for each position of the sequence reads.\"\"\"\n  minReadDepth: Long\n\n  \"\"\"Available genes found in the sequence reads.\"\"\"\n  availableGenes: [Gene]\n\n  \"\"\"List of sequence reads distinguished by genes.\"\"\"\n  allGeneSequenceReads: [GeneSequenceReads]\n\n  \"\"\"\n  List of HIV1 groups or subtypes, or HIV species. Sorted by the similarity from most to least.\n  \"\"\"\n  subtypes(\n    \"\"\"Fetch only the first nth closest subtypes. Default to 2.\"\"\"\n    first: Int = 2\n  ): [HIVBoundSubtype]\n\n  \"\"\"The best matching subtype.\"\"\"\n  bestMatchingSubtype: HIVBoundSubtype\n\n  \"\"\"Mixture pecentage of the consensus. Notes only RYMWKS are counted.\"\"\"\n  mixturePcnt: Float\n\n  \"\"\"All mutations found in the sequence reads.\"\"\"\n  mutations(\n    \"\"\"List of filter options for the mutation set.\"\"\"\n    filterOptions: [MutationSetFilterOption]\n\n    \"\"\"\n    List of possible mutation strings that should be included in this query if presented. Gene need to be prepend if the gene is not able to be inferred from the context.\n    \"\"\"\n    customList: [String]\n  ): [Mutation]\n\n  \"\"\"List of drug resistance results by genes.\"\"\"\n  drugResistance(\n    \"\"\"One of the built-in ASI algorithms.\"\"\"\n    algorithm: ASIAlgorithm = null\n  ): [DrugResistance]\n\n  \"\"\"Histogram data for sequence reads.\"\"\"\n  histogram(\n    \"\"\"Percent lower limit of filtering codon reads (range: 0-100).\"\"\"\n    pcntLowerLimit: Float = 0.001\n\n    \"\"\"Percent lower limit of filtering codon reads (range: 0-100).\"\"\"\n    pcntUpperLimit: Float = 0.2\n\n    \"\"\"\n    Number of bins wanted in this histogram. (either `numBins` or `binTicks` must be provided)\n    \"\"\"\n    numBins: Int\n\n    \"\"\"\n    Bin ticks wanted in this histogram. (either `numBins` or `binTicks` must be provided)\n    \"\"\"\n    binTicks: [Float] = [0.001, 0.002, 0.005, 0.01, 0.02, 0.05, 0.1, 0.2]\n\n    \"\"\"Generate cumulative histogram data instead.\"\"\"\n    cumulative: Boolean = true\n\n    \"\"\"Aggregation option.\"\"\"\n    aggregatesBy: EnumSequenceReadsHistogramAggregatesOption = null\n  ): SequenceReadsHistogram\n\n  \"\"\"Histogram data for sequence reads.\"\"\"\n  histogramByCodonCount(\n    \"\"\"Codon count cutoffs wanted in this histogram.\"\"\"\n    codonCountCutoffs: [Long] = [16, 32, 64, 128, 256, 512, 1024, 2048]\n\n    \"\"\"Aggregation option.\"\"\"\n    aggregatesBy: EnumSequenceReadsHistogramAggregatesOption = null\n  ): SequenceReadsHistogramByCodonCount\n\n  \"\"\"Descriptive statistics of read depth for all positions.\"\"\"\n  readDepthStats: DescriptiveStatistics\n\n  \"\"\"Descriptive statistics of read depth for drug resistance positions.\"\"\"\n  readDepthStatsDRP: DescriptiveStatistics\n\n  \"\"\"Codon reads coverage.\"\"\"\n  codonReadsCoverage: [OneCodonReadsCoverage]\n\n  \"\"\"Position codon reads in this gene sequence (json formated).\"\"\"\n  internalJsonCodonReadsCoverage: String\n}\n\n\"\"\"Histogram data for sequence reads.\"\"\"\ntype SequenceReadsHistogram {\n  \"\"\"Usual sites histogram data.\"\"\"\n  usualSites: [SequenceReadsHistogramBin]\n\n  \"\"\"Sites with drug resistance mutations histogram data.\"\"\"\n  drmSites: [SequenceReadsHistogramBin]\n\n  \"\"\"Unusual sites histogram data.\"\"\"\n  unusualSites: [SequenceReadsHistogramBin]\n\n  \"\"\"Unusual & APOBEC sites histogram data.\"\"\"\n  unusualApobecSites: [SequenceReadsHistogramBin]\n\n  \"\"\"Unusual & Non-APOBEC sites histogram data.\"\"\"\n  unusualNonApobecSites: [SequenceReadsHistogramBin]\n\n  \"\"\"APOBEC sites histogram data.\"\"\"\n  apobecSites: [SequenceReadsHistogramBin]\n\n  \"\"\"APOBEC DRM sites histogram data.\"\"\"\n  apobecDrmSites: [SequenceReadsHistogramBin]\n\n  \"\"\"Stop codon sites histogram data.\"\"\"\n  stopCodonSites: [SequenceReadsHistogramBin]\n\n  \"\"\"Total number of positions.\"\"\"\n  numPositions: Int\n}\n\n\"\"\"A single bin data of the histogram.\"\"\"\ntype SequenceReadsHistogramBin {\n  \"\"\"Percent start (X axis) of this bin.\"\"\"\n  percentStart: Float\n\n  \"\"\"Percent stop (X axis) of this bin.\"\"\"\n  percentStop: Float\n\n  \"\"\"Total count (Y axis) of this bin.\"\"\"\n  count: Int\n}\n\n\"\"\"Histogram data for sequence reads.\"\"\"\ntype SequenceReadsHistogramByCodonCount {\n  \"\"\"Usual sites histogram data.\"\"\"\n  usualSites: [SequenceReadsHistogramByCodonCountBin]\n\n  \"\"\"Sites with drug resistance mutations histogram data.\"\"\"\n  drmSites: [SequenceReadsHistogramByCodonCountBin]\n\n  \"\"\"Unusual sites histogram data.\"\"\"\n  unusualSites: [SequenceReadsHistogramByCodonCountBin]\n\n  \"\"\"Unusual & APOBEC sites histogram data.\"\"\"\n  unusualApobecSites: [SequenceReadsHistogramByCodonCountBin]\n\n  \"\"\"Unusual & Non-APOBEC sites histogram data.\"\"\"\n  unusualNonApobecSites: [SequenceReadsHistogramByCodonCountBin]\n\n  \"\"\"APOBEC sites histogram data.\"\"\"\n  apobecSites: [SequenceReadsHistogramByCodonCountBin]\n\n  \"\"\"APOBEC DRM sites histogram data.\"\"\"\n  apobecDrmSites: [SequenceReadsHistogramByCodonCountBin]\n\n  \"\"\"Stop codon sites histogram data.\"\"\"\n  stopCodonSites: [SequenceReadsHistogramByCodonCountBin]\n\n  \"\"\"Total number of positions.\"\"\"\n  numPositions: Int\n}\n\n\"\"\"A single bin data of the histogram.\"\"\"\ntype SequenceReadsHistogramByCodonCountBin {\n  \"\"\"Codon count cutoff (minimal) of this bin.\"\"\"\n  cutoff: Long\n\n  \"\"\"Total count (Y axis) of this bin.\"\"\"\n  count: Int\n}\n\ninput SequenceReadsInput {\n  \"\"\"\n  An identifiable name for identifying the result from the returning list.\n  \"\"\"\n  name: String\n\n  \"\"\"Strain of this sequence, choice: HIV1, HIV2A, HIV2B.\"\"\"\n  strain: StrainEnum\n\n  \"\"\"List of all reads belong to this sequence.\"\"\"\n  allReads: [PositionCodonReadsInput]\n\n  \"\"\"\n  The minimal prevalence cutoff to apply on each **codon**. Default to zero if this field was left empty or had a negative number specified.\n  \"\"\"\n  minPrevalence: Float = 0\n\n  \"\"\"\n  The minimal read count cutoff to apply on each **codon**. Default to zero if this field was left empty or had a negative number specified.\n  \"\"\"\n  minCodonCount: Long = 0\n\n  \"\"\"\n  The minal read depth for each **position**. Default to 1000 if this field was left empty or had a negative numberspecified.\n  \"\"\"\n  minReadDepth: Long = 1000\n}\n\n\"\"\"Version of Sierra.\"\"\"\ntype SierraVersion {\n  \"\"\"Version text.\"\"\"\n  text: String\n\n  \"\"\"Publish date of this version.\"\"\"\n  publishDate: String\n}\n\n\"\"\"HIV strain.\"\"\"\ntype Strain {\n  \"\"\"Short name of this strain.\"\"\"\n  name: String\n\n  \"\"\"Full name of this strain.\"\"\"\n  display: String\n}\n\nenum StrainEnum {\n  HIV1\n}\n\n\"\"\"SubtypeName\"\"\"\nenum Subtype {\n  A\n  A2\n  B\n  C\n  D\n  F\n  F2\n  G\n  H\n  J\n  K\n  N\n  O\n  P\n  U\n  X01\n  X02\n  X03\n  X04\n  X05\n  X06\n  X07\n  X08\n  X09\n  X10\n  X11\n  X12\n  X13\n  X14\n  X15\n  X16\n  X17\n  X18\n  X19\n  X20\n  X21\n  X22\n  X23\n  X24\n  X25\n  X26\n  X27\n  X28\n  X29\n  X30\n  X31\n  X32\n  X33\n  X34\n  X35\n  X36\n  X37\n  X38\n  X39\n  X40\n  X41\n  X42\n  X43\n  X44\n  X45\n  X46\n  X47\n  X48\n  X49\n  X50\n  X51\n  X52\n  X53\n  X54\n  X55\n  X56\n  X57\n  X58\n  X59\n  X60\n  X61\n  X62\n  X63\n  X64\n  X65\n  X67\n  X68\n  X69\n  X70\n  X71\n  X72\n  X73\n  X74\n  X77\n  X78\n  X82\n  X83\n  X85\n  X86\n  X87\n}\n\n\"\"\"Unaligned sequence Input Type.\"\"\"\ninput UnalignedSequenceInput {\n  \"\"\"Name of the sequence.\"\"\"\n  header: String\n\n  \"\"\"The sequence itself as a string.\"\"\"\n  sequence: String\n}\n\n\"\"\"Unaligned sequence.\"\"\"\ntype UnalignedSequenceOutput {\n  \"\"\"Name of the sequence.\"\"\"\n  header: String\n\n  \"\"\"The sequence itself as a string.\"\"\"\n  sequence: String\n\n  \"\"\"Hex MD5 value of the sequence.\"\"\"\n  MD5: String\n\n  \"\"\"Hex SHA512 value of the sequence.\"\"\"\n  SHA512: String\n}\n\n\"\"\"Level for validation result.\"\"\"\nenum ValidationLevel {\n  OK\n  NOTE\n  WARNING\n  SEVERE_WARNING\n  CRITICAL\n}\n\n\"\"\"Validation result for sequence or mutation list.\"\"\"\ntype ValidationResult {\n  \"\"\"The level of this validation result.\"\"\"\n  level: ValidationLevel\n\n  \"\"\"Description of this validation result.\"\"\"\n  message: String\n}\n\ntype Viewer {\n  \"\"\"Current HIVDB algorithm version.\"\"\"\n  currentVersion: DrugResistanceAlgorithm\n\n  \"\"\"Current Sierra program version.\"\"\"\n  currentProgramVersion: SierraVersion\n\n  \"\"\"Analyze sequences and output results.\"\"\"\n  sequenceAnalysis(\n    \"\"\"Sequences to be analyzed.\"\"\"\n    sequences: [UnalignedSequenceInput]\n  ): [SequenceAnalysis]\n\n  \"\"\"Analyze sequence reads and output results.\"\"\"\n  sequenceReadsAnalysis(\n    \"\"\"Sequence reads to be analyzed.\"\"\"\n    sequenceReads: [SequenceReadsInput]\n  ): [SequenceReadsAnalysis]\n\n  \"\"\"\n  Analyze a list of mutations belong to a single sequence and output result.\n  \"\"\"\n  mutationsAnalysis(\n    \"\"\"Mutations to be analyzed.\"\"\"\n    mutations: [String]\n  ): MutationsAnalysis\n\n  \"\"\"\n  Analyze mutation patterns (multiple lists of mutations) and output result.\n  The output list will be in the same order as the input list.\n  \"\"\"\n  patternAnalysis(\n    \"\"\"Lists of mutations to be analyzed.\"\"\"\n    patterns: [[String]]\n\n    \"\"\"Optional name for each mutation set. Length must be same to patterns.\"\"\"\n    patternNames: [String]\n  ): [MutationsAnalysis]\n\n  \"\"\"List all supported genes.\"\"\"\n  genes(\n    \"\"\"Genes to be requested.\"\"\"\n    names: [EnumGene]\n  ): [Gene]\n\n  \"\"\"List all supported HIV-1 subtypes by mutation prevalence.\"\"\"\n  mutationPrevalenceSubtypes: [MutationPrevalenceSubtype]\n}",
    "MongoDB Northwind demo": "type Query {\n  \"\"\"Data under client context\"\"\"\n  viewer: Viewer\n}\n\ntype Viewer {\n  \"\"\"\"\"\"\n  category(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindOneCategoryInput\n    skip: Int\n    sort: SortFindOneCategoryInput\n  ): Category\n\n  \"\"\"\"\"\"\n  categoryList(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyCategoryInput\n    skip: Int\n    limit: Int = 1000\n    sort: SortFindManyCategoryInput\n  ): [Category]\n\n  \"\"\"\"\"\"\n  customer(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindOneCustomerInput\n    skip: Int\n    sort: SortFindOneCustomerInput\n  ): Customer\n\n  \"\"\"\"\"\"\n  customerPagination(\n    \"\"\"Page number for displaying\"\"\"\n    page: Int\n\n    \"\"\"\"\"\"\n    perPage: Int = 20\n\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyCustomerInput\n    sort: SortFindManyCustomerInput\n  ): CustomerPagination\n\n  \"\"\"\"\"\"\n  customerConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyCustomerInput\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionCustomerEnum = null\n  ): CustomerConnection\n\n  \"\"\"\"\"\"\n  employee(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindOneEmployeeInput\n    skip: Int\n    sort: SortFindOneEmployeeInput\n  ): Employee\n\n  \"\"\"\"\"\"\n  employeeList(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyEmployeeInput\n    skip: Int\n    limit: Int = 1000\n    sort: SortFindManyEmployeeInput\n  ): [Employee]\n\n  \"\"\"\"\"\"\n  employeePagination(\n    \"\"\"Page number for displaying\"\"\"\n    page: Int\n\n    \"\"\"\"\"\"\n    perPage: Int = 20\n\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyEmployeeInput\n    sort: SortFindManyEmployeeInput\n  ): EmployeePagination\n\n  \"\"\"\"\"\"\n  order(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindOneOrderInput\n    skip: Int\n    sort: SortFindOneOrderInput\n  ): Order\n\n  \"\"\"\"\"\"\n  orderPagination(\n    \"\"\"Page number for displaying\"\"\"\n    page: Int\n\n    \"\"\"\"\"\"\n    perPage: Int = 20\n\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyOrderInput\n    sort: SortFindManyOrderInput\n  ): OrderPagination\n\n  \"\"\"\"\"\"\n  orderConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyOrderInput\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionOrderEnum = null\n  ): OrderConnection\n\n  \"\"\"\"\"\"\n  product(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindOneProductInput\n    skip: Int\n    sort: SortFindOneProductInput\n  ): Product\n\n  \"\"\"\"\"\"\n  productList(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyProductInput\n    skip: Int\n    limit: Int = 1000\n    sort: SortFindManyProductInput\n  ): [Product]\n\n  \"\"\"\"\"\"\n  productPagination(\n    \"\"\"Page number for displaying\"\"\"\n    page: Int\n\n    \"\"\"\"\"\"\n    perPage: Int = 20\n\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyProductInput\n    sort: SortFindManyProductInput\n  ): ProductPagination\n\n  \"\"\"\"\"\"\n  productConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyProductInput\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionProductEnum = null\n  ): ProductConnection\n\n  \"\"\"\"\"\"\n  region(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindOneRegionInput\n    skip: Int\n    sort: SortFindOneRegionInput\n  ): Region\n\n  \"\"\"\"\"\"\n  regionList(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyRegionInput\n    skip: Int\n    limit: Int = 1000\n    sort: SortFindManyRegionInput\n  ): [Region]\n\n  \"\"\"\"\"\"\n  shipper(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindOneShipperInput\n    skip: Int\n    sort: SortFindOneShipperInput\n  ): Shipper\n\n  \"\"\"\"\"\"\n  shipperList(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManyShipperInput\n    skip: Int\n    limit: Int = 1000\n    sort: SortFindManyShipperInput\n  ): [Shipper]\n\n  \"\"\"\"\"\"\n  supplier(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindOneSupplierInput\n    skip: Int\n    sort: SortFindOneSupplierInput\n  ): Supplier\n\n  \"\"\"\"\"\"\n  supplierConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterFindManySupplierInput\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionSupplierEnum = null\n  ): SupplierConnection\n}\n\ntype Category {\n  \"\"\"Category unique ID\"\"\"\n  categoryID: Float\n  name: String\n  description: String\n  _id: MongoID!\n\n  \"\"\"\"\"\"\n  productConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionProductEnum = null\n  ): ProductConnection\n\n  \"\"\"\"\"\"\n  productList(skip: Int, limit: Int = 1000, sort: SortFindManyProductInput): [Product]\n}\n\n\"\"\"\nThe `ID` scalar type represents a unique MongoDB identifier in collection. MongoDB by default use 12-byte ObjectId value (https://docs.mongodb.com/manual/reference/bson-types/#objectid). But MongoDB also may accepts string or integer as correct values for _id field.\n\"\"\"\nscalar MongoID\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ProductConnection {\n  \"\"\"Total object count.\"\"\"\n  count: Int!\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  edges: [ProductEdge!]!\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ProductEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Product!\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype Product {\n  \"\"\"Unique product id\"\"\"\n  productID: Float\n  name: String\n  supplierID: Float\n  categoryID: Float\n  quantityPerUnit: String\n  unitPrice: Float\n  unitsInStock: Float\n  unitsOnOrder: Float\n  reorderLevel: Float\n  discontinued: Boolean\n  _id: MongoID!\n\n  \"\"\"\"\"\"\n  orderConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionOrderEnum = null\n  ): OrderConnection\n\n  \"\"\"\"\"\"\n  orderList(skip: Int, limit: Int = 1000, sort: SortFindManyOrderInput): [Order]\n\n  \"\"\"\"\"\"\n  supplier: Supplier\n\n  \"\"\"\"\"\"\n  category: Category\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype OrderConnection {\n  \"\"\"Total object count.\"\"\"\n  count: Int!\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  edges: [OrderEdge!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype OrderEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Order!\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\ntype Order {\n  \"\"\"Order unique ID\"\"\"\n  orderID: Float\n  customerID: String\n  employeeID: Float\n  orderDate: Date\n  requiredDate: Date\n  shippedDate: Date\n  shipVia: Float\n  freight: Float\n  shipName: String\n  shipAddress: CustomerAddress\n\n  \"\"\"List of ordered products\"\"\"\n  details: [OrderDetails]\n  _id: MongoID!\n\n  \"\"\"\"\"\"\n  customer: Customer\n\n  \"\"\"\"\"\"\n  employee: Employee\n\n  \"\"\"\"\"\"\n  shipper: Shipper\n}\n\nscalar Date\n\ntype CustomerAddress {\n  street: String\n  city: String\n  region: String\n  postalCode: String\n  country: String\n  phone: String\n}\n\ntype OrderDetails {\n  productID: Float\n  unitPrice: Float\n  quantity: Float\n  discount: Float\n\n  \"\"\"\"\"\"\n  product: Product\n}\n\ntype Customer {\n  \"\"\"Customer unique ID\"\"\"\n  customerID: String\n  companyName: String\n  contactName: String\n  contactTitle: String\n  address: CustomerAddress\n  _id: MongoID!\n\n  \"\"\"\"\"\"\n  orderConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionOrderEnum = null\n  ): OrderConnection\n\n  \"\"\"\"\"\"\n  orderList(skip: Int, limit: Int = 1000, sort: SortFindManyOrderInput): [Order]\n}\n\nenum SortConnectionOrderEnum {\n  _ID_DESC\n  _ID_ASC\n  ORDERID_DESC\n  ORDERID_ASC\n}\n\nenum SortFindManyOrderInput {\n  _ID_ASC\n  _ID_DESC\n  ORDERID_ASC\n  ORDERID_DESC\n  DETAILS_ASC\n  DETAILS_DESC\n}\n\ntype Employee {\n  \"\"\"Category unique ID\"\"\"\n  employeeID: Float\n  lastName: String\n  firstName: String\n  title: String\n  titleOfCourtesy: String\n  birthDate: Date\n  hireDate: Date\n  address: CustomerAddress\n  notes: String\n\n  \"\"\"ID of chief\"\"\"\n  reportsTo: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  territoryIDs: [Float]\n  _id: MongoID!\n\n  \"\"\"\"\"\"\n  chief: Employee\n\n  \"\"\"\"\"\"\n  subordinates(skip: Int, limit: Int = 1000, sort: SortFindManyEmployeeInput): [Employee]\n\n  \"\"\"\"\"\"\n  orderConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionOrderEnum = null\n  ): OrderConnection\n}\n\nenum SortFindManyEmployeeInput {\n  _ID_ASC\n  _ID_DESC\n  EMPLOYEEID_ASC\n  EMPLOYEEID_DESC\n  TERRITORYIDS_ASC\n  TERRITORYIDS_DESC\n  LASTNAME_ASC\n  LASTNAME_DESC\n  LASTNAME__FIRSTNAME_ASC\n  LASTNAME__FIRSTNAME_DESC\n}\n\ntype Shipper {\n  \"\"\"Shipper unique ID\"\"\"\n  shipperID: Float\n  companyName: String\n  phone: String\n  _id: MongoID!\n\n  \"\"\"\"\"\"\n  orderConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionOrderEnum = null\n  ): OrderConnection\n}\n\ntype Supplier {\n  \"\"\"Supplier unique ID\"\"\"\n  supplierID: Float\n  companyName: String\n  contactName: String\n  contactTitle: String\n  address: CustomerAddress\n  _id: MongoID!\n\n  \"\"\"\"\"\"\n  productConnection(\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    first: Int\n\n    \"\"\"Forward pagination argument for returning at most first edges\"\"\"\n    after: String\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    last: Int\n\n    \"\"\"Backward pagination argument for returning at most last edges\"\"\"\n    before: String\n\n    \"\"\"Sort argument for data ordering\"\"\"\n    sort: SortConnectionProductEnum = null\n  ): ProductConnection\n}\n\nenum SortConnectionProductEnum {\n  _ID_DESC\n  _ID_ASC\n  PRODUCTID_DESC\n  PRODUCTID_ASC\n  NAME__SUPPLIERID_DESC\n  NAME__SUPPLIERID_ASC\n}\n\nenum SortFindManyProductInput {\n  _ID_ASC\n  _ID_DESC\n  PRODUCTID_ASC\n  PRODUCTID_DESC\n  UNITPRICE_ASC\n  UNITPRICE_DESC\n  NAME_ASC\n  NAME_DESC\n  NAME__SUPPLIERID_ASC\n  NAME__SUPPLIERID_DESC\n}\n\n\"\"\"\"\"\"\ninput FilterFindOneCategoryInput {\n  \"\"\"Category unique ID\"\"\"\n  categoryID: Float\n  name: String\n  description: String\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindOneCategoryInput\n  OR: [FilterFindOneCategoryInput!]\n  AND: [FilterFindOneCategoryInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindOneCategoryInput {\n  categoryID: CategoryIDOperatorsFilterFindOneCategoryInput\n  name: NameOperatorsFilterFindOneCategoryInput\n  _id: _idOperatorsFilterFindOneCategoryInput\n}\n\ninput CategoryIDOperatorsFilterFindOneCategoryInput {\n  \"\"\"Category unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Category unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Category unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Category unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Category unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Category unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Category unique ID\"\"\"\n  nin: [Float]\n}\n\ninput NameOperatorsFilterFindOneCategoryInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput _idOperatorsFilterFindOneCategoryInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindOneCategoryInput {\n  _ID_ASC\n  _ID_DESC\n  CATEGORYID_ASC\n  CATEGORYID_DESC\n  NAME_ASC\n  NAME_DESC\n}\n\n\"\"\"\"\"\"\ninput FilterFindManyCategoryInput {\n  \"\"\"Category unique ID\"\"\"\n  categoryID: Float\n  name: String\n  description: String\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindManyCategoryInput\n  OR: [FilterFindManyCategoryInput!]\n  AND: [FilterFindManyCategoryInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindManyCategoryInput {\n  categoryID: CategoryIDOperatorsFilterFindManyCategoryInput\n  name: NameOperatorsFilterFindManyCategoryInput\n  _id: _idOperatorsFilterFindManyCategoryInput\n}\n\ninput CategoryIDOperatorsFilterFindManyCategoryInput {\n  \"\"\"Category unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Category unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Category unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Category unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Category unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Category unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Category unique ID\"\"\"\n  nin: [Float]\n}\n\ninput NameOperatorsFilterFindManyCategoryInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput _idOperatorsFilterFindManyCategoryInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindManyCategoryInput {\n  _ID_ASC\n  _ID_DESC\n  CATEGORYID_ASC\n  CATEGORYID_DESC\n  NAME_ASC\n  NAME_DESC\n}\n\n\"\"\"\"\"\"\ninput FilterFindOneCustomerInput {\n  \"\"\"Customer unique ID\"\"\"\n  customerID: String\n  companyName: String\n  contactName: String\n  contactTitle: String\n  address: CustomerAddressInput\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindOneCustomerInput\n  OR: [FilterFindOneCustomerInput!]\n  AND: [FilterFindOneCustomerInput!]\n}\n\ninput CustomerAddressInput {\n  street: String\n  city: String\n  region: String\n  postalCode: String\n  country: String\n  phone: String\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindOneCustomerInput {\n  customerID: CustomerIDOperatorsFilterFindOneCustomerInput\n  companyName: CompanyNameOperatorsFilterFindOneCustomerInput\n  _id: _idOperatorsFilterFindOneCustomerInput\n}\n\ninput CustomerIDOperatorsFilterFindOneCustomerInput {\n  \"\"\"Customer unique ID\"\"\"\n  gt: String\n\n  \"\"\"Customer unique ID\"\"\"\n  gte: String\n\n  \"\"\"Customer unique ID\"\"\"\n  lt: String\n\n  \"\"\"Customer unique ID\"\"\"\n  lte: String\n\n  \"\"\"Customer unique ID\"\"\"\n  ne: String\n\n  \"\"\"Customer unique ID\"\"\"\n  in: [String]\n\n  \"\"\"Customer unique ID\"\"\"\n  nin: [String]\n}\n\ninput CompanyNameOperatorsFilterFindOneCustomerInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput _idOperatorsFilterFindOneCustomerInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindOneCustomerInput {\n  _ID_ASC\n  _ID_DESC\n  CUSTOMERID_ASC\n  CUSTOMERID_DESC\n  COMPANYNAME_ASC\n  COMPANYNAME_DESC\n}\n\n\"\"\"List of items with pagination.\"\"\"\ntype CustomerPagination {\n  \"\"\"Total object count.\"\"\"\n  count: Int\n\n  \"\"\"Array of objects.\"\"\"\n  items: [Customer]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PaginationInfo!\n}\n\ntype PaginationInfo {\n  currentPage: Int!\n  perPage: Int!\n  pageCount: Int\n  itemCount: Int\n  hasNextPage: Boolean\n  hasPreviousPage: Boolean\n}\n\n\"\"\"\"\"\"\ninput FilterFindManyCustomerInput {\n  \"\"\"Customer unique ID\"\"\"\n  customerID: String\n  companyName: String\n  contactName: String\n  contactTitle: String\n  address: CustomerAddressInput\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindManyCustomerInput\n  OR: [FilterFindManyCustomerInput!]\n  AND: [FilterFindManyCustomerInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindManyCustomerInput {\n  customerID: CustomerIDOperatorsFilterFindManyCustomerInput\n  companyName: CompanyNameOperatorsFilterFindManyCustomerInput\n  _id: _idOperatorsFilterFindManyCustomerInput\n}\n\ninput CustomerIDOperatorsFilterFindManyCustomerInput {\n  \"\"\"Customer unique ID\"\"\"\n  gt: String\n\n  \"\"\"Customer unique ID\"\"\"\n  gte: String\n\n  \"\"\"Customer unique ID\"\"\"\n  lt: String\n\n  \"\"\"Customer unique ID\"\"\"\n  lte: String\n\n  \"\"\"Customer unique ID\"\"\"\n  ne: String\n\n  \"\"\"Customer unique ID\"\"\"\n  in: [String]\n\n  \"\"\"Customer unique ID\"\"\"\n  nin: [String]\n}\n\ninput CompanyNameOperatorsFilterFindManyCustomerInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput _idOperatorsFilterFindManyCustomerInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindManyCustomerInput {\n  _ID_ASC\n  _ID_DESC\n  CUSTOMERID_ASC\n  CUSTOMERID_DESC\n  COMPANYNAME_ASC\n  COMPANYNAME_DESC\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CustomerConnection {\n  \"\"\"Total object count.\"\"\"\n  count: Int!\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  edges: [CustomerEdge!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CustomerEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Customer!\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\nenum SortConnectionCustomerEnum {\n  _ID_DESC\n  _ID_ASC\n  CUSTOMERID_DESC\n  CUSTOMERID_ASC\n  COMPANYNAME_DESC\n  COMPANYNAME_ASC\n}\n\n\"\"\"\"\"\"\ninput FilterFindOneEmployeeInput {\n  \"\"\"Category unique ID\"\"\"\n  employeeID: Float\n  lastName: String\n  firstName: String\n  title: String\n  titleOfCourtesy: String\n  birthDate: Date\n  hireDate: Date\n  address: CustomerAddressInput\n  notes: String\n\n  \"\"\"ID of chief\"\"\"\n  reportsTo: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  territoryIDs: [Float]\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindOneEmployeeInput\n  OR: [FilterFindOneEmployeeInput!]\n  AND: [FilterFindOneEmployeeInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindOneEmployeeInput {\n  employeeID: EmployeeIDOperatorsFilterFindOneEmployeeInput\n  lastName: LastNameOperatorsFilterFindOneEmployeeInput\n  territoryIDs: TerritoryIDsOperatorsFilterFindOneEmployeeInput\n  _id: _idOperatorsFilterFindOneEmployeeInput\n}\n\ninput EmployeeIDOperatorsFilterFindOneEmployeeInput {\n  \"\"\"Category unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Category unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Category unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Category unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Category unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Category unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Category unique ID\"\"\"\n  nin: [Float]\n}\n\ninput LastNameOperatorsFilterFindOneEmployeeInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput TerritoryIDsOperatorsFilterFindOneEmployeeInput {\n  \"\"\"Attached territory ID from region collection\"\"\"\n  gt: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  gte: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  lt: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  lte: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  ne: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  in: [Float]\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  nin: [Float]\n}\n\ninput _idOperatorsFilterFindOneEmployeeInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindOneEmployeeInput {\n  _ID_ASC\n  _ID_DESC\n  EMPLOYEEID_ASC\n  EMPLOYEEID_DESC\n  TERRITORYIDS_ASC\n  TERRITORYIDS_DESC\n  LASTNAME_ASC\n  LASTNAME_DESC\n  LASTNAME__FIRSTNAME_ASC\n  LASTNAME__FIRSTNAME_DESC\n}\n\n\"\"\"\"\"\"\ninput FilterFindManyEmployeeInput {\n  \"\"\"Category unique ID\"\"\"\n  employeeID: Float\n  lastName: String\n  firstName: String\n  title: String\n  titleOfCourtesy: String\n  birthDate: Date\n  hireDate: Date\n  address: CustomerAddressInput\n  notes: String\n\n  \"\"\"ID of chief\"\"\"\n  reportsTo: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  territoryIDs: [Float]\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindManyEmployeeInput\n  OR: [FilterFindManyEmployeeInput!]\n  AND: [FilterFindManyEmployeeInput!]\n\n  \"\"\"Fulltext search with mongodb stemming and weights\"\"\"\n  fullTextSearch: String\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindManyEmployeeInput {\n  employeeID: EmployeeIDOperatorsFilterFindManyEmployeeInput\n  lastName: LastNameOperatorsFilterFindManyEmployeeInput\n  territoryIDs: TerritoryIDsOperatorsFilterFindManyEmployeeInput\n  _id: _idOperatorsFilterFindManyEmployeeInput\n}\n\ninput EmployeeIDOperatorsFilterFindManyEmployeeInput {\n  \"\"\"Category unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Category unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Category unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Category unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Category unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Category unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Category unique ID\"\"\"\n  nin: [Float]\n}\n\ninput LastNameOperatorsFilterFindManyEmployeeInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput TerritoryIDsOperatorsFilterFindManyEmployeeInput {\n  \"\"\"Attached territory ID from region collection\"\"\"\n  gt: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  gte: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  lt: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  lte: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  ne: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  in: [Float]\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  nin: [Float]\n}\n\ninput _idOperatorsFilterFindManyEmployeeInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\n\"\"\"List of items with pagination.\"\"\"\ntype EmployeePagination {\n  \"\"\"Total object count.\"\"\"\n  count: Int\n\n  \"\"\"Array of objects.\"\"\"\n  items: [Employee]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PaginationInfo!\n}\n\n\"\"\"\"\"\"\ninput FilterFindOneOrderInput {\n  \"\"\"Order unique ID\"\"\"\n  orderID: Float\n  customerID: String\n  employeeID: Float\n  orderDate: Date\n  requiredDate: Date\n  shippedDate: Date\n  shipVia: Float\n  freight: Float\n  shipName: String\n  shipAddress: CustomerAddressInput\n\n  \"\"\"List of ordered products\"\"\"\n  details: [OrderDetailsInput]\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindOneOrderInput\n  OR: [FilterFindOneOrderInput!]\n  AND: [FilterFindOneOrderInput!]\n}\n\ninput OrderDetailsInput {\n  productID: Float\n  unitPrice: Float\n  quantity: Float\n  discount: Float\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindOneOrderInput {\n  orderID: OrderIDOperatorsFilterFindOneOrderInput\n  details: DetailsOperatorsFilterFindOneOrderInput\n  _id: _idOperatorsFilterFindOneOrderInput\n}\n\ninput OrderIDOperatorsFilterFindOneOrderInput {\n  \"\"\"Order unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Order unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Order unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Order unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Order unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Order unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Order unique ID\"\"\"\n  nin: [Float]\n}\n\ninput DetailsOperatorsFilterFindOneOrderInput {\n  \"\"\"List of ordered products\"\"\"\n  gt: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  gte: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  lt: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  lte: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  ne: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  in: [OrderDetailsInput]\n\n  \"\"\"List of ordered products\"\"\"\n  nin: [OrderDetailsInput]\n}\n\ninput _idOperatorsFilterFindOneOrderInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindOneOrderInput {\n  _ID_ASC\n  _ID_DESC\n  ORDERID_ASC\n  ORDERID_DESC\n  DETAILS_ASC\n  DETAILS_DESC\n}\n\n\"\"\"List of items with pagination.\"\"\"\ntype OrderPagination {\n  \"\"\"Total object count.\"\"\"\n  count: Int\n\n  \"\"\"Array of objects.\"\"\"\n  items: [Order]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PaginationInfo!\n}\n\n\"\"\"\"\"\"\ninput FilterFindManyOrderInput {\n  \"\"\"Order unique ID\"\"\"\n  orderID: Float\n  customerID: String\n  employeeID: Float\n  orderDate: Date\n  requiredDate: Date\n  shippedDate: Date\n  shipVia: Float\n  freight: Float\n  shipName: String\n  shipAddress: CustomerAddressInput\n\n  \"\"\"List of ordered products\"\"\"\n  details: [OrderDetailsInput]\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindManyOrderInput\n  OR: [FilterFindManyOrderInput!]\n  AND: [FilterFindManyOrderInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindManyOrderInput {\n  orderID: OrderIDOperatorsFilterFindManyOrderInput\n  details: DetailsOperatorsFilterFindManyOrderInput\n  _id: _idOperatorsFilterFindManyOrderInput\n}\n\ninput OrderIDOperatorsFilterFindManyOrderInput {\n  \"\"\"Order unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Order unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Order unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Order unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Order unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Order unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Order unique ID\"\"\"\n  nin: [Float]\n}\n\ninput DetailsOperatorsFilterFindManyOrderInput {\n  \"\"\"List of ordered products\"\"\"\n  gt: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  gte: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  lt: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  lte: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  ne: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  in: [OrderDetailsInput]\n\n  \"\"\"List of ordered products\"\"\"\n  nin: [OrderDetailsInput]\n}\n\ninput _idOperatorsFilterFindManyOrderInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\n\"\"\"\"\"\"\ninput FilterFindOneProductInput {\n  \"\"\"Unique product id\"\"\"\n  productID: Float\n  name: String\n  supplierID: Float\n  categoryID: Float\n  quantityPerUnit: String\n  unitPrice: Float\n  unitsInStock: Float\n  unitsOnOrder: Float\n  reorderLevel: Float\n  discontinued: Boolean\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindOneProductInput\n  OR: [FilterFindOneProductInput!]\n  AND: [FilterFindOneProductInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindOneProductInput {\n  productID: ProductIDOperatorsFilterFindOneProductInput\n  name: NameOperatorsFilterFindOneProductInput\n  unitPrice: UnitPriceOperatorsFilterFindOneProductInput\n  _id: _idOperatorsFilterFindOneProductInput\n}\n\ninput ProductIDOperatorsFilterFindOneProductInput {\n  \"\"\"Unique product id\"\"\"\n  gt: Float\n\n  \"\"\"Unique product id\"\"\"\n  gte: Float\n\n  \"\"\"Unique product id\"\"\"\n  lt: Float\n\n  \"\"\"Unique product id\"\"\"\n  lte: Float\n\n  \"\"\"Unique product id\"\"\"\n  ne: Float\n\n  \"\"\"Unique product id\"\"\"\n  in: [Float]\n\n  \"\"\"Unique product id\"\"\"\n  nin: [Float]\n}\n\ninput NameOperatorsFilterFindOneProductInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput UnitPriceOperatorsFilterFindOneProductInput {\n  gt: Float\n  gte: Float\n  lt: Float\n  lte: Float\n  ne: Float\n  in: [Float]\n  nin: [Float]\n}\n\ninput _idOperatorsFilterFindOneProductInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindOneProductInput {\n  _ID_ASC\n  _ID_DESC\n  PRODUCTID_ASC\n  PRODUCTID_DESC\n  UNITPRICE_ASC\n  UNITPRICE_DESC\n  NAME_ASC\n  NAME_DESC\n  NAME__SUPPLIERID_ASC\n  NAME__SUPPLIERID_DESC\n}\n\n\"\"\"\"\"\"\ninput FilterFindManyProductInput {\n  \"\"\"Unique product id\"\"\"\n  productID: Float\n  name: String\n  supplierID: Float\n  categoryID: Float\n  quantityPerUnit: String\n  unitPrice: Float\n  unitsInStock: Float\n  unitsOnOrder: Float\n  reorderLevel: Float\n  discontinued: Boolean\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindManyProductInput\n  OR: [FilterFindManyProductInput!]\n  AND: [FilterFindManyProductInput!]\n\n  \"\"\"Search by regExp\"\"\"\n  nameRegexp: String\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindManyProductInput {\n  productID: ProductIDOperatorsFilterFindManyProductInput\n  name: NameOperatorsFilterFindManyProductInput\n  unitPrice: UnitPriceOperatorsFilterFindManyProductInput\n  _id: _idOperatorsFilterFindManyProductInput\n}\n\ninput ProductIDOperatorsFilterFindManyProductInput {\n  \"\"\"Unique product id\"\"\"\n  gt: Float\n\n  \"\"\"Unique product id\"\"\"\n  gte: Float\n\n  \"\"\"Unique product id\"\"\"\n  lt: Float\n\n  \"\"\"Unique product id\"\"\"\n  lte: Float\n\n  \"\"\"Unique product id\"\"\"\n  ne: Float\n\n  \"\"\"Unique product id\"\"\"\n  in: [Float]\n\n  \"\"\"Unique product id\"\"\"\n  nin: [Float]\n}\n\ninput NameOperatorsFilterFindManyProductInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput UnitPriceOperatorsFilterFindManyProductInput {\n  gt: Float\n  gte: Float\n  lt: Float\n  lte: Float\n  ne: Float\n  in: [Float]\n  nin: [Float]\n}\n\ninput _idOperatorsFilterFindManyProductInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\n\"\"\"List of items with pagination.\"\"\"\ntype ProductPagination {\n  \"\"\"Total object count.\"\"\"\n  count: Int\n\n  \"\"\"Array of objects.\"\"\"\n  items: [Product]\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PaginationInfo!\n}\n\ntype Region {\n  \"\"\"Region unique ID\"\"\"\n  regionID: Float\n  name: String\n  territories: [RegionTerritories]\n  _id: MongoID!\n\n  \"\"\"\"\"\"\n  employees(skip: Int, limit: Int = 1000, sort: SortFindManyEmployeeInput): [Employee]\n}\n\ntype RegionTerritories {\n  territoryID: Float\n  name: String\n}\n\n\"\"\"\"\"\"\ninput FilterFindOneRegionInput {\n  \"\"\"Region unique ID\"\"\"\n  regionID: Float\n  name: String\n  territories: [RegionTerritoriesInput]\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindOneRegionInput\n  OR: [FilterFindOneRegionInput!]\n  AND: [FilterFindOneRegionInput!]\n}\n\ninput RegionTerritoriesInput {\n  territoryID: Float\n  name: String\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindOneRegionInput {\n  regionID: RegionIDOperatorsFilterFindOneRegionInput\n  _id: _idOperatorsFilterFindOneRegionInput\n}\n\ninput RegionIDOperatorsFilterFindOneRegionInput {\n  \"\"\"Region unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Region unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Region unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Region unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Region unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Region unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Region unique ID\"\"\"\n  nin: [Float]\n}\n\ninput _idOperatorsFilterFindOneRegionInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindOneRegionInput {\n  _ID_ASC\n  _ID_DESC\n  REGIONID_ASC\n  REGIONID_DESC\n}\n\n\"\"\"\"\"\"\ninput FilterFindManyRegionInput {\n  \"\"\"Region unique ID\"\"\"\n  regionID: Float\n  name: String\n  territories: [RegionTerritoriesInput]\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindManyRegionInput\n  OR: [FilterFindManyRegionInput!]\n  AND: [FilterFindManyRegionInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindManyRegionInput {\n  regionID: RegionIDOperatorsFilterFindManyRegionInput\n  _id: _idOperatorsFilterFindManyRegionInput\n}\n\ninput RegionIDOperatorsFilterFindManyRegionInput {\n  \"\"\"Region unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Region unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Region unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Region unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Region unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Region unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Region unique ID\"\"\"\n  nin: [Float]\n}\n\ninput _idOperatorsFilterFindManyRegionInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindManyRegionInput {\n  _ID_ASC\n  _ID_DESC\n  REGIONID_ASC\n  REGIONID_DESC\n}\n\n\"\"\"\"\"\"\ninput FilterFindOneShipperInput {\n  \"\"\"Shipper unique ID\"\"\"\n  shipperID: Float\n  companyName: String\n  phone: String\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindOneShipperInput\n  OR: [FilterFindOneShipperInput!]\n  AND: [FilterFindOneShipperInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindOneShipperInput {\n  shipperID: ShipperIDOperatorsFilterFindOneShipperInput\n  _id: _idOperatorsFilterFindOneShipperInput\n}\n\ninput ShipperIDOperatorsFilterFindOneShipperInput {\n  \"\"\"Shipper unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Shipper unique ID\"\"\"\n  nin: [Float]\n}\n\ninput _idOperatorsFilterFindOneShipperInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindOneShipperInput {\n  _ID_ASC\n  _ID_DESC\n  SHIPPERID_ASC\n  SHIPPERID_DESC\n}\n\n\"\"\"\"\"\"\ninput FilterFindManyShipperInput {\n  \"\"\"Shipper unique ID\"\"\"\n  shipperID: Float\n  companyName: String\n  phone: String\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindManyShipperInput\n  OR: [FilterFindManyShipperInput!]\n  AND: [FilterFindManyShipperInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindManyShipperInput {\n  shipperID: ShipperIDOperatorsFilterFindManyShipperInput\n  _id: _idOperatorsFilterFindManyShipperInput\n}\n\ninput ShipperIDOperatorsFilterFindManyShipperInput {\n  \"\"\"Shipper unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Shipper unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Shipper unique ID\"\"\"\n  nin: [Float]\n}\n\ninput _idOperatorsFilterFindManyShipperInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindManyShipperInput {\n  _ID_ASC\n  _ID_DESC\n  SHIPPERID_ASC\n  SHIPPERID_DESC\n}\n\n\"\"\"\"\"\"\ninput FilterFindOneSupplierInput {\n  \"\"\"Supplier unique ID\"\"\"\n  supplierID: Float\n  companyName: String\n  contactName: String\n  contactTitle: String\n  address: CustomerAddressInput\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindOneSupplierInput\n  OR: [FilterFindOneSupplierInput!]\n  AND: [FilterFindOneSupplierInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindOneSupplierInput {\n  supplierID: SupplierIDOperatorsFilterFindOneSupplierInput\n  companyName: CompanyNameOperatorsFilterFindOneSupplierInput\n  _id: _idOperatorsFilterFindOneSupplierInput\n}\n\ninput SupplierIDOperatorsFilterFindOneSupplierInput {\n  \"\"\"Supplier unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Supplier unique ID\"\"\"\n  nin: [Float]\n}\n\ninput CompanyNameOperatorsFilterFindOneSupplierInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput _idOperatorsFilterFindOneSupplierInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortFindOneSupplierInput {\n  _ID_ASC\n  _ID_DESC\n  SUPPLIERID_ASC\n  SUPPLIERID_DESC\n  COMPANYNAME_ASC\n  COMPANYNAME_DESC\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SupplierConnection {\n  \"\"\"Total object count.\"\"\"\n  count: Int!\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"Information to aid in pagination.\"\"\"\n  edges: [SupplierEdge!]!\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SupplierEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Supplier!\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"\"\"\"\ninput FilterFindManySupplierInput {\n  \"\"\"Supplier unique ID\"\"\"\n  supplierID: Float\n  companyName: String\n  contactName: String\n  contactTitle: String\n  address: CustomerAddressInput\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterFindManySupplierInput\n  OR: [FilterFindManySupplierInput!]\n  AND: [FilterFindManySupplierInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterFindManySupplierInput {\n  supplierID: SupplierIDOperatorsFilterFindManySupplierInput\n  companyName: CompanyNameOperatorsFilterFindManySupplierInput\n  _id: _idOperatorsFilterFindManySupplierInput\n}\n\ninput SupplierIDOperatorsFilterFindManySupplierInput {\n  \"\"\"Supplier unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Supplier unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Supplier unique ID\"\"\"\n  nin: [Float]\n}\n\ninput CompanyNameOperatorsFilterFindManySupplierInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput _idOperatorsFilterFindManySupplierInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortConnectionSupplierEnum {\n  _ID_DESC\n  _ID_ASC\n  SUPPLIERID_DESC\n  SUPPLIERID_ASC\n  COMPANYNAME_DESC\n  COMPANYNAME_ASC\n}\n\ntype Mutation {\n  \"\"\"\n  Create one document with mongoose defaults, setters, hooks and validation\n  \"\"\"\n  createProduct(record: CreateOneProductInput!): CreateOneProductPayload\n\n  \"\"\"\n  Update one document: 1) Retrieve one document by findById. 2) Apply updates to mongoose document. 3) Mongoose applies defaults, setters, hooks and validation. 4) And save it.\n  \"\"\"\n  updateProduct(record: UpdateByIdProductInput!): UpdateByIdProductPayload\n\n  \"\"\"\n  Remove one document: 1) Remove with hooks via findOneAndRemove. 2) Return removed document.\n  \"\"\"\n  removeProduct(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterRemoveOneProductInput\n    sort: SortRemoveOneProductInput\n  ): RemoveOneProductPayload\n\n  \"\"\"\n  Create one document with mongoose defaults, setters, hooks and validation\n  \"\"\"\n  createOrder(record: CreateOneOrderInput!): CreateOneOrderPayload\n\n  \"\"\"\n  Update one document: 1) Retrieve one document by findById. 2) Apply updates to mongoose document. 3) Mongoose applies defaults, setters, hooks and validation. 4) And save it.\n  \"\"\"\n  updateOrder(record: UpdateByIdOrderInput!): UpdateByIdOrderPayload\n\n  \"\"\"\n  Remove one document: 1) Remove with hooks via findOneAndRemove. 2) Return removed document.\n  \"\"\"\n  removeOrder(\n    \"\"\"Filter by fields\"\"\"\n    filter: FilterRemoveOneOrderInput\n    sort: SortRemoveOneOrderInput\n  ): RemoveOneOrderPayload\n\n  \"\"\"\n  Update one document: 1) Retrieve one document by findById. 2) Apply updates to mongoose document. 3) Mongoose applies defaults, setters, hooks and validation. 4) And save it.\n  \"\"\"\n  updateEmployee(record: UpdateByIdEmployeeInput!): UpdateByIdEmployeePayload\n\n  \"\"\"\n  Remove all data and seed DB from scratch. Anyway data automatically reloaded every 30 minutes.\n  \"\"\"\n  resetData: String\n}\n\ntype CreateOneProductPayload {\n  \"\"\"Created document ID\"\"\"\n  recordId: MongoID\n\n  \"\"\"Created document\"\"\"\n  record: Product\n  query: Query\n}\n\n\"\"\"\"\"\"\ninput CreateOneProductInput {\n  \"\"\"Unique product id\"\"\"\n  productID: Float\n  name: String\n  supplierID: Float\n  categoryID: Float\n  quantityPerUnit: String\n  unitPrice: Float\n  unitsInStock: Float\n  unitsOnOrder: Float\n  reorderLevel: Float\n  discontinued: Boolean\n}\n\ntype UpdateByIdProductPayload {\n  \"\"\"Updated document ID\"\"\"\n  recordId: MongoID\n\n  \"\"\"Updated document\"\"\"\n  record: Product\n  query: Query\n}\n\n\"\"\"\"\"\"\ninput UpdateByIdProductInput {\n  \"\"\"Unique product id\"\"\"\n  productID: Float\n  name: String\n  supplierID: Float\n  categoryID: Float\n  quantityPerUnit: String\n  unitPrice: Float\n  unitsInStock: Float\n  unitsOnOrder: Float\n  reorderLevel: Float\n  discontinued: Boolean\n  _id: MongoID!\n}\n\ntype RemoveOneProductPayload {\n  \"\"\"Removed document ID\"\"\"\n  recordId: MongoID\n\n  \"\"\"Removed document\"\"\"\n  record: Product\n  query: Query\n}\n\n\"\"\"\"\"\"\ninput FilterRemoveOneProductInput {\n  \"\"\"Unique product id\"\"\"\n  productID: Float\n  name: String\n  supplierID: Float\n  categoryID: Float\n  quantityPerUnit: String\n  unitPrice: Float\n  unitsInStock: Float\n  unitsOnOrder: Float\n  reorderLevel: Float\n  discontinued: Boolean\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterRemoveOneProductInput\n  OR: [FilterRemoveOneProductInput!]\n  AND: [FilterRemoveOneProductInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterRemoveOneProductInput {\n  productID: ProductIDOperatorsFilterRemoveOneProductInput\n  name: NameOperatorsFilterRemoveOneProductInput\n  unitPrice: UnitPriceOperatorsFilterRemoveOneProductInput\n  _id: _idOperatorsFilterRemoveOneProductInput\n}\n\ninput ProductIDOperatorsFilterRemoveOneProductInput {\n  \"\"\"Unique product id\"\"\"\n  gt: Float\n\n  \"\"\"Unique product id\"\"\"\n  gte: Float\n\n  \"\"\"Unique product id\"\"\"\n  lt: Float\n\n  \"\"\"Unique product id\"\"\"\n  lte: Float\n\n  \"\"\"Unique product id\"\"\"\n  ne: Float\n\n  \"\"\"Unique product id\"\"\"\n  in: [Float]\n\n  \"\"\"Unique product id\"\"\"\n  nin: [Float]\n}\n\ninput NameOperatorsFilterRemoveOneProductInput {\n  gt: String\n  gte: String\n  lt: String\n  lte: String\n  ne: String\n  in: [String]\n  nin: [String]\n}\n\ninput UnitPriceOperatorsFilterRemoveOneProductInput {\n  gt: Float\n  gte: Float\n  lt: Float\n  lte: Float\n  ne: Float\n  in: [Float]\n  nin: [Float]\n}\n\ninput _idOperatorsFilterRemoveOneProductInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortRemoveOneProductInput {\n  _ID_ASC\n  _ID_DESC\n  PRODUCTID_ASC\n  PRODUCTID_DESC\n  UNITPRICE_ASC\n  UNITPRICE_DESC\n  NAME_ASC\n  NAME_DESC\n  NAME__SUPPLIERID_ASC\n  NAME__SUPPLIERID_DESC\n}\n\ntype CreateOneOrderPayload {\n  \"\"\"Created document ID\"\"\"\n  recordId: MongoID\n\n  \"\"\"Created document\"\"\"\n  record: Order\n  query: Query\n}\n\n\"\"\"\"\"\"\ninput CreateOneOrderInput {\n  \"\"\"Order unique ID\"\"\"\n  orderID: Float\n  customerID: String\n  employeeID: Float\n  orderDate: Date\n  requiredDate: Date\n  shippedDate: Date\n  shipVia: Float\n  freight: Float\n  shipName: String\n  shipAddress: CustomerAddressInput\n\n  \"\"\"List of ordered products\"\"\"\n  details: [OrderDetailsInput]\n}\n\ntype UpdateByIdOrderPayload {\n  \"\"\"Updated document ID\"\"\"\n  recordId: MongoID\n\n  \"\"\"Updated document\"\"\"\n  record: Order\n  query: Query\n}\n\n\"\"\"\"\"\"\ninput UpdateByIdOrderInput {\n  \"\"\"Order unique ID\"\"\"\n  orderID: Float\n  customerID: String\n  employeeID: Float\n  orderDate: Date\n  requiredDate: Date\n  shippedDate: Date\n  shipVia: Float\n  freight: Float\n  shipName: String\n  shipAddress: CustomerAddressInput\n\n  \"\"\"List of ordered products\"\"\"\n  details: [OrderDetailsInput]\n  _id: MongoID!\n}\n\ntype RemoveOneOrderPayload {\n  \"\"\"Removed document ID\"\"\"\n  recordId: MongoID\n\n  \"\"\"Removed document\"\"\"\n  record: Order\n  query: Query\n}\n\n\"\"\"\"\"\"\ninput FilterRemoveOneOrderInput {\n  \"\"\"Order unique ID\"\"\"\n  orderID: Float\n  customerID: String\n  employeeID: Float\n  orderDate: Date\n  requiredDate: Date\n  shippedDate: Date\n  shipVia: Float\n  freight: Float\n  shipName: String\n  shipAddress: CustomerAddressInput\n\n  \"\"\"List of ordered products\"\"\"\n  details: [OrderDetailsInput]\n  _id: MongoID\n  _ids: [MongoID]\n\n  \"\"\"List of *indexed* fields that can be filtered via operators.\"\"\"\n  _operators: OperatorsFilterRemoveOneOrderInput\n  OR: [FilterRemoveOneOrderInput!]\n  AND: [FilterRemoveOneOrderInput!]\n}\n\n\"\"\"For performance reason this type contains only *indexed* fields.\"\"\"\ninput OperatorsFilterRemoveOneOrderInput {\n  orderID: OrderIDOperatorsFilterRemoveOneOrderInput\n  details: DetailsOperatorsFilterRemoveOneOrderInput\n  _id: _idOperatorsFilterRemoveOneOrderInput\n}\n\ninput OrderIDOperatorsFilterRemoveOneOrderInput {\n  \"\"\"Order unique ID\"\"\"\n  gt: Float\n\n  \"\"\"Order unique ID\"\"\"\n  gte: Float\n\n  \"\"\"Order unique ID\"\"\"\n  lt: Float\n\n  \"\"\"Order unique ID\"\"\"\n  lte: Float\n\n  \"\"\"Order unique ID\"\"\"\n  ne: Float\n\n  \"\"\"Order unique ID\"\"\"\n  in: [Float]\n\n  \"\"\"Order unique ID\"\"\"\n  nin: [Float]\n}\n\ninput DetailsOperatorsFilterRemoveOneOrderInput {\n  \"\"\"List of ordered products\"\"\"\n  gt: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  gte: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  lt: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  lte: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  ne: OrderDetailsInput\n\n  \"\"\"List of ordered products\"\"\"\n  in: [OrderDetailsInput]\n\n  \"\"\"List of ordered products\"\"\"\n  nin: [OrderDetailsInput]\n}\n\ninput _idOperatorsFilterRemoveOneOrderInput {\n  gt: MongoID\n  gte: MongoID\n  lt: MongoID\n  lte: MongoID\n  ne: MongoID\n  in: [MongoID]\n  nin: [MongoID]\n}\n\nenum SortRemoveOneOrderInput {\n  _ID_ASC\n  _ID_DESC\n  ORDERID_ASC\n  ORDERID_DESC\n  DETAILS_ASC\n  DETAILS_DESC\n}\n\ntype UpdateByIdEmployeePayload {\n  \"\"\"Updated document ID\"\"\"\n  recordId: MongoID\n\n  \"\"\"Updated document\"\"\"\n  record: Employee\n  query: Query\n}\n\n\"\"\"\"\"\"\ninput UpdateByIdEmployeeInput {\n  \"\"\"Category unique ID\"\"\"\n  employeeID: Float\n  lastName: String\n  firstName: String\n  title: String\n  titleOfCourtesy: String\n  birthDate: Date\n  hireDate: Date\n  address: CustomerAddressInput\n  notes: String\n\n  \"\"\"ID of chief\"\"\"\n  reportsTo: Float\n\n  \"\"\"Attached territory ID from region collection\"\"\"\n  territoryIDs: [Float]\n  _id: MongoID!\n}\n\ntype Subscription {\n  orderCreated: Order\n  orderUpdated: Order\n  orderRemoved: MongoID\n}",
    "MusicBrainz": "\"\"\"\nThe query root, from which multiple types of MusicBrainz\nrequests can be made.\n\"\"\"\ntype Query {\n  \"\"\"Perform a lookup of a MusicBrainz entity by its MBID.\"\"\"\n  lookup: LookupQuery\n\n  \"\"\"Browse all MusicBrainz entities directly linked to another entity.\"\"\"\n  browse: BrowseQuery\n\n  \"\"\"Search for MusicBrainz entities using Lucene query syntax.\"\"\"\n  search: SearchQuery\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n\n  \"\"\"\n  A query for data on [Last.fm](https://www.last.fm/) that is not connected\n  to any particular MusicBrainz entity. This field is provided by the\n  Last.fm extension.\n  \"\"\"\n  lastFM: LastFMQuery\n  spotify: SpotifyQuery!\n}\n\n\"\"\"A lookup of an individual MusicBrainz entity by its MBID.\"\"\"\ntype LookupQuery {\n  \"\"\"Look up a specific area by its MBID.\"\"\"\n  area(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Area\n\n  \"\"\"Look up a specific artist by its MBID.\"\"\"\n  artist(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Artist\n\n  \"\"\"Look up a specific collection by its MBID.\"\"\"\n  collection(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Collection\n\n  \"\"\"Look up a specific physical disc by its disc ID.\"\"\"\n  disc(\n    \"\"\"\n    The [disc ID](https://musicbrainz.org/doc/Disc_ID)\n    of the disc.\n    \"\"\"\n    discID: DiscID!\n  ): Disc\n\n  \"\"\"Look up a specific event by its MBID.\"\"\"\n  event(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Event\n\n  \"\"\"Look up a specific instrument by its MBID.\"\"\"\n  instrument(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Instrument\n\n  \"\"\"Look up a specific label by its MBID.\"\"\"\n  label(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Label\n\n  \"\"\"Look up a specific place by its MBID.\"\"\"\n  place(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Place\n\n  \"\"\"Look up a specific recording by its MBID.\"\"\"\n  recording(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Recording\n\n  \"\"\"Look up a specific release by its MBID.\"\"\"\n  release(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Release\n\n  \"\"\"Look up a specific release group by its MBID.\"\"\"\n  releaseGroup(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): ReleaseGroup\n\n  \"\"\"Look up a specific series by its MBID.\"\"\"\n  series(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Series\n\n  \"\"\"Look up a specific URL by its MBID.\"\"\"\n  url(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID\n\n    \"\"\"The web address of the URL entity to look up.\"\"\"\n    resource: URLString\n  ): URL\n\n  \"\"\"Look up a specific work by its MBID.\"\"\"\n  work(\n    \"\"\"The MBID of the entity.\"\"\"\n    mbid: MBID!\n  ): Work\n}\n\n\"\"\"\nThe MBID scalar represents MusicBrainz identifiers, which are\n36-character UUIDs.\n\"\"\"\nscalar MBID\n\n\"\"\"\n[Areas](https://musicbrainz.org/doc/Area) are geographic regions\nor settlements (countries, cities, or the like).\n\"\"\"\ntype Area implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official name of the entity.\"\"\"\n  name: String\n\n  \"\"\"\n  The string to use for the purpose of ordering by name (for\n  example, by moving articles like \u2018the\u2019 to the end or a person\u2019s last name to\n  the front).\n  \"\"\"\n  sortName: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  [ISO 3166 codes](https://en.wikipedia.org/wiki/ISO_3166) are\n  the codes assigned by ISO to countries and subdivisions.\n  \"\"\"\n  isoCodes(\n    \"\"\"\n    Specify the particular ISO standard codes to retrieve.\n    Available ISO standards are 3166-1, 3166-2, and 3166-3.\n    \"\"\"\n    standard: String = \"3166-1\"\n  ): [String]\n\n  \"\"\"\n  The type of area (country, city, etc. \u2013 see the [possible\n  values](https://musicbrainz.org/doc/Area)).\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"A list of artists linked to this entity.\"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"A list of events linked to this entity.\"\"\"\n  events(after: String, first: Int): EventConnection\n\n  \"\"\"A list of labels linked to this entity.\"\"\"\n  labels(after: String, first: Int): LabelConnection\n\n  \"\"\"A list of places linked to this entity.\"\"\"\n  places(after: String, first: Int): PlaceConnection\n\n  \"\"\"A list of releases linked to this entity.\"\"\"\n  releases(\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"Filter by one or more release statuses.\"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n\n  \"\"\"\n  Chart data available for this area on [Last.fm](https://www.last.fm/), if\n  the area represents a country with an [ISO 3166 code](https://en.wikipedia.org/wiki/ISO_3166).\n  This field is provided by the Last.fm extension.\n  \"\"\"\n  lastFM: LastFMCountry\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"An entity in the MusicBrainz schema.\"\"\"\ninterface Entity {\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n}\n\n\"\"\"\n[Aliases](https://musicbrainz.org/doc/Aliases) are variant names\nthat are mostly used as search help: if a search matches an entity\u2019s alias, the\nentity will be given as a result \u2013 even if the actual name wouldn\u2019t be.\n\"\"\"\ntype Alias {\n  \"\"\"The aliased name of the entity.\"\"\"\n  name: String\n\n  \"\"\"\n  The string to use for the purpose of ordering by name (for\n  example, by moving articles like \u2018the\u2019 to the end or a person\u2019s last name to\n  the front).\n  \"\"\"\n  sortName: String\n\n  \"\"\"\n  The locale (language and/or country) in which the alias is\n  used.\n  \"\"\"\n  locale: Locale\n\n  \"\"\"\n  Whether this is the main alias for the entity in the\n  specified locale (this could mean the most recent or the most common).\n  \"\"\"\n  primary: Boolean\n\n  \"\"\"\n  The type or purpose of the alias \u2013 whether it is a variant,\n  search hint, etc.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n}\n\n\"\"\"Language code, optionally with country and encoding.\"\"\"\nscalar Locale\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ArtistConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ArtistEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Artist]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ArtistEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Artist\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nAn [artist](https://musicbrainz.org/doc/Artist) is generally a\nmusician, group of musicians, or other music professional (like a producer or\nengineer). Occasionally, it can also be a non-musical person (like a\nphotographer, an illustrator, or a poet whose writings are set to music), or\neven a fictional character.\n\"\"\"\ntype Artist implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official name of the entity.\"\"\"\n  name: String\n\n  \"\"\"\n  The string to use for the purpose of ordering by name (for\n  example, by moving articles like \u2018the\u2019 to the end or a person\u2019s last name to\n  the front).\n  \"\"\"\n  sortName: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The country with which an artist is primarily identified. It\n  is often, but not always, its birth/formation country.\n  \"\"\"\n  country: String\n\n  \"\"\"\n  The area with which an artist is primarily identified. It\n  is often, but not always, its birth/formation country.\n  \"\"\"\n  area: Area\n\n  \"\"\"\n  The area in which an artist began their career (or where\n  they were born, if the artist is a person).\n  \"\"\"\n  beginArea: Area\n\n  \"\"\"\n  The area in which an artist ended their career (or where\n  they died, if the artist is a person).\n  \"\"\"\n  endArea: Area\n\n  \"\"\"\n  The begin and end dates of the entity\u2019s existence. Its exact\n  meaning depends on the type of entity.\n  \"\"\"\n  lifeSpan: LifeSpan\n\n  \"\"\"\n  Whether a person or character identifies as male, female, or\n  neither. Groups do not have genders.\n  \"\"\"\n  gender: String\n\n  \"\"\"\n  The MBID associated with the value of the `gender`\n  field.\n  \"\"\"\n  genderID: MBID\n\n  \"\"\"Whether an artist is a person, a group, or something else.\"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"\n  List of [Interested Parties Information](https://musicbrainz.org/doc/IPI)\n  (IPI) codes for the artist.\n  \"\"\"\n  ipis: [IPI]\n\n  \"\"\"\n  List of [International Standard Name Identifier](https://musicbrainz.org/doc/ISNI)\n  (ISNI) codes for the artist.\n  \"\"\"\n  isnis: [ISNI]\n\n  \"\"\"A list of recordings linked to this entity.\"\"\"\n  recordings(after: String, first: Int): RecordingConnection\n\n  \"\"\"A list of releases linked to this entity.\"\"\"\n  releases(\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"Filter by one or more release statuses.\"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"A list of release groups linked to this entity.\"\"\"\n  releaseGroups(\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"A list of works linked to this entity.\"\"\"\n  works(after: String, first: Int): WorkConnection\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"The rating users have given to this entity.\"\"\"\n  rating: Rating\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n\n  \"\"\"\n  Images of the artist from [fanart.tv](https://fanart.tv/).\n  This field is provided by the fanart.tv extension.\n  \"\"\"\n  fanArt: FanArtArtist\n\n  \"\"\"\n  Artist images found at MediaWiki URLs in the artist\u2019s URL relationships.\n  Defaults to URL relationships with the type \u201cimage\u201d.\n  This field is provided by the MediaWiki extension.\n  \"\"\"\n  mediaWikiImages(\n    \"\"\"\n    The type of URL relationship that will be selected to find images. See\n    the possible [Artist-URL relationship types](https://musicbrainz.org/relationships/artist-url).\n    \"\"\"\n    type: String = \"image\"\n  ): [MediaWikiImage]!\n\n  \"\"\"\n  Data about the artist from [TheAudioDB](http://www.theaudiodb.com/), a good\n  source of biographical information and images.\n  This field is provided by TheAudioDB extension.\n  \"\"\"\n  theAudioDB: TheAudioDBArtist\n\n  \"\"\"Information about the artist on Discogs.\"\"\"\n  discogs: DiscogsArtist\n\n  \"\"\"\n  Data about the artist from [Last.fm](https://www.last.fm/), a good source\n  for measuring popularity via listener and play counts. This field is\n  provided by the Last.fm extension.\n  \"\"\"\n  lastFM: LastFMArtist\n\n  \"\"\"The artist\u2019s entry on Spotify.\"\"\"\n  spotify: SpotifyArtist\n}\n\n\"\"\"\nFields indicating the begin and end date of an entity\u2019s\nlifetime, including whether it has ended (even if the date is unknown).\n\"\"\"\ntype LifeSpan {\n  \"\"\"The start date of the entity\u2019s life span.\"\"\"\n  begin: Date\n\n  \"\"\"The end date of the entity\u2019s life span.\"\"\"\n  end: Date\n\n  \"\"\"Whether or not the entity\u2019s life span has ended.\"\"\"\n  ended: Boolean\n}\n\n\"\"\"Year, month (optional), and day (optional) in YYYY-MM-DD format.\"\"\"\nscalar Date\n\n\"\"\"\nAn [Interested Parties Information](https://musicbrainz.org/doc/IPI)\n(IPI) code is an identifying number assigned by the CISAC database for musical\nrights management.\n\"\"\"\nscalar IPI\n\n\"\"\"\nThe [International Standard Name Identifier](https://musicbrainz.org/doc/ISNI)\n(ISNI) is an ISO standard for uniquely identifying the public identities of\ncontributors to media content.\n\"\"\"\nscalar ISNI\n\n\"\"\"A connection to a list of items.\"\"\"\ntype RecordingConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [RecordingEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Recording]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype RecordingEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Recording\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nA [recording](https://musicbrainz.org/doc/Recording) is an\nentity in MusicBrainz which can be linked to tracks on releases. Each track must\nalways be associated with a single recording, but a recording can be linked to\nany number of tracks.\n\nA recording represents distinct audio that has been used to produce at least one\nreleased track through copying or mastering. A recording itself is never\nproduced solely through copying or mastering.\n\nGenerally, the audio represented by a recording corresponds to the audio at a\nstage in the production process before any final mastering but after any editing\nor mixing.\n\"\"\"\ntype Recording implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official title of the entity.\"\"\"\n  title: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"The main credited artist(s).\"\"\"\n  artistCredit: [ArtistCredit] @deprecated(reason: \"The `artistCredit` field has been renamed to\\n`artistCredits`, since it is a list of credits and is referred to in the\\nplural form throughout the MusicBrainz documentation. This field is deprecated\\nand will be removed in a major release in the future. Use the equivalent\\n`artistCredits` field.\")\n\n  \"\"\"The main credited artist(s).\"\"\"\n  artistCredits: [ArtistCredit]\n\n  \"\"\"\n  A list of [International Standard Recording Codes](https://musicbrainz.org/doc/ISRC)\n  (ISRCs) for this recording.\n  \"\"\"\n  isrcs: [ISRC]\n\n  \"\"\"\n  An approximation to the length of the recording, calculated\n  from the lengths of the tracks using it.\n  \"\"\"\n  length: Duration\n\n  \"\"\"Whether this is a video recording.\"\"\"\n  video: Boolean\n\n  \"\"\"A list of artists linked to this entity.\"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"A list of releases linked to this entity.\"\"\"\n  releases(\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"Filter by one or more release statuses.\"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"The rating users have given to this entity.\"\"\"\n  rating: Rating\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n\n  \"\"\"\n  Data about the recording from [TheAudioDB](http://www.theaudiodb.com/).\n  This field is provided by TheAudioDB extension.\n  \"\"\"\n  theAudioDB: TheAudioDBTrack\n\n  \"\"\"\n  Data about the recording from [Last.fm](https://www.last.fm/), a good\n  source for measuring popularity via listener and play counts. This field\n  is provided by the Last.fm extension.\n  \"\"\"\n  lastFM: LastFMTrack\n\n  \"\"\"The recording\u2019s entry on Spotify.\"\"\"\n  spotify(\n    \"\"\"\n    The strategies to use to match the recording with a Spotify track, in\n    preferential order.\n    \"\"\"\n    strategy: [SpotifyMatchStrategy!] = []\n  ): SpotifyTrack\n}\n\n\"\"\"\n[Artist credits](https://musicbrainz.org/doc/Artist_Credits)\nindicate who is the main credited artist (or artists) for releases, release\ngroups, tracks, and recordings, and how they are credited. They consist of\nartists, with (optionally) their names as credited in the specific release,\ntrack, etc., and join phrases between them.\n\"\"\"\ntype ArtistCredit {\n  \"\"\"\n  The entity representing the artist referenced in the\n  credits.\n  \"\"\"\n  artist: Artist\n\n  \"\"\"\n  The name of the artist as credited in the specific release,\n  track, etc.\n  \"\"\"\n  name: String\n\n  \"\"\"\n  Join phrases might include words and/or punctuation to\n  separate artist names as they appear on the release, track, etc.\n  \"\"\"\n  joinPhrase: String\n}\n\n\"\"\"\nThe [International Standard Recording Code](https://musicbrainz.org/doc/ISRC)\n(ISRC) is an identification system for audio and music video recordings. It is\nstandarized by the [IFPI](http://www.ifpi.org/) in ISO 3901:2001 and used by\nIFPI members to assign a unique identifier to every distinct sound recording\nthey release. An ISRC identifies a particular [sound recording](https://musicbrainz.org/doc/Recording),\nnot the song itself. Therefore, different recordings, edits, remixes and\nremasters of the same song will each be assigned their own ISRC. However, note\nthat same recording should carry the same ISRC in all countries/territories.\nSongs are identified by analogous [International Standard Musical Work Codes](https://musicbrainz.org/doc/ISWC)\n(ISWCs).\n\"\"\"\nscalar ISRC\n\n\"\"\"A length of time, in milliseconds.\"\"\"\nscalar Duration\n\n\"\"\"\nA type used to describe release groups, e.g. album, single, EP,\netc.\n\"\"\"\nenum ReleaseGroupType {\n  \"\"\"\n  An album, perhaps better defined as a \u201cLong Play\u201d (LP)\n  release, generally consists of previously unreleased material (unless this type\n  is combined with secondary types which change that, such as \u201cCompilation\u201d). This\n  includes album re-issues, with or without bonus tracks.\n  \"\"\"\n  ALBUM\n\n  \"\"\"\n  A single typically has one main song and possibly a handful\n  of additional tracks or remixes of the main track. A single is usually named\n  after its main song.\n  \"\"\"\n  SINGLE\n\n  \"\"\"\n  An EP is a so-called \u201cExtended Play\u201d release and often\n  contains the letters EP in the title. Generally an EP will be shorter than a\n  full length release (an LP or \u201cLong Play\u201d) and the tracks are usually exclusive\n  to the EP, in other words the tracks don\u2019t come from a previously issued\n  release. EP is fairly difficult to define; usually it should only be assumed\n  that a release is an EP if the artist defines it as such.\n  \"\"\"\n  EP\n\n  \"\"\"Any release that does not fit any of the other categories.\"\"\"\n  OTHER\n\n  \"\"\"\n  An episodic release that was originally broadcast via radio,\n  television, or the Internet, including podcasts.\n  \"\"\"\n  BROADCAST\n\n  \"\"\"\n  A compilation is a collection of previously released tracks\n  by one or more artists.\n  \"\"\"\n  COMPILATION\n\n  \"\"\"\n  A soundtrack is the musical score to a movie, TV series,\n  stage show, computer game, etc.\n  \"\"\"\n  SOUNDTRACK\n\n  \"\"\"A non-music spoken word release.\"\"\"\n  SPOKENWORD\n\n  \"\"\"\n  An interview release contains an interview, generally with\n  an artist.\n  \"\"\"\n  INTERVIEW\n\n  \"\"\"An audiobook is a book read by a narrator without music.\"\"\"\n  AUDIOBOOK\n\n  \"\"\"A release that was recorded live.\"\"\"\n  LIVE\n\n  \"\"\"\n  A release that was (re)mixed from previously released\n  material.\n  \"\"\"\n  REMIX\n\n  \"\"\"\n  A DJ-mix is a sequence of several recordings played one\n  after the other, each one modified so that they blend together into a continuous\n  flow of music. A DJ mix release requires that the recordings be modified in some\n  manner, and the DJ who does this modification is usually (although not always)\n  credited in a fairly prominent way.\n  \"\"\"\n  DJMIX\n\n  \"\"\"\n  Promotional in nature (but not necessarily free), mixtapes\n  and street albums are often released by artists to promote new artists, or\n  upcoming studio albums by prominent artists. They are also sometimes used to\n  keep fans\u2019 attention between studio releases and are most common in rap & hip\n  hop genres. They are often not sanctioned by the artist\u2019s label, may lack proper\n  sample or song clearances and vary widely in production and recording quality.\n  While mixtapes are generally DJ-mixed, they are distinct from commercial DJ\n  mixes (which are usually deemed compilations) and are defined by having a\n  significant proportion of new material, including original production or\n  original vocals over top of other artists\u2019 instrumentals. They are distinct from\n  demos in that they are designed for release directly to the public and fans, not\n  to labels.\n  \"\"\"\n  MIXTAPE\n\n  \"\"\"\n  A release that was recorded for limited circulation or\n  reference use rather than for general public release.\n  \"\"\"\n  DEMO\n\n  \"\"\"A non-album track (special case).\"\"\"\n  NAT\n}\n\n\"\"\"\nA type used to describe the status of releases, e.g. official,\nbootleg, etc.\n\"\"\"\nenum ReleaseStatus {\n  \"\"\"\n  Any release officially sanctioned by the artist and/or their\n  record company. (Most releases will fit into this category.)\n  \"\"\"\n  OFFICIAL\n\n  \"\"\"\n  A giveaway release or a release intended to promote an\n  upcoming official release, e.g. prerelease albums or releases included with a\n  magazine.\n  \"\"\"\n  PROMOTION\n\n  \"\"\"\n  An unofficial/underground release that was not sanctioned by\n  the artist and/or the record company.\n  \"\"\"\n  BOOTLEG\n\n  \"\"\"\n  A pseudo-release is a duplicate release for\n  translation/transliteration purposes.\n  \"\"\"\n  PSEUDORELEASE\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ReleaseConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ReleaseEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Release]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ReleaseEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Release\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nA [release](https://musicbrainz.org/doc/Release) represents the\nunique release (i.e. issuing) of a product on a specific date with specific\nrelease information such as the country, label, barcode, packaging, etc. If you\nwalk into a store and purchase an album or single, they\u2019re each represented in\nMusicBrainz as one release.\n\"\"\"\ntype Release implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official title of the entity.\"\"\"\n  title: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"The main credited artist(s).\"\"\"\n  artistCredit: [ArtistCredit] @deprecated(reason: \"The `artistCredit` field has been renamed to\\n`artistCredits`, since it is a list of credits and is referred to in the\\nplural form throughout the MusicBrainz documentation. This field is deprecated\\nand will be removed in a major release in the future. Use the equivalent\\n`artistCredits` field.\")\n\n  \"\"\"The main credited artist(s).\"\"\"\n  artistCredits: [ArtistCredit]\n\n  \"\"\"The release events for this release.\"\"\"\n  releaseEvents: [ReleaseEvent]\n\n  \"\"\"\n  The [release date](https://musicbrainz.org/doc/Release/Date)\n  is the date in which a release was made available through some sort of\n  distribution mechanism.\n  \"\"\"\n  date: Date\n\n  \"\"\"The country in which the release was issued.\"\"\"\n  country: String\n\n  \"\"\"\n  The [Amazon Standard Identification Number](https://musicbrainz.org/doc/ASIN)\n  of the release.\n  \"\"\"\n  asin: ASIN\n\n  \"\"\"\n  The [barcode](https://en.wikipedia.org/wiki/Barcode), if the\n  release has one. The most common types found on releases are 12-digit\n  [UPCs](https://en.wikipedia.org/wiki/Universal_Product_Code) and 13-digit\n  [EANs](https://en.wikipedia.org/wiki/International_Article_Number).\n  \"\"\"\n  barcode: String\n\n  \"\"\"The status describes how \u201cofficial\u201d a release is.\"\"\"\n  status: ReleaseStatus\n\n  \"\"\"\n  The MBID associated with the value of the `status`\n  field.\n  \"\"\"\n  statusID: MBID\n\n  \"\"\"\n  The physical packaging that accompanies the release. See\n  the [list of packaging](https://musicbrainz.org/doc/Release/Packaging) for more\n  information.\n  \"\"\"\n  packaging: String\n\n  \"\"\"\n  The MBID associated with the value of the `packaging`\n  field.\n  \"\"\"\n  packagingID: MBID\n\n  \"\"\"\n  Data quality indicates how good the data for a release is.\n  It is not a mark of how good or bad the music itself is \u2013 for that, use\n  [ratings](https://musicbrainz.org/doc/Rating_System).\n  \"\"\"\n  quality: String\n\n  \"\"\"The media on which the release was distributed.\"\"\"\n  media: [Medium]\n\n  \"\"\"A list of artists linked to this entity.\"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"A list of labels linked to this entity.\"\"\"\n  labels(after: String, first: Int): LabelConnection\n\n  \"\"\"A list of recordings linked to this entity.\"\"\"\n  recordings(after: String, first: Int): RecordingConnection\n\n  \"\"\"A list of release groups linked to this entity.\"\"\"\n  releaseGroups(\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n\n  \"\"\"\n  An object containing a list and summary of the cover art images that are\n  present for this release from the [Cover Art Archive](https://musicbrainz.org/doc/Cover_Art_Archive).\n  This field is provided by the Cover Art Archive extension.\n  \"\"\"\n  coverArtArchive: CoverArtArchiveRelease\n\n  \"\"\"Information about the release on Discogs.\"\"\"\n  discogs: DiscogsRelease\n\n  \"\"\"\n  Data about the release from [Last.fm](https://www.last.fm/), a good source\n  for measuring popularity via listener and play counts. This field is\n  provided by the Last.fm extension.\n  \"\"\"\n  lastFM: LastFMAlbum\n\n  \"\"\"The release\u2019s entry on Spotify.\"\"\"\n  spotify(\n    \"\"\"\n    The strategies to use to match the release with a Spotify album, in\n    preferential order.\n    \"\"\"\n    strategy: [SpotifyMatchStrategy!] = []\n  ): SpotifyAlbum\n}\n\n\"\"\"\nThe date on which a release was issued in a country/region with\na particular label, catalog number, barcode, and format.\n\"\"\"\ntype ReleaseEvent {\n  area: Area\n  date: Date\n}\n\n\"\"\"\nAn [Amazon Standard Identification Number](https://musicbrainz.org/doc/ASIN)\n(ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com\nand its partners for product identification within the Amazon organization.\n\"\"\"\nscalar ASIN\n\n\"\"\"\nA medium is the actual physical medium the audio content is\nstored upon. This means that each CD in a multi-disc release will be entered as\nseparate mediums within the release, and that both sides of a vinyl record or\ncassette will exist on one medium. Mediums have a format (e.g. CD, DVD, vinyl,\ncassette) and can optionally also have a title.\n\"\"\"\ntype Medium {\n  \"\"\"The title of this particular medium.\"\"\"\n  title: String\n\n  \"\"\"\n  The [format](https://musicbrainz.org/doc/Release/Format) of\n  the medium (e.g. CD, DVD, vinyl, cassette).\n  \"\"\"\n  format: String\n\n  \"\"\"\n  The MBID associated with the value of the `format`\n  field.\n  \"\"\"\n  formatID: MBID\n\n  \"\"\"\n  The order of this medium in the release (for example, in a\n  multi-disc release).\n  \"\"\"\n  position: Int\n\n  \"\"\"The number of audio tracks on this medium.\"\"\"\n  trackCount: Int\n\n  \"\"\"A list of physical discs and their disc IDs for this medium.\"\"\"\n  discs: [Disc]\n\n  \"\"\"The list of tracks on the given media.\"\"\"\n  tracks: [Track]\n}\n\n\"\"\"\nInformation about the physical CD and releases associated with a\nparticular [disc ID](https://musicbrainz.org/doc/Disc_ID).\n\"\"\"\ntype Disc implements Node {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The [disc ID](https://musicbrainz.org/doc/Disc_ID) of this disc.\"\"\"\n  discID: DiscID!\n\n  \"\"\"The number of offsets (tracks) on the disc.\"\"\"\n  offsetCount: Int!\n\n  \"\"\"The sector offset of each track on the disc.\"\"\"\n  offsets: [Int]\n\n  \"\"\"The sector offset of the lead-out (the end of the disc).\"\"\"\n  sectors: Int!\n\n  \"\"\"The list of releases linked to this disc ID.\"\"\"\n  releases(after: String, first: Int): ReleaseConnection\n}\n\n\"\"\"\n[Disc ID](https://musicbrainz.org/doc/Disc_ID) is the code\nnumber which MusicBrainz uses to link a physical CD to a [release](https://musicbrainz.org/doc/Release)\nlisting.\n\nA release may have any number of disc IDs, and a disc ID may be linked to\nmultiple releases. This is because disc ID calculation involves a hash of the\nframe offsets of the CD tracks.\n\nDifferent pressing of a CD often have slightly different frame offsets, and\nhence different disc IDs.\n\nConversely, two different CDs may happen to have exactly the same set of frame\noffsets and hence the same disc ID.\n\"\"\"\nscalar DiscID\n\n\"\"\"\nA track is the way a recording is represented on a particular\n  release (or, more exactly, on a particular medium). Every track has a title\n  (see the guidelines for titles) and is credited to one or more artists.\n\"\"\"\ntype Track implements Entity {\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official title of the entity.\"\"\"\n  title: String\n\n  \"\"\"\n  The track\u2019s position on the overall release (including all\n  tracks from all discs).\n  \"\"\"\n  position: Int\n\n  \"\"\"\n  The track number, which may include information about the\n  disc or side it appears on, e.g. \u201cA1\u201d or \u201cB3\u201d.\n  \"\"\"\n  number: String\n\n  \"\"\"The length of the track.\"\"\"\n  length: Duration\n\n  \"\"\"The recording that appears on the track.\"\"\"\n  recording: Recording\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LabelConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LabelEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Label]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LabelEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Label\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\n[Labels](https://musicbrainz.org/doc/Label) represent mostly\n(but not only) imprints. To a lesser extent, a label entity may be created to\nrepresent a record company.\n\"\"\"\ntype Label implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official name of the entity.\"\"\"\n  name: String\n\n  \"\"\"\n  The string to use for the purpose of ordering by name (for\n  example, by moving articles like \u2018the\u2019 to the end or a person\u2019s last name to\n  the front).\n  \"\"\"\n  sortName: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"The country of origin for the label.\"\"\"\n  country: String\n\n  \"\"\"The area in which the label is based.\"\"\"\n  area: Area\n\n  \"\"\"\n  The begin and end dates of the entity\u2019s existence. Its exact\n  meaning depends on the type of entity.\n  \"\"\"\n  lifeSpan: LifeSpan\n\n  \"\"\"\n  The [\u201cLC\u201d code](https://musicbrainz.org/doc/Label/Label_Code)\n  of the label.\n  \"\"\"\n  labelCode: Int\n\n  \"\"\"\n  List of [Interested Parties Information](https://musicbrainz.org/doc/IPI)\n  codes for the label.\n  \"\"\"\n  ipis: [IPI]\n\n  \"\"\"\n  A type describing the main activity of the label, e.g.\n  imprint, production, distributor, rights society, etc.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"A list of releases linked to this entity.\"\"\"\n  releases(\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"Filter by one or more release statuses.\"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"The rating users have given to this entity.\"\"\"\n  rating: Rating\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n\n  \"\"\"\n  Images of the label from [fanart.tv](https://fanart.tv/).\n  This field is provided by the fanart.tv extension.\n  \"\"\"\n  fanArt: FanArtLabel\n\n  \"\"\"\n  Label images found at MediaWiki URLs in the label\u2019s URL relationships.\n  Defaults to URL relationships with the type \u201clogo\u201d.\n  This field is provided by the MediaWiki extension.\n  \"\"\"\n  mediaWikiImages(\n    \"\"\"\n    The type of URL relationship that will be selected to find images. See the\n    possible [Label-URL relationship types](https://musicbrainz.org/relationships/label-url).\n    \"\"\"\n    type: String = \"logo\"\n  ): [MediaWikiImage]!\n\n  \"\"\"Information about the label on Discogs.\"\"\"\n  discogs: DiscogsLabel\n}\n\n\"\"\"Lists of entity relationships for each entity type.\"\"\"\ntype Relationships {\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  areas(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  artists(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  events(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  instruments(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  labels(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  places(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  recordings(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  releases(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  releaseGroups(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  series(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  urls(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n\n  \"\"\"A list of relationships between these two entity types.\"\"\"\n  works(\n    \"\"\"Filter by the relationship direction.\"\"\"\n    direction: String\n\n    \"\"\"Filter by the relationship type.\"\"\"\n    type: String\n\n    \"\"\"\n    The MBID associated with the value of the `type`\n    field.\n    \"\"\"\n    typeID: MBID\n    after: String\n    first: Int\n    before: String\n    last: Int\n  ): RelationshipConnection\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype RelationshipConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [RelationshipEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Relationship]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype RelationshipEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Relationship\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\n[Relationships](https://musicbrainz.org/doc/Relationships) are a\nway to represent all the different ways in which entities are connected to each\nother and to URLs outside MusicBrainz.\n\"\"\"\ntype Relationship {\n  \"\"\"The target entity.\"\"\"\n  target: Entity!\n\n  \"\"\"The direction of the relationship.\"\"\"\n  direction: String!\n\n  \"\"\"The type of entity on the receiving end of the relationship.\"\"\"\n  targetType: String!\n\n  \"\"\"\n  How the source entity was actually credited, if different\n  from its main (performance) name.\n  \"\"\"\n  sourceCredit: String\n\n  \"\"\"\n  How the target entity was actually credited, if different\n  from its main (performance) name.\n  \"\"\"\n  targetCredit: String\n\n  \"\"\"The date on which the relationship became applicable.\"\"\"\n  begin: Date\n\n  \"\"\"The date on which the relationship became no longer applicable.\"\"\"\n  end: Date\n\n  \"\"\"Whether the relationship still applies.\"\"\"\n  ended: Boolean\n\n  \"\"\"\n  Attributes which modify the relationship. There is a [list\n  of all attributes](https://musicbrainz.org/relationship-attributes), but the\n  attributes which are available, and how they should be used, depends on the\n  relationship type.\n  \"\"\"\n  attributes: [String]\n\n  \"\"\"The type of relationship.\"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype CollectionConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [CollectionEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Collection]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype CollectionEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Collection\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\n[Collections](https://musicbrainz.org/doc/Collections) are\nlists of entities that users can create.\n\"\"\"\ntype Collection implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official name of the entity.\"\"\"\n  name: String\n\n  \"\"\"The username of the editor who created the collection.\"\"\"\n  editor: String!\n\n  \"\"\"The type of entity listed in the collection.\"\"\"\n  entityType: String!\n\n  \"\"\"The type of collection.\"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"The list of areas found in this collection.\"\"\"\n  areas(after: String, first: Int): AreaConnection\n\n  \"\"\"The list of artists found in this collection.\"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"The list of events found in this collection.\"\"\"\n  events(after: String, first: Int): EventConnection\n\n  \"\"\"The list of instruments found in this collection.\"\"\"\n  instruments(after: String, first: Int): InstrumentConnection\n\n  \"\"\"The list of labels found in this collection.\"\"\"\n  labels(after: String, first: Int): LabelConnection\n\n  \"\"\"The list of places found in this collection.\"\"\"\n  places(after: String, first: Int): PlaceConnection\n\n  \"\"\"The list of recordings found in this collection.\"\"\"\n  recordings(after: String, first: Int): RecordingConnection\n\n  \"\"\"The list of releases found in this collection.\"\"\"\n  releases(\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"Filter by one or more release statuses.\"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"The list of release groups found in this collection.\"\"\"\n  releaseGroups(\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"The list of series found in this collection.\"\"\"\n  series(after: String, first: Int): SeriesConnection\n\n  \"\"\"The list of works found in this collection.\"\"\"\n  works(after: String, first: Int): WorkConnection\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype AreaConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [AreaEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Area]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype AreaEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Area\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype EventConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [EventEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Event]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype EventEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Event\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nAn [event](https://musicbrainz.org/doc/Event) refers to an\norganised event which people can attend, and is relevant to MusicBrainz.\nGenerally this means live performances, like concerts and festivals.\n\"\"\"\ntype Event implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official name of the entity.\"\"\"\n  name: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The begin and end dates of the entity\u2019s existence. Its exact\n  meaning depends on the type of entity.\n  \"\"\"\n  lifeSpan: LifeSpan\n\n  \"\"\"The start time of the event.\"\"\"\n  time: Time\n\n  \"\"\"Whether or not the event took place.\"\"\"\n  cancelled: Boolean\n\n  \"\"\"\n  A list of songs performed, optionally including links to\n  artists and works. See the [setlist documentation](https://musicbrainz.org/doc/Event/Setlist)\n  for syntax and examples.\n  \"\"\"\n  setlist: String\n\n  \"\"\"What kind of event the event is, e.g. concert, festival, etc.\"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"The rating users have given to this entity.\"\"\"\n  rating: Rating\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"A time of day, in 24-hour hh:mm notation.\"\"\"\nscalar Time\n\n\"\"\"\n[Ratings](https://musicbrainz.org/doc/Rating_System) allow users\nto rate MusicBrainz entities. User may assign a value between 1 and 5; these\nvalues are then aggregated by the server to compute an average community rating\nfor the entity.\n\"\"\"\ntype Rating {\n  \"\"\"The number of votes that have contributed to the rating.\"\"\"\n  voteCount: Int!\n\n  \"\"\"The average rating value based on the aggregated votes.\"\"\"\n  value: Float\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype TagConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [TagEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Tag]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype TagEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Tag\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\n[Tags](https://musicbrainz.org/tags) are a way to mark entities\nwith extra information \u2013 for example, the genres that apply to an artist,\nrelease, or recording.\n\"\"\"\ntype Tag {\n  \"\"\"The tag label.\"\"\"\n  name: String!\n\n  \"\"\"How many times this tag has been applied to the entity.\"\"\"\n  count: Int\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype InstrumentConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [InstrumentEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Instrument]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype InstrumentEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Instrument\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\n[Instruments](https://musicbrainz.org/doc/Instrument) are\ndevices created or adapted to make musical sounds. Instruments are primarily\nused in relationships between two other entities.\n\"\"\"\ntype Instrument implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official name of the entity.\"\"\"\n  name: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  A brief description of the main characteristics of the\n  instrument.\n  \"\"\"\n  description: String\n\n  \"\"\"\n  The type categorises the instrument by the way the sound is\n  created, similar to the [Hornbostel-Sachs](https://en.wikipedia.org/wiki/Hornbostel%E2%80%93Sachs)\n  classification.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n\n  \"\"\"\n  Instrument images found at MediaWiki URLs in the instrument\u2019s URL\n  relationships. Defaults to URL relationships with the type \u201cimage\u201d.\n  This field is provided by the MediaWiki extension.\n  \"\"\"\n  mediaWikiImages(\n    \"\"\"\n    The type of URL relationship that will be selected to find images. See the\n    possible [Instrument-URL relationship types](https://musicbrainz.org/relationships/instrument-url).\n    \"\"\"\n    type: String = \"image\"\n  ): [MediaWikiImage]!\n}\n\n\"\"\"\nAn object describing various properties of an image stored on a MediaWiki\nserver. The information comes the [MediaWiki imageinfo API](https://www.mediawiki.org/wiki/API:Imageinfo).\n\"\"\"\ntype MediaWikiImage {\n  \"\"\"The URL of the actual image file.\"\"\"\n  url: URLString!\n\n  \"\"\"The URL of the wiki page describing the image.\"\"\"\n  descriptionURL: URLString\n\n  \"\"\"The user who uploaded the file.\"\"\"\n  user: String\n\n  \"\"\"The size of the file in bytes.\"\"\"\n  size: Int\n\n  \"\"\"The pixel width of the image.\"\"\"\n  width: Int\n\n  \"\"\"The pixel height of the image.\"\"\"\n  height: Int\n\n  \"\"\"The canonical title of the file.\"\"\"\n  canonicalTitle: String\n\n  \"\"\"The image title, brief description, or file name.\"\"\"\n  objectName: String\n\n  \"\"\"A description of the image, potentially containing HTML.\"\"\"\n  descriptionHTML: String\n\n  \"\"\"\n  The original date of creation of the image. May be a description rather than\n  a parseable timestamp, and may contain HTML.\n  \"\"\"\n  originalDateTimeHTML: String\n\n  \"\"\"A list of the categories of the image.\"\"\"\n  categories: [String]!\n\n  \"\"\"The name of the image author, potentially containing HTML.\"\"\"\n  artistHTML: String\n\n  \"\"\"The source of the image, potentially containing HTML.\"\"\"\n  creditHTML: String\n\n  \"\"\"A short human-readable license name.\"\"\"\n  licenseShortName: String\n\n  \"\"\"A web address where the license is described.\"\"\"\n  licenseURL: URLString\n\n  \"\"\"The full list of values in the `extmetadata` field.\"\"\"\n  metadata: [MediaWikiImageMetadata]!\n}\n\n\"\"\"A web address.\"\"\"\nscalar URLString\n\n\"\"\"An entry in the `extmetadata` field of a MediaWiki image file.\"\"\"\ntype MediaWikiImageMetadata {\n  \"\"\"The name of the metadata field.\"\"\"\n  name: String!\n\n  \"\"\"\n  The value of the metadata field. All values will be converted to strings.\n  \"\"\"\n  value: String\n\n  \"\"\"The source of the value.\"\"\"\n  source: String\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PlaceConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PlaceEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Place]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PlaceEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Place\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nA [place](https://musicbrainz.org/doc/Place) is a venue, studio,\nor other place where music is performed, recorded, engineered, etc.\n\"\"\"\ntype Place implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official name of the entity.\"\"\"\n  name: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  The address describes the location of the place using the\n  standard addressing format for the country it is located in.\n  \"\"\"\n  address: String\n\n  \"\"\"\n  The area entity representing the area, such as the city, in\n  which the place is located.\n  \"\"\"\n  area: Area\n\n  \"\"\"The geographic coordinates of the place.\"\"\"\n  coordinates: Coordinates\n\n  \"\"\"\n  The begin and end dates of the entity\u2019s existence. Its exact\n  meaning depends on the type of entity.\n  \"\"\"\n  lifeSpan: LifeSpan\n\n  \"\"\"\n  The type categorises the place based on its primary\n  function.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"A list of events linked to this entity.\"\"\"\n  events(after: String, first: Int): EventConnection\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n\n  \"\"\"\n  Place images found at MediaWiki URLs in the place\u2019s URL relationships.\n  Defaults to URL relationships with the type \u201cimage\u201d.\n  This field is provided by the MediaWiki extension.\n  \"\"\"\n  mediaWikiImages(\n    \"\"\"\n    The type of URL relationship that will be selected to find images. See the\n    possible [Place-URL relationship types](https://musicbrainz.org/relationships/place-url).\n    \"\"\"\n    type: String = \"image\"\n  ): [MediaWikiImage]!\n}\n\n\"\"\"Geographic coordinates described with latitude and longitude.\"\"\"\ntype Coordinates {\n  \"\"\"The north\u2013south position of a point on the Earth\u2019s surface.\"\"\"\n  latitude: Degrees\n\n  \"\"\"The east\u2013west position of a point on the Earth\u2019s surface.\"\"\"\n  longitude: Degrees\n}\n\n\"\"\"Decimal degrees, used for latitude and longitude.\"\"\"\nscalar Degrees\n\n\"\"\"A connection to a list of items.\"\"\"\ntype ReleaseGroupConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [ReleaseGroupEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [ReleaseGroup]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype ReleaseGroupEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: ReleaseGroup\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nA [release group](https://musicbrainz.org/doc/Release_Group) is\nused to group several different releases into a single logical entity. Every\nrelease belongs to one, and only one release group.\n\nBoth release groups and releases are \u201calbums\u201d in a general sense, but with an\nimportant difference: a release is something you can buy as media such as a CD\nor a vinyl record, while a release group embraces the overall concept of an\nalbum \u2013 it doesn\u2019t matter how many CDs or editions/versions it had.\n\"\"\"\ntype ReleaseGroup implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official title of the entity.\"\"\"\n  title: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"The main credited artist(s).\"\"\"\n  artistCredit: [ArtistCredit] @deprecated(reason: \"The `artistCredit` field has been renamed to\\n`artistCredits`, since it is a list of credits and is referred to in the\\nplural form throughout the MusicBrainz documentation. This field is deprecated\\nand will be removed in a major release in the future. Use the equivalent\\n`artistCredits` field.\")\n\n  \"\"\"The main credited artist(s).\"\"\"\n  artistCredits: [ArtistCredit]\n\n  \"\"\"The date of the earliest release in the group.\"\"\"\n  firstReleaseDate: Date\n\n  \"\"\"\n  The [type](https://musicbrainz.org/doc/Release_Group/Type)\n  of a release group describes what kind of releases the release group represents,\n  e.g. album, single, soundtrack, compilation, etc. A release group can have a\n  \u201cmain\u201d type and an unspecified number of additional types.\n  \"\"\"\n  primaryType: ReleaseGroupType\n\n  \"\"\"\n  The MBID associated with the value of the `primaryType`\n  field.\n  \"\"\"\n  primaryTypeID: MBID\n\n  \"\"\"\n  Additional [types](https://musicbrainz.org/doc/Release_Group/Type)\n  that apply to this release group.\n  \"\"\"\n  secondaryTypes: [ReleaseGroupType]\n\n  \"\"\"\n  The MBIDs associated with the values of the `secondaryTypes`\n  field.\n  \"\"\"\n  secondaryTypeIDs: [MBID]\n\n  \"\"\"A list of artists linked to this entity.\"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"A list of releases linked to this entity.\"\"\"\n  releases(\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"Filter by one or more release statuses.\"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"The rating users have given to this entity.\"\"\"\n  rating: Rating\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n\n  \"\"\"\n  The cover art for a release in the release group, obtained from the\n  [Cover Art Archive](https://musicbrainz.org/doc/Cover_Art_Archive). A\n  release in the release group will be chosen as representative of the release\n  group.\n  This field is provided by the Cover Art Archive extension.\n  \"\"\"\n  coverArtArchive: CoverArtArchiveRelease\n\n  \"\"\"\n  Images of the release group from [fanart.tv](https://fanart.tv/).\n  This field is provided by the fanart.tv extension.\n  \"\"\"\n  fanArt: FanArtAlbum\n\n  \"\"\"\n  Data about the release group from [TheAudioDB](http://www.theaudiodb.com/),\n  a good source of descriptive information, reviews, and images.\n  This field is provided by TheAudioDB extension.\n  \"\"\"\n  theAudioDB: TheAudioDBAlbum\n\n  \"\"\"Information about the release group on Discogs.\"\"\"\n  discogs: DiscogsMaster\n}\n\n\"\"\"\nAn object containing a list of the cover art images for a release obtained\nfrom the [Cover Art Archive](https://musicbrainz.org/doc/Cover_Art_Archive),\nas well as a summary of what artwork is available.\n\"\"\"\ntype CoverArtArchiveRelease {\n  \"\"\"\n  The URL of an image depicting the album cover or \u201cmain front\u201d of the release,\n  i.e. the front of the packaging of the audio recording (or in the case of a\n  digital release, the image associated with it in a digital media store).\n  \n  In the MusicBrainz schema, this field is a Boolean value indicating the\n  presence of a front image, whereas here the value is the URL for the image\n  itself if one exists. You can check for null if you just want to determine\n  the presence of an image.\n  \"\"\"\n  front(\n    \"\"\"\n    The size of the image to retrieve. By default, the returned image will\n    have its full original dimensions, but certain thumbnail sizes may be\n    retrieved as well.\n    \"\"\"\n    size: CoverArtArchiveImageSize = null\n  ): URLString\n\n  \"\"\"\n  The URL of an image depicting the \u201cmain back\u201d of the release, i.e. the back\n  of the packaging of the audio recording.\n  \n  In the MusicBrainz schema, this field is a Boolean value indicating the\n  presence of a back image, whereas here the value is the URL for the image\n  itself. You can check for null if you just want to determine the presence of\n  an image.\n  \"\"\"\n  back(\n    \"\"\"\n    The size of the image to retrieve. By default, the returned image will\n    have its full original dimensions, but certain thumbnail sizes may be\n    retrieved as well.\n    \"\"\"\n    size: CoverArtArchiveImageSize = null\n  ): URLString\n\n  \"\"\"\n  A list of images depicting the different sides and surfaces of a release\u2019s\n  media and packaging.\n  \"\"\"\n  images: [CoverArtArchiveImage]!\n\n  \"\"\"Whether there is artwork present for this release.\"\"\"\n  artwork: Boolean!\n\n  \"\"\"The number of artwork images present for this release.\"\"\"\n  count: Int!\n\n  \"\"\"The particular release shown in the returned cover art.\"\"\"\n  release: Release\n}\n\n\"\"\"\nThe image sizes that may be requested at the [Cover Art Archive](https://musicbrainz.org/doc/Cover_Art_Archive).\n\"\"\"\nenum CoverArtArchiveImageSize {\n  \"\"\"A maximum dimension of 250px.\"\"\"\n  SMALL\n\n  \"\"\"A maximum dimension of 500px.\"\"\"\n  LARGE\n\n  \"\"\"The image\u2019s original dimensions, with no maximum.\"\"\"\n  FULL\n}\n\n\"\"\"\nAn individual piece of album artwork from the [Cover Art Archive](https://musicbrainz.org/doc/Cover_Art_Archive).\n\"\"\"\ntype CoverArtArchiveImage {\n  \"\"\"The Internet Archive\u2019s internal file ID for the image.\"\"\"\n  fileID: String!\n\n  \"\"\"The URL at which the image can be found.\"\"\"\n  image: URLString!\n\n  \"\"\"A set of thumbnails for the image.\"\"\"\n  thumbnails: CoverArtArchiveImageThumbnails!\n\n  \"\"\"Whether this image depicts the \u201cmain front\u201d of the release.\"\"\"\n  front: Boolean!\n\n  \"\"\"Whether this image depicts the \u201cmain back\u201d of the release.\"\"\"\n  back: Boolean!\n\n  \"\"\"\n  A list of [image types](https://musicbrainz.org/doc/Cover_Art/Types)\n  describing what part(s) of the release the image includes.\n  \"\"\"\n  types: [String]!\n\n  \"\"\"The MusicBrainz edit ID.\"\"\"\n  edit: Int\n\n  \"\"\"Whether the image was approved by the MusicBrainz edit system.\"\"\"\n  approved: Boolean\n\n  \"\"\"A free-text comment left for the image.\"\"\"\n  comment: String\n}\n\n\"\"\"\nURLs for thumbnails of different sizes for a particular piece of cover art.\n\"\"\"\ntype CoverArtArchiveImageThumbnails {\n  \"\"\"\n  The URL of a small version of the cover art, where the maximum dimension is\n  250px.\n  \"\"\"\n  small: URLString\n\n  \"\"\"\n  The URL of a large version of the cover art, where the maximum dimension is\n  500px.\n  \"\"\"\n  large: URLString\n}\n\n\"\"\"\nAn object containing lists of the different types of release group images from\n[fanart.tv](https://fanart.tv/).\n\"\"\"\ntype FanArtAlbum {\n  \"\"\"\n  A list of 1000x1000 JPG images of the cover artwork of the release group.\n  \"\"\"\n  albumCovers: [FanArtImage]\n\n  \"\"\"\n  A list of 1000x1000 PNG images of the physical disc media for the release\n  group, with transparent backgrounds.\n  \"\"\"\n  discImages: [FanArtDiscImage]\n}\n\n\"\"\"A single image from [fanart.tv](https://fanart.tv/).\"\"\"\ntype FanArtImage {\n  \"\"\"The ID of the image on fanart.tv.\"\"\"\n  imageID: ID\n\n  \"\"\"The URL of the image.\"\"\"\n  url(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: FanArtImageSize = null\n  ): URLString\n\n  \"\"\"The number of likes the image has received by fanart.tv users.\"\"\"\n  likeCount: Int\n}\n\n\"\"\"\nThe image sizes that may be requested at [fanart.tv](https://fanart.tv/).\n\"\"\"\nenum FanArtImageSize {\n  \"\"\"The image\u2019s full original dimensions.\"\"\"\n  FULL\n\n  \"\"\"A maximum dimension of 200px.\"\"\"\n  PREVIEW\n}\n\n\"\"\"A disc image from [fanart.tv](https://fanart.tv/).\"\"\"\ntype FanArtDiscImage {\n  \"\"\"The ID of the image on fanart.tv.\"\"\"\n  imageID: ID\n\n  \"\"\"The URL of the image.\"\"\"\n  url(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: FanArtImageSize = null\n  ): URLString\n\n  \"\"\"The number of likes the image has received by fanart.tv users.\"\"\"\n  likeCount: Int\n\n  \"\"\"The disc number.\"\"\"\n  discNumber: Int\n\n  \"\"\"The width and height of the (square) disc image.\"\"\"\n  size: Int\n}\n\n\"\"\"\nAn album on [TheAudioDB](http://www.theaudiodb.com/) corresponding with a\nMusicBrainz Release Group.\n\"\"\"\ntype TheAudioDBAlbum {\n  \"\"\"TheAudioDB ID of the album.\"\"\"\n  albumID: ID\n\n  \"\"\"TheAudioDB ID of the artist who released the album.\"\"\"\n  artistID: ID\n\n  \"\"\"A description of the album, often available in several languages.\"\"\"\n  description(\n    \"\"\"\n    The two-letter code for the language in which to retrieve the biography.\n    \"\"\"\n    lang: String = \"en\"\n  ): String\n\n  \"\"\"A review of the album.\"\"\"\n  review: String\n\n  \"\"\"The worldwide sales figure.\"\"\"\n  salesCount: Float\n\n  \"\"\"The album\u2019s rating as determined by user votes, out of 10.\"\"\"\n  score: Float\n\n  \"\"\"The number of users who voted to determine the album\u2019s score.\"\"\"\n  scoreVotes: Float\n\n  \"\"\"An image of the physical disc media for the album.\"\"\"\n  discImage(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): URLString\n\n  \"\"\"An image of the spine of the album packaging.\"\"\"\n  spineImage(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): URLString\n\n  \"\"\"An image of the front of the album packaging.\"\"\"\n  frontImage(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): URLString\n\n  \"\"\"An image of the back of the album packaging.\"\"\"\n  backImage(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): URLString\n\n  \"\"\"The primary musical genre of the album (e.g. \u201cAlternative Rock\u201d).\"\"\"\n  genre: String\n\n  \"\"\"The primary musical mood of the album (e.g. \u201cSad\u201d).\"\"\"\n  mood: String\n\n  \"\"\"The primary musical style of the album (e.g. \u201cRock/Pop\u201d).\"\"\"\n  style: String\n\n  \"\"\"\n  A rough description of the primary musical speed of the album (e.g. \u201cMedium\u201d).\n  \"\"\"\n  speed: String\n\n  \"\"\"The primary musical theme of the album (e.g. \u201cIn Love\u201d).\"\"\"\n  theme: String\n}\n\n\"\"\"\nThe image sizes that may be requested at [TheAudioDB](http://www.theaudiodb.com/).\n\"\"\"\nenum TheAudioDBImageSize {\n  \"\"\"The image\u2019s full original dimensions.\"\"\"\n  FULL\n\n  \"\"\"A maximum dimension of 200px.\"\"\"\n  PREVIEW\n}\n\n\"\"\"\nMaster releases group different versions of the same release (for example,\nreleases in different formats, issued in different countries, re-releases,\netc.). The equivalent of a MusicBrainz release group.\n\"\"\"\ntype DiscogsMaster {\n  \"\"\"The ID of the master on Discogs.\"\"\"\n  masterID: ID!\n\n  \"\"\"The title of the master.\"\"\"\n  title: String!\n\n  \"\"\"The URL of the master on Discogs.\"\"\"\n  url: URLString!\n\n  \"\"\"The artists credited on the master.\"\"\"\n  artistCredits: [DiscogsArtistCredit!]!\n\n  \"\"\"The primary musical genres of the master (e.g. \u201cElectronic\u201d).\"\"\"\n  genres: [String!]!\n\n  \"\"\"The primary musical styles of the master (e.g. \u201cTechno\u201d, \u201cMinimal\u201d).\"\"\"\n  styles: [String!]!\n\n  \"\"\"The number of listings the master currently has on the marketplace.\"\"\"\n  forSaleCount: Int\n\n  \"\"\"The lowest price for the master currently found on the marketplace.\"\"\"\n  lowestPrice(\n    \"\"\"\n    The three-letter currency code for which to retrieve the price. Discogs\n    supports USD, GBP, EUR, CAD, AUD, JPY, CHF, MXN, BRL, NZD, SEK, and ZAR.\n    #\n    [NOT YET WORKING]\n    \"\"\"\n    currency: String\n  ): Float\n\n  \"\"\"The year the master was released (most likely its \u201cmain\u201d release).\"\"\"\n  year: Int\n\n  \"\"\"The main release from the master.\"\"\"\n  mainRelease: DiscogsRelease\n\n  \"\"\"Images of the master.\"\"\"\n  images: [DiscogsImage!]!\n\n  \"\"\"Music videos from the master.\"\"\"\n  videos: [DiscogsVideo!]!\n\n  \"\"\"\n  A description of the quality and completeness of this master\u2019s data in the\n  Discogs database.\n  \"\"\"\n  dataQuality: String\n}\n\n\"\"\"A credited artist on a release, track, etc.\"\"\"\ntype DiscogsArtistCredit {\n  \"\"\"The official or common name of the credited artist.\"\"\"\n  name: String\n\n  \"\"\"\n  The artist name as credited on this particular work (the Artist Name\n  Variation, or ANV, in Discogs terms).\n  \"\"\"\n  nameVariation: String\n\n  \"\"\"\n  Join phrases might include words and/or punctuation to separate artist\n  names as they appear on the release, track, etc.\n  \"\"\"\n  joinPhrase: String\n\n  \"\"\"A list of roles the artist had on the work in question.\"\"\"\n  roles: [String!]!\n\n  \"\"\"\n  A list of tracks or track ranges (e.g. \u201cA1 to A4\u201d) on which the artist is\n  credited.\n  \"\"\"\n  tracks: [String!]!\n\n  \"\"\"The artist\u2019s entry on Discogs.\"\"\"\n  artist: DiscogsArtist\n}\n\n\"\"\"An artist on Discogs.\"\"\"\ntype DiscogsArtist {\n  \"\"\"The ID of the artist on Discogs.\"\"\"\n  artistID: ID!\n\n  \"\"\"The name of the artist on Discogs.\"\"\"\n  name: String!\n\n  \"\"\"Commonly found variations of the artist\u2019s name.\"\"\"\n  nameVariations: [String!]!\n\n  \"\"\"\n  The artist\u2019s real name, if the artist is a person who uses a stage name.\n  \"\"\"\n  realName: String\n\n  \"\"\"\n  A list of Discogs artists that represent the same artist under a different\n  alias.\n  \"\"\"\n  aliases: [DiscogsArtist!]!\n\n  \"\"\"The URL of the artist\u2019s page on Discogs.\"\"\"\n  url: URLString!\n\n  \"\"\"Links to the artist\u2019s official pages on different web properties.\"\"\"\n  urls: [URLString!]!\n\n  \"\"\"A biography or description of the artist.\"\"\"\n  profile: String\n\n  \"\"\"A list of images picturing the artist.\"\"\"\n  images: [DiscogsImage!]!\n\n  \"\"\"A list of members, if the artist is a group.\"\"\"\n  members: [DiscogsArtistMember!]!\n\n  \"\"\"\n  A description of the quality and completeness of this artist\u2019s data in the\n  Discogs database.\n  \"\"\"\n  dataQuality: String\n}\n\n\"\"\"A single image from Discogs.\"\"\"\ntype DiscogsImage {\n  \"\"\"The URL of the image file.\"\"\"\n  url: URLString!\n\n  \"\"\"The image type, primary or secondary.\"\"\"\n  type: DiscogsImageType!\n\n  \"\"\"The image width in pixels.\"\"\"\n  width: Int!\n\n  \"\"\"The image height in pixels.\"\"\"\n  height: Int!\n\n  \"\"\"The URL for a 150x150 thumbnail of the image.\"\"\"\n  thumbnail: URLString\n}\n\n\"\"\"The type of image.\"\"\"\nenum DiscogsImageType {\n  \"\"\"The primary image representing the item.\"\"\"\n  PRIMARY\n\n  \"\"\"A secondary image representing the item.\"\"\"\n  SECONDARY\n}\n\n\"\"\"A single artist who is a member of a group on Discogs.\"\"\"\ntype DiscogsArtistMember {\n  \"\"\"Whether or not the member is still active in the group.\"\"\"\n  active: Boolean\n\n  \"\"\"The name of the member.\"\"\"\n  name: String!\n\n  \"\"\"The member\u2019s artist information on Discogs.\"\"\"\n  artist: DiscogsArtist\n}\n\n\"\"\"A release on Discogs.\"\"\"\ntype DiscogsRelease {\n  \"\"\"The ID of the release on Discogs.\"\"\"\n  releaseID: ID!\n\n  \"\"\"The title of the release.\"\"\"\n  title: String!\n\n  \"\"\"The URL of the release on Discogs.\"\"\"\n  url: URLString!\n\n  \"\"\"The artists credited on the release.\"\"\"\n  artistCredits: [DiscogsArtistCredit!]!\n\n  \"\"\"\n  An additional list of artists who contributed to the release, but are not\n  named in the release\u2019s artists.\n  \"\"\"\n  extraArtistCredits: [DiscogsArtistCredit!]!\n\n  \"\"\"The primary musical genres of the release (e.g. \u201cElectronic\u201d).\"\"\"\n  genres: [String!]!\n\n  \"\"\"The primary musical styles of the release (e.g. \u201cTechno\u201d, \u201cMinimal\u201d).\"\"\"\n  styles: [String!]!\n\n  \"\"\"The number of listings the release currently has on the marketplace.\"\"\"\n  forSaleCount: Int\n\n  \"\"\"The lowest price for the release currently found on the marketplace.\"\"\"\n  lowestPrice(\n    \"\"\"\n    The three-letter currency code for which to retrieve the price. Discogs\n    supports USD, GBP, EUR, CAD, AUD, JPY, CHF, MXN, BRL, NZD, SEK, and ZAR.\n    #\n    [NOT YET WORKING]\n    \"\"\"\n    currency: String\n  ): Float\n\n  \"\"\"The year the release was issued.\"\"\"\n  year: Int\n\n  \"\"\"Notes about the release.\"\"\"\n  notes: String\n\n  \"\"\"The country in which the release was issued.\"\"\"\n  country: String\n\n  \"\"\"The master release on Discogs.\"\"\"\n  master: DiscogsMaster\n\n  \"\"\"The primary thumbnail image for the release.\"\"\"\n  thumbnail: URLString\n\n  \"\"\"Images of the release.\"\"\"\n  images: [DiscogsImage!]!\n\n  \"\"\"Music videos from the release.\"\"\"\n  videos: [DiscogsVideo!]!\n\n  \"\"\"\n  Information about the Discogs community\u2019s contributions to the release\u2019s\n  data.\n  \"\"\"\n  community: DiscogsCommunity\n\n  \"\"\"\n  A description of the quality and completeness of this release\u2019s data in\n  the Discogs database.\n  \"\"\"\n  dataQuality: String\n}\n\n\"\"\"A single video linked from Discogs.\"\"\"\ntype DiscogsVideo {\n  \"\"\"The URL of the video.\"\"\"\n  url: URLString!\n\n  \"\"\"The title of the video.\"\"\"\n  title: String\n\n  \"\"\"The video description.\"\"\"\n  description: String\n\n  \"\"\"The duration of the video in milliseconds.\"\"\"\n  duration: Duration\n\n  \"\"\"Whether the video is embeddable.\"\"\"\n  embed: Boolean\n}\n\n\"\"\"Community statistics regarding an item on Discogs.\"\"\"\ntype DiscogsCommunity {\n  \"\"\"The acceptance status.\"\"\"\n  status: String\n\n  \"\"\"Information about how Discogs users have rated the item.\"\"\"\n  rating: DiscogsRating\n\n  \"\"\"The number of Discogs users who have the item in their collection.\"\"\"\n  haveCount: Int\n\n  \"\"\"The number of Discogs users who want the item.\"\"\"\n  wantCount: Int\n\n  \"\"\"The Discogs users who have contributed to the item\u2019s data.\"\"\"\n  contributors: [DiscogsUser!]!\n\n  \"\"\"The Discogs user who submitted the item.\"\"\"\n  submitter: DiscogsUser\n}\n\n\"\"\"An aggregated rating on Discogs.\"\"\"\ntype DiscogsRating {\n  \"\"\"The number of users who have contributed to the rating.\"\"\"\n  voteCount: Int!\n\n  \"\"\"The average rating as determined by users.\"\"\"\n  value: Float\n}\n\n\"\"\"A user on Discogs.\"\"\"\ntype DiscogsUser {\n  \"\"\"The user\u2019s username on Discogs.\"\"\"\n  username: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SeriesConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SeriesEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Series]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SeriesEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Series\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nA [series](https://musicbrainz.org/doc/Series) is a sequence of\nseparate release groups, releases, recordings, works or events with a common\ntheme.\n\"\"\"\ntype Series implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official name of the entity.\"\"\"\n  name: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  The type primarily describes what type of entity the series\n  contains.\n  \"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype WorkConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [WorkEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the\n  `edges` field).\n  \"\"\"\n  nodes: [Work]\n\n  \"\"\"\n  A count of the total number of items in this connection,\n  ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype WorkEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Work\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The relevancy score (0\u2013100) assigned by the search engine, if\n  these results were found through a search.\n  \"\"\"\n  score: Int\n}\n\n\"\"\"\nA [work](https://musicbrainz.org/doc/Work) is a distinct\nintellectual or artistic creation, which can be expressed in the form of one or\nmore audio recordings.\n\"\"\"\ntype Work implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The official title of the entity.\"\"\"\n  title: String\n\n  \"\"\"A comment used to help distinguish identically named entitites.\"\"\"\n  disambiguation: String\n\n  \"\"\"\n  [Aliases](https://musicbrainz.org/doc/Aliases) are used to store\n  alternate names or misspellings.\n  \"\"\"\n  aliases: [Alias]\n\n  \"\"\"\n  A list of [ISWCs](https://musicbrainz.org/doc/ISWC) assigned\n  to the work by copyright collecting agencies.\n  \"\"\"\n  iswcs: [String]\n\n  \"\"\"The language in which the work was originally written.\"\"\"\n  language: String\n\n  \"\"\"The type of work.\"\"\"\n  type: String\n\n  \"\"\"\n  The MBID associated with the value of the `type`\n  field.\n  \"\"\"\n  typeID: MBID\n\n  \"\"\"A list of artists linked to this entity.\"\"\"\n  artists(after: String, first: Int): ArtistConnection\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n\n  \"\"\"A list of collections containing this entity.\"\"\"\n  collections(after: String, first: Int): CollectionConnection\n\n  \"\"\"The rating users have given to this entity.\"\"\"\n  rating: Rating\n\n  \"\"\"A list of tags linked to this entity.\"\"\"\n  tags(after: String, first: Int): TagConnection\n}\n\n\"\"\"\nAn object containing lists of the different types of label images from\n[fanart.tv](https://fanart.tv/).\n\"\"\"\ntype FanArtLabel {\n  \"\"\"\n  A list of 400x270 PNG images containing the label\u2019s logo. There will\n  usually be a black version, a color version, and a white version, all with\n  transparent backgrounds.\n  \"\"\"\n  logos: [FanArtLabelImage]\n}\n\n\"\"\"A music label image from [fanart.tv](https://fanart.tv/).\"\"\"\ntype FanArtLabelImage {\n  \"\"\"The ID of the image on fanart.tv.\"\"\"\n  imageID: ID\n\n  \"\"\"The URL of the image.\"\"\"\n  url(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: FanArtImageSize = null\n  ): URLString\n\n  \"\"\"The number of likes the image has received by fanart.tv users.\"\"\"\n  likeCount: Int\n\n  \"\"\"The type of color content in the image (usually \u201cwhite\u201d or \u201ccolour\u201d).\"\"\"\n  color: String\n}\n\n\"\"\"A label on Discogs.\"\"\"\ntype DiscogsLabel {\n  \"\"\"The ID of the label on Discogs.\"\"\"\n  labelID: ID!\n\n  \"\"\"The name of the label.\"\"\"\n  name: String!\n\n  \"\"\"The URL of the label on Discogs.\"\"\"\n  url: URLString!\n\n  \"\"\"A description of the history of the label.\"\"\"\n  profile: String\n\n  \"\"\"Information on how to contact a representative of the label.\"\"\"\n  contactInfo: String\n\n  \"\"\"The parent label, if this label is a subsidiary.\"\"\"\n  parentLabel: DiscogsLabel\n\n  \"\"\"A list of labels that are subsidiaries of this label.\"\"\"\n  subLabels: [DiscogsLabel!]!\n\n  \"\"\"A list of images associated with the label.\"\"\"\n  images: [DiscogsImage!]!\n\n  \"\"\"\n  A description of the quality and completeness of this label\u2019s data in the\n  Discogs database.\n  \"\"\"\n  dataQuality: String\n}\n\n\"\"\"\nAn album on [Last.fm](https://www.last.fm/) corresponding with a MusicBrainz\nRelease.\n\"\"\"\ntype LastFMAlbum {\n  \"\"\"The MBID of the corresponding MusicBrainz release.\"\"\"\n  mbid: MBID\n\n  \"\"\"The title of the album according to [Last.fm](https://www.last.fm/).\"\"\"\n  title: String\n\n  \"\"\"The URL for the album on [Last.fm](https://www.last.fm/).\"\"\"\n  url: URLString!\n\n  \"\"\"An image of the cover artwork of the release.\"\"\"\n  image(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: LastFMImageSize\n  ): URLString\n\n  \"\"\"The number of listeners recorded for the album.\"\"\"\n  listenerCount: Float\n\n  \"\"\"The number of plays recorded for the album.\"\"\"\n  playCount: Float\n\n  \"\"\"\n  Historical information written about the album, often available in several\n  languages.\n  \"\"\"\n  description(\n    \"\"\"\n    The two-letter code for the language in which to retrieve the description.\n    \"\"\"\n    lang: String\n  ): LastFMWikiContent\n\n  \"\"\"\n  The artist who released the album. This returns the Last.fm artist info,\n  not the MusicBrainz artist.\n  \"\"\"\n  artist: LastFMArtist\n\n  \"\"\"A list of tags applied to the artist by users, ordered by popularity.\"\"\"\n  topTags(\n    \"\"\"The maximum number of tags to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more tags will be retrieved.\"\"\"\n    after: String\n  ): LastFMTagConnection\n}\n\n\"\"\"\nThe image sizes that may be requested at [Last.fm](https://www.last.fm/).\n\"\"\"\nenum LastFMImageSize {\n  \"\"\"A maximum dimension of 34px.\"\"\"\n  SMALL\n\n  \"\"\"A maximum dimension of 64px.\"\"\"\n  MEDIUM\n\n  \"\"\"A maximum dimension of 174px.\"\"\"\n  LARGE\n\n  \"\"\"A maximum dimension of 300px.\"\"\"\n  EXTRALARGE\n\n  \"\"\"A maximum dimension of 300px.\"\"\"\n  MEGA\n}\n\n\"\"\"\nBiographical or background information written about an entity on\n[Last.fm](https://www.last.fm/).\n\"\"\"\ntype LastFMWikiContent {\n  \"\"\"A summary of the wiki content, which may contain HTML.\"\"\"\n  summaryHTML: String\n\n  \"\"\"The full wiki content, which may contain HTML.\"\"\"\n  contentHTML: String\n\n  \"\"\"\n  The date the content was published. The data is reformatted from the\n  Last.fm API\u2019s original format into the Date scalar format.\n  \"\"\"\n  publishDate: Date\n\n  \"\"\"\n  The time the content was published. The data is reformatted from the\n  Last.fm API\u2019s original format into the Time scalar format. The API offers\n  no indication as to which time zone the time is in.\n  \"\"\"\n  publishTime: Time\n\n  \"\"\"The URL at which the content was published.\"\"\"\n  url: URLString\n}\n\n\"\"\"An artist on [Last.fm](https://www.last.fm/).\"\"\"\ntype LastFMArtist {\n  \"\"\"The MBID of the corresponding MusicBrainz artist.\"\"\"\n  mbid: MBID\n\n  \"\"\"The name of the artist according to [Last.fm](https://www.last.fm/).\"\"\"\n  name: String\n\n  \"\"\"The URL for the artist on [Last.fm](https://www.last.fm/).\"\"\"\n  url: URLString!\n\n  \"\"\"An image of the artist.\"\"\"\n  image(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: LastFMImageSize\n  ): URLString\n\n  \"\"\"The number of listeners recorded for the artist.\"\"\"\n  listenerCount: Float\n\n  \"\"\"The number of plays recorded for the artist.\"\"\"\n  playCount: Float\n\n  \"\"\"A list of similar artists.\"\"\"\n  similarArtists(\n    \"\"\"The maximum number of artists to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more artists will be retrieved.\"\"\"\n    after: String\n  ): LastFMArtistConnection\n\n  \"\"\"A list of the artist\u2019s most popular albums.\"\"\"\n  topAlbums(\n    \"\"\"The maximum number of albums to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more albums will be retrieved.\"\"\"\n    after: String\n  ): LastFMAlbumConnection\n\n  \"\"\"A list of tags applied to the artist by users, ordered by popularity.\"\"\"\n  topTags(\n    \"\"\"The maximum number of tags to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more tags will be retrieved.\"\"\"\n    after: String\n  ): LastFMTagConnection\n\n  \"\"\"A list of the artist\u2019s most popular tracks.\"\"\"\n  topTracks(\n    \"\"\"The maximum number of tracks to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more tracks will be retrieved.\"\"\"\n    after: String\n  ): LastFMTrackConnection\n\n  \"\"\"A biography of the artist, often available in several languages.\"\"\"\n  biography(\n    \"\"\"\n    The two-letter code for the language in which to retrieve the biography.\n    \"\"\"\n    lang: String\n  ): LastFMWikiContent\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LastFMArtistConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LastFMArtistEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the `edges` field).\n  \"\"\"\n  nodes: [LastFMArtist]\n\n  \"\"\"\n  A count of the total number of items in this connection, ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LastFMArtistEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: LastFMArtist\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The artist similarity score (0\u20131) as determined by [Last.fm](https://www.last.fm/),\n  if this connection is with another artist.\n  \"\"\"\n  matchScore: Float\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LastFMAlbumConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LastFMAlbumEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the `edges` field).\n  \"\"\"\n  nodes: [LastFMAlbum]\n\n  \"\"\"\n  A count of the total number of items in this connection, ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LastFMAlbumEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: LastFMAlbum\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LastFMTagConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LastFMTagEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the `edges` field).\n  \"\"\"\n  nodes: [LastFMTag]\n\n  \"\"\"\n  A count of the total number of items in this connection, ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LastFMTagEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: LastFMTag\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"The number of times the tag has been applied to the item in question.\"\"\"\n  tagCount: Int\n}\n\n\"\"\"A tag added by users to an entity on [Last.fm](https://www.last.fm/).\"\"\"\ntype LastFMTag {\n  \"\"\"The tag name.\"\"\"\n  name: String!\n\n  \"\"\"The URL for the tag on [Last.fm](https://www.last.fm/).\"\"\"\n  url: URLString!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype LastFMTrackConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [LastFMTrackEdge]\n\n  \"\"\"\n  A list of nodes in the connection (without going through the `edges` field).\n  \"\"\"\n  nodes: [LastFMTrack]\n\n  \"\"\"\n  A count of the total number of items in this connection, ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype LastFMTrackEdge {\n  \"\"\"The item at the end of the edge.\"\"\"\n  node: LastFMTrack\n\n  \"\"\"A cursor for use in pagination.\"\"\"\n  cursor: String!\n\n  \"\"\"\n  The track similarity score (0\u20131) as determined by [Last.fm](https://www.last.fm/),\n  if this connection is with another track.\n  \"\"\"\n  matchScore: Float\n}\n\n\"\"\"\nA track on [Last.fm](https://www.last.fm/) corresponding with a MusicBrainz\nRecording.\n\"\"\"\ntype LastFMTrack {\n  \"\"\"The MBID of the corresponding MusicBrainz recording.\"\"\"\n  mbid: MBID\n\n  \"\"\"The title of the track according to [Last.fm](https://www.last.fm/).\"\"\"\n  title: String\n\n  \"\"\"The URL for the track on [Last.fm](https://www.last.fm/).\"\"\"\n  url: URLString!\n\n  \"\"\"The length of the track.\"\"\"\n  duration: Duration\n\n  \"\"\"The number of listeners recorded for the track.\"\"\"\n  listenerCount: Float\n\n  \"\"\"The number of plays recorded for the track.\"\"\"\n  playCount: Float\n\n  \"\"\"\n  Historical information written about the track, often available in several\n  languages.\n  \"\"\"\n  description(\n    \"\"\"\n    The two-letter code for the language in which to retrieve the description.\n    \"\"\"\n    lang: String\n  ): LastFMWikiContent\n\n  \"\"\"\n  The artist who released the track. This returns the Last.fm artist info,\n  not the MusicBrainz artist.\n  \"\"\"\n  artist: LastFMArtist\n\n  \"\"\"\n  The album on which the track appears. This returns the Last.fm album info,\n  not the MusicBrainz release.\n  \"\"\"\n  album: LastFMAlbum\n\n  \"\"\"A list of similar tracks.\"\"\"\n  similarTracks(\n    \"\"\"The maximum number of tracks to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more tracks will be retrieved.\"\"\"\n    after: String\n  ): LastFMTrackConnection\n\n  \"\"\"A list of tags applied to the track by users, ordered by popularity.\"\"\"\n  topTags(\n    \"\"\"The maximum number of tags to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more tags will be retrieved.\"\"\"\n    after: String\n  ): LastFMTagConnection\n}\n\n\"\"\"Strategies for matching MusicBrainz entities to Spotify entities.\"\"\"\nenum SpotifyMatchStrategy {\n  \"\"\"\n  The entity will be matched by finding an explicit URL relationship that\n  links to Spotify.\n  \"\"\"\n  URL\n\n  \"\"\"\n  The entity will be matched by searching for Spotify entities by some\n  external ID that is known to both MusicBrainz and Spotify, like an ISRC\n  or UPC barcode. Since this can result in multiple Spotify matches, the most\n  popular will be preferred (if possible), or the first.\n  \"\"\"\n  EXTERNALID\n}\n\n\"\"\"An album from Spotify.\"\"\"\ntype SpotifyAlbum {\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the album.\n  \"\"\"\n  albumID: ID!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the album.\n  \"\"\"\n  uri: String!\n\n  \"\"\"A link to the Web API endpoint providing full details of the album.\"\"\"\n  href: URLString!\n\n  \"\"\"\n  The name of the album. In case of an album takedown, the value may be empty.\n  \"\"\"\n  title: String\n\n  \"\"\"The type of the album, e.g. \u201cAlbum\u201d, \u201cSingle\u201d, \u201cCompilation\u201d.\"\"\"\n  albumType: ReleaseGroupType!\n\n  \"\"\"The artists of the album.\"\"\"\n  artists: [SpotifyArtist!]!\n\n  \"\"\"\n  The markets in which the album is available: [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n  country codes.\n  \n  Note that an album is considered available in a market when at least 1 of its tracks is available in that market.\n  \"\"\"\n  availableMarkets: [String!]!\n\n  \"\"\"The copyright statements of the album.\"\"\"\n  copyrights: [SpotifyCopyright!]!\n\n  \"\"\"Known external IDs for the album.\"\"\"\n  externalIDs: [SpotifyExternalID!]!\n\n  \"\"\"Known external URLs for this album.\"\"\"\n  externalURLs: [SpotifyExternalURL!]!\n\n  \"\"\"\n  A list of the genres used to classify the album. For example: \u201cProg Rock\u201d,\n  \u201cPost-Grunge\u201d. (If not yet classified, the array is empty.)\n  \"\"\"\n  genres: [String!]!\n\n  \"\"\"The cover art for the album in various sizes, widest first.\"\"\"\n  images: [SpotifyImage!]!\n\n  \"\"\"The label for the album.\"\"\"\n  label: String\n\n  \"\"\"\n  The popularity of the album. The value will be between 0 and 100, with 100\n  being the most popular. The popularity is calculated from the popularity of\n  the album\u2019s individual tracks.\n  \"\"\"\n  popularity: Int!\n\n  \"\"\"\n  The date the album was first released, for example \u201c1981-12-15\u201d. Depending\n  on the precision, the month or day might be missing.\n  \"\"\"\n  releaseDate: Date\n}\n\n\"\"\"An artist from Spotify.\"\"\"\ntype SpotifyArtist {\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the artist.\n  \"\"\"\n  artistID: ID!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the artist.\n  \"\"\"\n  uri: String!\n\n  \"\"\"A link to the Web API endpoint providing full details of the artist.\"\"\"\n  href: URLString!\n\n  \"\"\"The name of the artist.\"\"\"\n  name: String!\n\n  \"\"\"Known external URLs for this artist.\"\"\"\n  externalURLs: [SpotifyExternalURL!]!\n\n  \"\"\"\n  A list of the genres the artist is associated with. For example:\n  \u201cProg Rock\u201d, \u201cPost-Grunge\u201d. (If not yet classified, the array is empty.)\n  \"\"\"\n  genres: [String!]!\n\n  \"\"\"\n  The popularity of the artist. The value will be between 0 and 100, with 100\n  being the most popular. The artist\u2019s popularity is calculated from the\n  popularity of all the artist\u2019s tracks.\n  \"\"\"\n  popularity: Int!\n\n  \"\"\"Images of the artist in various sizes, widest first.\"\"\"\n  images: [SpotifyImage!]!\n\n  \"\"\"Spotify catalog information about an artist\u2019s top tracks by country.\"\"\"\n  topTracks(\n    \"\"\"\n    An [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n    country code.\n    \"\"\"\n    market: String!\n  ): [SpotifyTrack!]!\n\n  \"\"\"\n  Spotify catalog information about artists similar to a given artist.\n  Similarity is based on analysis of the Spotify community\u2019s listening\n  history.\n  \"\"\"\n  relatedArtists: [SpotifyArtist!]!\n}\n\n\"\"\"A URL for linking to an entity with some third party.\"\"\"\ntype SpotifyExternalURL {\n  \"\"\"The type of the URL, for example \u201cspotify\u201d.\"\"\"\n  type: String!\n\n  \"\"\"An external, public URL to the object.\"\"\"\n  url: URLString!\n}\n\n\"\"\"A single image from Spotify.\"\"\"\ntype SpotifyImage {\n  \"\"\"The source URL of the image.\"\"\"\n  url: URLString!\n\n  \"\"\"The image width in pixels, if known.\"\"\"\n  width: Int\n\n  \"\"\"The image height in pixels, if known.\"\"\"\n  height: Int\n}\n\n\"\"\"A track from Spotify.\"\"\"\ntype SpotifyTrack {\n  \"\"\"\n  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the track.\n  \"\"\"\n  trackID: ID!\n\n  \"\"\"\n  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n  for the track.\n  \"\"\"\n  uri: String!\n\n  \"\"\"A link to the Web API endpoint providing full details of the track.\"\"\"\n  href: URLString!\n\n  \"\"\"The name of the track.\"\"\"\n  title: String!\n\n  \"\"\"The audio features of the track.\"\"\"\n  audioFeatures: SpotifyAudioFeatures\n\n  \"\"\"The album on which the track appears.\"\"\"\n  album: SpotifyAlbum\n\n  \"\"\"The artists who performed the track.\"\"\"\n  artists: [SpotifyArtist!]!\n\n  \"\"\"\n  A list of the countries in which the track can be played, identified by\n  their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\n  code.\n  \"\"\"\n  availableMarkets: [String!]!\n\n  \"\"\"\n  The disc number (usually `1` unless the album consists of more than one\n  disc).\n  \"\"\"\n  discNumber: Int!\n\n  \"\"\"The track length in milliseconds.\"\"\"\n  duration: Duration!\n\n  \"\"\"Whether or not the track has explicit lyrics, if known.\"\"\"\n  explicit: Boolean\n\n  \"\"\"Known external IDs for the track.\"\"\"\n  externalIDs: [SpotifyExternalID!]!\n\n  \"\"\"Known external URLs for the track.\"\"\"\n  externalURLs: [SpotifyExternalURL!]!\n\n  \"\"\"\n  The popularity of the track. The value will be between 0 and 100, with 100\n  being the most popular.\n  \n  The popularity is calculated by algorithm and is based, in the most part, on\n  the total number of plays the track has had and how recent those plays are.\n  Generally speaking, songs that are being played a lot now will have a higher\n  popularity than songs that were played a lot in the past.\n  \n  Duplicate tracks (e.g. the same track from a single and an album) are rated\n  independently.\n  \n  Artist and album popularity is derived mathematically from track popularity.\n  \n  Note that the popularity value may lag actual popularity by a few days: the\n  value is not updated in real time.\n  \"\"\"\n  popularity: Int!\n\n  \"\"\"A link to a 30 second preview (MP3 format) of the track, if available.\"\"\"\n  previewURL: URLString\n\n  \"\"\"\n  The number of the track. If an album has several discs, the track number is\n  the number on the specified disc.\n  \"\"\"\n  trackNumber: Int!\n\n  \"\"\"A MusicBrainz recording that corresponds to the track.\"\"\"\n  musicBrainz(\n    \"\"\"\n    The strategies to use to match the track with a MusicBrainz recording, in\n    preferential order.\n    \"\"\"\n    strategy: [SpotifyMatchStrategy!] = []\n  ): Recording\n}\n\n\"\"\"The audio features of a track from Spotify.\"\"\"\ntype SpotifyAudioFeatures {\n  \"\"\"\n  A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0\n  represents high confidence the track is acoustic.\n  \"\"\"\n  acousticness: Float!\n\n  \"\"\"\n  Danceability describes how suitable a track is for dancing based on a\n  combination of musical elements including tempo, rhythm stability, beat\n  strength, and overall regularity. A value of 0.0 is least danceable and 1.0\n  is most danceable.\n  \"\"\"\n  danceability: Float!\n\n  \"\"\"The duration of the track in milliseconds.\"\"\"\n  duration: Duration!\n\n  \"\"\"\n  Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of\n  intensity and activity. Typically, energetic tracks feel fast, loud, and\n  noisy. For example, death metal has high energy, while a Bach prelude scores\n  low on the scale. Perceptual features contributing to this attribute include\n  dynamic range, perceived loudness, timbre, onset rate, and general entropy.\n  \"\"\"\n  energy: Float!\n\n  \"\"\"\n  Predicts whether a track contains no vocals. \u201cOoh\u201d and \u201caah\u201d sounds are\n  treated as instrumental in this context. Rap or spoken word tracks are\n  clearly \u201cvocal\u201d. The closer the instrumentalness value is to 1.0, the\n  greater likelihood the track contains no vocal content. Values above 0.5 are\n  intended to represent instrumental tracks, but confidence is higher as the\n  value approaches 1.0.\n  \"\"\"\n  instrumentalness: Float!\n\n  \"\"\"\n  The key the track is in. Integers map to pitches using standard [Pitch Class\n  notation](https://en.wikipedia.org/wiki/Pitch_class), e.g. 0 = C, 1 = C\u266f/D\u266d,\n  2 = D, and so on. See the `keyName` field if you\u2019d prefer the note as a\n  string.\n  \"\"\"\n  key: Int!\n\n  \"\"\"\n  The `key` translated from an integer to a name like \u201cC\u201d. (Only one name\n  will be returned, so enharmonic notes like like C\u266f/D\u266d will just return\n  \u201cC\u266f\u201d.)\n  \"\"\"\n  keyName: String!\n\n  \"\"\"\n  Detects the presence of an audience in the recording. Higher liveness values\n  represent an increased probability that the track was performed live. A\n  value above 0.8 provides strong likelihood that the track is live.\n  \"\"\"\n  liveness: Float!\n\n  \"\"\"\n  The overall loudness of a track in decibels (dB). Loudness values are\n  averaged across the entire track and are useful for comparing relative\n  loudness of tracks. Loudness is the quality of a sound that is the primary\n  psychological correlate of physical strength (amplitude). Values typical\n  range between -60 and 0 db.\n  \"\"\"\n  loudness: Float!\n\n  \"\"\"\n  Mode indicates the modality (major or minor) of a track, the type of scale\n  from which its melodic content is derived. Major is represented by 1 and\n  minor is 0.\n  \"\"\"\n  mode: SpotifyTrackMode!\n\n  \"\"\"\n  Speechiness detects the presence of spoken words in a track. The more\n  exclusively speech-like the recording (e.g. talk show, audio book, poetry),\n  the closer to 1.0 the attribute value. Values above 0.66 describe tracks\n  that are probably made entirely of spoken words. Values between 0.33 and\n  0.66 describe tracks that may contain both music and speech, either in\n  sections or layered, including such cases as rap music. Values below 0.33\n  most likely represent music and other non-speech-like tracks.\n  \"\"\"\n  speechiness: Float!\n\n  \"\"\"\n  The overall estimated tempo of a track in beats per minute (BPM). In musical\n  terminology, tempo is the speed or pace of a given piece and derives\n  directly from the average beat duration.\n  \"\"\"\n  tempo: Float!\n\n  \"\"\"\n  An estimated overall time signature of a track. The time signature (meter)\n  is a notational convention to specify how many beats are in each bar (or\n  measure).\n  \"\"\"\n  timeSignature: Float!\n\n  \"\"\"\n  A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a\n  track. Tracks with high valence sound more positive (e.g. happy, cheerful,\n  euphoric), while tracks with low valence sound more negative (e.g. sad,\n  depressed, angry).\n  \"\"\"\n  valence: Float!\n}\n\n\"\"\"The potential values for modality (major or minor) of a track.\"\"\"\nenum SpotifyTrackMode {\n  \"\"\"The major scale.\"\"\"\n  MAJOR\n\n  \"\"\"The minor scale.\"\"\"\n  MINOR\n}\n\n\"\"\"A value for identifying an entity with some third party.\"\"\"\ntype SpotifyExternalID {\n  \"\"\"The identifier type, for example \u201cisrc\u201d, \u201cean\u201d, \u201cupc\u201d.\"\"\"\n  type: String!\n\n  \"\"\"The identifier value.\"\"\"\n  id: String!\n}\n\n\"\"\"A copyright statement for an album from Spotify.\"\"\"\ntype SpotifyCopyright {\n  \"\"\"The copyright text.\"\"\"\n  text: String!\n\n  \"\"\"\n  Whether the copyright is for the work itself or the sound recording\n  (performance).\n  \"\"\"\n  type: SpotifyCopyrightType!\n}\n\n\"\"\"The type of copyright.\"\"\"\nenum SpotifyCopyrightType {\n  \"\"\"The copyright.\"\"\"\n  COPYRIGHT\n\n  \"\"\"The sound recording (performance) copyright.\"\"\"\n  PERFORMANCE\n}\n\n\"\"\"\nA track on [TheAudioDB](http://www.theaudiodb.com/) corresponding with a\nMusicBrainz Recording.\n\"\"\"\ntype TheAudioDBTrack {\n  \"\"\"TheAudioDB ID of the track.\"\"\"\n  trackID: ID\n\n  \"\"\"TheAudioDB ID of the album on which the track appears.\"\"\"\n  albumID: ID\n\n  \"\"\"TheAudioDB ID of the artist who released the track.\"\"\"\n  artistID: ID\n\n  \"\"\"A description of the track.\"\"\"\n  description(\n    \"\"\"\n    The two-letter code for the language in which to retrieve the description.\n    \"\"\"\n    lang: String = \"en\"\n  ): String\n\n  \"\"\"A thumbnail image for the track.\"\"\"\n  thumbnail(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): URLString\n\n  \"\"\"The track\u2019s rating as determined by user votes, out of 10.\"\"\"\n  score: Float\n\n  \"\"\"The number of users who voted to determine the album\u2019s score.\"\"\"\n  scoreVotes: Float\n\n  \"\"\"The track number of the song on the album.\"\"\"\n  trackNumber: Int\n\n  \"\"\"The official music video for the track.\"\"\"\n  musicVideo: TheAudioDBMusicVideo\n\n  \"\"\"The primary musical genre of the track (e.g. \u201cAlternative Rock\u201d).\"\"\"\n  genre: String\n\n  \"\"\"The primary musical mood of the track (e.g. \u201cSad\u201d).\"\"\"\n  mood: String\n\n  \"\"\"The primary musical style of the track (e.g. \u201cRock/Pop\u201d).\"\"\"\n  style: String\n\n  \"\"\"The primary musical theme of the track (e.g. \u201cIn Love\u201d).\"\"\"\n  theme: String\n}\n\n\"\"\"\nDetails of a music video associated with a track on [TheAudioDB](http://www.theaudiodb.com/).\n\"\"\"\ntype TheAudioDBMusicVideo {\n  \"\"\"The URL where the music video can be found.\"\"\"\n  url: URLString\n\n  \"\"\"The video production company of the music video.\"\"\"\n  companyName: String\n\n  \"\"\"The director of the music video.\"\"\"\n  directorName: String\n\n  \"\"\"A list of still images from the music video.\"\"\"\n  screenshots(\n    \"\"\"The size of the images to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): [URLString]!\n\n  \"\"\"\n  The number of views the video has received at the given URL. This will rarely\n  be up to date, so use cautiously.\n  \"\"\"\n  viewCount: Float\n\n  \"\"\"\n  The number of likes the video has received at the given URL. This will rarely\n  be up to date, so use cautiously.\n  \"\"\"\n  likeCount: Float\n\n  \"\"\"\n  The number of dislikes the video has received at the given URL. This will\n  rarely be up to date, so use cautiously.\n  \"\"\"\n  dislikeCount: Float\n\n  \"\"\"\n  The number of comments the video has received at the given URL. This will\n  rarely be up to date, so use cautiously.\n  \"\"\"\n  commentCount: Float\n}\n\n\"\"\"\nAn object containing lists of the different types of artist images from\n[fanart.tv](https://fanart.tv/).\n\"\"\"\ntype FanArtArtist {\n  \"\"\"\n  A list of 1920x1080 JPG images picturing the artist, suitable for use as\n  backgrounds.\n  \"\"\"\n  backgrounds: [FanArtImage]\n\n  \"\"\"\n  A list of 1000x185 JPG images containing the artist and their logo or name.\n  \"\"\"\n  banners: [FanArtImage]\n\n  \"\"\"\n  A list of 400x155 PNG images containing the artist\u2019s logo or name, with\n  transparent backgrounds.\n  \"\"\"\n  logos: [FanArtImage]\n\n  \"\"\"\n  A list of 800x310 PNG images containing the artist\u2019s logo or name, with\n  transparent backgrounds.\n  \"\"\"\n  logosHD: [FanArtImage]\n\n  \"\"\"\n  A list of 1000x1000 JPG thumbnail images picturing the artist (usually\n  containing every member of a band).\n  \"\"\"\n  thumbnails: [FanArtImage]\n}\n\n\"\"\"An artist on [TheAudioDB](http://www.theaudiodb.com/).\"\"\"\ntype TheAudioDBArtist {\n  \"\"\"TheAudioDB ID of the artist.\"\"\"\n  artistID: ID\n\n  \"\"\"A biography of the artist, often available in several languages.\"\"\"\n  biography(\n    \"\"\"\n    The two-letter code for the language in which to retrieve the biography.\n    \"\"\"\n    lang: String = \"en\"\n  ): String\n\n  \"\"\"The number of members in the musical group, if applicable.\"\"\"\n  memberCount: Int\n\n  \"\"\"\n  A 1000x185 JPG banner image containing the artist and their logo or name.\n  \"\"\"\n  banner(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): URLString\n\n  \"\"\"A list of 1280x720 or 1920x1080 JPG images depicting the artist.\"\"\"\n  fanArt(\n    \"\"\"The size of the images to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): [URLString]!\n\n  \"\"\"\n  A 400x155 PNG image containing the artist\u2019s logo or name, with a transparent\n  background.\n  \"\"\"\n  logo(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): URLString\n\n  \"\"\"\n  A 1000x1000 JPG thumbnail image picturing the artist (usually containing\n  every member of a band).\n  \"\"\"\n  thumbnail(\n    \"\"\"The size of the image to retrieve.\"\"\"\n    size: TheAudioDBImageSize = null\n  ): URLString\n\n  \"\"\"The primary musical genre of the artist (e.g. \u201cAlternative Rock\u201d).\"\"\"\n  genre: String\n\n  \"\"\"The primary musical mood of the artist (e.g. \u201cSad\u201d).\"\"\"\n  mood: String\n\n  \"\"\"The primary musical style of the artist (e.g. \u201cRock/Pop\u201d).\"\"\"\n  style: String\n}\n\n\"\"\"\nA country with chart data available on [Last.fm](https://www.last.fm/).\n\"\"\"\ntype LastFMCountry {\n  \"\"\"The top artists in this country, ordered by popularity.\"\"\"\n  topArtists(\n    \"\"\"The maximum number of artists to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more artists will be retrieved.\"\"\"\n    after: String\n  ): LastFMArtistConnection\n\n  \"\"\"The top tracks in this country, ordered by popularity.\"\"\"\n  topTracks(\n    \"\"\"The maximum number of tracks to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more tracks will be retrieved.\"\"\"\n    after: String\n  ): LastFMTrackConnection\n}\n\n\"\"\"\nA [URL](https://musicbrainz.org/doc/URL) pointing to a resource\nexternal to MusicBrainz, i.e. an official homepage, a site where music can be\nacquired, an entry in another database, etc.\n\"\"\"\ntype URL implements Node & Entity {\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n\n  \"\"\"The MBID of the entity.\"\"\"\n  mbid: MBID!\n\n  \"\"\"The actual URL string.\"\"\"\n  resource: URLString!\n\n  \"\"\"Relationships between this entity and other entitites.\"\"\"\n  relationships: Relationships\n}\n\n\"\"\"\nA query for all MusicBrainz entities directly linked to another\nentity.\n\"\"\"\ntype BrowseQuery {\n  \"\"\"Browse area entities linked to the given arguments.\"\"\"\n  areas(\n    \"\"\"The MBID of a collection in which the entity is found.\"\"\"\n    collection: MBID\n    after: String\n    first: Int\n  ): AreaConnection\n\n  \"\"\"Browse artist entities linked to the given arguments.\"\"\"\n  artists(\n    \"\"\"The MBID of an area to which the entity is linked.\"\"\"\n    area: MBID\n\n    \"\"\"The MBID of a collection in which the entity is found.\"\"\"\n    collection: MBID\n\n    \"\"\"The MBID of a recording to which the entity is linked.\"\"\"\n    recording: MBID\n\n    \"\"\"The MBID of a release to which the entity is linked.\"\"\"\n    release: MBID\n\n    \"\"\"The MBID of a release group to which the entity is linked.\"\"\"\n    releaseGroup: MBID\n\n    \"\"\"The MBID of a work to which the entity is linked.\"\"\"\n    work: MBID\n    after: String\n    first: Int\n  ): ArtistConnection\n\n  \"\"\"Browse collection entities linked to the given arguments.\"\"\"\n  collections(\n    \"\"\"The MBID of an area to which the entity is linked.\"\"\"\n    area: MBID\n\n    \"\"\"The MBID of an artist to which the entity is linked.\"\"\"\n    artist: MBID\n\n    \"\"\"The username of the editor who created the collection.\"\"\"\n    editor: String\n\n    \"\"\"The MBID of an event to which the entity is linked.\"\"\"\n    event: MBID\n\n    \"\"\"The MBID of a label to which the entity is linked.\"\"\"\n    label: MBID\n\n    \"\"\"The MBID of a place to which the entity is linked.\"\"\"\n    place: MBID\n\n    \"\"\"The MBID of a recording to which the entity is linked.\"\"\"\n    recording: MBID\n\n    \"\"\"The MBID of a release to which the entity is linked.\"\"\"\n    release: MBID\n\n    \"\"\"The MBID of a release group to which the entity is linked.\"\"\"\n    releaseGroup: MBID\n\n    \"\"\"The MBID of a work to which the entity is linked.\"\"\"\n    work: MBID\n    after: String\n    first: Int\n  ): CollectionConnection\n\n  \"\"\"Browse event entities linked to the given arguments.\"\"\"\n  events(\n    \"\"\"The MBID of an area to which the entity is linked.\"\"\"\n    area: MBID\n\n    \"\"\"The MBID of an artist to which the entity is linked.\"\"\"\n    artist: MBID\n\n    \"\"\"The MBID of a collection in which the entity is found.\"\"\"\n    collection: MBID\n\n    \"\"\"The MBID of a place to which the entity is linked.\"\"\"\n    place: MBID\n    after: String\n    first: Int\n  ): EventConnection\n\n  \"\"\"Browse label entities linked to the given arguments.\"\"\"\n  labels(\n    \"\"\"The MBID of an area to which the entity is linked.\"\"\"\n    area: MBID\n\n    \"\"\"The MBID of a collection in which the entity is found.\"\"\"\n    collection: MBID\n\n    \"\"\"The MBID of a release to which the entity is linked.\"\"\"\n    release: MBID\n    after: String\n    first: Int\n  ): LabelConnection\n\n  \"\"\"Browse place entities linked to the given arguments.\"\"\"\n  places(\n    \"\"\"The MBID of an area to which the entity is linked.\"\"\"\n    area: MBID\n\n    \"\"\"The MBID of a collection in which the entity is found.\"\"\"\n    collection: MBID\n    after: String\n    first: Int\n  ): PlaceConnection\n\n  \"\"\"Browse recording entities linked to the given arguments.\"\"\"\n  recordings(\n    \"\"\"The MBID of an artist to which the entity is linked.\"\"\"\n    artist: MBID\n\n    \"\"\"The MBID of a collection in which the entity is found.\"\"\"\n    collection: MBID\n\n    \"\"\"\n    The [International Standard Recording Code](https://musicbrainz.org/doc/ISRC)\n    (ISRC) of the recording.\n    \"\"\"\n    isrc: ISRC\n\n    \"\"\"The MBID of a release to which the entity is linked.\"\"\"\n    release: MBID\n    after: String\n    first: Int\n  ): RecordingConnection\n\n  \"\"\"Browse release entities linked to the given arguments.\"\"\"\n  releases(\n    \"\"\"The MBID of an area to which the entity is linked.\"\"\"\n    area: MBID\n\n    \"\"\"The MBID of an artist to which the entity is linked.\"\"\"\n    artist: MBID\n\n    \"\"\"The MBID of a collection in which the entity is found.\"\"\"\n    collection: MBID\n\n    \"\"\"\n    A [disc ID](https://musicbrainz.org/doc/Disc_ID)\n    associated with the release.\n    \"\"\"\n    discID: DiscID\n\n    \"\"\"The MBID of a label to which the entity is linked.\"\"\"\n    label: MBID\n\n    \"\"\"The MBID of a recording to which the entity is linked.\"\"\"\n    recording: MBID\n\n    \"\"\"The MBID of a release group to which the entity is linked.\"\"\"\n    releaseGroup: MBID\n\n    \"\"\"The MBID of a track that is included in the release.\"\"\"\n    track: MBID\n\n    \"\"\"\n    The MBID of an artist that appears on a track in the\n    release, but is not included in the credits for the release itself.\n    \"\"\"\n    trackArtist: MBID\n\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n\n    \"\"\"Filter by one or more release statuses.\"\"\"\n    status: [ReleaseStatus]\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"Browse release group entities linked to the given arguments.\"\"\"\n  releaseGroups(\n    \"\"\"The MBID of an artist to which the entity is linked.\"\"\"\n    artist: MBID\n\n    \"\"\"The MBID of a collection in which the entity is found.\"\"\"\n    collection: MBID\n\n    \"\"\"The MBID of a release to which the entity is linked.\"\"\"\n    release: MBID\n\n    \"\"\"Filter by one or more release group types.\"\"\"\n    type: [ReleaseGroupType]\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"Browse work entities linked to the given arguments.\"\"\"\n  works(\n    \"\"\"The MBID of an artist to which the entity is linked.\"\"\"\n    artist: MBID\n\n    \"\"\"The MBID of a collection in which the entity is found.\"\"\"\n    collection: MBID\n\n    \"\"\"\n    The [International Standard Musical Work Code](https://musicbrainz.org/doc/ISWC)\n    (ISWC) of the work.\n    \"\"\"\n    iswc: ISWC\n    after: String\n    first: Int\n  ): WorkConnection\n}\n\n\"\"\"\nThe [International Standard Musical Work Code](https://musicbrainz.org/doc/ISWC)\n(ISWC) is an ISO standard similar to ISBNs for identifying musical works /\ncompositions.\n\"\"\"\nscalar ISWC\n\n\"\"\"A search for MusicBrainz entities using Lucene query syntax.\"\"\"\ntype SearchQuery {\n  \"\"\"Search for area entities matching the given query.\"\"\"\n  areas(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): AreaConnection\n\n  \"\"\"Search for artist entities matching the given query.\"\"\"\n  artists(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): ArtistConnection\n\n  \"\"\"Search for event entities matching the given query.\"\"\"\n  events(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): EventConnection\n\n  \"\"\"Search for instrument entities matching the given query.\"\"\"\n  instruments(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): InstrumentConnection\n\n  \"\"\"Search for label entities matching the given query.\"\"\"\n  labels(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): LabelConnection\n\n  \"\"\"Search for place entities matching the given query.\"\"\"\n  places(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): PlaceConnection\n\n  \"\"\"Search for recording entities matching the given query.\"\"\"\n  recordings(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): RecordingConnection\n\n  \"\"\"Search for release entities matching the given query.\"\"\"\n  releases(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): ReleaseConnection\n\n  \"\"\"Search for release group entities matching the given query.\"\"\"\n  releaseGroups(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): ReleaseGroupConnection\n\n  \"\"\"Search for series entities matching the given query.\"\"\"\n  series(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): SeriesConnection\n\n  \"\"\"Search for work entities matching the given query.\"\"\"\n  works(\n    \"\"\"\n    The query terms, in Lucene search syntax. See [examples\n    and search fields](https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search).\n    \"\"\"\n    query: String!\n    after: String\n    first: Int\n  ): WorkConnection\n}\n\n\"\"\"\nThe different types of [Last.fm](https://www.last.fm/) queries that can be\nmade that are not connected to any particular MusicBrainz entity.\n\"\"\"\ntype LastFMQuery {\n  \"\"\"A query for chart data.\"\"\"\n  chart: LastFMChartQuery!\n}\n\n\"\"\"A query for chart data on [Last.fm](https://www.last.fm/).\"\"\"\ntype LastFMChartQuery {\n  \"\"\"\n  The most popular artists, ordered by popularity. If a country code is\n  given, retrieve the most popular artists in that country.\n  \"\"\"\n  topArtists(\n    \"\"\"\n    A two-letter [ISO 3166 country code](https://en.wikipedia.org/wiki/ISO_3166).\n    \"\"\"\n    country: String\n\n    \"\"\"The maximum number of artists to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more artists will be retrieved.\"\"\"\n    after: String\n  ): LastFMArtistConnection\n\n  \"\"\"The most popular tags, ordered by popularity.\"\"\"\n  topTags(\n    \"\"\"The maximum number of tags to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more tags will be retrieved.\"\"\"\n    after: String\n  ): LastFMTagConnection\n\n  \"\"\"\n  The most popular tracks, ordered by popularity. If a country code is\n  given, retrieve the most popular tracks in that country.\n  \"\"\"\n  topTracks(\n    \"\"\"\n    A two-letter [ISO 3166 country code](https://en.wikipedia.org/wiki/ISO_3166).\n    \"\"\"\n    country: String\n\n    \"\"\"The maximum number of tracks to retrieve.\"\"\"\n    first: Int = 25\n\n    \"\"\"The cursor of the edge after which more tracks will be retrieved.\"\"\"\n    after: String\n  ): LastFMTrackConnection\n}\n\ntype SpotifyQuery {\n  \"\"\"Track recommendations based on seed entities and various parameters.\"\"\"\n  recommendations(\n    \"\"\"\n    A list of [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n    for seed artists. Up to 5 seed values may be provided in any combination\n    of `seedArtists`, `seedTracks`, and `seedGenres`.\n    \"\"\"\n    seedArtists: [ID!] = []\n\n    \"\"\"\n    A comma separated list of any genres in the set of [available genre seeds](https://developer.spotify.com/documentation/web-api/reference/browse/get-recommendations/#available-genre-seeds).\n    Up to 5 seed values may be provided in any combination of `seedArtists`,\n    `seedTracks`, and `seedGenres`.\n    \"\"\"\n    seedGenres: [ID!] = []\n\n    \"\"\"\n    A list of [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)\n    for seed tracks. Up to 5 seed values may be provided in any combination\n    of `seedArtists`, `seedTracks`, and `seedGenres`.\n    \"\"\"\n    seedTracks: [ID!] = []\n\n    \"\"\"\n    The target size of the list of recommended tracks. For seeds with\n    unusually small pools or when highly restrictive filtering is applied, it\n    may be impossible to generate the requested number of recommended tracks.\n    Debugging information for such cases is available in the response.\n    \n    Default: 20. Minimum: 1. Maximum: 100.\n    \"\"\"\n    limit: Int\n  ): SpotifyRecommendations!\n}\n\ntype SpotifyRecommendations {\n  tracks: [SpotifyTrack!]!\n}\n\n\"\"\"A connection to a list of Discogs releases.\"\"\"\ntype DiscogsReleaseConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [DiscogsReleaseEdge!]!\n\n  \"\"\"\n  A list of nodes in the connection (without going through the `edges` field).\n  \"\"\"\n  nodes: [DiscogsRelease!]!\n\n  \"\"\"\n  A count of the total number of items in this connection, ignoring pagination.\n  \"\"\"\n  totalCount: Int\n}\n\n\"\"\"An edge in a Discogs release connection.\"\"\"\ntype DiscogsReleaseEdge {\n  \"\"\"The release at the end of the edge.\"\"\"\n  node: DiscogsRelease!\n}",
    "Planets": "type Query {\n  planet(code: String): PlanetType\n}\n\ntype PlanetType {\n  \"\"\"\"\"\"\n  id: ID!\n\n  \"\"\"\"\"\"\n  massKg: String!\n\n  \"\"\"\"\"\"\n  radiusKm: String!\n\n  \"\"\"\"\"\"\n  orbitDays: String!\n\n  \"\"\"\"\"\"\n  semimajorAu: String!\n\n  \"\"\"\"\"\"\n  discoveryMethod: String!\n\n  \"\"\"\"\"\"\n  name: String!\n}",
    "React Finland": "type Query {\n  conference(id: ID!): Conference!\n  conferences: [Conference!]!\n  allConferences: [Conference!]! @deprecated(reason: \"Use `conferences` instead\")\n  contact(conferenceId: ID!, contactName: String!): Contact!\n  locations: [Contact!]!\n  people: [Contact!]!\n  sponsors: [Contact!]!\n  schedule(day: String!, conferenceId: ID!): Schedule!\n  series(id: ID!): Series!\n  allSeries: [Series!]!\n  themes: [Theme!]!\n  theme(conferenceId: ID!): Theme!\n}\n\ntype Conference {\n  id: ID!\n  series: String!\n  name: String!\n  organizer: Contact!\n  year: String!\n  startDate: String!\n  endDate: String!\n  slogan: String!\n  websiteUrl: String!\n  locations: [Location!]\n  organizers: [Contact!]!\n  mcs: [Contact!]\n  partners: [Contact!]\n  sponsors: [Contact!]!\n  goldSponsors: [Contact!]\n  silverSponsors: [Contact!]\n  bronzeSponsors: [Contact!]\n  platformSponsors: [Contact!]\n  schedules: [Schedule!]!\n  allSpeakers: [Contact!]\n  speakers: [Contact!]\n  keynoteSpeakers: [Contact!]\n  fullTalkSpeakers: [Contact!]\n  lightningTalkSpeakers: [Contact!]\n  workshopInstructors: [Contact!]\n  talks: [Session!]\n  workshops: [Session!]\n  attendees: [Contact!]!\n  keynotes: [Session!]!\n  fullTalks: [Session!]!\n  lightningTalks: [Session!]!\n}\n\ntype Contact {\n  firstName: String!\n  lastName: String!\n  name: String!\n  about: String!\n  aboutShort: String\n  company: String\n  image: Image!\n  type: [ContactType!]!\n  social: Social!\n  keywords: [String!]\n  location: Location!\n  talks: [Session!]\n  workshops: [Session!]\n  noPhotography: Boolean\n  country: Country! @deprecated(reason: \"Use `location` instead\")\n}\n\ntype Image {\n  url: String!\n  title: String\n  style: Style\n}\n\ntype Style {\n  backgroundSize: String!\n}\n\n\"\"\"Type of the contact\"\"\"\nenum ContactType {\n  PRESS\n  SPEAKER\n  TALK\n  LIGHTNING_TALK\n  KEYNOTE\n  WORKSHOP\n  WORKSHOP_HOST\n  ORGANIZER\n  SPONSOR\n  GOLD_SPONSOR\n  SILVER_SPONSOR\n  BRONZE_SPONSOR\n  PLATFORM_SPONSOR\n  PARTNER\n  ATTENDEE\n}\n\ntype Social {\n  homepage: String\n  twitter: String\n  github: String\n  facebook: String\n  googleMaps: String\n  medium: String\n  instagram: String\n  linkedin: String\n  youtube: String\n  vk: String\n  pinterest: String\n  vimeo: String\n  dribble: String\n  devto: String\n}\n\ntype Location {\n  name: String\n  about: String\n  image: Image\n  social: Social\n  country: Country\n  city: String\n  address: String\n}\n\ntype Country {\n  name: String!\n  code: String!\n}\n\ntype Session {\n  type: SessionType!\n  title: String!\n  hasTitle: Boolean!\n  description: String\n  keywords: [String!]\n  location: Location\n  people: [Contact!]\n  urls: SessionUrls\n  sessions: [Session!]\n  speakers: [Contact!]! @deprecated(reason: \"Use `people` instead\")\n}\n\n\"\"\"Type of the session\"\"\"\nenum SessionType {\n  TALK\n  LIGHTNING_TALK\n  KEYNOTE\n  WORKSHOP\n  PANEL\n  BREAKFAST\n  LUNCH\n  COFFEE_BREAK\n  ORGANIZATIONAL\n  PARTY\n}\n\ntype SessionUrls {\n  web: String\n  slides: String\n  video: String\n}\n\ntype Schedule {\n  day: String!\n  location: Location\n  description: String\n  intervals: [Interval!]!\n}\n\ntype Interval {\n  begin: String!\n  end: String!\n  title: String\n  sessions: [Session!]!\n  location: Location\n}\n\ntype Series {\n  id: ID!\n  name: String!\n  conferences: [Conference!]!\n}\n\ntype Theme {\n  id: ID!\n  fonts: Fonts!\n  textures: [Image!]!\n  colors: Colors!\n  logos: Logos!\n}\n\ntype Fonts {\n  primary: String!\n  secondary: String!\n  variants: [Font!]!\n}\n\ntype Font {\n  family: String\n  weight: String\n  style: String\n  fileName: String\n  formats: [String!]\n  href: String\n}\n\ntype Colors {\n  primary: String!\n  secondary: String!\n  text: String!\n  background: String!\n}\n\ntype Logos {\n  black: WithWithoutText!\n  colored: WithWithoutText!\n  white: WithWithoutText!\n}\n\ntype WithWithoutText {\n  withoutText: Image!\n  withText: Image!\n}",
    "SWAPI": "schema {\n  query: Root\n}\n\ntype Root {\n  allFilms(after: String, first: Int, before: String, last: Int): FilmsConnection\n  film(id: ID, filmID: ID): Film\n  allPeople(after: String, first: Int, before: String, last: Int): PeopleConnection\n  person(id: ID, personID: ID): Person\n  allPlanets(after: String, first: Int, before: String, last: Int): PlanetsConnection\n  planet(id: ID, planetID: ID): Planet\n  allSpecies(after: String, first: Int, before: String, last: Int): SpeciesConnection\n  species(id: ID, speciesID: ID): Species\n  allStarships(after: String, first: Int, before: String, last: Int): StarshipsConnection\n  starship(id: ID, starshipID: ID): Starship\n  allVehicles(after: String, first: Int, before: String, last: Int): VehiclesConnection\n  vehicle(id: ID, vehicleID: ID): Vehicle\n\n  \"\"\"Fetches an object given its ID\"\"\"\n  node(\n    \"\"\"The ID of an object\"\"\"\n    id: ID!\n  ): Node\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n}\n\n\"\"\"Information about pagination in a connection.\"\"\"\ntype PageInfo {\n  \"\"\"When paginating forwards, are there more items?\"\"\"\n  hasNextPage: Boolean!\n\n  \"\"\"When paginating backwards, are there more items?\"\"\"\n  hasPreviousPage: Boolean!\n\n  \"\"\"When paginating backwards, the cursor to continue.\"\"\"\n  startCursor: String\n\n  \"\"\"When paginating forwards, the cursor to continue.\"\"\"\n  endCursor: String\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A single film.\"\"\"\ntype Film implements Node {\n  \"\"\"The title of this film.\"\"\"\n  title: String\n\n  \"\"\"The episode number of this film.\"\"\"\n  episodeID: Int\n\n  \"\"\"The opening paragraphs at the beginning of this film.\"\"\"\n  openingCrawl: String\n\n  \"\"\"The name of the director of this film.\"\"\"\n  director: String\n\n  \"\"\"The name(s) of the producer(s) of this film.\"\"\"\n  producers: [String]\n\n  \"\"\"The ISO 8601 date format of film release at original creator country.\"\"\"\n  releaseDate: String\n  speciesConnection(after: String, first: Int, before: String, last: Int): FilmSpeciesConnection\n  starshipConnection(after: String, first: Int, before: String, last: Int): FilmStarshipsConnection\n  vehicleConnection(after: String, first: Int, before: String, last: Int): FilmVehiclesConnection\n  characterConnection(after: String, first: Int, before: String, last: Int): FilmCharactersConnection\n  planetConnection(after: String, first: Int, before: String, last: Int): FilmPlanetsConnection\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n}\n\n\"\"\"An object with an ID\"\"\"\ninterface Node {\n  \"\"\"The id of the object.\"\"\"\n  id: ID!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmSpeciesConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmSpeciesEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  species: [Species]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmSpeciesEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Species\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A type of person or character within the Star Wars Universe.\"\"\"\ntype Species implements Node {\n  \"\"\"The name of this species.\"\"\"\n  name: String\n\n  \"\"\"The classification of this species, such as \"mammal\" or \"reptile\".\"\"\"\n  classification: String\n\n  \"\"\"The designation of this species, such as \"sentient\".\"\"\"\n  designation: String\n\n  \"\"\"The average height of this species in centimeters.\"\"\"\n  averageHeight: Float\n\n  \"\"\"The average lifespan of this species in years, null if unknown.\"\"\"\n  averageLifespan: Int\n\n  \"\"\"\n  Common eye colors for this species, null if this species does not typically\n  have eyes.\n  \"\"\"\n  eyeColors: [String]\n\n  \"\"\"\n  Common hair colors for this species, null if this species does not typically\n  have hair.\n  \"\"\"\n  hairColors: [String]\n\n  \"\"\"\n  Common skin colors for this species, null if this species does not typically\n  have skin.\n  \"\"\"\n  skinColors: [String]\n\n  \"\"\"The language commonly spoken by this species.\"\"\"\n  language: String\n\n  \"\"\"A planet that this species originates from.\"\"\"\n  homeworld: Planet\n  personConnection(after: String, first: Int, before: String, last: Int): SpeciesPeopleConnection\n  filmConnection(after: String, first: Int, before: String, last: Int): SpeciesFilmsConnection\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n}\n\n\"\"\"\nA large mass, planet or planetoid in the Star Wars Universe, at the time of\n0 ABY.\n\"\"\"\ntype Planet implements Node {\n  \"\"\"The name of this planet.\"\"\"\n  name: String\n\n  \"\"\"The diameter of this planet in kilometers.\"\"\"\n  diameter: Int\n\n  \"\"\"\n  The number of standard hours it takes for this planet to complete a single\n  rotation on its axis.\n  \"\"\"\n  rotationPeriod: Int\n\n  \"\"\"\n  The number of standard days it takes for this planet to complete a single orbit\n  of its local star.\n  \"\"\"\n  orbitalPeriod: Int\n\n  \"\"\"\n  A number denoting the gravity of this planet, where \"1\" is normal or 1 standard\n  G. \"2\" is twice or 2 standard Gs. \"0.5\" is half or 0.5 standard Gs.\n  \"\"\"\n  gravity: String\n\n  \"\"\"The average population of sentient beings inhabiting this planet.\"\"\"\n  population: Float\n\n  \"\"\"The climates of this planet.\"\"\"\n  climates: [String]\n\n  \"\"\"The terrains of this planet.\"\"\"\n  terrains: [String]\n\n  \"\"\"\n  The percentage of the planet surface that is naturally occuring water or bodies\n  of water.\n  \"\"\"\n  surfaceWater: Float\n  residentConnection(after: String, first: Int, before: String, last: Int): PlanetResidentsConnection\n  filmConnection(after: String, first: Int, before: String, last: Int): PlanetFilmsConnection\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PlanetResidentsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PlanetResidentsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  residents: [Person]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PlanetResidentsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"An individual person or character within the Star Wars universe.\"\"\"\ntype Person implements Node {\n  \"\"\"The name of this person.\"\"\"\n  name: String\n\n  \"\"\"\n  The birth year of the person, using the in-universe standard of BBY or ABY -\n  Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin is\n  a battle that occurs at the end of Star Wars episode IV: A New Hope.\n  \"\"\"\n  birthYear: String\n\n  \"\"\"\n  The eye color of this person. Will be \"unknown\" if not known or \"n/a\" if the\n  person does not have an eye.\n  \"\"\"\n  eyeColor: String\n\n  \"\"\"\n  The gender of this person. Either \"Male\", \"Female\" or \"unknown\",\n  \"n/a\" if the person does not have a gender.\n  \"\"\"\n  gender: String\n\n  \"\"\"\n  The hair color of this person. Will be \"unknown\" if not known or \"n/a\" if the\n  person does not have hair.\n  \"\"\"\n  hairColor: String\n\n  \"\"\"The height of the person in centimeters.\"\"\"\n  height: Int\n\n  \"\"\"The mass of the person in kilograms.\"\"\"\n  mass: Float\n\n  \"\"\"The skin color of this person.\"\"\"\n  skinColor: String\n\n  \"\"\"A planet that this person was born on or inhabits.\"\"\"\n  homeworld: Planet\n  filmConnection(after: String, first: Int, before: String, last: Int): PersonFilmsConnection\n\n  \"\"\"The species that this person belongs to, or null if unknown.\"\"\"\n  species: Species\n  starshipConnection(after: String, first: Int, before: String, last: Int): PersonStarshipsConnection\n  vehicleConnection(after: String, first: Int, before: String, last: Int): PersonVehiclesConnection\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PersonFilmsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PersonFilmsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PersonFilmsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PersonStarshipsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PersonStarshipsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  starships: [Starship]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PersonStarshipsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Starship\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A single transport craft that has hyperdrive capability.\"\"\"\ntype Starship implements Node {\n  \"\"\"The name of this starship. The common name, such as \"Death Star\".\"\"\"\n  name: String\n\n  \"\"\"\n  The model or official name of this starship. Such as \"T-65 X-wing\" or \"DS-1\n  Orbital Battle Station\".\n  \"\"\"\n  model: String\n\n  \"\"\"\n  The class of this starship, such as \"Starfighter\" or \"Deep Space Mobile\n  Battlestation\"\n  \"\"\"\n  starshipClass: String\n\n  \"\"\"The manufacturers of this starship.\"\"\"\n  manufacturers: [String]\n\n  \"\"\"The cost of this starship new, in galactic credits.\"\"\"\n  costInCredits: Float\n\n  \"\"\"The length of this starship in meters.\"\"\"\n  length: Float\n\n  \"\"\"The number of personnel needed to run or pilot this starship.\"\"\"\n  crew: String\n\n  \"\"\"The number of non-essential people this starship can transport.\"\"\"\n  passengers: String\n\n  \"\"\"\n  The maximum speed of this starship in atmosphere. null if this starship is\n  incapable of atmosphering flight.\n  \"\"\"\n  maxAtmospheringSpeed: Int\n\n  \"\"\"The class of this starships hyperdrive.\"\"\"\n  hyperdriveRating: Float\n\n  \"\"\"\n  The Maximum number of Megalights this starship can travel in a standard hour.\n  A \"Megalight\" is a standard unit of distance and has never been defined before\n  within the Star Wars universe. This figure is only really useful for measuring\n  the difference in speed of starships. We can assume it is similar to AU, the\n  distance between our Sun (Sol) and Earth.\n  \"\"\"\n  MGLT: Int\n\n  \"\"\"The maximum number of kilograms that this starship can transport.\"\"\"\n  cargoCapacity: Float\n\n  \"\"\"\n  The maximum length of time that this starship can provide consumables for its\n  entire crew without having to resupply.\n  \"\"\"\n  consumables: String\n  pilotConnection(after: String, first: Int, before: String, last: Int): StarshipPilotsConnection\n  filmConnection(after: String, first: Int, before: String, last: Int): StarshipFilmsConnection\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype StarshipPilotsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [StarshipPilotsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  pilots: [Person]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype StarshipPilotsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype StarshipFilmsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [StarshipFilmsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype StarshipFilmsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PersonVehiclesConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PersonVehiclesEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  vehicles: [Vehicle]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PersonVehiclesEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Vehicle\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A single transport craft that does not have hyperdrive capability\"\"\"\ntype Vehicle implements Node {\n  \"\"\"\n  The name of this vehicle. The common name, such as \"Sand Crawler\" or \"Speeder\n  bike\".\n  \"\"\"\n  name: String\n\n  \"\"\"\n  The model or official name of this vehicle. Such as \"All-Terrain Attack\n  Transport\".\n  \"\"\"\n  model: String\n\n  \"\"\"The class of this vehicle, such as \"Wheeled\" or \"Repulsorcraft\".\"\"\"\n  vehicleClass: String\n\n  \"\"\"The manufacturers of this vehicle.\"\"\"\n  manufacturers: [String]\n\n  \"\"\"The cost of this vehicle new, in Galactic Credits.\"\"\"\n  costInCredits: Float\n\n  \"\"\"The length of this vehicle in meters.\"\"\"\n  length: Float\n\n  \"\"\"The number of personnel needed to run or pilot this vehicle.\"\"\"\n  crew: String\n\n  \"\"\"The number of non-essential people this vehicle can transport.\"\"\"\n  passengers: String\n\n  \"\"\"The maximum speed of this vehicle in atmosphere.\"\"\"\n  maxAtmospheringSpeed: Int\n\n  \"\"\"The maximum number of kilograms that this vehicle can transport.\"\"\"\n  cargoCapacity: Float\n\n  \"\"\"\n  The maximum length of time that this vehicle can provide consumables for its\n  entire crew without having to resupply.\n  \"\"\"\n  consumables: String\n  pilotConnection(after: String, first: Int, before: String, last: Int): VehiclePilotsConnection\n  filmConnection(after: String, first: Int, before: String, last: Int): VehicleFilmsConnection\n\n  \"\"\"The ISO 8601 date format of the time that this resource was created.\"\"\"\n  created: String\n\n  \"\"\"The ISO 8601 date format of the time that this resource was edited.\"\"\"\n  edited: String\n\n  \"\"\"The ID of an object\"\"\"\n  id: ID!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VehiclePilotsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [VehiclePilotsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  pilots: [Person]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VehiclePilotsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VehicleFilmsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [VehicleFilmsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VehicleFilmsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PlanetFilmsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PlanetFilmsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PlanetFilmsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SpeciesPeopleConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SpeciesPeopleEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  people: [Person]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SpeciesPeopleEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SpeciesFilmsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SpeciesFilmsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  films: [Film]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SpeciesFilmsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Film\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmStarshipsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmStarshipsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  starships: [Starship]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmStarshipsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Starship\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmVehiclesConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmVehiclesEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  vehicles: [Vehicle]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmVehiclesEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Vehicle\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmCharactersConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmCharactersEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  characters: [Person]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmCharactersEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype FilmPlanetsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [FilmPlanetsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  planets: [Planet]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype FilmPlanetsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Planet\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PeopleConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PeopleEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  people: [Person]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PeopleEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Person\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype PlanetsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [PlanetsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  planets: [Planet]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype PlanetsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Planet\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype SpeciesConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [SpeciesEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  species: [Species]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype SpeciesEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Species\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype StarshipsConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [StarshipsEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  starships: [Starship]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype StarshipsEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Starship\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}\n\n\"\"\"A connection to a list of items.\"\"\"\ntype VehiclesConnection {\n  \"\"\"Information to aid in pagination.\"\"\"\n  pageInfo: PageInfo!\n\n  \"\"\"A list of edges.\"\"\"\n  edges: [VehiclesEdge]\n\n  \"\"\"\n  A count of the total number of objects in this connection, ignoring pagination.\n  This allows a client to fetch the first five objects by passing \"5\" as the\n  argument to \"first\", then fetch the total count so it could display \"5 of 83\",\n  for example.\n  \"\"\"\n  totalCount: Int\n\n  \"\"\"\n  A list of all of the objects returned in the connection. This is a convenience\n  field provided for quickly exploring the API; rather than querying for\n  \"{ edges { node } }\" when no edge data is needed, this field can be be used\n  instead. Note that when clients like Relay need to fetch the \"cursor\" field on\n  the edge to enable efficient pagination, this shortcut cannot be used, and the\n  full \"{ edges { node } }\" version should be used instead.\n  \"\"\"\n  vehicles: [Vehicle]\n}\n\n\"\"\"An edge in a connection.\"\"\"\ntype VehiclesEdge {\n  \"\"\"The item at the end of the edge\"\"\"\n  node: Vehicle\n\n  \"\"\"A cursor for use in pagination\"\"\"\n  cursor: String!\n}",
    "Spacex Land": "type Query {\n  \"\"\"\n  fetch data from the table: \"users\"\n  \"\"\"\n  users(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): [users!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"users\"\n  \"\"\"\n  users_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): users_aggregate!\n\n  \"\"\"fetch data from the table: \"users\" using primary key columns\"\"\"\n  users_by_pk(id: uuid!): users\n\n  \"\"\"\"\"\"\n  capsules(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n\n  \"\"\"\"\"\"\n  capsulesPast(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n\n  \"\"\"\"\"\"\n  capsulesUpcoming(find: CapsulesFind, limit: Int, offset: Int, order: String, sort: String): [Capsule]\n\n  \"\"\"\"\"\"\n  capsule(id: ID!): Capsule\n\n  \"\"\"\"\"\"\n  company: Info\n\n  \"\"\"\"\"\"\n  cores(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n\n  \"\"\"\"\"\"\n  coresPast(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n\n  \"\"\"\"\"\"\n  coresUpcoming(find: CoresFind, limit: Int, offset: Int, order: String, sort: String): [Core]\n\n  \"\"\"\"\"\"\n  core(id: ID!): Core\n\n  \"\"\"\"\"\"\n  dragons(limit: Int, offset: Int): [Dragon]\n\n  \"\"\"\"\"\"\n  dragon(id: ID!): Dragon\n\n  \"\"\"\"\"\"\n  histories(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): [History]\n\n  \"\"\"\"\"\"\n  historiesResult(find: HistoryFind, limit: Int, offset: Int, order: String, sort: String): HistoriesResult\n\n  \"\"\"\"\"\"\n  history(id: ID!): History\n\n  \"\"\"\"\"\"\n  landpads(limit: Int, offset: Int): [Landpad]\n\n  \"\"\"\"\"\"\n  landpad(id: ID!): Landpad\n\n  \"\"\"\"\"\"\n  launches(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n\n  \"\"\"\"\"\"\n  launchesPast(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n\n  \"\"\"\"\"\"\n  launchesPastResult(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): LaunchesPastResult\n\n  \"\"\"\"\"\"\n  launchesUpcoming(find: LaunchFind, limit: Int, offset: Int, order: String, sort: String): [Launch]\n\n  \"\"\"\"\"\"\n  launch(id: ID!): Launch\n\n  \"\"\"\"\"\"\n  launchLatest(offset: Int): Launch\n\n  \"\"\"\"\"\"\n  launchNext(offset: Int): Launch\n\n  \"\"\"\"\"\"\n  launchpads(limit: Int, offset: Int): [Launchpad]\n\n  \"\"\"\"\"\"\n  launchpad(id: ID!): Launchpad\n\n  \"\"\"\"\"\"\n  missions(find: MissionsFind, limit: Int, offset: Int): [Mission]\n\n  \"\"\"\"\"\"\n  missionsResult(find: MissionsFind, limit: Int, offset: Int): MissionResult\n\n  \"\"\"\"\"\"\n  mission(id: ID!): Mission\n\n  \"\"\"\"\"\"\n  payloads(find: PayloadsFind, limit: Int, offset: Int, order: String, sort: String): [Payload]\n\n  \"\"\"\"\"\"\n  payload(id: ID!): Payload\n\n  \"\"\"\"\"\"\n  roadster: Roadster\n\n  \"\"\"\"\"\"\n  rockets(limit: Int, offset: Int): [Rocket]\n\n  \"\"\"\"\"\"\n  rocketsResult(limit: Int, offset: Int): RocketsResult\n\n  \"\"\"\"\"\"\n  rocket(id: ID!): Rocket\n\n  \"\"\"\"\"\"\n  ships(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): [Ship]\n\n  \"\"\"\"\"\"\n  shipsResult(find: ShipsFind, limit: Int, offset: Int, order: String, sort: String): ShipsResult\n\n  \"\"\"\"\"\"\n  ship(id: ID!): Ship\n}\n\n\"\"\"\nselect columns of table \"users\"\n\"\"\"\nenum users_select_column {\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  rocket\n\n  \"\"\"column name\"\"\"\n  timestamp\n\n  \"\"\"column name\"\"\"\n  twitter\n}\n\n\"\"\"\nordering options when selecting data from \"users\"\n\"\"\"\ninput users_order_by {\n  \"\"\"\"\"\"\n  id: order_by\n\n  \"\"\"\"\"\"\n  name: order_by\n\n  \"\"\"\"\"\"\n  rocket: order_by\n\n  \"\"\"\"\"\"\n  timestamp: order_by\n\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"column ordering options\"\"\"\nenum order_by {\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc\n\n  \"\"\"in the ascending order, nulls first\"\"\"\n  asc_nulls_first\n\n  \"\"\"in the ascending order, nulls last\"\"\"\n  asc_nulls_last\n\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc\n\n  \"\"\"in the descending order, nulls first\"\"\"\n  desc_nulls_first\n\n  \"\"\"in the descending order, nulls last\"\"\"\n  desc_nulls_last\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"users\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput users_bool_exp {\n  \"\"\"\"\"\"\n  _and: [users_bool_exp]\n\n  \"\"\"\"\"\"\n  _not: users_bool_exp\n\n  \"\"\"\"\"\"\n  _or: [users_bool_exp]\n\n  \"\"\"\"\"\"\n  id: uuid_comparison_exp\n\n  \"\"\"\"\"\"\n  name: String_comparison_exp\n\n  \"\"\"\"\"\"\n  rocket: String_comparison_exp\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz_comparison_exp\n\n  \"\"\"\"\"\"\n  twitter: String_comparison_exp\n}\n\n\"\"\"\nexpression to compare columns of type uuid. All fields are combined with logical 'AND'.\n\"\"\"\ninput uuid_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: uuid\n\n  \"\"\"\"\"\"\n  _gt: uuid\n\n  \"\"\"\"\"\"\n  _gte: uuid\n\n  \"\"\"\"\"\"\n  _in: [uuid!]\n\n  \"\"\"\"\"\"\n  _is_null: Boolean\n\n  \"\"\"\"\"\"\n  _lt: uuid\n\n  \"\"\"\"\"\"\n  _lte: uuid\n\n  \"\"\"\"\"\"\n  _neq: uuid\n\n  \"\"\"\"\"\"\n  _nin: [uuid!]\n}\n\nscalar uuid\n\n\"\"\"\nexpression to compare columns of type String. All fields are combined with logical 'AND'.\n\"\"\"\ninput String_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: String\n\n  \"\"\"\"\"\"\n  _gt: String\n\n  \"\"\"\"\"\"\n  _gte: String\n\n  \"\"\"\"\"\"\n  _ilike: String\n\n  \"\"\"\"\"\"\n  _in: [String!]\n\n  \"\"\"\"\"\"\n  _is_null: Boolean\n\n  \"\"\"\"\"\"\n  _like: String\n\n  \"\"\"\"\"\"\n  _lt: String\n\n  \"\"\"\"\"\"\n  _lte: String\n\n  \"\"\"\"\"\"\n  _neq: String\n\n  \"\"\"\"\"\"\n  _nilike: String\n\n  \"\"\"\"\"\"\n  _nin: [String!]\n\n  \"\"\"\"\"\"\n  _nlike: String\n\n  \"\"\"\"\"\"\n  _nsimilar: String\n\n  \"\"\"\"\"\"\n  _similar: String\n}\n\n\"\"\"\nexpression to compare columns of type timestamptz. All fields are combined with logical 'AND'.\n\"\"\"\ninput timestamptz_comparison_exp {\n  \"\"\"\"\"\"\n  _eq: timestamptz\n\n  \"\"\"\"\"\"\n  _gt: timestamptz\n\n  \"\"\"\"\"\"\n  _gte: timestamptz\n\n  \"\"\"\"\"\"\n  _in: [timestamptz!]\n\n  \"\"\"\"\"\"\n  _is_null: Boolean\n\n  \"\"\"\"\"\"\n  _lt: timestamptz\n\n  \"\"\"\"\"\"\n  _lte: timestamptz\n\n  \"\"\"\"\"\"\n  _neq: timestamptz\n\n  \"\"\"\"\"\"\n  _nin: [timestamptz!]\n}\n\nscalar timestamptz\n\n\"\"\"\ncolumns and relationships of \"users\"\n\"\"\"\ntype users {\n  \"\"\"\"\"\"\n  id: uuid!\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz!\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\naggregated selection of \"users\"\n\"\"\"\ntype users_aggregate {\n  \"\"\"\"\"\"\n  aggregate: users_aggregate_fields\n\n  \"\"\"\"\"\"\n  nodes: [users!]!\n}\n\n\"\"\"\naggregate fields of \"users\"\n\"\"\"\ntype users_aggregate_fields {\n  \"\"\"\"\"\"\n  count(columns: [users_select_column!], distinct: Boolean): Int\n\n  \"\"\"\"\"\"\n  max: users_max_fields\n\n  \"\"\"\"\"\"\n  min: users_min_fields\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype users_max_fields {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype users_min_fields {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\"\"\"\ninput CapsulesFind {\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  landings: Int\n\n  \"\"\"\"\"\"\n  mission: String\n\n  \"\"\"\"\"\"\n  original_launch: Date\n\n  \"\"\"\"\"\"\n  reuse_count: Int\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\nscalar Date\n\n\"\"\"\"\"\"\ntype Capsule {\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  landings: Int\n\n  \"\"\"\"\"\"\n  missions: [CapsuleMission]\n\n  \"\"\"\"\"\"\n  original_launch: Date\n\n  \"\"\"\"\"\"\n  reuse_count: Int\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  dragon: Dragon\n}\n\n\"\"\"\"\"\"\ntype CapsuleMission {\n  \"\"\"\"\"\"\n  flight: Int\n\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype Dragon {\n  \"\"\"\"\"\"\n  active: Boolean\n\n  \"\"\"\"\"\"\n  crew_capacity: Int\n\n  \"\"\"\"\"\"\n  description: String\n\n  \"\"\"\"\"\"\n  diameter: Distance\n\n  \"\"\"\"\"\"\n  dry_mass_kg: Int\n\n  \"\"\"\"\"\"\n  dry_mass_lb: Int\n\n  \"\"\"\"\"\"\n  first_flight: String\n\n  \"\"\"\"\"\"\n  heat_shield: DragonHeatShield\n\n  \"\"\"\"\"\"\n  height_w_trunk: Distance\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  launch_payload_mass: Mass\n\n  \"\"\"\"\"\"\n  launch_payload_vol: Volume\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  orbit_duration_yr: Int\n\n  \"\"\"\"\"\"\n  pressurized_capsule: DragonPressurizedCapsule\n\n  \"\"\"\"\"\"\n  return_payload_mass: Mass\n\n  \"\"\"\"\"\"\n  return_payload_vol: Volume\n\n  \"\"\"\"\"\"\n  sidewall_angle_deg: Float\n\n  \"\"\"\"\"\"\n  thrusters: [DragonThrust]\n\n  \"\"\"\"\"\"\n  trunk: DragonTrunk\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Distance {\n  \"\"\"\"\"\"\n  feet: Float\n\n  \"\"\"\"\"\"\n  meters: Float\n}\n\n\"\"\"\"\"\"\ntype DragonHeatShield {\n  \"\"\"\"\"\"\n  dev_partner: String\n\n  \"\"\"\"\"\"\n  material: String\n\n  \"\"\"\"\"\"\n  size_meters: Float\n\n  \"\"\"\"\"\"\n  temp_degrees: Int\n}\n\n\"\"\"\"\"\"\ntype Mass {\n  \"\"\"\"\"\"\n  kg: Int\n\n  \"\"\"\"\"\"\n  lb: Int\n}\n\n\"\"\"\"\"\"\ntype Volume {\n  \"\"\"\"\"\"\n  cubic_feet: Int\n\n  \"\"\"\"\"\"\n  cubic_meters: Int\n}\n\n\"\"\"\"\"\"\ntype DragonPressurizedCapsule {\n  \"\"\"\"\"\"\n  payload_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonThrust {\n  \"\"\"\"\"\"\n  amount: Int\n\n  \"\"\"\"\"\"\n  fuel_1: String\n\n  \"\"\"\"\"\"\n  fuel_2: String\n\n  \"\"\"\"\"\"\n  pods: Int\n\n  \"\"\"\"\"\"\n  thrust: Force\n\n  \"\"\"\"\"\"\n  type: String\n}\n\n\"\"\"\"\"\"\ntype Force {\n  \"\"\"\"\"\"\n  kN: Float\n\n  \"\"\"\"\"\"\n  lbf: Float\n}\n\n\"\"\"\"\"\"\ntype DragonTrunk {\n  \"\"\"\"\"\"\n  cargo: DragonTrunkCargo\n\n  \"\"\"\"\"\"\n  trunk_volume: Volume\n}\n\n\"\"\"\"\"\"\ntype DragonTrunkCargo {\n  \"\"\"\"\"\"\n  solar_array: Int\n\n  \"\"\"\"\"\"\n  unpressurized_cargo: Boolean\n}\n\n\"\"\"\"\"\"\ntype Info {\n  \"\"\"\"\"\"\n  ceo: String\n\n  \"\"\"\"\"\"\n  coo: String\n\n  \"\"\"\"\"\"\n  cto_propulsion: String\n\n  \"\"\"\"\"\"\n  cto: String\n\n  \"\"\"\"\"\"\n  employees: Int\n\n  \"\"\"\"\"\"\n  founded: Int\n\n  \"\"\"\"\"\"\n  founder: String\n\n  \"\"\"\"\"\"\n  headquarters: Address\n\n  \"\"\"\"\"\"\n  launch_sites: Int\n\n  \"\"\"\"\"\"\n  links: InfoLinks\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  summary: String\n\n  \"\"\"\"\"\"\n  test_sites: Int\n\n  \"\"\"\"\"\"\n  valuation: Float\n\n  \"\"\"\"\"\"\n  vehicles: Int\n}\n\n\"\"\"\"\"\"\ntype Address {\n  \"\"\"\"\"\"\n  address: String\n\n  \"\"\"\"\"\"\n  city: String\n\n  \"\"\"\"\"\"\n  state: String\n}\n\n\"\"\"\"\"\"\ntype InfoLinks {\n  \"\"\"\"\"\"\n  elon_twitter: String\n\n  \"\"\"\"\"\"\n  flickr: String\n\n  \"\"\"\"\"\"\n  twitter: String\n\n  \"\"\"\"\"\"\n  website: String\n}\n\n\"\"\"\"\"\"\ninput CoresFind {\n  \"\"\"\"\"\"\n  asds_attempts: Int\n\n  \"\"\"\"\"\"\n  asds_landings: Int\n\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  missions: String\n\n  \"\"\"\"\"\"\n  original_launch: Date\n\n  \"\"\"\"\"\"\n  reuse_count: Int\n\n  \"\"\"\"\"\"\n  rtls_attempts: Int\n\n  \"\"\"\"\"\"\n  rtls_landings: Int\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\ntype Core {\n  \"\"\"\"\"\"\n  asds_attempts: Int\n\n  \"\"\"\"\"\"\n  asds_landings: Int\n\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  missions: [CapsuleMission]\n\n  \"\"\"\"\"\"\n  original_launch: Date\n\n  \"\"\"\"\"\"\n  reuse_count: Int\n\n  \"\"\"\"\"\"\n  rtls_attempts: Int\n\n  \"\"\"\"\"\"\n  rtls_landings: Int\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  water_landing: Boolean\n}\n\n\"\"\"\"\"\"\ninput HistoryFind {\n  \"\"\"\"\"\"\n  end: Date\n\n  \"\"\"\"\"\"\n  flight_number: Int\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  start: Date\n}\n\n\"\"\"\"\"\"\ntype History {\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  event_date_unix: Date\n\n  \"\"\"\"\"\"\n  event_date_utc: Date\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  links: Link\n\n  \"\"\"\"\"\"\n  title: String\n\n  \"\"\"\"\"\"\n  flight: Launch\n}\n\n\"\"\"\"\"\"\ntype Link {\n  \"\"\"\"\"\"\n  article: String\n\n  \"\"\"\"\"\"\n  reddit: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Launch {\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  is_tentative: Boolean\n\n  \"\"\"\"\"\"\n  launch_date_local: Date\n\n  \"\"\"\"\"\"\n  launch_date_unix: Date\n\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n\n  \"\"\"\"\"\"\n  launch_site: LaunchSite\n\n  \"\"\"\"\"\"\n  launch_success: Boolean\n\n  \"\"\"\"\"\"\n  launch_year: String\n\n  \"\"\"\"\"\"\n  links: LaunchLinks\n\n  \"\"\"\"\"\"\n  mission_id: [String]\n\n  \"\"\"\"\"\"\n  mission_name: String\n\n  \"\"\"\"\"\"\n  rocket: LaunchRocket\n\n  \"\"\"\"\"\"\n  static_fire_date_unix: Date\n\n  \"\"\"\"\"\"\n  static_fire_date_utc: Date\n\n  \"\"\"\"\"\"\n  telemetry: LaunchTelemetry\n\n  \"\"\"\"\"\"\n  tentative_max_precision: String\n\n  \"\"\"\"\"\"\n  upcoming: Boolean\n\n  \"\"\"\"\"\"\n  ships: [Ship]\n}\n\n\"\"\"\"\"\"\ntype LaunchSite {\n  \"\"\"\"\"\"\n  site_id: String\n\n  \"\"\"\"\"\"\n  site_name_long: String\n\n  \"\"\"\"\"\"\n  site_name: String\n}\n\n\"\"\"\"\"\"\ntype LaunchLinks {\n  \"\"\"\"\"\"\n  article_link: String\n\n  \"\"\"\"\"\"\n  flickr_images: [String]\n\n  \"\"\"\"\"\"\n  mission_patch_small: String\n\n  \"\"\"\"\"\"\n  mission_patch: String\n\n  \"\"\"\"\"\"\n  presskit: String\n\n  \"\"\"\"\"\"\n  reddit_campaign: String\n\n  \"\"\"\"\"\"\n  reddit_launch: String\n\n  \"\"\"\"\"\"\n  reddit_media: String\n\n  \"\"\"\"\"\"\n  reddit_recovery: String\n\n  \"\"\"\"\"\"\n  video_link: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocket {\n  \"\"\"\"\"\"\n  fairings: LaunchRocketFairings\n\n  \"\"\"\"\"\"\n  first_stage: LaunchRocketFirstStage\n\n  \"\"\"\"\"\"\n  rocket_name: String\n\n  \"\"\"\"\"\"\n  rocket_type: String\n\n  \"\"\"\"\"\"\n  rocket: Rocket\n\n  \"\"\"\"\"\"\n  second_stage: LaunchRocketSecondStage\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFairings {\n  \"\"\"\"\"\"\n  recovered: Boolean\n\n  \"\"\"\"\"\"\n  recovery_attempt: Boolean\n\n  \"\"\"\"\"\"\n  reused: Boolean\n\n  \"\"\"\"\"\"\n  ship: String\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStage {\n  \"\"\"\"\"\"\n  cores: [LaunchRocketFirstStageCore]\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketFirstStageCore {\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  core: Core\n\n  \"\"\"\"\"\"\n  flight: Int\n\n  \"\"\"\"\"\"\n  gridfins: Boolean\n\n  \"\"\"\"\"\"\n  land_success: Boolean\n\n  \"\"\"\"\"\"\n  landing_intent: Boolean\n\n  \"\"\"\"\"\"\n  landing_type: String\n\n  \"\"\"\"\"\"\n  landing_vehicle: String\n\n  \"\"\"\"\"\"\n  legs: Boolean\n\n  \"\"\"\"\"\"\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype Rocket {\n  \"\"\"\"\"\"\n  active: Boolean\n\n  \"\"\"\"\"\"\n  boosters: Int\n\n  \"\"\"\"\"\"\n  company: String\n\n  \"\"\"\"\"\"\n  cost_per_launch: Int\n\n  \"\"\"\"\"\"\n  country: String\n\n  \"\"\"\"\"\"\n  description: String\n\n  \"\"\"\"\"\"\n  diameter: Distance\n\n  \"\"\"\"\"\"\n  engines: RocketEngines\n\n  \"\"\"\"\"\"\n  first_flight: Date\n\n  \"\"\"\"\"\"\n  first_stage: RocketFirstStage\n\n  \"\"\"\"\"\"\n  height: Distance\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  landing_legs: RocketLandingLegs\n\n  \"\"\"\"\"\"\n  mass: Mass\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  payload_weights: [RocketPayloadWeight]\n\n  \"\"\"\"\"\"\n  second_stage: RocketSecondStage\n\n  \"\"\"\"\"\"\n  stages: Int\n\n  \"\"\"\"\"\"\n  success_rate_pct: Int\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype RocketEngines {\n  \"\"\"\"\"\"\n  number: Int\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  version: String\n\n  \"\"\"\"\"\"\n  layout: String\n\n  \"\"\"\"\"\"\n  engine_loss_max: String\n\n  \"\"\"\"\"\"\n  propellant_1: String\n\n  \"\"\"\"\"\"\n  propellant_2: String\n\n  \"\"\"\"\"\"\n  thrust_sea_level: Force\n\n  \"\"\"\"\"\"\n  thrust_vacuum: Force\n\n  \"\"\"\"\"\"\n  thrust_to_weight: Float\n}\n\n\"\"\"\"\"\"\ntype RocketFirstStage {\n  \"\"\"\"\"\"\n  burn_time_sec: Int\n\n  \"\"\"\"\"\"\n  engines: Int\n\n  \"\"\"\"\"\"\n  fuel_amount_tons: Float\n\n  \"\"\"\"\"\"\n  reusable: Boolean\n\n  \"\"\"\"\"\"\n  thrust_sea_level: Force\n\n  \"\"\"\"\"\"\n  thrust_vacuum: Force\n}\n\n\"\"\"\"\"\"\ntype RocketLandingLegs {\n  \"\"\"\"\"\"\n  number: Int\n\n  \"\"\"\"\"\"\n  material: String\n}\n\n\"\"\"\"\"\"\ntype RocketPayloadWeight {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  kg: Int\n\n  \"\"\"\"\"\"\n  lb: Int\n\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStage {\n  \"\"\"\"\"\"\n  burn_time_sec: Int\n\n  \"\"\"\"\"\"\n  engines: Int\n\n  \"\"\"\"\"\"\n  fuel_amount_tons: Float\n\n  \"\"\"\"\"\"\n  payloads: RocketSecondStagePayloads\n\n  \"\"\"\"\"\"\n  thrust: Force\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloads {\n  \"\"\"\"\"\"\n  option_1: String\n\n  \"\"\"\"\"\"\n  composite_fairing: RocketSecondStagePayloadCompositeFairing\n}\n\n\"\"\"\"\"\"\ntype RocketSecondStagePayloadCompositeFairing {\n  \"\"\"\"\"\"\n  height: Distance\n\n  \"\"\"\"\"\"\n  diameter: Distance\n}\n\n\"\"\"\"\"\"\ntype LaunchRocketSecondStage {\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  payloads: [Payload]\n}\n\n\"\"\"\"\"\"\ntype Payload {\n  \"\"\"\"\"\"\n  customers: [String]\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  manufacturer: String\n\n  \"\"\"\"\"\"\n  nationality: String\n\n  \"\"\"\"\"\"\n  norad_id: [Int]\n\n  \"\"\"\"\"\"\n  orbit_params: PayloadOrbitParams\n\n  \"\"\"\"\"\"\n  orbit: String\n\n  \"\"\"\"\"\"\n  payload_mass_kg: Float\n\n  \"\"\"\"\"\"\n  payload_mass_lbs: Float\n\n  \"\"\"\"\"\"\n  payload_type: String\n\n  \"\"\"\"\"\"\n  reused: Boolean\n}\n\n\"\"\"\"\"\"\ntype PayloadOrbitParams {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n\n  \"\"\"\"\"\"\n  arg_of_pericenter: Float\n\n  \"\"\"\"\"\"\n  eccentricity: Float\n\n  \"\"\"\"\"\"\n  epoch: Date\n\n  \"\"\"\"\"\"\n  inclination_deg: Float\n\n  \"\"\"\"\"\"\n  lifespan_years: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  mean_anomaly: Float\n\n  \"\"\"\"\"\"\n  mean_motion: Float\n\n  \"\"\"\"\"\"\n  periapsis_km: Float\n\n  \"\"\"\"\"\"\n  period_min: Float\n\n  \"\"\"\"\"\"\n  raan: Float\n\n  \"\"\"\"\"\"\n  reference_system: String\n\n  \"\"\"\"\"\"\n  regime: String\n\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n}\n\n\"\"\"\"\"\"\ntype LaunchTelemetry {\n  \"\"\"\"\"\"\n  flight_club: String\n}\n\n\"\"\"\"\"\"\ntype Ship {\n  \"\"\"\"\"\"\n  abs: Int\n\n  \"\"\"\"\"\"\n  active: Boolean\n\n  \"\"\"\"\"\"\n  attempted_landings: Int\n\n  \"\"\"\"\"\"\n  class: Int\n\n  \"\"\"\"\"\"\n  course_deg: Int\n\n  \"\"\"\"\"\"\n  home_port: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  image: String\n\n  \"\"\"\"\"\"\n  imo: Int\n\n  \"\"\"\"\"\"\n  missions: [ShipMission]\n\n  \"\"\"\"\"\"\n  mmsi: Int\n\n  \"\"\"\"\"\"\n  model: String\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  position: ShipLocation\n\n  \"\"\"\"\"\"\n  roles: [String]\n\n  \"\"\"\"\"\"\n  speed_kn: Float\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  successful_landings: Int\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  url: String\n\n  \"\"\"\"\"\"\n  weight_kg: Int\n\n  \"\"\"\"\"\"\n  weight_lbs: Int\n\n  \"\"\"\"\"\"\n  year_built: Int\n}\n\n\"\"\"\"\"\"\ntype ShipMission {\n  \"\"\"\"\"\"\n  flight: String\n\n  \"\"\"\"\"\"\n  name: String\n}\n\n\"\"\"\"\"\"\ntype ShipLocation {\n  \"\"\"\"\"\"\n  latitude: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n}\n\n\"\"\"\"\"\"\ntype HistoriesResult {\n  \"\"\"\"\"\"\n  result: Result\n\n  \"\"\"\"\"\"\n  data: [History]\n}\n\n\"\"\"\"\"\"\ntype Result {\n  \"\"\"\"\"\"\n  totalCount: Int\n}\n\n\"\"\"\"\"\"\ntype Landpad {\n  \"\"\"\"\"\"\n  attempted_landings: String\n\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  full_name: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  landing_type: String\n\n  \"\"\"\"\"\"\n  location: Location\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  successful_landings: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype Location {\n  \"\"\"\"\"\"\n  latitude: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  region: String\n}\n\n\"\"\"\"\"\"\ninput LaunchFind {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n\n  \"\"\"\"\"\"\n  block: Int\n\n  \"\"\"\"\"\"\n  cap_serial: String\n\n  \"\"\"\"\"\"\n  capsule_reuse: String\n\n  \"\"\"\"\"\"\n  core_flight: Int\n\n  \"\"\"\"\"\"\n  core_reuse: String\n\n  \"\"\"\"\"\"\n  core_serial: String\n\n  \"\"\"\"\"\"\n  customer: String\n\n  \"\"\"\"\"\"\n  eccentricity: Float\n\n  \"\"\"\"\"\"\n  end: Date\n\n  \"\"\"\"\"\"\n  epoch: Date\n\n  \"\"\"\"\"\"\n  fairings_recovered: String\n\n  \"\"\"\"\"\"\n  fairings_recovery_attempt: String\n\n  \"\"\"\"\"\"\n  fairings_reuse: String\n\n  \"\"\"\"\"\"\n  fairings_reused: String\n\n  \"\"\"\"\"\"\n  fairings_ship: String\n\n  \"\"\"\"\"\"\n  gridfins: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  inclination_deg: Float\n\n  \"\"\"\"\"\"\n  land_success: String\n\n  \"\"\"\"\"\"\n  landing_intent: String\n\n  \"\"\"\"\"\"\n  landing_type: String\n\n  \"\"\"\"\"\"\n  landing_vehicle: String\n\n  \"\"\"\"\"\"\n  launch_date_local: Date\n\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n\n  \"\"\"\"\"\"\n  launch_success: String\n\n  \"\"\"\"\"\"\n  launch_year: String\n\n  \"\"\"\"\"\"\n  legs: String\n\n  \"\"\"\"\"\"\n  lifespan_years: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  manufacturer: String\n\n  \"\"\"\"\"\"\n  mean_motion: Float\n\n  \"\"\"\"\"\"\n  mission_id: String\n\n  \"\"\"\"\"\"\n  mission_name: String\n\n  \"\"\"\"\"\"\n  nationality: String\n\n  \"\"\"\"\"\"\n  norad_id: Int\n\n  \"\"\"\"\"\"\n  orbit: String\n\n  \"\"\"\"\"\"\n  payload_id: String\n\n  \"\"\"\"\"\"\n  payload_type: String\n\n  \"\"\"\"\"\"\n  periapsis_km: Float\n\n  \"\"\"\"\"\"\n  period_min: Float\n\n  \"\"\"\"\"\"\n  raan: Float\n\n  \"\"\"\"\"\"\n  reference_system: String\n\n  \"\"\"\"\"\"\n  regime: String\n\n  \"\"\"\"\"\"\n  reused: String\n\n  \"\"\"\"\"\"\n  rocket_id: String\n\n  \"\"\"\"\"\"\n  rocket_name: String\n\n  \"\"\"\"\"\"\n  rocket_type: String\n\n  \"\"\"\"\"\"\n  second_stage_block: String\n\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n\n  \"\"\"\"\"\"\n  ship: String\n\n  \"\"\"\"\"\"\n  side_core1_reuse: String\n\n  \"\"\"\"\"\"\n  side_core2_reuse: String\n\n  \"\"\"\"\"\"\n  site_id: String\n\n  \"\"\"\"\"\"\n  site_name_long: String\n\n  \"\"\"\"\"\"\n  site_name: String\n\n  \"\"\"\"\"\"\n  start: Date\n\n  \"\"\"\"\"\"\n  tbd: String\n\n  \"\"\"\"\"\"\n  tentative_max_precision: String\n\n  \"\"\"\"\"\"\n  tentative: String\n}\n\n\"\"\"\"\"\"\ntype LaunchesPastResult {\n  \"\"\"\"\"\"\n  result: Result\n\n  \"\"\"\"\"\"\n  data: [Launch]\n}\n\n\"\"\"\"\"\"\ntype Launchpad {\n  \"\"\"\"\"\"\n  attempted_launches: Int\n\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  location: Location\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  successful_launches: Int\n\n  \"\"\"\"\"\"\n  vehicles_launched: [Rocket]\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ninput MissionsFind {\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  manufacturer: String\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  payload_id: String\n}\n\n\"\"\"\"\"\"\ntype Mission {\n  \"\"\"\"\"\"\n  description: String\n\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  manufacturers: [String]\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  twitter: String\n\n  \"\"\"\"\"\"\n  website: String\n\n  \"\"\"\"\"\"\n  wikipedia: String\n\n  \"\"\"\"\"\"\n  payloads: [Payload]\n}\n\n\"\"\"\"\"\"\ntype MissionResult {\n  \"\"\"\"\"\"\n  result: Result\n\n  \"\"\"\"\"\"\n  data: [Mission]\n}\n\n\"\"\"\"\"\"\ninput PayloadsFind {\n  \"\"\"\"\"\"\n  apoapsis_km: Float\n\n  \"\"\"\"\"\"\n  customer: String\n\n  \"\"\"\"\"\"\n  eccentricity: Float\n\n  \"\"\"\"\"\"\n  epoch: Date\n\n  \"\"\"\"\"\"\n  inclination_deg: Float\n\n  \"\"\"\"\"\"\n  lifespan_years: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  manufacturer: String\n\n  \"\"\"\"\"\"\n  mean_motion: Float\n\n  \"\"\"\"\"\"\n  nationality: String\n\n  \"\"\"\"\"\"\n  norad_id: Int\n\n  \"\"\"\"\"\"\n  orbit: String\n\n  \"\"\"\"\"\"\n  payload_id: ID\n\n  \"\"\"\"\"\"\n  payload_type: String\n\n  \"\"\"\"\"\"\n  periapsis_km: Float\n\n  \"\"\"\"\"\"\n  period_min: Float\n\n  \"\"\"\"\"\"\n  raan: Float\n\n  \"\"\"\"\"\"\n  reference_system: String\n\n  \"\"\"\"\"\"\n  regime: String\n\n  \"\"\"\"\"\"\n  reused: Boolean\n\n  \"\"\"\"\"\"\n  semi_major_axis_km: Float\n}\n\n\"\"\"\"\"\"\ntype Roadster {\n  \"\"\"\"\"\"\n  apoapsis_au: Float\n\n  \"\"\"\"\"\"\n  details: String\n\n  \"\"\"\"\"\"\n  earth_distance_km: Float\n\n  \"\"\"\"\"\"\n  earth_distance_mi: Float\n\n  \"\"\"\"\"\"\n  eccentricity: Float\n\n  \"\"\"\"\"\"\n  epoch_jd: Float\n\n  \"\"\"\"\"\"\n  inclination: Float\n\n  \"\"\"\"\"\"\n  launch_date_unix: Date\n\n  \"\"\"\"\"\"\n  launch_date_utc: Date\n\n  \"\"\"\"\"\"\n  launch_mass_kg: Int\n\n  \"\"\"\"\"\"\n  launch_mass_lbs: Int\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  mars_distance_km: Float\n\n  \"\"\"\"\"\"\n  mars_distance_mi: Float\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  norad_id: Int\n\n  \"\"\"\"\"\"\n  orbit_type: Float\n\n  \"\"\"\"\"\"\n  periapsis_arg: Float\n\n  \"\"\"\"\"\"\n  periapsis_au: Float\n\n  \"\"\"\"\"\"\n  period_days: Float\n\n  \"\"\"\"\"\"\n  semi_major_axis_au: Float\n\n  \"\"\"\"\"\"\n  speed_kph: Float\n\n  \"\"\"\"\"\"\n  speed_mph: Float\n\n  \"\"\"\"\"\"\n  wikipedia: String\n}\n\n\"\"\"\"\"\"\ntype RocketsResult {\n  \"\"\"\"\"\"\n  result: Result\n\n  \"\"\"\"\"\"\n  data: [Rocket]\n}\n\n\"\"\"\"\"\"\ninput ShipsFind {\n  \"\"\"\"\"\"\n  id: ID\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  model: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  role: String\n\n  \"\"\"\"\"\"\n  active: Boolean\n\n  \"\"\"\"\"\"\n  imo: Int\n\n  \"\"\"\"\"\"\n  mmsi: Int\n\n  \"\"\"\"\"\"\n  abs: Int\n\n  \"\"\"\"\"\"\n  class: Int\n\n  \"\"\"\"\"\"\n  weight_lbs: Int\n\n  \"\"\"\"\"\"\n  weight_kg: Int\n\n  \"\"\"\"\"\"\n  year_built: Int\n\n  \"\"\"\"\"\"\n  home_port: String\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  speed_kn: Int\n\n  \"\"\"\"\"\"\n  course_deg: Int\n\n  \"\"\"\"\"\"\n  latitude: Float\n\n  \"\"\"\"\"\"\n  longitude: Float\n\n  \"\"\"\"\"\"\n  successful_landings: Int\n\n  \"\"\"\"\"\"\n  attempted_landings: Int\n\n  \"\"\"\"\"\"\n  mission: String\n}\n\n\"\"\"\"\"\"\ntype ShipsResult {\n  \"\"\"\"\"\"\n  result: Result\n\n  \"\"\"\"\"\"\n  data: [Ship]\n}\n\ntype Mutation {\n  \"\"\"\n  delete data from the table: \"users\"\n  \"\"\"\n  delete_users(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: users_bool_exp!\n  ): users_mutation_response\n\n  \"\"\"\n  insert data into the table: \"users\"\n  \"\"\"\n  insert_users(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [users_insert_input!]!\n\n    \"\"\"on conflict condition\"\"\"\n    on_conflict: users_on_conflict\n  ): users_mutation_response\n\n  \"\"\"\n  update data of the table: \"users\"\n  \"\"\"\n  update_users(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: users_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: users_bool_exp!\n  ): users_mutation_response\n}\n\n\"\"\"\nresponse of any mutation on the table \"users\"\n\"\"\"\ntype users_mutation_response {\n  \"\"\"number of affected rows by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data of the affected rows by the mutation\"\"\"\n  returning: [users!]!\n}\n\n\"\"\"\ninput type for inserting data into table \"users\"\n\"\"\"\ninput users_insert_input {\n  \"\"\"\"\"\"\n  id: uuid\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\n\"\"\"\non conflict condition type for table \"users\"\n\"\"\"\ninput users_on_conflict {\n  \"\"\"\"\"\"\n  constraint: users_constraint!\n\n  \"\"\"\"\"\"\n  update_columns: [users_update_column!]!\n}\n\n\"\"\"\nunique or primary key constraints on table \"users\"\n\"\"\"\nenum users_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  users_pkey\n}\n\n\"\"\"\nupdate columns of table \"users\"\n\"\"\"\nenum users_update_column {\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  rocket\n\n  \"\"\"column name\"\"\"\n  timestamp\n\n  \"\"\"column name\"\"\"\n  twitter\n}\n\n\"\"\"\ninput type for updating data in table \"users\"\n\"\"\"\ninput users_set_input {\n  \"\"\"\"\"\"\n  id: uuid\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  rocket: String\n\n  \"\"\"\"\"\"\n  timestamp: timestamptz\n\n  \"\"\"\"\"\"\n  twitter: String\n}\n\ntype Subscription {\n  \"\"\"\n  fetch data from the table: \"users\"\n  \"\"\"\n  users(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): [users!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"users\"\n  \"\"\"\n  users_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [users_select_column!]\n\n    \"\"\"limit the nuber of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [users_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: users_bool_exp\n  ): users_aggregate!\n\n  \"\"\"fetch data from the table: \"users\" using primary key columns\"\"\"\n  users_by_pk(id: uuid!): users\n}\n\n\"\"\"conflict action\"\"\"\nenum conflict_action {\n  \"\"\"ignore the insert on this row\"\"\"\n  ignore\n\n  \"\"\"update the row with the given values\"\"\"\n  update\n}\n\n\"\"\"\norder by aggregate values of table \"users\"\n\"\"\"\ninput users_aggregate_order_by {\n  \"\"\"\"\"\"\n  count: order_by\n\n  \"\"\"\"\"\"\n  max: users_max_order_by\n\n  \"\"\"\"\"\"\n  min: users_min_order_by\n}\n\n\"\"\"\norder by max() on columns of table \"users\"\n\"\"\"\ninput users_max_order_by {\n  \"\"\"\"\"\"\n  name: order_by\n\n  \"\"\"\"\"\"\n  rocket: order_by\n\n  \"\"\"\"\"\"\n  timestamp: order_by\n\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"\norder by min() on columns of table \"users\"\n\"\"\"\ninput users_min_order_by {\n  \"\"\"\"\"\"\n  name: order_by\n\n  \"\"\"\"\"\"\n  rocket: order_by\n\n  \"\"\"\"\"\"\n  timestamp: order_by\n\n  \"\"\"\"\"\"\n  twitter: order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"users\"\n\"\"\"\ninput users_arr_rel_insert_input {\n  \"\"\"\"\"\"\n  data: [users_insert_input!]!\n\n  \"\"\"\"\"\"\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"users\"\n\"\"\"\ninput users_obj_rel_insert_input {\n  \"\"\"\"\"\"\n  data: users_insert_input!\n\n  \"\"\"\"\"\"\n  on_conflict: users_on_conflict\n}\n\n\"\"\"\"\"\"\nscalar ObjectID\n\n\"\"\"\"\"\"\ntype CoreMission {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  flight: Int\n}",
    "Spotify": "\"\"\"the schema allows the following query:\"\"\"\ntype Query {\n  \"\"\"\"\"\"\n  me: PrivateUser\n\n  \"\"\"\"\"\"\n  user(id: String!): PublicUser\n\n  \"\"\"\"\"\"\n  track(id: String, name: String): Track\n\n  \"\"\"\"\"\"\n  tracks(ids: String!): [Track]\n\n  \"\"\"\"\"\"\n  audio_features(trackIds: String!): [AudioFeatures]\n\n  \"\"\"\"\"\"\n  audio_feature(trackId: String!): AudioFeatures\n\n  \"\"\"\"\"\"\n  artist(id: String, name: String): Artist\n\n  \"\"\"\"\"\"\n  artists(ids: String!): [Artist]\n\n  \"\"\"\"\"\"\n  album(id: String!): Album\n\n  \"\"\"\"\"\"\n  albums(ids: String!): [Album]\n\n  \"\"\"\"\"\"\n  playlist(id: String!, userId: String!): Playlist\n}\n\n\"\"\"\"\"\"\ntype PrivateUser {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  birthday: String\n\n  \"\"\"\"\"\"\n  country: String\n\n  \"\"\"\"\"\"\n  display_name: String\n\n  \"\"\"\"\"\"\n  email: String\n\n  \"\"\"\"\"\"\n  href: String\n\n  \"\"\"\"\"\"\n  product: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  tracks(throttle: Int, continueOnError: Int, limit: Int): [SavedTrack]\n\n  \"\"\"\"\"\"\n  playlists(throttle: Int, continueOnError: Int, limit: Int): [Playlist]\n\n  \"\"\"\"\"\"\n  albums: [SavedAlbum]\n\n  \"\"\"\"\"\"\n  top_artists(throttle: Int, continueOnError: Int, limit: Int): [Artist]\n\n  \"\"\"\"\"\"\n  top_tracks(throttle: Int, continueOnError: Int, limit: Int): [Track]\n\n  \"\"\"\"\"\"\n  images: [Image]\n\n  \"\"\"\"\"\"\n  artists(throttle: Int, continueOnError: Int, limit: Int): [Artist]\n\n  \"\"\"\"\"\"\n  devices: [Device]\n\n  \"\"\"\"\"\"\n  player: Player\n}\n\n\"\"\"\"\"\"\ntype SavedTrack {\n  \"\"\"\"\"\"\n  added_at: String\n\n  \"\"\"\"\"\"\n  track: Track\n}\n\n\"\"\"\"\"\"\ntype Track {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  album(full: Int): Album\n\n  \"\"\"\"\"\"\n  artists(full: Int, throttle: Int): [Artist]\n\n  \"\"\"\"\"\"\n  available_markets: [String]\n\n  \"\"\"\"\"\"\n  audio_features: AudioFeatures\n\n  \"\"\"\"\"\"\n  disc_number: Int\n\n  \"\"\"\"\"\"\n  duration_ms: Int\n\n  \"\"\"\"\"\"\n  explicit: Boolean\n\n  \"\"\"\"\"\"\n  href: String\n\n  \"\"\"\"\"\"\n  is_playable: Boolean\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  popularity: Int\n\n  \"\"\"\"\"\"\n  preview_url: String\n\n  \"\"\"\"\"\"\n  track_number: Int\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  uri: String\n}\n\n\"\"\"\"\"\"\ntype Album {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  album_type: String\n\n  \"\"\"\"\"\"\n  artists: [Artist]\n\n  \"\"\"\"\"\"\n  available_markets: [String]\n\n  \"\"\"\"\"\"\n  genres: [String]\n\n  \"\"\"\"\"\"\n  href: String\n\n  \"\"\"\"\"\"\n  label: String\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  popularity: Int\n\n  \"\"\"\"\"\"\n  release_date: String\n\n  \"\"\"\"\"\"\n  release_date_precision: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  images: [Image]\n\n  \"\"\"\"\"\"\n  tracks(throttle: Int, continueOnError: Int, limit: Int): [Track]\n}\n\n\"\"\"\"\"\"\ntype Artist {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  genres: [String]\n\n  \"\"\"\"\"\"\n  href: String\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  popularity: Int\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  images: [Image]\n\n  \"\"\"\"\"\"\n  top_tracks(country: String): [Track]\n\n  \"\"\"\"\"\"\n  albums(album_type: String, throttle: Int, continueOnError: Int, limit: Int): [Album]\n\n  \"\"\"\"\"\"\n  related_artists(throttle: Int, continueOnError: Int, limit: Int): [Artist]\n}\n\n\"\"\"\"\"\"\ntype Image {\n  \"\"\"\"\"\"\n  height: Int\n\n  \"\"\"\"\"\"\n  url: String\n\n  \"\"\"\"\"\"\n  width: Int\n}\n\n\"\"\"\"\"\"\ntype AudioFeatures {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  acousticness: String\n\n  \"\"\"\"\"\"\n  analysis_url: String\n\n  \"\"\"\"\"\"\n  danceability: String\n\n  \"\"\"\"\"\"\n  duration_ms: String\n\n  \"\"\"\"\"\"\n  energy: String\n\n  \"\"\"\"\"\"\n  instrumentalness: String\n\n  \"\"\"\"\"\"\n  key: String\n\n  \"\"\"\"\"\"\n  liveness: String\n\n  \"\"\"\"\"\"\n  loudness: String\n\n  \"\"\"\"\"\"\n  mode: String\n\n  \"\"\"\"\"\"\n  speechiness: String\n\n  \"\"\"\"\"\"\n  tempo: String\n\n  \"\"\"\"\"\"\n  time_signature: String\n\n  \"\"\"\"\"\"\n  track_href: String\n\n  \"\"\"\"\"\"\n  valence: String\n}\n\n\"\"\"\"\"\"\ntype Playlist {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  description: String\n\n  \"\"\"\"\"\"\n  href: String\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  owner: PublicUser\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  tracks(throttle: Int, continueOnError: Int, limit: Int): [PlaylistTrack]\n\n  \"\"\"\"\"\"\n  public: Boolean\n\n  \"\"\"\"\"\"\n  images: [Image]\n}\n\n\"\"\"\"\"\"\ntype PublicUser {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  display_name: String\n\n  \"\"\"\"\"\"\n  href: String\n\n  \"\"\"\"\"\"\n  uri: String\n\n  \"\"\"\"\"\"\n  playlists: [Playlist]\n\n  \"\"\"\"\"\"\n  images: [Image]\n}\n\n\"\"\"\"\"\"\ntype PlaylistTrack {\n  \"\"\"\"\"\"\n  added_at: String\n\n  \"\"\"\"\"\"\n  track: Track\n\n  \"\"\"\"\"\"\n  added_by: PublicUser\n\n  \"\"\"\"\"\"\n  is_local: Boolean\n}\n\n\"\"\"\"\"\"\ntype SavedAlbum {\n  \"\"\"\"\"\"\n  added_at: String\n\n  \"\"\"\"\"\"\n  album: Album\n}\n\n\"\"\"\"\"\"\ntype Device {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  is_active: Boolean\n\n  \"\"\"\"\"\"\n  is_restricted: Boolean\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  volume_percent: Int\n}\n\n\"\"\"\"\"\"\ntype Player {\n  \"\"\"\"\"\"\n  timestamp: String\n\n  \"\"\"\"\"\"\n  device: Device\n\n  \"\"\"\"\"\"\n  progress_ms: String\n\n  \"\"\"\"\"\"\n  is_playing: Boolean\n\n  \"\"\"\"\"\"\n  shuffle_state: Boolean\n\n  \"\"\"\"\"\"\n  repeat_state: String\n\n  \"\"\"\"\"\"\n  item: Track\n\n  \"\"\"\"\"\"\n  context: PlayerContext\n}\n\n\"\"\"\"\"\"\ntype PlayerContext {\n  \"\"\"\"\"\"\n  href: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  uri: String\n}\n\n\"\"\"\"\"\"\ntype SimplifiedArtist {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  href: String\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  uri: String\n}\n\n\"\"\"\"\"\"\ntype SimplifiedAlbum {\n  \"\"\"\"\"\"\n  id: String\n\n  \"\"\"\"\"\"\n  album_type: String\n\n  \"\"\"\"\"\"\n  artists: [Artist]\n\n  \"\"\"\"\"\"\n  available_markets: [String]\n\n  \"\"\"\"\"\"\n  href: String\n\n  \"\"\"\"\"\"\n  label: String\n\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  uri: String\n}",
    "Spotify GraphQL Server": "type Query {\n  hi(message: String = \"Hi\"): String\n  queryArtists(byName: String = \"Red Hot Chili Peppers\"): [Artist]\n}\n\ntype Artist {\n  name: String!\n  id: ID\n  image: String\n  albums(limit: Int = 10): [Album]\n}\n\ntype Album {\n  name: String\n  id: ID\n  image: String\n  tracks: [Track]\n}\n\ntype Track {\n  name: String!\n  artists: [Artist]\n  preview_url: String\n  id: ID\n}",
    "TMDB": "type AlternativeTitle {\n  iso3166_1: String!\n  title: String!\n  type: String!\n}\n\nunion AnyImage = BackdropSizeDetailImage | PosterSizeDetailImage | ProfileSizeDetailImage | StillSizeDetailImage | LogoSizeDetailImage\n\nenum BackdropSize {\n  Original\n  W1280\n  W300\n  W780\n}\n\ntype BackdropSizeDetailImage {\n  aspectRatio: Float!\n  height: Int!\n  image(size: BackdropSize!): URL!\n  iso639_1: String\n  voteAverage: Float!\n  voteCount: Int!\n  width: Int!\n}\n\ntype BaseCreditBasicPerson implements IBaseCreditBasicPerson {\n  id: String!\n  value: IBasicPerson!\n}\n\ntype BaseCreditMovie implements IBaseCreditMovie {\n  id: String!\n  value: IMovie!\n}\n\ntype BaseCreditMovieOrTV implements IBaseCreditMovieOrTV {\n  id: String!\n  value: MovieOrTV!\n}\n\ntype BaseCreditTVShow implements IBaseCreditTVShow {\n  id: String!\n  value: ITVShow!\n}\n\ntype BasicPerson implements IBasicPerson {\n  credits: PersonCredits!\n  details: DetailedPerson!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: [ProfileSizeDetailImage!]!\n  name: String!\n  profilePicture(size: ProfileSize!): URL\n  taggedImages(last: Int, after: String, first: Int, before: String): TaggedImageConnection!\n  translations: [TranslationWithTranslatedPersonInfo!]!\n}\n\ntype CastCreditBasicPerson implements IBaseCreditBasicPerson {\n  character: String!\n  id: String!\n  value: IBasicPerson!\n}\n\ntype CastCreditMovie implements IBaseCreditMovie {\n  character: String!\n  id: String!\n  value: IMovie!\n}\n\ntype CastCreditMovieOrTV implements IBaseCreditMovieOrTV {\n  character: String!\n  id: String!\n  value: MovieOrTV!\n}\n\ntype CastCreditTVShow implements IBaseCreditTVShow {\n  character: String!\n  id: String!\n  value: ITVShow!\n}\n\ntype CreditsBasicPerson implements ICreditsBasicPerson {\n  cast: [CastCreditBasicPerson!]!\n  crew: [CrewCreditBasicPerson!]!\n  id: Int!\n}\n\ntype CreditsMovie {\n  cast: [CastCreditMovie!]!\n  crew: [CrewCreditMovie!]!\n  id: Int!\n}\n\ntype CreditsMovieOrTV {\n  cast: [CastCreditMovieOrTV!]!\n  crew: [CrewCreditMovieOrTV!]!\n  id: Int!\n}\n\ntype CreditsTVShow {\n  cast: [CastCreditTVShow!]!\n  crew: [CrewCreditTVShow!]!\n  id: Int!\n}\n\ntype CrewCreditBasicPerson implements IBaseCreditBasicPerson {\n  department: String!\n  id: String!\n  job: String!\n  value: IBasicPerson!\n}\n\ntype CrewCreditMovie implements IBaseCreditMovie {\n  department: String!\n  id: String!\n  job: String!\n  value: IMovie!\n}\n\ntype CrewCreditMovieOrTV implements IBaseCreditMovieOrTV {\n  department: String!\n  id: String!\n  job: String!\n  value: MovieOrTV!\n}\n\ntype CrewCreditTVShow implements IBaseCreditTVShow {\n  department: String!\n  id: String!\n  job: String!\n  value: ITVShow!\n}\n\nscalar Date\n\ntype DetailedEpisode implements IEpisode & IEpisodeData & IDetailedEpisodeData {\n  airDate: Date!\n  credits: EpisodeCreditsBasicPerson!\n  crew: [CrewCreditBasicPerson!]!\n  details: DetailedEpisode!\n  episodeNumber: Int!\n  externalIds: ExternalIDS!\n  guestStars: [CastCreditBasicPerson!]!\n  id: Int!\n  images: EpisodeImages!\n  name: String!\n  overview: String!\n  productionCode: String!\n  seasonNumber: Int!\n  still(size: StillSize!): URL\n  streamingOptions: [StreamingOption!]\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n  voteAverage: Float!\n  voteCount: Int!\n}\n\ntype DetailedEpisodeData implements IEpisodeData & IDetailedEpisodeData {\n  airDate: Date!\n  crew: [CrewCreditBasicPerson!]!\n  episodeNumber: Int!\n  guestStars: [CastCreditBasicPerson!]!\n  id: Int!\n  name: String!\n  overview: String!\n  productionCode: String!\n  seasonNumber: Int!\n  still(size: StillSize!): URL\n  voteAverage: Float!\n  voteCount: Int!\n}\n\ntype DetailedMovie implements IMovie {\n  alternativeTitles: [AlternativeTitle!]!\n  backdrop(size: BackdropSize!): URL\n  budget: Int\n  credits: ICreditsBasicPerson!\n  details: DetailedMovie!\n  externalIds: ExternalIDS!\n  genres: [Genre!]!\n  homepage: URL\n  id: Int!\n  images: MediaImages!\n  imdbID: String!\n  isAdult: Boolean!\n  isVideo: Boolean!\n  keywords: [Keyword!]!\n  numberOfRatings: Int!\n  originalLanguage: String!\n  originalTitle: String!\n  overview: String!\n  popularityIndex: Float\n  poster(size: PosterSize!): URL\n  productionCompanies: [ProductionCompany!]!\n  productionCountries: [ProductionCountry!]!\n  rating: Float!\n  recommendations(first: Int, before: String, last: Int, after: String): MovieConnection!\n  releaseDate: Date\n  revenue: Int\n  reviews(first: Int, before: String, last: Int, after: String): ReviewConnection!\n  runtime: Int!\n  similar(first: Int, before: String, last: Int, after: String): MovieConnection!\n  spokenLanguages: [SpokenLanguage!]!\n  status: Status!\n  streamingOptions: [StreamingOption!]\n  tagline: String!\n  title: String!\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n}\n\ntype DetailedPerson implements IPerson & IBasicPerson {\n  alsoKnownAs: [String!]!\n  biography: String!\n  birthday: Date\n  credits: PersonCredits!\n  deathday: Date\n  details: DetailedPerson!\n  externalIds: ExternalIDS!\n  gender: Gender!\n  homepage: URL\n  id: Int!\n  images: [ProfileSizeDetailImage!]!\n  imdbID: String\n  isAdult: Boolean!\n  knownForDepartment: String!\n  name: String!\n  placeOfBirth: String\n  popularityIndex: Float!\n  profilePicture(size: ProfileSize!): URL\n  taggedImages(first: Int, before: String, last: Int, after: String): TaggedImageConnection!\n  translations: [TranslationWithTranslatedPersonInfo!]!\n}\n\ntype DetailedSeason implements ISeason & ISeasonData {\n  airDate: Date\n  credits: ICreditsBasicPerson!\n  details: DetailedSeason!\n  episode(number: Int!): DetailedEpisode!\n  episodes: [IEpisode!]!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: MediaImages!\n  name: String!\n  overview: String\n  poster(size: PosterSize!): URL\n  seasonNumber: Int!\n  streamingOptions: [StreamingOption!]\n  videos: [Video!]!\n}\n\ntype DetailedTVShow implements ITVShow {\n  alternativeTitles: [AlternativeTitle!]!\n  backdrop(size: BackdropSize!): URL\n  createdBy: [IBaseCreditBasicPerson!]!\n  credits: ICreditsBasicPerson!\n  details: DetailedTVShow!\n  episodeRunTime: [Int!]!\n  externalIds: ExternalIDS!\n  firstAirDate: Date\n  genres: [Genre!]!\n  homepage: URL\n  id: Int!\n  images: MediaImages!\n  inProduction: Boolean!\n  keywords: [Keyword!]!\n  languages: [String!]!\n  lastAirDate: Date\n  lastEpisodeToAir: IEpisode\n  name: String!\n  networks: [Network!]!\n  nextEpisodeToAir: IEpisode\n  numberOfEpisodes: Int!\n  numberOfRatings: Int!\n  numberOfSeasons: Int!\n  originCountry: [String!]!\n  originalLanguage: String!\n  originalName: String!\n  overview: String!\n  popularityIndex: Float\n  poster(size: PosterSize!): URL\n  productionCompanies: [Network!]!\n  rating: Float!\n  recommendations(first: Int, before: String, last: Int, after: String): TVShowConnection!\n  reviews(first: Int, before: String, last: Int, after: String): ReviewConnection!\n  season(number: Int!): DetailedSeason!\n  seasons: [SeasonResult!]!\n  similar(first: Int, before: String, last: Int, after: String): TVShowConnection!\n  status: String!\n  streamingOptions: [StreamingOption!]\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  type: String!\n  videos: [Video!]!\n}\n\ntype Episode implements IEpisodeData & IEpisode {\n  airDate: Date!\n  credits: EpisodeCreditsBasicPerson!\n  details: DetailedEpisode!\n  episodeNumber: Int!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: EpisodeImages!\n  name: String!\n  overview: String!\n  productionCode: String!\n  seasonNumber: Int!\n  still(size: StillSize!): URL\n  streamingOptions: [StreamingOption!]\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n  voteAverage: Float!\n  voteCount: Int!\n}\n\ntype EpisodeCreditsBasicPerson implements ICreditsBasicPerson {\n  cast: [CastCreditBasicPerson!]!\n  crew: [CrewCreditBasicPerson!]!\n  guestStars: [CastCreditBasicPerson!]!\n  id: Int!\n}\n\ntype EpisodeData implements IEpisodeData {\n  airDate: Date!\n  episodeNumber: Int!\n  id: Int!\n  name: String!\n  overview: String!\n  productionCode: String!\n  seasonNumber: Int!\n  still(size: StillSize!): URL\n  voteAverage: Float!\n  voteCount: Int!\n}\n\ntype EpisodeImages {\n  stills: [StillSizeDetailImage!]!\n}\n\ntype ExternalIDS {\n  facebook: String\n  imdb: String\n  instagram: String\n  twitter: String\n}\n\nenum ExternalSource {\n  Tvrage\n  Tvdb\n  Facebook\n  Twitter\n  Instagram\n  Freebase\n  Imdb\n}\n\ntype FromExternalIds {\n  movies: [IMovie!]!\n  people: [PersonListResult!]!\n  tv: [ITVShow!]!\n}\n\nenum Gender {\n  UnknownOrNonBinary\n  Female\n  Male\n}\n\ntype Genre {\n  id: Int!\n  name: String!\n}\n\ninterface IBaseCreditBasicPerson {\n  id: String!\n  value: IBasicPerson!\n}\n\ninterface IBaseCreditMovie {\n  id: String!\n  value: IMovie!\n}\n\ninterface IBaseCreditMovieOrTV {\n  id: String!\n  value: MovieOrTV!\n}\n\ninterface IBaseCreditTVShow {\n  id: String!\n  value: ITVShow!\n}\n\ninterface IBasicPerson {\n  credits: PersonCredits!\n  details: DetailedPerson!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: [ProfileSizeDetailImage!]!\n  name: String!\n  profilePicture(size: ProfileSize!): URL\n  taggedImages(last: Int, after: String, first: Int, before: String): TaggedImageConnection!\n  translations: [TranslationWithTranslatedPersonInfo!]!\n}\n\ninterface ICreditsBasicPerson {\n  cast: [CastCreditBasicPerson!]!\n  crew: [CrewCreditBasicPerson!]!\n  id: Int!\n}\n\ninterface IDetailedEpisodeData {\n  airDate: Date!\n  crew: [CrewCreditBasicPerson!]!\n  episodeNumber: Int!\n  guestStars: [CastCreditBasicPerson!]!\n  id: Int!\n  name: String!\n  overview: String!\n  productionCode: String!\n  seasonNumber: Int!\n  still(size: StillSize!): URL\n  voteAverage: Float!\n  voteCount: Int!\n}\n\ninterface IEpisode {\n  airDate: Date!\n  credits: EpisodeCreditsBasicPerson!\n  details: DetailedEpisode!\n  episodeNumber: Int!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: EpisodeImages!\n  name: String!\n  overview: String!\n  productionCode: String!\n  seasonNumber: Int!\n  still(size: StillSize!): URL\n  streamingOptions: [StreamingOption!]\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n  voteAverage: Float!\n  voteCount: Int!\n}\n\ninterface IEpisodeData {\n  airDate: Date!\n  episodeNumber: Int!\n  id: Int!\n  name: String!\n  overview: String!\n  productionCode: String!\n  seasonNumber: Int!\n  still(size: StillSize!): URL\n  voteAverage: Float!\n  voteCount: Int!\n}\n\ninterface IMovie {\n  alternativeTitles: [AlternativeTitle!]!\n  backdrop(size: BackdropSize!): URL\n  credits: ICreditsBasicPerson!\n  details: DetailedMovie!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: MediaImages!\n  isAdult: Boolean!\n  isVideo: Boolean!\n  keywords: [Keyword!]!\n  numberOfRatings: Int!\n  originalLanguage: String!\n  originalTitle: String!\n  overview: String!\n  popularityIndex: Float\n  poster(size: PosterSize!): URL\n  rating: Float!\n  recommendations(last: Int, after: String, first: Int, before: String): MovieConnection!\n  releaseDate: Date\n  reviews(last: Int, after: String, first: Int, before: String): ReviewConnection!\n  similar(last: Int, after: String, first: Int, before: String): MovieConnection!\n  streamingOptions: [StreamingOption!]\n  title: String!\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n}\n\ninterface IPerson {\n  credits: PersonCredits!\n  details: DetailedPerson!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: [ProfileSizeDetailImage!]!\n  isAdult: Boolean!\n  name: String!\n  popularityIndex: Float!\n  profilePicture(size: ProfileSize!): URL\n  taggedImages(last: Int, after: String, first: Int, before: String): TaggedImageConnection!\n  translations: [TranslationWithTranslatedPersonInfo!]!\n}\n\ninterface ISeason {\n  airDate: Date\n  credits: ICreditsBasicPerson!\n  details: DetailedSeason!\n  episode(number: Int!): DetailedEpisode!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: MediaImages!\n  name: String!\n  overview: String\n  poster(size: PosterSize!): URL\n  seasonNumber: Int!\n  streamingOptions: [StreamingOption!]\n  videos: [Video!]!\n}\n\ninterface ISeasonData {\n  airDate: Date\n  id: Int!\n  name: String!\n  overview: String\n  poster(size: PosterSize!): URL\n  seasonNumber: Int!\n}\n\ninterface ISeasonResultData {\n  airDate: Date\n  episodeCount: Int!\n  id: Int!\n  name: String!\n  overview: String\n  poster(size: PosterSize!): URL\n  seasonNumber: Int!\n}\n\ninterface ITVShow {\n  alternativeTitles: [AlternativeTitle!]!\n  backdrop(size: BackdropSize!): URL\n  credits: ICreditsBasicPerson!\n  details: DetailedTVShow!\n  externalIds: ExternalIDS!\n  firstAirDate: Date\n  id: Int!\n  images: MediaImages!\n  keywords: [Keyword!]!\n  name: String!\n  numberOfRatings: Int!\n  originCountry: [String!]!\n  originalLanguage: String!\n  originalName: String!\n  overview: String!\n  popularityIndex: Float\n  poster(size: PosterSize!): URL\n  rating: Float!\n  recommendations(last: Int, after: String, first: Int, before: String): TVShowConnection!\n  reviews(last: Int, after: String, first: Int, before: String): ReviewConnection!\n  season(number: Int!): DetailedSeason!\n  similar(last: Int, after: String, first: Int, before: String): TVShowConnection!\n  streamingOptions: [StreamingOption!]\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n}\n\ntype Keyword {\n  id: Int!\n  movies(first: Int, before: String, last: Int, after: String): MovieConnection!\n  name: String!\n}\n\nenum LogoSize {\n  W154\n  W185\n  W300\n  W92\n  W45\n  W500\n  Original\n}\n\ntype LogoSizeDetailImage {\n  aspectRatio: Float!\n  height: Int!\n  image(size: LogoSize!): URL!\n  iso639_1: String\n  voteAverage: Float!\n  voteCount: Int!\n  width: Int!\n}\n\ntype MediaImages {\n  backdrops: [BackdropSizeDetailImage!]!\n  posters: [PosterSizeDetailImage!]!\n}\n\ntype Movie implements IMovie {\n  alternativeTitles: [AlternativeTitle!]!\n  backdrop(size: BackdropSize!): URL\n  credits: ICreditsBasicPerson!\n  details: DetailedMovie!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: MediaImages!\n  isAdult: Boolean!\n  isVideo: Boolean!\n  keywords: [Keyword!]!\n  numberOfRatings: Int!\n  originalLanguage: String!\n  originalTitle: String!\n  overview: String!\n  popularityIndex: Float\n  poster(size: PosterSize!): URL\n  rating: Float!\n  recommendations(last: Int, after: String, first: Int, before: String): MovieConnection!\n  releaseDate: Date\n  reviews(last: Int, after: String, first: Int, before: String): ReviewConnection!\n  similar(last: Int, after: String, first: Int, before: String): MovieConnection!\n  streamingOptions: [StreamingOption!]\n  title: String!\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n}\n\ntype MovieConnection {\n  edges: [MovieEdge]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\ntype MovieEdge {\n  cursor: String!\n  node: IMovie\n}\n\nunion MovieOrTV = MovieResult | TVShowResult\n\nunion MovieOrTVOrPeople = MovieResult | TVShowResult | PersonListResult\n\ntype MovieOrTVOrPeopleConnection {\n  edges: [MovieOrTVOrPeopleEdge]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\ntype MovieOrTVOrPeopleEdge {\n  cursor: String!\n  node: MovieOrTVOrPeople\n}\n\ntype MovieResult implements IMovie {\n  alternativeTitles: [AlternativeTitle!]!\n  backdrop(size: BackdropSize!): URL\n  credits: ICreditsBasicPerson!\n  details: DetailedMovie!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: MediaImages!\n  isAdult: Boolean!\n  isVideo: Boolean!\n  keywords: [Keyword!]!\n  numberOfRatings: Int!\n  originalLanguage: String!\n  originalTitle: String!\n  overview: String!\n  popularityIndex: Float\n  poster(size: PosterSize!): URL\n  rating: Float!\n  recommendations(first: Int, before: String, last: Int, after: String): MovieConnection!\n  releaseDate: Date\n  reviews(first: Int, before: String, last: Int, after: String): ReviewConnection!\n  similar(first: Int, before: String, last: Int, after: String): MovieConnection!\n  streamingOptions: [StreamingOption!]\n  title: String!\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n}\n\ntype Movies {\n  movie(id: Int!): IMovie!\n  nowPlaying(last: Int, after: String, first: Int, before: String): MovieConnection!\n  popular(last: Int, after: String, first: Int, before: String): MovieConnection!\n  search(last: Int, after: String, term: String!, first: Int, before: String): MovieConnection!\n  topRated(last: Int, after: String, first: Int, before: String): MovieConnection!\n  trending(last: Int, after: String, timeWindow: TimeWindow!, first: Int, before: String): MovieConnection!\n  upcoming(last: Int, after: String, first: Int, before: String): MovieConnection!\n}\n\ntype Network {\n  id: Int!\n  logo(size: LogoSize!): URL\n  name: String!\n  originCountry: String!\n}\n\ntype PageInfo {\n  endCursor: String\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n}\n\ntype People {\n  person(id: Int!): DetailedPerson!\n  popular(last: Int, after: String, first: Int, before: String): PersonListResultConnection!\n  search(last: Int, after: String, term: String!, first: Int, before: String): PersonListResultConnection!\n  trending(last: Int, after: String, timeWindow: TimeWindow!, first: Int, before: String): PersonListResultConnection!\n}\n\ntype Person implements IBasicPerson & IPerson {\n  credits: PersonCredits!\n  details: DetailedPerson!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: [ProfileSizeDetailImage!]!\n  isAdult: Boolean!\n  name: String!\n  popularityIndex: Float!\n  profilePicture(size: ProfileSize!): URL\n  taggedImages(last: Int, after: String, first: Int, before: String): TaggedImageConnection!\n  translations: [TranslationWithTranslatedPersonInfo!]!\n}\n\ntype PersonCredits {\n  all: CreditsMovieOrTV!\n  movies: CreditsMovie!\n  tv: CreditsTVShow!\n}\n\ntype PersonListResult implements IPerson & IBasicPerson {\n  credits: PersonCredits!\n  details: DetailedPerson!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: [ProfileSizeDetailImage!]!\n  isAdult: Boolean!\n  knownFor: [MovieOrTV!]!\n  name: String!\n  popularityIndex: Float!\n  profilePicture(size: ProfileSize!): URL\n  taggedImages(first: Int, before: String, last: Int, after: String): TaggedImageConnection!\n  translations: [TranslationWithTranslatedPersonInfo!]!\n}\n\ntype PersonListResultConnection {\n  edges: [PersonListResultEdge]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\ntype PersonListResultEdge {\n  cursor: String!\n  node: PersonListResult\n}\n\nenum PosterSize {\n  W780\n  W500\n  W154\n  W92\n  W342\n  W185\n  Original\n}\n\ntype PosterSizeDetailImage {\n  aspectRatio: Float!\n  height: Int!\n  image(size: PosterSize!): URL!\n  iso639_1: String\n  voteAverage: Float!\n  voteCount: Int!\n  width: Int!\n}\n\ntype Price {\n  amount: Float!\n  currency: String!\n}\n\ntype ProductionCompany {\n  id: Int!\n  logo(size: LogoSize!): URL\n  name: String!\n  originCountry: String!\n}\n\ntype ProductionCountry {\n  iso3166_1: String!\n  name: String!\n}\n\nenum ProfileSize {\n  Original\n  H632\n  W185\n  W45\n}\n\ntype ProfileSizeDetailImage {\n  aspectRatio: Float!\n  height: Int!\n  image(size: ProfileSize!): URL!\n  iso639_1: String\n  voteAverage: Float!\n  voteCount: Int!\n  width: Int!\n}\n\ntype Query {\n  find(externalId: String!, source: ExternalSource!): FromExternalIds!\n  movies: Movies!\n  people: People!\n  search(before: String, after: String, last: Int, term: String!, first: Int): MovieOrTVOrPeopleConnection!\n  trending(last: Int, after: String, timeWindow: TimeWindow!, first: Int, before: String): MovieOrTVOrPeopleConnection!\n  tv: TV!\n}\n\ntype Review {\n  author: String!\n  content: String!\n  id: String!\n  url: String!\n}\n\ntype ReviewConnection {\n  edges: [ReviewEdge]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\ntype ReviewEdge {\n  cursor: String!\n  node: Review\n}\n\ntype Season implements ISeasonData & ISeason {\n  airDate: Date\n  credits: ICreditsBasicPerson!\n  details: DetailedSeason!\n  episode(number: Int!): DetailedEpisode!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: MediaImages!\n  name: String!\n  overview: String\n  poster(size: PosterSize!): URL\n  seasonNumber: Int!\n  streamingOptions: [StreamingOption!]\n  videos: [Video!]!\n}\n\ntype SeasonData implements ISeasonData {\n  airDate: Date\n  id: Int!\n  name: String!\n  overview: String\n  poster(size: PosterSize!): URL\n  seasonNumber: Int!\n}\n\ntype SeasonResult implements ISeason & ISeasonData & ISeasonResultData {\n  airDate: Date\n  credits: ICreditsBasicPerson!\n  details: DetailedSeason!\n  episode(number: Int!): DetailedEpisode!\n  episodeCount: Int!\n  externalIds: ExternalIDS!\n  id: Int!\n  images: MediaImages!\n  name: String!\n  overview: String\n  poster(size: PosterSize!): URL\n  seasonNumber: Int!\n  streamingOptions: [StreamingOption!]\n  videos: [Video!]!\n}\n\ntype SeasonResultData implements ISeasonData & ISeasonResultData {\n  airDate: Date\n  episodeCount: Int!\n  id: Int!\n  name: String!\n  overview: String\n  poster(size: PosterSize!): URL\n  seasonNumber: Int!\n}\n\ntype SpokenLanguage {\n  iso639_1: String!\n  name: String!\n}\n\nenum Status {\n  Rumored\n  Released\n  InProduction\n  Cancelled\n  Planned\n  PostProduction\n}\n\nenum StillSize {\n  Original\n  W92\n  W185\n  W300\n}\n\ntype StillSizeDetailImage {\n  aspectRatio: Float!\n  height: Int!\n  image(size: StillSize!): URL!\n  iso639_1: String\n  voteAverage: Float!\n  voteCount: Int!\n  width: Int!\n}\n\ntype StreamingLinks {\n  androidTV: URL\n  fireTV: URL\n  tvOS: URL\n  web: URL!\n}\n\nenum StreamingMonetizationType {\n  Cinema\n  Free\n  Flatrate\n  Ads\n  Buy\n  Rent\n}\n\ntype StreamingOption {\n  bestOffering: StreamingOptionOffering!\n  offerings: [StreamingOptionOffering!]!\n  provider: StreamingProvider\n}\n\ntype StreamingOptionOffering {\n  links: StreamingLinks!\n  price: Price\n  resolution: VideoResolution!\n  type: StreamingMonetizationType!\n}\n\ntype StreamingProvider {\n  iconURL: URL!\n  id: Int!\n  monetizationTypes: [StreamingMonetizationType!]!\n  name: String!\n  slug: String!\n}\n\ntype TV {\n  airingToday(last: Int, after: String, first: Int, before: String): TVShowConnection!\n  onTheAir(last: Int, after: String, first: Int, before: String): TVShowConnection!\n  popular(last: Int, after: String, first: Int, before: String): TVShowConnection!\n  search(last: Int, after: String, term: String!, first: Int, before: String): TVShowConnection!\n  show(id: Int!): DetailedTVShow!\n  topRated(last: Int, after: String, first: Int, before: String): TVShowConnection!\n  trending(last: Int, after: String, timeWindow: TimeWindow!, first: Int, before: String): TVShowConnection!\n  upcoming(last: Int, after: String, first: Int, before: String): TVShowConnection!\n}\n\ntype TVShow implements ITVShow {\n  alternativeTitles: [AlternativeTitle!]!\n  backdrop(size: BackdropSize!): URL\n  credits: ICreditsBasicPerson!\n  details: DetailedTVShow!\n  externalIds: ExternalIDS!\n  firstAirDate: Date\n  id: Int!\n  images: MediaImages!\n  keywords: [Keyword!]!\n  name: String!\n  numberOfRatings: Int!\n  originCountry: [String!]!\n  originalLanguage: String!\n  originalName: String!\n  overview: String!\n  popularityIndex: Float\n  poster(size: PosterSize!): URL\n  rating: Float!\n  recommendations(last: Int, after: String, first: Int, before: String): TVShowConnection!\n  reviews(last: Int, after: String, first: Int, before: String): ReviewConnection!\n  season(number: Int!): DetailedSeason!\n  similar(last: Int, after: String, first: Int, before: String): TVShowConnection!\n  streamingOptions: [StreamingOption!]\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n}\n\ntype TVShowConnection {\n  edges: [TVShowEdge]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\ntype TVShowEdge {\n  cursor: String!\n  node: ITVShow\n}\n\ntype TVShowResult implements ITVShow {\n  alternativeTitles: [AlternativeTitle!]!\n  backdrop(size: BackdropSize!): URL\n  credits: ICreditsBasicPerson!\n  details: DetailedTVShow!\n  externalIds: ExternalIDS!\n  firstAirDate: Date\n  id: Int!\n  images: MediaImages!\n  keywords: [Keyword!]!\n  name: String!\n  numberOfRatings: Int!\n  originCountry: [String!]!\n  originalLanguage: String!\n  originalName: String!\n  overview: String!\n  popularityIndex: Float\n  poster(size: PosterSize!): URL\n  rating: Float!\n  recommendations(first: Int, before: String, last: Int, after: String): TVShowConnection!\n  reviews(first: Int, before: String, last: Int, after: String): ReviewConnection!\n  season(number: Int!): DetailedSeason!\n  similar(first: Int, before: String, last: Int, after: String): TVShowConnection!\n  streamingOptions: [StreamingOption!]\n  translations: [TranslationWithTranslatedMovieInfo!]!\n  videos: [Video!]!\n}\n\ntype TaggedImage {\n  image: AnyImage!\n  media: MovieOrTV!\n}\n\ntype TaggedImageConnection {\n  edges: [TaggedImageEdge]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\ntype TaggedImageEdge {\n  cursor: String!\n  node: TaggedImage\n}\n\nenum TimeWindow {\n  Week\n  Day\n}\n\ntype TranslatedMovieInfo {\n  overview: String!\n  title: String!\n}\n\ntype TranslatedPersonInfo {\n  biography: String!\n}\n\ntype TranslationWithTranslatedMovieInfo {\n  info: TranslatedMovieInfo!\n  iso3166_1: String!\n  iso639_1: String!\n  language: String\n  localizedLanguage: String\n}\n\ntype TranslationWithTranslatedPersonInfo {\n  info: TranslatedPersonInfo!\n  iso3166_1: String!\n  iso639_1: String!\n  language: String\n  localizedLanguage: String\n}\n\nscalar URL\n\ntype Video {\n  id: String!\n  iso3166_1: String!\n  iso639_1: String!\n  key: String!\n  links: StreamingLinks\n  name: String!\n  site: String!\n  size: Int!\n  thumbnail: URL\n  type: String!\n}\n\nenum VideoResolution {\n  Sd\n  Theatre\n  Hd\n  UltraHd\n  Bluray\n  Dvd\n}",
    "The Rick and Morty API": "\"\"\"\"\"\"\ndirective @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE\n\n\"\"\"\"\"\"\ntype Query {\n  \"\"\"Get a specific character by ID\"\"\"\n  character(id: ID!): Character\n\n  \"\"\"Get the list of all characters\"\"\"\n  characters(page: Int, filter: FilterCharacter): Characters\n\n  \"\"\"Get a list of characters selected by ids\"\"\"\n  charactersByIds(ids: [ID!]!): [Character]\n\n  \"\"\"Get a specific locations by ID\"\"\"\n  location(id: ID!): Location\n\n  \"\"\"Get the list of all locations\"\"\"\n  locations(page: Int, filter: FilterLocation): Locations\n\n  \"\"\"Get a list of locations selected by ids\"\"\"\n  locationsByIds(ids: [ID!]!): [Location]\n\n  \"\"\"Get a specific episode by ID\"\"\"\n  episode(id: ID!): Episode\n\n  \"\"\"Get the list of all episodes\"\"\"\n  episodes(page: Int, filter: FilterEpisode): Episodes\n\n  \"\"\"Get a list of episodes selected by ids\"\"\"\n  episodesByIds(ids: [ID!]!): [Episode]\n}\n\n\"\"\"\"\"\"\ntype Character {\n  \"\"\"The id of the character.\"\"\"\n  id: ID\n\n  \"\"\"The name of the character.\"\"\"\n  name: String\n\n  \"\"\"The status of the character ('Alive', 'Dead' or 'unknown').\"\"\"\n  status: String\n\n  \"\"\"The species of the character.\"\"\"\n  species: String\n\n  \"\"\"The type or subspecies of the character.\"\"\"\n  type: String\n\n  \"\"\"\n  The gender of the character ('Female', 'Male', 'Genderless' or 'unknown').\n  \"\"\"\n  gender: String\n\n  \"\"\"The character's origin location\"\"\"\n  origin: Location\n\n  \"\"\"The character's last known location\"\"\"\n  location: Location\n\n  \"\"\"\n  Link to the character's image.\n  All images are 300x300px and most are medium shots or portraits since they are intended to be used as avatars.\n  \"\"\"\n  image: String\n\n  \"\"\"Episodes in which this character appeared.\"\"\"\n  episode: [Episode]!\n\n  \"\"\"Time at which the character was created in the database.\"\"\"\n  created: String\n}\n\n\"\"\"\"\"\"\ntype Location {\n  \"\"\"The id of the location.\"\"\"\n  id: ID\n\n  \"\"\"The name of the location.\"\"\"\n  name: String\n\n  \"\"\"The type of the location.\"\"\"\n  type: String\n\n  \"\"\"The dimension in which the location is located.\"\"\"\n  dimension: String\n\n  \"\"\"List of characters who have been last seen in the location.\"\"\"\n  residents: [Character]!\n\n  \"\"\"Time at which the location was created in the database.\"\"\"\n  created: String\n}\n\n\"\"\"\"\"\"\ntype Episode {\n  \"\"\"The id of the episode.\"\"\"\n  id: ID\n\n  \"\"\"The name of the episode.\"\"\"\n  name: String\n\n  \"\"\"The air date of the episode.\"\"\"\n  air_date: String\n\n  \"\"\"The code of the episode.\"\"\"\n  episode: String\n\n  \"\"\"List of characters who have been seen in the episode.\"\"\"\n  characters: [Character]!\n\n  \"\"\"Time at which the episode was created in the database.\"\"\"\n  created: String\n}\n\n\"\"\"\"\"\"\ninput FilterCharacter {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  status: String\n\n  \"\"\"\"\"\"\n  species: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  gender: String\n}\n\n\"\"\"\"\"\"\ntype Characters {\n  \"\"\"\"\"\"\n  info: Info\n\n  \"\"\"\"\"\"\n  results: [Character]\n}\n\n\"\"\"\"\"\"\ntype Info {\n  \"\"\"The length of the response.\"\"\"\n  count: Int\n\n  \"\"\"The amount of pages.\"\"\"\n  pages: Int\n\n  \"\"\"Number of the next page (if it exists)\"\"\"\n  next: Int\n\n  \"\"\"Number of the previous page (if it exists)\"\"\"\n  prev: Int\n}\n\n\"\"\"\"\"\"\ninput FilterLocation {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  type: String\n\n  \"\"\"\"\"\"\n  dimension: String\n}\n\n\"\"\"\"\"\"\ntype Locations {\n  \"\"\"\"\"\"\n  info: Info\n\n  \"\"\"\"\"\"\n  results: [Location]\n}\n\n\"\"\"\"\"\"\ninput FilterEpisode {\n  \"\"\"\"\"\"\n  name: String\n\n  \"\"\"\"\"\"\n  episode: String\n}\n\n\"\"\"\"\"\"\ntype Episodes {\n  \"\"\"\"\"\"\n  info: Info\n\n  \"\"\"\"\"\"\n  results: [Episode]\n}\n\n\"\"\"\"\"\"\nenum CacheControlScope {\n  \"\"\"\"\"\"\n  PUBLIC\n\n  \"\"\"\"\"\"\n  PRIVATE\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload",
    "TravelgateX": "interface Node {\n  \"\"\"ID code\"\"\"\n  code: ID!\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"List of advise messages.\"\"\"\ntype AdviseMessage {\n  \"\"\"AM code: The following codes can be returned:\"\"\"\n  code: ID!\n\n  \"\"\"Error type: The following types are valid:[type]\"\"\"\n  type: String! @deprecated(reason: \"deprecated from 2018-06-01.\")\n\n  \"\"\"Error description\"\"\"\n  description: String!\n\n  \"\"\"\n  Indicates the level of importance of the message: Posible values ERROR WARN INFO\n  \"\"\"\n  level: AdviseMessageLevel!\n\n  \"\"\"Specify the external message.\"\"\"\n  external: ExternalMessage\n\n  \"\"\"Identifier to be able to investigate the cause of the error\"\"\"\n  correlationID: ID!\n}\n\n\"\"\"Data sent and received in the supplier\u2019s native format.\"\"\"\ntype AuditData {\n  \"\"\"List of transactions data\"\"\"\n  transactions: [Transactions!]!\n\n  \"\"\"TimeStamp\"\"\"\n  timeStamp: DateTime!\n\n  \"\"\"Process time in milliseconds (ms)\"\"\"\n  processTime: Float!\n}\n\n\"\"\"Application errors\"\"\"\ntype Error {\n  \"\"\"Error code\"\"\"\n  code: String!\n\n  \"\"\"Error type\"\"\"\n  type: String!\n\n  \"\"\"Error description\"\"\"\n  description: String!\n}\n\ntype ExternalMessage {\n  \"\"\"External Code\"\"\"\n  code: String\n\n  \"\"\"External Message\"\"\"\n  message: String!\n}\n\n\"\"\"Holder object that contains the occupant's (pax's) name and surname.\"\"\"\ntype Holder {\n  \"\"\"Holder's name\"\"\"\n  name: String!\n\n  \"\"\"Holder's surname\"\"\"\n  surname: String!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\n\"\"\"PaymentCard\"\"\"\ntype PaymentCard implements Node {\n  \"\"\"Payment Card Unique id\"\"\"\n  code: ID!\n\n  \"\"\"Contains the information of the Payment Card\"\"\"\n  paymentCardData: PaymentCardData!\n\n  \"\"\"Create date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Update date\"\"\"\n  updatedAt: DateTime!\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\n\"\"\"Contains the information of the Payment Card\"\"\"\ntype PaymentCardData {\n  \"\"\"Contains the payment card activation date\"\"\"\n  active: Date!\n\n  \"\"\"Contains credit card CVC\"\"\"\n  CVC: CVC!\n\n  \"\"\"Contains the payment card expiration date\"\"\"\n  expire: Date!\n\n  \"\"\"Contains owner's name\"\"\"\n  holder: Holder!\n\n  \"\"\"\n  Contains the generated card ID. It is provided by the third party supplier. \n  \"\"\"\n  id: ID!\n\n  \"\"\"Contains credit card number\"\"\"\n  number: CardNumber!\n\n  \"\"\"\n  Indicates the supplier or third party, responsible of the payment card's creation\n  \"\"\"\n  supplier: Supplier!\n\n  \"\"\"Indicates the supported card type\"\"\"\n  type: PaymentCardType!\n}\n\ntype Text {\n  text: String!\n  language: Language!\n}\n\n\"\"\"Supplier transaction\"\"\"\ntype Transactions {\n  \"\"\"Transaction Request.\"\"\"\n  request: String!\n\n  \"\"\"Transaction Response.\"\"\"\n  response: String!\n\n  \"\"\"Time when the request has been processed.\"\"\"\n  timeStamp: DateTime!\n}\n\n\"\"\"Url's\"\"\"\ntype Urls {\n  \"\"\"Specific URL for Availability method.\"\"\"\n  search: URI\n\n  \"\"\"Specific URL for Reservation method.\"\"\"\n  quote: URI\n\n  \"\"\"Specific URL for Valuation method.\"\"\"\n  book: URI\n\n  \"\"\"Supplier URL used for multiple methods.\"\"\"\n  generic: URI\n}\n\n\"\"\"Application warnings\"\"\"\ntype Warning {\n  \"\"\"Warning code\"\"\"\n  code: String!\n\n  \"\"\"Warning type\"\"\"\n  type: String!\n\n  \"\"\"Warning description\"\"\"\n  description: String!\n}\n\ninput AbsoluteInput {\n  \"\"\"From date of search\"\"\"\n  from: DateTime!\n\n  \"\"\"To date of search\"\"\"\n  to: DateTime!\n}\n\ninput EntitiesInput {\n  suppliers: [ID!]\n  clients: [ID!]\n  access: [ID!]\n}\n\n\"\"\"The card expiration date\"\"\"\ninput ExpireDateInput {\n  \"\"\"Month MM\"\"\"\n  month: Int!\n\n  \"\"\"Year yy\"\"\"\n  year: Int!\n}\n\n\"\"\"Holder object that contains the occupant's (pax's) name and surname.\"\"\"\ninput HolderInput {\n  \"\"\"The card holder's name\"\"\"\n  name: String!\n\n  \"\"\"The card holder's surname\"\"\"\n  surname: String!\n\n  \"\"\"Holder\u2019s title.\"\"\"\n  title: PersonalTitleType\n}\n\n\"\"\"Parameters Input.\"\"\"\ninput ParameterInput {\n  \"\"\"\n  Contains the keyword/Id to identify a parameter.\n  This information is mandatory.\n  \"\"\"\n  key: String!\n\n  \"\"\"\n  Contains the parameter values.\n  This information is mandatory.\n  \"\"\"\n  value: String!\n}\n\n\"\"\"\nInput PaymentCard, if the payment type is DIRECT, CARD_BOOKING or CARD_CHECK_IN, then is mandatory to specify the payment card information\n\"\"\"\ninput PaymentCardInput {\n  \"\"\"\n  Indicates the supported card type, the supported card for this option is shown in Quote step.\n  @deprecated(reason: \"deprecated from 2019-07-31. Please, use type\")\n  \"\"\"\n  cardType: String\n\n  \"\"\"\n  Indicates the supported card type, the supported card for this option is shown in Quote step.\n  \"\"\"\n  type: PaymentCardType\n\n  \"\"\"Contains owner's name\"\"\"\n  holder: HolderInput!\n\n  \"\"\"Contains credit card number\"\"\"\n  number: String!\n\n  \"\"\"Contains credit card CVC\"\"\"\n  CVC: String!\n\n  \"\"\"Contains credit card expiration date\"\"\"\n  expire: ExpireDateInput!\n\n  \"\"\"Is a virtual credit card\"\"\"\n  isVCC: Boolean\n\n  \"\"\"Virtual Credit Card data\"\"\"\n  virtualCreditCard: VirtualCreditCardInput\n\n  \"\"\"Three Domain Security data\"\"\"\n  threeDomainSecurity: ThreeDomainSecurityInput\n}\n\ninput RelativeInput {\n  \"\"\"Duration ago from now() to set the 'from' time\"\"\"\n  from: Duration!\n\n  \"\"\"Duration ago from now() to set the 'to' time\"\"\"\n  to: Duration!\n}\n\ninput RelayInput {\n  first: Int\n  last: Int\n  before: String\n  after: String\n}\n\ninput TimeRangeInput {\n  \"\"\"\n  Use 'now()' to query data with timestamps relative to the server\u2019s current timestamp.\n  \"\"\"\n  relative: RelativeInput\n\n  \"\"\"Specify absolute time with date-time strings.\"\"\"\n  absolute: AbsoluteInput\n}\n\n\"\"\"URLs Input\"\"\"\ninput UrlsInput {\n  \"\"\"Specific URL for Availability method.\"\"\"\n  search: URI\n\n  \"\"\"Specific URL for Reservation method.\"\"\"\n  quote: URI\n\n  \"\"\"Specific URL for Valuation method.\"\"\"\n  book: URI\n\n  \"\"\"Supplier URL used for multiple methods.\"\"\"\n  generic: URI\n}\n\n\"\"\"Area(m\u00b2) International System of Units.\"\"\"\nscalar Area\n\nscalar CVC\n\nscalar CardNumber\n\n\"\"\"\nThe Country type represents Country values. A good example might be a Passenger Nationality.\nIn queries or mutations, Country fields have to be specified in ISO 3166-1 alpha-2 format with enclosing double quotes \"ES\".\n\"\"\"\nscalar Country\n\n\"\"\"\nThe Currenty type represents Currency values. A good example might be a Rate Price Currency.\nIn queries or mutations, Currency fields have to be specified in ISO 4217 format with enclosing double quotes \"EUR\".\n\"\"\"\nscalar Currency\n\n\"\"\"\nThe Date type represents Date values. A good example might be a Hotel CheckIn Date.\nIn queries or mutations, DateTime fields have to be specified in ISO 8601 format with enclosing double quotes: \"2017-10-22\".\n\"\"\"\nscalar Date\n\n\"\"\"\nThe DateTime type represents DateTime values. A good example might be a transaction TimeSpan.\nIn queries or mutations, DateTime fields have to be specified in ISO 8601 format with enclosing double quotes: \"2017-10-22T13:57:31.123Z\".\n\"\"\"\nscalar DateTime\n\n\"\"\"Scalar for type Domain\"\"\"\nscalar DomainName\n\n\"\"\"\nAn integer literal followed immediately (with no spaces) by a duration unit following the ISO 8601 limited to Minutes(min), Hours(h), Days(d). ie: 3min, 2h, 1d.\n\"\"\"\nscalar Duration\n\n\"\"\"Scalar to support big integers.\"\"\"\nscalar Int64\n\n\"\"\"\nThe JSON type makes sure that it is actually valid JSON and returns the value as a parsed JSON object/array instead of a string.\nIn queries or mutations, JSON fields have to be specified with enclosing double quotes. Special characters have to be escaped: \"{\"int\": 1, \"string\": \"value\"}\".\n\"\"\"\nscalar JSON\n\n\"\"\"\nJSON Web Tokens are an open, industry standard RFC 7519 method for representing claims securely between two parties.\n\"\"\"\nscalar JWT\n\n\"\"\"\nThe Language type represents Language values. A good example might be a Hotel Description Language.\nIn queries or mutations, Language fields have to be specified in ISO 639-1 format with enclosing double quotes \"en\".\n\"\"\"\nscalar Language\n\n\"\"\"\nState code of Country. Only State letters of ISO 3166-2. e.g. US-AR -> AR\n\"\"\"\nscalar State\n\n\"\"\"Time in ISO 8601 format. hh:mm . 24h format.\"\"\"\nscalar Time\n\n\"\"\"\nThe URI type represents a URI values. A good example mith be an Hotel Image URL.\nIn queries or mutations, URI fields have to be specified in RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string format with enclosing double quotes: \"http:\\www.travelgatex.com\".\n\"\"\"\nscalar URI\n\nenum AdviseMessageLevel {\n  \"\"\"Waringn message.\"\"\"\n  WARN\n\n  \"\"\"Error message.\"\"\"\n  ERROR\n\n  \"\"\"Info message.\"\"\"\n  INFO\n}\n\nenum ApplicationAreaType {\n  \"\"\"Apply at the hotel.\"\"\"\n  HOTEL\n\n  \"\"\"Apply in the hotel.\"\"\"\n  ROOM\n\n  \"\"\"Applies to a service.\"\"\"\n  SERVICE\n\n  \"\"\"Applies in general.\"\"\"\n  GENERAL\n}\n\n\"\"\"Indicates the type of dates\"\"\"\nenum DateType {\n  \"\"\"Arrival Date\"\"\"\n  ARRIVAL\n\n  \"\"\"Booking Creation\"\"\"\n  BOOKING\n}\n\n\"\"\"List of credit card\"\"\"\nenum PaymentCardType {\n  \"\"\"Visa\"\"\"\n  VI\n\n  \"\"\"American Express\"\"\"\n  AX\n\n  \"\"\"BC Card\"\"\"\n  BC\n\n  \"\"\"MasterCard\"\"\"\n  CA\n\n  \"\"\"Carte Blanche\"\"\"\n  CB\n\n  \"\"\"China Union Pay\"\"\"\n  CU\n\n  \"\"\"Discover\"\"\"\n  DS\n\n  \"\"\"Diners Club\"\"\"\n  DC\n\n  \"\"\"Carta Si\"\"\"\n  T\n\n  \"\"\"Carte Bleue\"\"\"\n  R\n\n  \"\"\"Dankort\"\"\"\n  N\n\n  \"\"\"Delta\"\"\"\n  L\n\n  \"\"\"Electron\"\"\"\n  E\n\n  \"\"\"Japan Credit Bureau\"\"\"\n  JC\n\n  \"\"\"Maestro\"\"\"\n  TO\n\n  \"\"\"Switch\"\"\"\n  S\n\n  \"\"\"Electronic Cash\"\"\"\n  EC\n\n  \"\"\"EuroCard\"\"\"\n  EU\n\n  \"\"\"universal air travel card\"\"\"\n  TP\n\n  \"\"\"optima\"\"\"\n  OP\n\n  \"\"\"Air Canada/RnRoute\"\"\"\n  ER\n\n  \"\"\"access\"\"\"\n  XS\n\n  \"\"\"others\"\"\"\n  O\n}\n\n\"\"\"Options payment type\"\"\"\nenum PaymentType {\n  \"\"\"The payment is managed by the supplier.\"\"\"\n  MERCHANT\n\n  \"\"\"\n  The payment is made straight to the actual payee, without sending it through an intermediary or a third party.\n  \"\"\"\n  DIRECT\n\n  \"\"\"\n  The payment is managed by the supplier. The payment is effectuated at the time of booking.\n  \"\"\"\n  CARD_BOOKING\n\n  \"\"\"\n  The payment is managed by the supplier. The payment is effectuated at check in in the hotel.\n  \"\"\"\n  CARD_CHECK_IN\n\n  \"\"\"\n  The payment is managed by TravelgateX.\n  The client may use this payment type if he contracts the service of virtual card creation(VCC).\n  This service allows Travelgate to manage the payments that require card data in the Booking process.\n  There are two payment types that require card data: CARD_BOOKING and CARD_CHECK_IN.\n  That way, TravelgateX generates the card with the net price that the client has to pay to the supplier.\n  \"\"\"\n  PAYX\n}\n\n\"\"\"Rate Rules\"\"\"\nenum RateRulesType {\n  \"\"\"NORMAL are options without RateRule.\"\"\"\n  NORMAL\n\n  \"\"\"\n  The product can't be sold separately from another product attached to it, such as a flight.\n  \"\"\"\n  PACKAGE\n\n  \"\"\"OLDER55 can only be sold to people who are 55 and older.\"\"\"\n  OLDER55\n\n  \"\"\"OLDER60 can only be sold to people who are 60 and older.\"\"\"\n  OLDER60\n\n  \"\"\"OLDER65 can only be sold to people who are 65 and older.\"\"\"\n  OLDER65\n\n  \"\"\"CANARY_RESIDENT is applicable to Canary Islands residents only.\"\"\"\n  CANARY_RESIDENT\n\n  \"\"\"BALEARIC_RESIDENT is applicable to Balearic Islands residents only.\"\"\"\n  BALEARIC_RESIDENT\n\n  \"\"\"\n  LARGE_FAMILY is applicable to large families and is determined by each supplier.\n  \"\"\"\n  LARGE_FAMILY\n\n  \"\"\"\n  HONEYMOON is applicable to those who just got married and is determined by each supplier.\n  \"\"\"\n  HONEYMOON\n\n  \"\"\"PUBLIC_SERVANT is applicable to public servants only.\"\"\"\n  PUBLIC_SERVANT\n\n  \"\"\"UNEMPLOYED is applicable to those without work.\"\"\"\n  UNEMPLOYED\n\n  \"\"\"NON_REFUNDABLE is applicable to non refundable options.\"\"\"\n  NON_REFUNDABLE\n\n  \"\"\"MOBILE are special rates confirmed by mobile phone.\"\"\"\n  MOBILE\n\n  \"\"\"WARRANTY is applicable to options with cancellation warranty.\"\"\"\n  WARRANTY\n\n  \"\"\"ESSENTIAL_WORKER are special hotel rates for essential workers.\"\"\"\n  ESSENTIAL_WORKER\n}\n\n\"\"\"\nAn Access is a set of credentials and configuration in order to access the system of a Supplier.\n\"\"\"\ntype Access implements Node {\n  code: ID!\n  accessData: AccessData\n\n  \"\"\"Errors that abort services\"\"\"\n  error: [Error!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype AccessConnection {\n  edges: [AccessEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection.\"\"\"\n  totalCount: Int!\n}\n\ntype AccessData {\n  \"\"\"Access descriptive name\"\"\"\n  name: String!\n\n  \"\"\"Indicates if Access is active\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Unique AccessConfiguration identifier\"\"\"\n  code: ID!\n\n  \"\"\"Supplier for this Access\"\"\"\n  supplier: Supplier!\n\n  \"\"\"Indicates if Access can be used for testing or not\"\"\"\n  isTest: Boolean!\n\n  \"\"\"User code to connect to supplier\"\"\"\n  user: String\n\n  \"\"\"Password for the connection\"\"\"\n  password: String\n\n  \"\"\"Specific URLs\"\"\"\n  urls: Urls\n\n  \"\"\"List of parameters for additional information\"\"\"\n  parameters: [Parameter]\n\n  \"\"\"Markets allowed for the Access\"\"\"\n  markets: [String!]\n\n  \"\"\"Business rule types for the Access\"\"\"\n  rateRules: [RateRulesType!]\n\n  \"\"\"Parent Access if Shared Access\"\"\"\n  shared: Access\n\n  \"\"\"Access owner\"\"\"\n  owner: Organization\n\n  \"\"\"Refresh time to update Despriptive Info\"\"\"\n  updateDescriptiveInfo: Int!\n\n  \"\"\"Limit on DescriptiveInfo; 0 denotates no limit\"\"\"\n  descriptiveInfoLimit: Int!\n\n  \"\"\"True if scheduler is active\"\"\"\n  isSchedulerActive: Boolean\n\n  \"\"\"Refresh time to update other batch lists\"\"\"\n  updateList: Int!\n\n  \"\"\"Range on update date\"\"\"\n  updateDateRange: String!\n\n  \"\"\"Groups where access belongs\"\"\"\n  groups(first: Int, last: Int, before: String, after: String): GroupConnection\n\n  \"\"\"Legacy HubUser#HubProvider relation\"\"\"\n  legacyLink: LegacyLink\n\n  \"\"\"Parent Master Access. null=>masterAccess, notNull=>slaveAccess\"\"\"\n  master: Access\n}\n\ntype AccessEdge {\n  node: Access\n  cursor: String!\n}\n\n\"\"\"\nClient identifies who is making the request and holds the configuration assigned to it.\n\"\"\"\ntype Client implements Node {\n  code: ID!\n  clientData: ClientData\n\n  \"\"\"Errors that abort services\"\"\"\n  error: [Error!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype ClientConnection {\n  edges: [ClientEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection.\"\"\"\n  totalCount: Int!\n}\n\ntype ClientData {\n  \"\"\"ID identifier of a Client\"\"\"\n  code: ID!\n\n  \"\"\"Client complete name\"\"\"\n  name: ID!\n\n  \"\"\"Indicates whether a Client is active or inactive\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Indicates the group where the Client belongs\"\"\"\n  group: Group\n\n  \"\"\"Client owner\"\"\"\n  owner: Organization\n\n  \"\"\"Obtain all suppliers for a filter.\"\"\"\n  suppliers(first: Int, last: Int, before: String, after: String, filter: SupplierFilter): SupplierConnection\n}\n\ntype ClientEdge {\n  node: Client\n  cursor: String!\n}\n\n\"\"\"Context type. Currently, only Code is necessary.\"\"\"\ntype Context implements Node {\n  code: ID!\n\n  \"\"\"Errors that abort services\"\"\"\n  error: [Error!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype Entity implements Node {\n  code: ID!\n  entity: EntityData\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype EntityConnection {\n  edges: [EntityEdge]\n  pageInfo: PageInfo!\n}\n\nunion EntityData = ClientData | SupplierData | AccessData\n\ntype EntityEdge {\n  node: Entity\n  cursor: String!\n}\n\ntype LegacyLink {\n  hubUser: Client!\n  hubProvider: Supplier!\n}\n\n\"\"\"\nParameters for additional information for the supplier's configuration.\n\"\"\"\ntype Parameter {\n  \"\"\"\n  Contains the keyword/Id to identify a parameter.\n  This information is mandatory.\n  \"\"\"\n  key: ID!\n\n  \"\"\"\n  Contains the parameter values.\n  This information is mandatory.\n  \"\"\"\n  value: String!\n}\n\ntype PointOfSale implements Node {\n  code: ID!\n  pointOfSaleData: PointOfSaleData\n\n  \"\"\"Create date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Update date\"\"\"\n  updatedAt: DateTime!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype PointOfSaleConnection {\n  edges: [PointOfSaleEdge]\n  pageInfo: PageInfo!\n}\n\ntype PointOfSaleData {\n  \"\"\"POS Identifier\"\"\"\n  code: ID!\n\n  \"\"\"POS Name\"\"\"\n  name: String\n\n  \"\"\"POS owner\"\"\"\n  owner: Organization\n}\n\ntype PointOfSaleEdge {\n  node: PointOfSale\n  cursor: String!\n}\n\ntype Profile implements Node {\n  code: ID!\n  profileData: ProfileData\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Create date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Update date\"\"\"\n  updatedAt: DateTime!\n}\n\ntype ProfileConnection {\n  edges: [ProfileEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection.\"\"\"\n  totalCount: Int!\n}\n\n\"\"\"Profile data\"\"\"\ntype ProfileData {\n  \"\"\"Profile Identifier\"\"\"\n  code: ID!\n\n  \"\"\"Profile label\"\"\"\n  label: String\n\n  \"\"\"Profile type\"\"\"\n  type: [ProfileType!]!\n\n  \"\"\"Profile Entities (suppliers/clients)\"\"\"\n  entities: EntityConnection\n\n  \"\"\"Indicates the group where the Client belongs\"\"\"\n  group: Group\n\n  \"\"\"Profile owner\"\"\"\n  owner: Organization\n\n  \"\"\"Active profile\"\"\"\n  isActive: Boolean\n\n  \"\"\"Profile is published\"\"\"\n  isPublished: Boolean\n}\n\ntype ProfileEdge {\n  node: Profile\n  cursor: String!\n}\n\n\"\"\"Temporary type to use only during SQL server's lifetime\"\"\"\ntype Provider {\n  code: ID!\n  name: String!\n  isActive: Boolean\n  isPublic: Boolean\n}\n\n\"\"\"Information related to a Service API\"\"\"\ntype ServiceApi {\n  \"\"\"Service API ID\"\"\"\n  code: ID!\n\n  \"\"\"Service API Name\"\"\"\n  name: String!\n\n  \"\"\"Operations that a Service Api has\"\"\"\n  operations: [ServiceOperation]\n\n  \"\"\"Errors\"\"\"\n  error: [Error!]\n}\n\n\"\"\"Information related to an API operation\"\"\"\ntype ServiceOperation {\n  \"\"\"Service Operation ID\"\"\"\n  code: ID!\n\n  \"\"\"Service Operation name\"\"\"\n  name: String!\n\n  \"\"\"Service Operation type\"\"\"\n  type: String!\n\n  \"\"\"\n  Service Operation Travel Operation ID (1: avail) (2: reservation) (3: batch) (4: batchLongRun)\n  \"\"\"\n  travelOperation: Int!\n}\n\n\"\"\"\nA Supplier is a Partner who is connected to TravelgateX on the supply side in order to sell their product to connected Buyers\n\"\"\"\ntype Supplier implements Node {\n  code: ID!\n  supplierData: SupplierData\n\n  \"\"\"Errors that abort services\"\"\"\n  error: [Error!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype SupplierConnection {\n  edges: [SupplierEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection.\"\"\"\n  totalCount: Int!\n}\n\ntype SupplierData {\n  \"\"\"unique identifier of a supplier\"\"\"\n  code: ID!\n\n  \"\"\"Supplier complete name\"\"\"\n  name: String!\n\n  \"\"\"indicates whether a supplier is active\"\"\"\n  isActive: Boolean!\n\n  \"\"\"instance to which this supllier is connected\"\"\"\n  provider: Provider!\n\n  \"\"\"Context where the Supplier belongs to\"\"\"\n  context: String!\n\n  \"\"\"Service API\"\"\"\n  serviceApi: Int!\n\n  \"\"\"SupplierGroup Internal Supplier grouping\"\"\"\n  supplierGroup: ID\n\n  \"\"\"Accesses where the supplier is referenced\"\"\"\n  accesses(first: Int, last: Int, before: String, after: String, filter: AccessFilter): AccessConnection\n\n  \"\"\"Supplier owner\"\"\"\n  owner: Organization!\n\n  \"\"\"Groups where access belongs\"\"\"\n  groups(first: Int, last: Int, before: String, after: String): GroupConnection\n\n  \"\"\"Obtain all clients for a filter.\"\"\"\n  clients(first: Int, last: Int, before: String, after: String, filter: ClientFilter): ClientConnection\n\n  \"\"\"Obtain its system.\"\"\"\n  system: System!\n}\n\ntype SupplierEdge {\n  node: Supplier\n  cursor: String!\n}\n\n\"\"\"group related to a supplier\"\"\"\ntype SupplierGroup {\n  \"\"\"group code of the group related to this supplier\"\"\"\n  groupCode: String!\n\n  \"\"\"Indicates if the supplier is active for its supplier\"\"\"\n  isActive: Boolean!\n}\n\n\"\"\"\nSystem identifies who is making the request and holds the configuration assigned to it.\n\"\"\"\ntype System implements Node {\n  code: ID!\n  systemData: SystemData\n\n  \"\"\"Errors that abort services\"\"\"\n  error: [Error!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype SystemConnection {\n  edges: [SystemEdge]\n  pageInfo: PageInfo!\n}\n\ntype SystemData {\n  \"\"\"ID identifier of a System\"\"\"\n  code: ID!\n\n  \"\"\"System complete name\"\"\"\n  name: ID!\n\n  \"\"\"Indicates whether a System is active or inactive\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Indicates the group where the System belongs\"\"\"\n  group: Group\n\n  \"\"\"System owner\"\"\"\n  owner: Organization\n\n  \"\"\"Obtain all suppliers for a filter.\"\"\"\n  suppliers(filter: SupplierFilter): [Supplier]!\n}\n\ntype SystemEdge {\n  node: System\n  cursor: String!\n}\n\ninput AccessFilter {\n  accessID: [ID]\n  group: [ID]\n  owner: [ID!]\n  hasMaster: Boolean\n  isActive: Boolean\n  supplierID: [ID]\n  providerID: [ID]\n}\n\n\"\"\"Access input\"\"\"\ninput AccessInput {\n  \"\"\"Access descriptive unique name\"\"\"\n  name: String\n\n  \"\"\"Indicates if Access is active\"\"\"\n  isActive: Boolean\n\n  \"\"\"Access code.\"\"\"\n  code: ID\n\n  \"\"\"Supplier for this Access\"\"\"\n  supplier: String\n\n  \"\"\"Indicates if Access can be used for testing or not\"\"\"\n  isTest: Boolean\n\n  \"\"\"User code to connect to supplier\"\"\"\n  user: String\n\n  \"\"\"Password for the connection\"\"\"\n  password: String\n\n  \"\"\"Specific URLs\"\"\"\n  urls: UrlsInput\n\n  \"\"\"List of parameters for additional information\"\"\"\n  parameters: [ParameterInput]\n\n  \"\"\"Limit on DescriptiveInfo; 0 denotates no limit\"\"\"\n  descriptiveInfoLimit: Int\n\n  \"\"\"Markets allowed for the Access\"\"\"\n  markets: [String!]\n\n  \"\"\"Business rule types for the Access\"\"\"\n  rateRules: [RateRulesType!]\n\n  \"\"\"Parent Access if Shared Access.\"\"\"\n  shared: String\n\n  \"\"\"Default group where the access will be visible.\"\"\"\n  group: ID\n\n  \"\"\"Refresh time to update Despriptive Info\"\"\"\n  updateDescriptiveInfo: Int\n\n  \"\"\"Refresh time to update other batch lists\"\"\"\n  updateList: Int\n\n  \"\"\"Range on update date\"\"\"\n  updateDateRange: String\n\n  \"\"\"Access owner\"\"\"\n  owner: ID\n\n  \"\"\"True if scheduler is active\"\"\"\n  isSchedulerActive: Boolean\n\n  \"\"\"Legacy HubUser#HubProvider relation\"\"\"\n  legacyLink: LegacyLinkInput\n\n  \"\"\"Set master Access if it it's not a master Access. Use Access->code\"\"\"\n  master: ID\n}\n\ninput ClientFilter {\n  clientID: [ID]\n  name: [String!]\n  groupID: [ID]\n  isActive: Boolean\n  owner: [ID!]\n}\n\ninput ClientWhereUniqueInput {\n  code: ID\n  name: ID\n  id: Int\n}\n\ninput CreateClientInput {\n  \"\"\"Client complete name\"\"\"\n  name: String!\n\n  \"\"\"Indicates whether a Client is active or inactive\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Group where the client will be assigned at first\"\"\"\n  group: String!\n\n  \"\"\"Client owner\"\"\"\n  owner: ID\n}\n\ninput CreateProfileInput {\n  \"\"\"Label of the Profile\"\"\"\n  label: String!\n\n  \"\"\"Group where Profile has to be placed\"\"\"\n  group: String!\n\n  \"\"\"Profile type\"\"\"\n  type: [ProfileType!]!\n\n  \"\"\"Entities of the Profile\"\"\"\n  entities: EntitiesInput\n\n  \"\"\"Active profile\"\"\"\n  isActive: Boolean\n\n  \"\"\"Profile is published\"\"\"\n  isPublished: Boolean\n}\n\n\"\"\"System input for CreateSystem\"\"\"\ninput CreateSystemInput {\n  name: ID!\n  isActive: Boolean\n  group: ID!\n  owner: ID\n  suppliers: [ID]\n}\n\n\"\"\"Delete profile input\"\"\"\ninput DeleteProfileInput {\n  \"\"\"Profile Code\"\"\"\n  code: ID!\n}\n\ninput EntityFilter {\n  codes: [ID!]\n  groups: [ID!]\n  isActive: Boolean\n  owner: [ID!]\n}\n\ninput GroupInput {\n  \"\"\"Id of the resource permissions to be granted.\"\"\"\n  id: ID!\n\n  \"\"\"Groups that will see this resoruce.\"\"\"\n  groups: [ID]\n}\n\ninput LegacyLinkInput {\n  \"\"\"Client ID\"\"\"\n  hubUser: ID!\n\n  \"\"\"Supplier Code\"\"\"\n  hubProvider: ID!\n}\n\ninput PointOfSaleFilter {\n  code: [ID]\n  groupID: [ID]\n  owner: [ID!]\n}\n\ninput ProfileFilter {\n  profileIDs: [ID]\n  groupIDs: [ID]\n  entityIDs: [ID]\n  owner: [ID!]\n}\n\ninput ServiceApiFilter {\n  ApiName: String\n  OperationName: String\n  OperationType: String\n}\n\ninput SupplierFilter {\n  supplierID: [ID]\n  accessID: [ID]\n  groupID: [ID]\n  isActive: Boolean\n  serviceAPI: [Int]\n  owner: [ID!]\n  providerID: [ID]\n}\n\n\"\"\"System filter for \"systems\" query\"\"\"\ninput SystemFilter {\n  \"\"\"System ID\"\"\"\n  id: [ID]\n\n  \"\"\"Systems that contain at least one of the following supplier ids\"\"\"\n  supplier: [ID]\n\n  \"\"\"Systems belonging to this GroupIDs\"\"\"\n  group: [ID]\n\n  \"\"\"isActive filter\"\"\"\n  isActive: Boolean\n\n  \"\"\"Systems Owner filter\"\"\"\n  owner: [ID]\n}\n\ninput UpdateClientInput {\n  \"\"\"ID identifier of a Client\"\"\"\n  code: ID!\n\n  \"\"\"Client complete name\"\"\"\n  name: String\n\n  \"\"\"Indicates whether a Client is active or inactive\"\"\"\n  isActive: Boolean\n\n  \"\"\"Client owner\"\"\"\n  owner: ID\n}\n\ninput UpdateEntitiesInput {\n  \"\"\"Profile Code\"\"\"\n  code: ID!\n\n  \"\"\"Entities to add/remove\"\"\"\n  entities: EntitiesInput\n}\n\ninput UpdateProfileInput {\n  \"\"\"Profile Code\"\"\"\n  code: ID!\n\n  \"\"\"Label of the Profile\"\"\"\n  label: String\n\n  \"\"\"Profile type\"\"\"\n  type: [ProfileType]\n\n  \"\"\"Active profile\"\"\"\n  isActive: Boolean\n\n  \"\"\"Profile is published\"\"\"\n  isPublished: Boolean\n}\n\n\"\"\"System input for UpdateSystem\"\"\"\ninput UpdateSystemInput {\n  code: ID!\n  name: ID\n  isActive: Boolean\n  group: ID\n  owner: ID\n  suppliers: [ID]\n}\n\nenum ProfileType {\n  \"\"\"Buyer profile\"\"\"\n  BUYER\n\n  \"\"\"Seller profile\"\"\"\n  SELLER\n}\n\ninterface GroupCommonData {\n  id: ID!\n  code: ID!\n  label: String\n  type: GroupType!\n  info: String\n  children(codes: [ID!], first: Int, last: Int, before: String, after: String, type: GroupType, codeStartsWith: String): GroupConnection\n  owner: Member\n  isEditable: Boolean!\n  members(codes: [ID!], type: MemberType, first: Int, last: Int, before: String, after: String): MemberConnection\n  apis(codes: [ID!], first: Int, last: Int, before: String, after: String): APIConnection\n  accesses(accessID: [ID!], owner: [ID!], first: Int, last: Int, before: String, after: String): AccessConnection\n  suppliers(supplierID: [ID!], accessID: [ID!], owner: [ID!], serviceAPI: [ID!], isActive: Boolean, first: Int, last: Int, before: String, after: String): SupplierConnection\n  clients(clientID: [ID!], name: [ID!], owner: [ID!], isActive: Boolean, first: Int, last: Int, before: String, after: String): ClientConnection\n}\n\ntype API implements Node {\n  code: ID!\n  apiData: APIData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype APIConnection {\n  edges: [APIEdge]\n  pageInfo: PageInfo!\n}\n\ntype APIData {\n  \"\"\"API Code\"\"\"\n  code: ID!\n\n  \"\"\"API ID\"\"\"\n  id: ID!\n\n  \"\"\"Is API Editable or not.\"\"\"\n  isEditable: Boolean!\n\n  \"\"\"API label\"\"\"\n  label: String\n\n  \"\"\"which groups are asigned this API?\"\"\"\n  groups(codes: [ID!], type: GroupType, first: Int, last: Int, before: String, after: String): GroupConnection\n\n  \"\"\"which resources are asigned this API?\"\"\"\n  resources(codes: [ID!], first: Int, last: Int, before: String, after: String): ResourceConnection\n\n  \"\"\"which operations are asigned this API?\"\"\"\n  operations(codes: [ID!], type: OperationType, types: [OperationType!], first: Int, last: Int, before: String, after: String): OperationConnection\n\n  \"\"\"Advise messages catalog.\"\"\"\n  adviseMessageCatalog(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype APIEdge {\n  node: API\n  cursor: String!\n}\n\ntype Partner implements Node {\n  code: ID!\n  partnerData: PartnerData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype PartnerConnection {\n  edges: [PartnerEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection.\"\"\"\n  totalCount: Int!\n}\n\ntype PartnerData {\n  \"\"\"cusXYZ..\"\"\"\n  code: ID!\n  name: String!\n  isActive: Boolean\n  friendlyName: String\n  organizations: OrganizationConnection\n\n  \"\"\"Differents agents from TravelgateX\"\"\"\n  agents: [CustomerAgent!]\n}\n\ntype PartnerEdge {\n  node: Partner\n  cursor: String!\n}\n\ntype CustomerAgent {\n  type: CustomerAgentType!\n\n  \"\"\"user@xmltravelgate.com o user@travelgatex.com\"\"\"\n  user: Member!\n}\n\ntype Domain implements Node {\n  code: ID!\n  domainData: DomainData\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype DomainData {\n  id: ID!\n  name: DomainName!\n  organization: Organization!\n}\n\n\"\"\"Groups are organized hierarchically.\"\"\"\ntype Group implements Node {\n  code: ID!\n  groupData: GroupData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype GroupConnection {\n  edges: [GroupEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection.\"\"\"\n  totalCount: Int!\n}\n\ntype GroupData implements GroupCommonData {\n  id: ID!\n  code: ID!\n  label: String\n  type: GroupType!\n  info: String\n  parent: Group\n\n  \"\"\"Only responses children.(non-hierarchically)\"\"\"\n  children(codes: [ID!], first: Int, last: Int, before: String, after: String, type: GroupType, codeStartsWith: String): GroupConnection\n\n  \"\"\"\n  Response all descendents groups nodes in this group (nom-hierarchically)\n  \"\"\"\n  descendents(codes: [ID!], type: GroupType, first: Int, last: Int, before: String, after: String, codeStartsWith: String): GroupConnection\n\n  \"\"\"Response all parents groups nodes for this group (nom-hierarchically)\"\"\"\n  parents(codes: [ID!], codeStartsWith: String, type: GroupType, first: Int, last: Int, before: String, after: String): GroupConnection\n  owner: Member\n  isEditable: Boolean!\n  productId: Int\n  resourceId: Int\n\n  \"\"\"Sibilings of the group\"\"\"\n  siblings(codes: [ID!], type: GroupType, first: Int, last: Int, before: String, after: String, codeStartsWith: String): GroupConnection\n\n  \"\"\"Only responses members in this group\"\"\"\n  members(codes: [ID!], type: MemberType, first: Int, last: Int, before: String, after: String): MemberConnection\n\n  \"\"\"APIs assigned to this group. Products have APIs.\"\"\"\n  apis(codes: [ID!], first: Int, last: Int, before: String, after: String): APIConnection\n\n  \"\"\"Responses all managed groups by this group.\"\"\"\n  managedGroups(group: [ID!], api: [ID!], resource: [ID!], role: [ID!], codes: [ID!], first: Int, last: Int, before: String, after: String): ManagedGroupConnection\n\n  \"\"\"Response all members in this group's childrens (hierarchically),\"\"\"\n  allMembers(codes: [ID!], type: MemberType, first: Int, last: Int, before: String, after: String): MemberConnection\n\n  \"\"\"Access resources in a group\"\"\"\n  accesses(accessID: [ID!], owner: [ID!], first: Int, last: Int, before: String, after: String): AccessConnection\n\n  \"\"\"Supplier resources in a group\"\"\"\n  suppliers(supplierID: [ID!], accessID: [ID!], owner: [ID!], serviceAPI: [ID!], isActive: Boolean, first: Int, last: Int, before: String, after: String): SupplierConnection\n\n  \"\"\"Clients resources in a group\"\"\"\n  clients(clientID: [ID!], name: [ID!], owner: [ID!], isActive: Boolean, first: Int, last: Int, before: String, after: String): ClientConnection\n\n  \"\"\"\n  You can grant roles to members, which define the roles catalog for a group.\n  \"\"\"\n  roles(codes: [ID!], type: RoleType, first: Int, last: Int, before: String, after: String): RoleConnection\n\n  \"\"\"Obtain all Profiles\"\"\"\n  profiles(codes: [ID!], first: Int, last: Int, before: String, after: String): ProfileConnection\n  isBuyer: Boolean!\n  isSeller: Boolean!\n}\n\ntype GroupEdge {\n  node: Group\n  cursor: String!\n}\n\ntype MacroPermission {\n  code: ID!\n  macroPermissionData: MacroPermissionData\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype MacroPermissionsConnection {\n  edges: [MacroPermissionEdge]\n  pageInfo: PageInfo!\n}\n\ntype MacroPermissionData {\n  id: ID!\n  code: ID!\n  productID: ID!\n  group: ID!\n  label: String\n  permissions: [Permission]\n}\n\ntype MacroPermissionEdge {\n  node: MacroPermission\n  cursor: String!\n}\n\ntype ManagedGroup implements Node {\n  code: ID!\n  managedGroupData: ManagedGroupData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype ManagedGroupConnection {\n  edges: [ManagedGroupEdge]\n  pageInfo: PageInfo!\n}\n\ntype ManagedGroupData {\n  code: ID!\n  group: Group!\n  api: API!\n  resource: Resource!\n  role: Role!\n}\n\ntype ManagedGroupEdge {\n  node: ManagedGroup\n  cursor: String!\n}\n\n\"\"\"\nYou grant access to members which can be either:\nUsers: A developer, administrator or any other person from your Organization who interacts with the TravelgateX Platform. An email address can be used as the identity of a User.\nService Accounts: An application (Client) instead of an individual User. If you prefer, you can create as many Service Accounts as needed to represent different logical components of your application.\n\"\"\"\ntype Member implements Node {\n  code: ID!\n  memberData: MemberData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype MemberConnection {\n  edges: [MemberEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection.\"\"\"\n  totalCount: Int!\n}\n\ntype MemberData {\n  id: ID!\n  code: ID!\n  label: String\n\n  \"\"\"Can members does queries in the platform?\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Member Type\"\"\"\n  type: MemberType!\n\n  \"\"\"which groups the member is in?\"\"\"\n  groups(codes: [ID!], type: GroupType, first: Int, last: Int, before: String, after: String): GroupConnection\n\n  \"\"\"which roles the member has in?\"\"\"\n  roles(codes: [ID!], type: RoleType, first: Int, last: Int, before: String, after: String): RoleConnection\n  macroPermissions(codes: [ID!], first: Int, last: Int, before: String, after: String): MacroPermissionsConnection\n}\n\ntype MemberEdge {\n  node: Member\n  cursor: String!\n}\n\ntype Operation implements Node {\n  code: ID!\n  operationData: OperationData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype OperationConnection {\n  edges: [OperationEdge]\n  pageInfo: PageInfo!\n}\n\ntype OperationData {\n  id: ID!\n  code: ID!\n  label: String\n  types: [OperationType!]!\n  api: API\n}\n\ntype OperationEdge {\n  node: Operation\n  cursor: String!\n}\n\n\"\"\"\nOrganization node is the root node in the hierarachy, the folders are the children of the organization and the products are the children of the folders.\n\"\"\"\ntype Organization implements Node {\n  code: ID!\n  organizationData: OrganizationData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype OrganizationConnection {\n  edges: [OrganizationEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection.\"\"\"\n  totalCount: Int!\n}\n\ntype OrganizationContact {\n  type: OrganizationContactType!\n  user: Member!\n}\n\ntype OrganizationData implements GroupCommonData {\n  id: ID!\n  code: ID!\n  label: String\n  type: GroupType!\n  info: String\n  crmID: String\n\n  \"\"\"Only responses folders.(non-hierarchically)\"\"\"\n  children(codes: [ID!], first: Int, last: Int, before: String, after: String, type: GroupType, codeStartsWith: String): GroupConnection\n\n  \"\"\"\n  Response all descendents groups nodes in this group (nom-hierarchically)\n  \"\"\"\n  descendents(codes: [ID!], type: GroupType, first: Int, last: Int, before: String, after: String, codeStartsWith: String): GroupConnection\n\n  \"\"\"Response all parents groups nodes for this group (nom-hierarchically)\"\"\"\n  parents(codes: [ID!], type: GroupType, first: Int, last: Int, before: String, after: String): GroupConnection\n  owner: Member!\n\n  \"\"\"Differents contacts in a organization.\"\"\"\n  contacts: [OrganizationContact!]\n  isEditable: Boolean!\n  members(codes: [ID!], type: MemberType, first: Int, last: Int, before: String, after: String): MemberConnection\n\n  \"\"\"APIs assigned to this group. Products have APIs.\"\"\"\n  apis(codes: [ID!], first: Int, last: Int, before: String, after: String): APIConnection\n\n  \"\"\"Products asign to a organization\"\"\"\n  products(codes: [ID!], first: Int, last: Int, before: String, after: String): ProductConnection\n\n  \"\"\"Response all members in this group's childrens (hierarchically)\"\"\"\n  allMembers(codes: [ID!], type: MemberType, first: Int, last: Int, before: String, after: String): MemberConnection\n\n  \"\"\"Access resources in a group\"\"\"\n  accesses(accessID: [ID!], owner: [ID!], first: Int, last: Int, before: String, after: String): AccessConnection\n\n  \"\"\"Supplier resources in a group\"\"\"\n  suppliers(supplierID: [ID!], accessID: [ID!], owner: [ID!], serviceAPI: [ID!], isActive: Boolean, first: Int, last: Int, before: String, after: String): SupplierConnection\n\n  \"\"\"Clients resources in a group\"\"\"\n  clients(clientID: [ID!], name: [ID!], owner: [ID!], isActive: Boolean, first: Int, last: Int, before: String, after: String): ClientConnection\n\n  \"\"\"Obtain all profiles\"\"\"\n  profiles(codes: [ID!], first: Int, last: Int, before: String, after: String): ProfileConnection\n  domains: [Domain]!\n  template: String\n\n  \"\"\"\n  ISO 3166-1 alpha-2 format country code with enclosing double quotes \"ES\"\n  \"\"\"\n  country: Country!\n\n  \"\"\"Access resources in this organization\"\"\"\n  allAccesses: AccessConnection\n\n  \"\"\"Supplier resources in this organization\"\"\"\n  allSuppliers: SupplierConnection\n\n  \"\"\"Clients resources in this organization\"\"\"\n  allClients: ClientConnection\n\n  \"\"\"Profiles resources in this organization\"\"\"\n  allProfiles: ProfileConnection\n  primaryPartner: Partner!\n  allPartners(where: PartnerWhereInput, orderBy: PartnerOrderByInput, relay: RelayInput): PartnerConnection!\n  isBuyer: Boolean!\n  isSeller: Boolean!\n}\n\ntype OrganizationEdge {\n  node: Organization\n  cursor: String!\n}\n\ntype Permission {\n  role: Role!\n  resource: Resource!\n  api: API!\n}\n\n\"\"\"An APIs collection.\"\"\"\ntype Product implements Node {\n  code: ID!\n  productData: ProductData!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype ProductConnection {\n  edges: [ProductEdge]\n  pageInfo: PageInfo!\n}\n\ntype ProductData {\n  id: ID!\n  code: ID!\n  label: String\n\n  \"\"\"A Product has many APIs\"\"\"\n  apis(codes: [ID!], first: Int, last: Int, before: String, after: String): APIConnection\n  macroPermissions(codes: [ID!], first: Int, last: Int, before: String, after: String): MacroPermissionsConnection\n  adviseMessageCatalog(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype ProductEdge {\n  node: Product\n  cursor: String!\n}\n\n\"\"\"Resources are those used in APIs and Products.\"\"\"\ntype Resource implements Node {\n  code: ID!\n  resourceData: ResourceData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype ResourceConnection {\n  edges: [ResourceEdge]\n  pageInfo: PageInfo!\n}\n\ntype ResourceData {\n  id: ID!\n  code: ID!\n  isEditable: Boolean!\n  label: String\n\n  \"\"\"which API have asigned this resource?\"\"\"\n  apis(codes: [ID!], first: Int, last: Int, before: String, after: String): APIConnection\n\n  \"\"\"which roles are asigned or are possibles in this resource?\"\"\"\n  roles(codes: [ID!], type: RoleType, first: Int, last: Int, before: String, after: String): RoleConnection\n}\n\ntype ResourceEdge {\n  node: Resource\n  cursor: String!\n}\n\n\"\"\"Permissions determine what operations are allowed on a resource\"\"\"\ntype Role implements Node {\n  code: ID!\n  roleData: RoleData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype RoleConnection {\n  edges: [RoleEdge]\n  pageInfo: PageInfo!\n}\n\ntype RoleData {\n  id: ID!\n  code: ID!\n  type: RoleType!\n  isEditable: Boolean!\n  label: String\n\n  \"\"\"Has resource Create permission?\"\"\"\n  isCreate: Boolean!\n\n  \"\"\"Has resource Create permission?\"\"\"\n  isRead: Boolean!\n\n  \"\"\"Has resource Update permission?\"\"\"\n  isUpdate: Boolean!\n\n  \"\"\"Has resource Delete permission?\"\"\"\n  isDelete: Boolean!\n\n  \"\"\"Is role enabled or not?\"\"\"\n  isEnable: Boolean!\n\n  \"\"\"Has resource Executable permission?\"\"\"\n  isExecutable: Boolean!\n\n  \"\"\"Has any other non-basic permission/s?\"\"\"\n  isSpecial: Boolean!\n\n  \"\"\"Special permission\"\"\"\n  special: String\n\n  \"\"\"Resources used\"\"\"\n  resources(codes: [ID!], first: Int, last: Int, before: String, after: String): ResourceConnection\n}\n\ntype RoleEdge {\n  node: Role\n  cursor: String!\n}\n\ninput ClonePermissionsInput {\n  sourceMember: ID!\n  destMember: ID!\n}\n\ninput CreateGroupInput {\n  group: ID!\n  type: GroupTypeInput!\n  info: String\n  parent: ID!\n  template: Template\n}\n\ninput UpdateOrganizationInput {\n  organization: ID!\n  label: String\n  owner: String\n  crmID: String\n  country: String\n  info: String\n}\n\ninput CreateMemberInput {\n  member: ID\n  info: String\n  type: MemberType!\n  group: ID!\n  role: ID!\n  resources: [ID!]!\n}\n\ninput CreateOrganizationInput {\n  user: ID!\n  info: String\n  organization: ID\n  template: OrganizationTemplate!\n  label: String\n  country: Country\n}\n\ninput PartnerCreateInput {\n  name: String!\n  friendlyName: String\n\n  \"\"\"Default isActive=true\"\"\"\n  isActive: Boolean\n}\n\ninput PartnerUpdateInput {\n  name: String\n  friendlyName: String\n  isActive: Boolean\n}\n\ninput PartnerWhereInput {\n  _search: String\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  code_in: [ID!]\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  friendlyName_in: [String!]\n  isActive: Boolean\n}\n\ninput PartnerWhereUniqueInput {\n  code: ID!\n}\n\ninput DeleteGroupInput {\n  group: ID!\n}\n\ninput DeleteMemberInput {\n  member: ID!\n  group: ID!\n}\n\ninput GrantMacroPermissionInput {\n  group: ID!\n  member: ID!\n  macroPermission: ID!\n}\n\ninput GrantPermissionsInput {\n  member: ID!\n  group: ID!\n  api: ID\n  role: ID!\n  resources: [ID!]!\n}\n\ninput CreateFolderInput {\n  orgCode: ID!\n  template: FolderTemplate!\n}\n\ninput SuitOrganizationInput {\n  user: ID!\n  organization: ID!\n  template: OrganizationTemplate!\n}\n\ninput UpdatePartnerInput {\n  name: String\n  fiendlyName: String\n}\n\ninput UpdateGroupAPISInput {\n  api: [ID!]!\n  group: ID!\n}\n\ninput UpdateGroupInput {\n  group: ID!\n  owner: ID\n  type: GroupTypeInput\n  info: String\n  label: String\n  country: Country\n  isBuyer: Boolean\n  isSeller: Boolean\n}\n\ninput UpdateMemberInput {\n  member: ID!\n  label: String!\n  isActive: Boolean!\n}\n\nenum PartnerOrderByInput {\n  code_ASC\n  code_DESC\n  name_ASC\n  name_DESC\n  friendlyName_ASC\n  friendlyName_DESC\n  isActive_ASC\n  isActive_DESC\n}\n\nenum CustomerAgentType {\n  KAM\n  TECH_KAM\n  CUSTOMER_CARE\n  OTHER\n}\n\nenum FolderTemplate {\n  FOLDER_SELLER\n  FOLDER_BUYER\n}\n\nenum GroupType {\n  ROOT\n  ORG\n  GROUP\n  PROFILE\n  TEAM\n  FOLDER\n  PRODUCT\n  RESOURCE\n  SPECIFIC_RESOURCE\n}\n\nenum GroupTypeInput {\n  ROOT\n  ORG\n  GROUP\n  PROFILE\n  TEAM\n  FOLDER\n  PRODUCT\n  RESOURCE\n  SPECIFIC_RESOURCE\n}\n\nenum MemberType {\n  USER\n  SERVICE_ACCOUNT\n}\n\nenum Method {\n  ADD\n  DEL\n}\n\nenum OperationType {\n  SEARCH\n  QUOTE\n  BOOKING\n  CANCEL\n  SCHEDULER\n  CREATE\n  READ\n  UPDATE\n  DELETE\n  EXECUTE\n  OTHER\n}\n\nenum OrganizationContactType {\n  ADMIN\n  BILLING\n  SALES\n  TECHNICAL\n  OTHER\n}\n\nenum OrganizationOrderByInput {\n  code_ASC\n  code_DESC\n  label_ASC\n  label_DESC\n  owner_ASC\n  owner_DESC\n  country_ASC\n  country_DESC\n  profiles_totalCount_ASC\n  profiles_totalCount_DESC\n  clients_totalCount_ASC\n  clients_totalCount_DESC\n  suppliers_totalCount_ASC\n  suppliers_totalCount_DESC\n  accesses_totalCount_ASC\n  accesses_totalCount_DESC\n}\n\nenum OrganizationTemplate {\n  ORGANIZATION_DEFAULT\n  ORGANIZATION_BUYER\n  ORGANIZATION_SELLER\n  ORGANIZATION_BUYER_SELLER\n}\n\n\"\"\"Constraint supplementary to a individual name.\"\"\"\nenum PersonalTitleType {\n  \"\"\" To refer to a man. Is not possible know if it is married or single.\"\"\"\n  MR\n\n  \"\"\" To refer to a married woman\"\"\"\n  MRS\n\n  \"\"\" To refer to a single woman\"\"\"\n  MISS\n\n  \"\"\" To refer to a woman. Is not possible know if it is married or single.\"\"\"\n  MS\n}\n\nenum RoleType {\n  \"\"\"\n  Allows a User to make Queries of resources, but not change any resource data\n  \"\"\"\n  VIEWER\n\n  \"\"\"Allows a User to make Mutations (changes) to the resource data\"\"\"\n  EDITOR\n\n  \"\"\"Allows a User to make All (changes) to the resource\"\"\"\n  ADMIN\n\n  \"\"\"Allows a User to make use of reources only for extecutations queries.\"\"\"\n  EXECUTOR\n\n  \"\"\"\n  Allows a User to make othen kind of operation with the resource. Defined by API.\n  \"\"\"\n  SPECIFIC\n}\n\nenum Template {\n  FOLDER_DEFAULT\n}\n\n\"\"\" Alert node\"\"\"\ntype Alert implements Node {\n  \"\"\"ID code\"\"\"\n  code: ID!\n\n  \"\"\"Alert Data\"\"\"\n  alertData: AlertData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Created date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Updated date\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"Traffic Bounds\"\"\"\ntype AlertBounds {\n  bound: AlertBound!\n  upperBound: Int\n  lowerBound: Int\n}\n\ntype AlertConfiguration {\n  \"\"\"alert type\"\"\"\n  alertType: AlertType!\n\n  \"\"\"alert mode\"\"\"\n  mode: AlertMode!\n\n  \"\"\"window type\"\"\"\n  windowType: AlertWindowType!\n\n  \"\"\"Frequency of time in which the alert will be reviewed\"\"\"\n  periodicity: Int\n\n  \"\"\"The time frame in minutes\"\"\"\n  window: Int\n\n  \"\"\"\n  The time frame in minutes to be used to compare with the window time frame\n  \"\"\"\n  historicalWindow: Int\n\n  \"\"\"Time frame in minutes to set the beginning of historicalWindow\"\"\"\n  offset: Int\n\n  \"\"\"The number of times the alert must be triggered in order to notify\"\"\"\n  timesToAlert: Int!\n\n  \"\"\"The number of times the alert must be recovered in order to notify\"\"\"\n  timesToRecovery: Int!\n\n  \"\"\"Specific configuration according to the alert type\"\"\"\n  typeConfiguration: AlertTypeConfiguration\n\n  \"\"\"To allow recoveries notifications\"\"\"\n  noRecoveries: Boolean!\n\n  \"\"\"To allow notifications only if the status change\"\"\"\n  stateChangesOnly: Boolean!\n\n  \"\"\"\n  Minimum number of requests should be in the window to check alert or Number of requests to be checked (According to configuration)\n  \"\"\"\n  minNumberRequests: Int\n\n  \"\"\"percentage to be considered status ALERTING\"\"\"\n  percentageToAlert: Int\n\n  \"\"\"According to percentageToAlert value. Used on Comparative mode alerts\"\"\"\n  variation: AlertVariation\n\n  \"\"\"Email addresses to send notifications\"\"\"\n  email(type: AlertEmailType): [AlertEmail]\n\n  \"\"\"Filter of hub status\"\"\"\n  hubStatus(isInclusive: Boolean!): [HubStatus!]\n\n  \"\"\"Filter of error code\"\"\"\n  errorCode(isInclusive: Boolean!): [Int!]\n\n  \"\"\"Filter of error type\"\"\"\n  errorType(isInclusive: Boolean!): [ErrorType!]\n\n  \"\"\"filter of Access|Client|Supplier|Operation|Group\"\"\"\n  alertObjects(isInclusive: Boolean!): [AlertObjectsUnion]\n\n  \"\"\"Group by traffic and calculate its parameters separately\"\"\"\n  groupBy: [AlertGroups!]\n\n  \"\"\"Indicates if the group configuration is SELLER OR BUYER\"\"\"\n  comercialType: AlertComercialType\n}\n\n\"\"\"Alert list\"\"\"\ntype AlertConnection {\n  edges: [AlertEdge]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\ntype AlertData {\n  code: ID!\n\n  \"\"\"Alert name\"\"\"\n  name: String\n\n  \"\"\"Alert description\"\"\"\n  description: String\n\n  \"\"\"Alert configuration\"\"\"\n  configuration: AlertConfiguration!\n\n  \"\"\"Indicates if the alert is being checked by the service.\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Records of each update made of the alert\"\"\"\n  history(relay: RelayInput, filter: AlertFilterInput): AlertConnection!\n\n  \"\"\"Member has edit the actual alert data\"\"\"\n  editor: Member!\n\n  \"\"\"Records of the last 10 events triggered\"\"\"\n  events(relay: RelayInput, filter: AlertFilterInput): AlertEventConnection!\n\n  \"\"\"Group where the alert is saved\"\"\"\n  group: Group!\n}\n\ntype AlertEdge {\n  node: Alert\n  cursor: String!\n}\n\n\"\"\"Event triggered\"\"\"\ntype AlertEvent implements Node {\n  code: ID!\n  eventData: AlertEventData\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\n\"\"\"Events list\"\"\"\ntype AlertEventConnection {\n  edges: [AlertEventEdge]\n  pageInfo: PageInfo!\n  totalCount: Int!\n}\n\n\"\"\"AlertEvent data\"\"\"\ntype AlertEventData {\n  code: ID!\n  groupBy: String\n\n  \"\"\"Status event\"\"\"\n  status: AlertEventType!\n\n  \"\"\"Contains data in xml format encrypted\"\"\"\n  details: String!\n\n  \"\"\"Last 10 events of the alert/grouBy\"\"\"\n  history(relay: RelayInput, filter: AlertFilterInput): AlertEventConnection!\n}\n\ntype AlertEventEdge {\n  node: AlertEvent\n  cursor: String!\n}\n\nunion AlertObjectsUnion = Access | Client | Supplier | Operation | Group | API\n\n\"\"\"Price contains the specific configuration for Price alert Type\"\"\"\ntype AlertPrice {\n  \"\"\"Specify which field is goinf to be checked. Amount, commission or both\"\"\"\n  check: AlertCheckPrice!\n\n  \"\"\"Low or greater values of amount/commission (value included) \"\"\"\n  range: AlertRangePrice!\n\n  \"\"\"Value of amount price\"\"\"\n  amount: Int\n\n  \"\"\"Value of commission price\"\"\"\n  commission: Int\n\n  \"\"\"Used for check amount\"\"\"\n  amountBy: AlertAmountBy\n}\n\n\"\"\"Depending on the alert type, typeConfiguration will use some fields\"\"\"\ntype AlertTypeConfiguration {\n  \"\"\"\n  Average time not allowed in miliseconds.  Used for Average time alert type\n  \"\"\"\n  maxAverageTime: Int\n\n  \"\"\"Time not allowed in miliseconds.  Used for Average time alert type\"\"\"\n  maxTime: Int\n\n  \"\"\"\n  Requests vs total requests checked to consider alert in ALERTING status. Used for Average time alert type\n  \"\"\"\n  requestsToAlert: Int\n\n  \"\"\"\n  Error codes to be Checked. By default  all error codes excepts 0. Used for Error rate alert type\n  \"\"\"\n  toCheck: [Int!]\n\n  \"\"\"\n  Error codes to be Compared with Checked codes. By default all error codes.  Used for Error rate alert type\n  \"\"\"\n  toCompare: [Int!]\n\n  \"\"\"Price contains the specific configuration for Price alert Type\"\"\"\n  price: AlertPrice\n\n  \"\"\"Bounds contains the specific configuration for Peak Traffic alert Type\"\"\"\n  bounds: AlertBounds\n}\n\ntype AlertsXMutation {\n  \"\"\"\n  Mutation to create a new alert type ErrorRate as Relative mode & Time Window\n  \"\"\"\n  createAlertErrorRateRelativeByTime(data: AlertErrorRateRelativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type ErrorRate as Relative mode & Request Window\n  \"\"\"\n  createAlertErrorRateRelativeByRequests(data: AlertErrorRateRelativeByRequestsInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type ErrorRate as Comparative mode & Time Window\n  \"\"\"\n  createAlertErrorRateComparativeByTime(data: AlertErrorRateComparativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type AverageTime as Relative mode & Time Window\n  \"\"\"\n  createAlertAverageTimeRelativeByTime(data: AlertAverageTimeRelativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type AverageTime as Relative mode & Request Window\n  \"\"\"\n  createAlertAverageTimeRelativeByRequests(data: AlertAverageTimeRelativeByRequestsInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type AverageTime as Absolute mode & Time Window\n  \"\"\"\n  createAlertAverageTimeAbsoluteByTime(data: AlertAverageTimeAbsoluteByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type AverageTime as Absolute mode & Requests Window\n  \"\"\"\n  createAlertAverageTimeAbsoluteByRequests(data: AlertAverageTimeAbsoluteByRequestsInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type AverageTime as Comparative mode & Time Window\n  \"\"\"\n  createAlertAverageTimeComparativeByTime(data: AlertAverageTimeComparativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type PeakTraffic as Absolute mode & Time Window\n  \"\"\"\n  createAlertPeakTrafficAbsoluteByTime(data: AlertPeakTrafficAbsoluteByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type PeakTraffic as Comparative mode & Time Window\n  \"\"\"\n  createAlertPeakTrafficComparativeByTime(data: AlertPeakTrafficComparativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type Price as Relative mode & Time Window\n  \"\"\"\n  createAlertPriceRelativeByTime(data: AlertPriceRelativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type Price as Relative mode & Request Window\n  \"\"\"\n  createAlertPriceRelativeByRequests(data: AlertPriceRelativeByRequestsInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type Price as Absolute mode & Time Window\n  \"\"\"\n  createAlertPriceAbsoluteByTime(data: AlertPriceAbsoluteByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to create a new alert type Price as Absolute mode & Request Window\n  \"\"\"\n  createAlertPriceAbsoluteByRequests(data: AlertPriceAbsoluteByRequestsInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type ErrorRate as Relative mode & Time Window\n  \"\"\"\n  updateAlertErrorRateRelativeByTime(code: ID!, data: AlertUpdateErrorRateRelativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type ErrorRate as Relative mode & Request Window\n  \"\"\"\n  updateAlertErrorRateRelativeByRequests(code: ID!, data: AlertUpdateErrorRateRelativeByRequestsInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type ErrorRate as Comparative mode & Time Window\n  \"\"\"\n  updateAlertErrorRateComparativeByTime(code: ID!, data: AlertUpdateErrorRateComparativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type AverageTime as Relative mode & Time Window\n  \"\"\"\n  updateAlertAverageTimeRelativeByTime(code: ID!, data: AlertUpdateAverageTimeRelativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type AverageTime as Relative mode & Request Window\n  \"\"\"\n  updateAlertAverageTimeRelativeByRequests(code: ID!, data: AlertUpdateAverageTimeRelativeByRequestsInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type AverageTime as Absolute mode & Time Window\n  \"\"\"\n  updateAlertAverageTimeAbsoluteByTime(code: ID!, data: AlertUpdateAverageTimeAbsoluteByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type AverageTime as Absolute mode & Request Window\n  \"\"\"\n  updateAlertAverageTimeAbsoluteByRequests(code: ID!, data: AlertUpdateAverageTimeAbsoluteByRequestsInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type AverageTime as Comparative mode & Time Window\n  \"\"\"\n  updateAlertAverageTimeComparativeByTime(code: ID!, data: AlertUpdateAverageTimeComparativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type PeakTraffic as Absolute mode & Time Window\n  \"\"\"\n  updateAlertPeakTrafficAbsoluteByTime(code: ID!, data: AlertUpdatePeakTrafficAbsoluteByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type PeakTraffic as Comparative mode & Time Window\n  \"\"\"\n  updateAlertPeakTrafficComparativeByTime(code: ID!, data: AlertUpdatePeakTrafficComparativeByTimeInput!): Alert\n\n  \"\"\"Mutation to update an alert type Price as Relative mode & Time Window\"\"\"\n  updateAlertPriceRelativeByTime(code: ID!, data: AlertUpdatePriceRelativeByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type Price as Relative mode & Requests Window\n  \"\"\"\n  updateAlertPriceRelativeByRequests(code: ID!, data: AlertUpdatePriceRelativeByRequestsInput!): Alert\n\n  \"\"\"Mutation to update an alert type Price as Absolute mode & Time Window\"\"\"\n  updateAlertPriceAbsoluteByTime(code: ID!, data: AlertUpdatePriceAbsoluteByTimeInput!): Alert\n\n  \"\"\"\n  Mutation to update an alert type Price as Absolute mode & Requests Window\n  \"\"\"\n  updateAlertPriceAbsoluteByRequests(code: ID!, data: AlertUpdatePriceAbsoluteByRequestsInput!): Alert\n\n  \"\"\"Mutation to delete an alert\"\"\"\n  deleteAlert(code: ID!): Alert\n}\n\ntype AlertsXQuery {\n  \"\"\"Query to obtain Alerts\"\"\"\n  alerts(relay: RelayInput, filter: AlertFilterInput, criteria: AlertCriteriaInput): AlertConnection!\n}\n\ninput AlertAverageTimeAbsoluteByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertAverageTimeAbsoluteConfigurationByRequestsInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertAverageTimeAbsoluteByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertAverageTimeAbsoluteConfigurationByTimeInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Group where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertAverageTimeAbsoluteConfigurationByRequestsInput {\n  \"\"\"Time not allowed in miliseconds\"\"\"\n  maxTime: Int\n\n  \"\"\"Average time not allowed in miliseconds\"\"\"\n  maxAverageTime: Int\n\n  \"\"\"Number of requests with anomaly to set alert in ALERTING status\"\"\"\n  requestsToAlert: Int!\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertCommonByRequestsInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n}\n\ninput AlertAverageTimeAbsoluteConfigurationByTimeInput {\n  \"\"\"Time not allowed in miliseconds.\"\"\"\n  maxTime: Int\n\n  \"\"\"Average time not allowed in miliseconds.\"\"\"\n  maxAverageTime: Int\n\n  \"\"\"\n  Requests vs total requests checked to consider alert in ALERTING status.\n  \"\"\"\n  requestsToAlert: Int!\n\n  \"\"\"Common configuration for time window type.\"\"\"\n  windowing: AlertCommonByTimeInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n}\n\ninput AlertAverageTimeComparativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertAverageTimeComparativeConfigurationByTimeInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Group where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertAverageTimeComparativeConfigurationByTimeInput {\n  \"\"\"Common configuration for time window type.\"\"\"\n  windowing: AlertCommonByTimeInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n\n  \"\"\"Common configuration of comparative mode type\"\"\"\n  comparative: AlertCommonComparativeInput!\n}\n\ninput AlertAverageTimeRelativeByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertAverageTimeRelativeConfigurationByRequestsInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertAverageTimeRelativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertAverageTimeRelativeConfigurationByTimeInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertAverageTimeRelativeConfigurationByRequestsInput {\n  \"\"\"Time not allowed in miliseconds\"\"\"\n  maxTime: Int\n\n  \"\"\"Average time not allowed in miliseconds\"\"\"\n  maxAverageTime: Int\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertCommonByRequestsInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertCommonRelativeInput!\n}\n\ninput AlertAverageTimeRelativeConfigurationByTimeInput {\n  \"\"\"Time not allowed in miliseconds\"\"\"\n  maxTime: Int\n\n  \"\"\"Average time not allowed in miliseconds\"\"\"\n  maxAverageTime: Int\n\n  \"\"\"Common configuration of time window type\"\"\"\n  windowing: AlertCommonByTimeInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertCommonRelativeInput!\n}\n\n\"\"\"Limit of requests to define\"\"\"\ninput AlertBoundsInput {\n  \"\"\"Bound limits to be used\"\"\"\n  bound: AlertBound!\n\n  \"\"\"Upper bound limit\"\"\"\n  upperBound: Int\n\n  \"\"\"Lower bound limit\"\"\"\n  lowerBound: Int\n}\n\ninput AlertCommonByRequestsInput {\n  \"\"\"minimum number of requests to check the alert\"\"\"\n  minNumberRequests: Int!\n}\n\ninput AlertCommonByTimeInput {\n  \"\"\"Frequency of time in minutes in which the alert will be reviewed\"\"\"\n  periodicity: Int!\n\n  \"\"\"The time frame in minutes\"\"\"\n  window: Int!\n\n  \"\"\"Minimum number of requests must be in window to check the alert\"\"\"\n  minNumberRequests: Int\n}\n\ninput AlertCommonComparativeInput {\n  \"\"\"\n  The time frame in minutes to be used to compare with the window time frame\n  \"\"\"\n  historicalWindow: Int!\n\n  \"\"\"Time frame in minutes to set the beginning of historicalWindow\"\"\"\n  offset: Int!\n\n  \"\"\"According to percentageToAlert value\"\"\"\n  variation: AlertVariation!\n\n  \"\"\"Percentage to be considered status ALERTING\"\"\"\n  percentageToAlert: Int!\n}\n\ninput AlertCommonConfigurationInput {\n  \"\"\"The number of times the alert must be triggered in order to notify\"\"\"\n  timesToAlert: Int!\n\n  \"\"\"The number of times the alert must be recovered in order to notify\"\"\"\n  timesToRecovery: Int!\n\n  \"\"\"To allow recoveries notifications\"\"\"\n  noRecoveries: Boolean!\n\n  \"\"\"To allow notifications only if the status change\"\"\"\n  stateChangesOnly: Boolean!\n\n  \"\"\"Email addresses to send notifications\"\"\"\n  email: [AlertEmailInput]\n\n  \"\"\"Possibility to filter traffic by hubStatus\"\"\"\n  hubStatus: [AlertHubStatusInput!]\n\n  \"\"\"Possibility to filter traffic by errorCodes\"\"\"\n  errorCode: [AlertErrorCodeInput!]\n\n  \"\"\"Possibility to filter traffic by errorTypes\"\"\"\n  errorType: [AlertErrorTypeInput!]\n\n  \"\"\"Possibility to filter traffic by suppliers\"\"\"\n  supplier: [AlertObjectInput!]\n\n  \"\"\"Possibility to filter traffic by clients\"\"\"\n  client: [AlertObjectInput!]\n\n  \"\"\"Must filter traffic by group. Only PRODUCT group type is allowed\"\"\"\n  group: [AlertGroupInput!]\n\n  \"\"\"Possibility to filter traffic by accesses\"\"\"\n  access: [AlertObjectInput!]\n\n  \"\"\"Possibility to filter traffic by operations\"\"\"\n  operation: [AlertObjectInput!]\n\n  \"\"\"Possibility to filter traffic by apis\"\"\"\n  api: [AlertObjectInput!]!\n\n  \"\"\"\n  Possibility to group by traffic and calculate its parameters separately\n  \"\"\"\n  groupBy: [AlertGroups!]\n}\n\ninput AlertCommonRelativeInput {\n  \"\"\"percentage of traffic to be considered status ALERTING\"\"\"\n  percentageToAlert: Int!\n}\n\n\"\"\"Filters needed to do a search.\"\"\"\ninput AlertCriteriaInput {\n  \"\"\"Alert codes\"\"\"\n  codes: [ID!]\n\n  \"\"\"enabled or desabled alerts\"\"\"\n  isActive: Boolean\n\n  \"\"\"Group codes\"\"\"\n  groups: [ID!]\n\n  \"\"\"shared alerts\"\"\"\n  shared: [AlertSharedType!]\n}\n\ninput AlertEmailInput {\n  \"\"\"Email address\"\"\"\n  address: ID!\n\n  \"\"\"Destination email type\"\"\"\n  type: AlertEmailType!\n}\n\ninput AlertErrorCodeInput {\n  \"\"\"Error code\"\"\"\n  code: Int!\n\n  \"\"\"Can be filtered traffic setting as inclusive or excludent\"\"\"\n  isInclusive: Boolean!\n}\n\ninput AlertErrorRateComparativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertErrorRateComparativeConfigurationByTimeInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertErrorRateComparativeConfigurationByTimeInput {\n  \"\"\"Error codes to check. By default all error codes are checked\"\"\"\n  toCheck: [Int!]\n\n  \"\"\"Error codes to compare. By defaults all traffic is compared\"\"\"\n  toCompare: [Int!]\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertCommonByTimeInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n\n  \"\"\"Common configuration of comparative mode type\"\"\"\n  comparative: AlertCommonComparativeInput!\n}\n\ninput AlertErrorRateRelativeByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertErrorRateRelativeConfigurationByRequestsInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertErrorRateRelativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertErrorRateRelativeConfigurationByTimeInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertErrorRateRelativeConfigurationByRequestsInput {\n  \"\"\"Error codes to check. By default all error codes are checked\"\"\"\n  toCheck: [Int!]\n\n  \"\"\"Error codes to compare. By defaults all traffic is compared\"\"\"\n  toCompare: [Int!]\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertCommonByRequestsInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertCommonRelativeInput!\n}\n\ninput AlertErrorRateRelativeConfigurationByTimeInput {\n  \"\"\"By default all error codes are checked\"\"\"\n  toCheck: [Int!]\n\n  \"\"\"By defaults all traffic is compared\"\"\"\n  toCompare: [Int!]\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertCommonByTimeInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertCommonRelativeInput!\n}\n\n\"\"\"\nFilters needed to do a search.  By default: Logical AND on all given filters.\n\"\"\"\ninput AlertFilterInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [AlertFilterInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [AlertFilterInput!]\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  createdAt_gte: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n}\n\ninput AlertGroupInput {\n  \"\"\"Group code\"\"\"\n  code: ID!\n\n  \"\"\"SELLER or BUYER\"\"\"\n  comercialType: AlertComercialType!\n\n  \"\"\"Can be filtered traffic setting as inclusive or excludent\"\"\"\n  isInclusive: Boolean!\n}\n\ninput AlertHubStatusInput {\n  \"\"\"Hub status code\"\"\"\n  code: HubStatus!\n\n  \"\"\"Can be filtered traffic setting as inclusive or excludent\"\"\"\n  isInclusive: Boolean!\n}\n\ninput AlertObjectInput {\n  \"\"\"object code\"\"\"\n  code: ID!\n\n  \"\"\"Can be filtered traffic setting as inclusive or excludent\"\"\"\n  isInclusive: Boolean!\n}\n\ninput AlertPeakTrafficAbsoluteByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertPeakTrafficAbsoluteConfigurationByTimeInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertPeakTrafficAbsoluteConfigurationByTimeInput {\n  \"\"\"Limits for number of requests\"\"\"\n  bounds: AlertBoundsInput!\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertCommonByTimeInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n}\n\ninput AlertPeakTrafficComparativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertPeakTrafficComparativeConfigurationByTimeInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertPeakTrafficComparativeConfigurationByTimeInput {\n  \"\"\"Limits for number of requests\"\"\"\n  bounds: AlertBoundsInput!\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertCommonByTimeInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n\n  \"\"\"Common configuration of comparative mode type\"\"\"\n  comparative: AlertCommonComparativeInput!\n}\n\ninput AlertPriceAbsoluteByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertPriceAbsoluteConfigurationByRequestsInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertPriceAbsoluteByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertPriceAbsoluteConfigurationByTimeInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertPriceAbsoluteConfigurationByRequestsInput {\n  \"\"\"Configuration of amount & commission values\"\"\"\n  price: AlertPriceInput!\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertCommonByRequestsInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n}\n\ninput AlertPriceAbsoluteConfigurationByTimeInput {\n  \"\"\"Configuration of amount & commission values\"\"\"\n  price: AlertPriceInput!\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertCommonByTimeInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n}\n\n\"\"\"Price input\"\"\"\ninput AlertPriceInput {\n  \"\"\"Specify which field is going to be checked. Amount, commission or both\"\"\"\n  check: AlertCheckPrice!\n\n  \"\"\"Low or greater values of amount/commission (value included) \"\"\"\n  range: AlertRangePrice!\n\n  \"\"\"Value of amount price\"\"\"\n  amount: Int\n\n  \"\"\"Value of commission price\"\"\"\n  commission: Int\n\n  \"\"\"Amount can be checked by its total value or night\"\"\"\n  amountBy: AlertAmountBy\n}\n\ninput AlertPriceRelativeByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertPriceRelativeConfigurationByRequestsInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertPriceRelativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertPriceRelativeConfigurationByTimeInput!\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups where the alert is setted\"\"\"\n  group: ID!\n}\n\ninput AlertPriceRelativeConfigurationByRequestsInput {\n  \"\"\"Configuration of amount & commission values\"\"\"\n  price: AlertPriceInput!\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertCommonByRequestsInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertCommonRelativeInput!\n}\n\ninput AlertPriceRelativeConfigurationByTimeInput {\n  \"\"\"Configuration of amount & commission values\"\"\"\n  price: AlertPriceInput!\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertCommonByTimeInput!\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertCommonConfigurationInput!\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertCommonRelativeInput!\n}\n\ninput AlertUpdateAverageTimeAbsoluteByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdateAverageTimeAbsoluteConfigurationByRequestsInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdateAverageTimeAbsoluteByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdateAverageTimeAbsoluteConfigurationByTimeInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdateAverageTimeAbsoluteConfigurationByRequestsInput {\n  \"\"\"Time value not allowed in miliseconds\"\"\"\n  maxTime: Int\n\n  \"\"\"Average time value not allowed in miliseconds\"\"\"\n  maxAverageTime: Int\n\n  \"\"\"Number of requests with anomaly to set alert in ALERTING status\"\"\"\n  requestsToAlert: Int\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertUpdateCommonByRequestsInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n}\n\ninput AlertUpdateAverageTimeAbsoluteConfigurationByTimeInput {\n  \"\"\"Time value not allowed in miliseconds\"\"\"\n  maxTime: Int\n\n  \"\"\"Average time value not allowed in miliseconds\"\"\"\n  maxAverageTime: Int\n\n  \"\"\"Number of requests with anomaly to set alert in ALERTING status\"\"\"\n  requestsToAlert: Int\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertUpdateCommonByTimeInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n}\n\ninput AlertUpdateAverageTimeComparativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdateAverageTimeComparativeConfigurationByTimeInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdateAverageTimeComparativeConfigurationByTimeInput {\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertUpdateCommonByTimeInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n\n  \"\"\"Common configuration of comparative mode type\"\"\"\n  comparative: AlertUpdateCommonComparativeInput\n}\n\ninput AlertUpdateAverageTimeRelativeByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdateAverageTimeRelativeConfigurationByRequestsInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdateAverageTimeRelativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdateAverageTimeRelativeConfigurationByTimeInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdateAverageTimeRelativeConfigurationByRequestsInput {\n  \"\"\"Time value not allowed in miliseconds\"\"\"\n  maxTime: Int\n\n  \"\"\"Average time value not allowed in miliseconds\"\"\"\n  maxAverageTime: Int\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertUpdateCommonByRequestsInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertUpdateCommonRelativeInput\n}\n\ninput AlertUpdateAverageTimeRelativeConfigurationByTimeInput {\n  \"\"\"Time value not allowed in miliseconds\"\"\"\n  maxTime: Int\n\n  \"\"\"Average time value not allowed in miliseconds\"\"\"\n  maxAverageTime: Int\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertUpdateCommonByTimeInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertUpdateCommonRelativeInput\n}\n\ninput AlertUpdateBoundsInput {\n  \"\"\"Bound limits to be used\"\"\"\n  bound: AlertBound\n\n  \"\"\"Upper bound limit\"\"\"\n  upperBound: Int\n\n  \"\"\"Lower bound limit\"\"\"\n  lowerBound: Int\n}\n\ninput AlertUpdateCommonByRequestsInput {\n  \"\"\"minimum number of requests to check the alert\"\"\"\n  minNumberRequests: Int\n}\n\ninput AlertUpdateCommonByTimeInput {\n  \"\"\"Frequency of time in minutes in which the alert will be reviewed\"\"\"\n  periodicity: Int\n\n  \"\"\"The time frame in minutes\"\"\"\n  window: Int\n\n  \"\"\"Minimum number of requests must be in window to check the alert\"\"\"\n  minNumberRequests: Int\n}\n\ninput AlertUpdateCommonComparativeInput {\n  \"\"\"\n  The time frame in minutes to be used to compare with the window time frame\n  \"\"\"\n  historicalWindow: Int\n\n  \"\"\"Time frame in minutes to set the beginning of historicalWindow\"\"\"\n  offset: Int\n\n  \"\"\"According to percentageToAlert value\"\"\"\n  variation: AlertVariation\n\n  \"\"\"Percentage of traffic to be considered status ALERTING\"\"\"\n  percentageToAlert: Int\n}\n\ninput AlertUpdateCommonConfigurationInput {\n  \"\"\"The number of times the alert must be triggered in order to notify\"\"\"\n  timesToAlert: Int\n\n  \"\"\"The number of times the alert must be recovered in order to notify\"\"\"\n  timesToRecovery: Int\n\n  \"\"\"To allow recoveries notifications\"\"\"\n  noRecoveries: Boolean\n\n  \"\"\"To allow notifications only if the status change\"\"\"\n  stateChangesOnly: Boolean\n\n  \"\"\"Email addresses to send notifications\"\"\"\n  email: [AlertEmailInput]\n\n  \"\"\"Possibility to filter traffic by hubStatus\"\"\"\n  hubStatus: [AlertHubStatusInput]\n\n  \"\"\"Possibility to filter traffic by errorCodes\"\"\"\n  errorCode: [AlertErrorCodeInput]\n\n  \"\"\"Possibility to filter traffic by errorTypes\"\"\"\n  errorType: [AlertErrorTypeInput]\n\n  \"\"\"Possibility to filter traffic by suppliers\"\"\"\n  supplier: [AlertObjectInput]\n\n  \"\"\"Possibility to filter traffic by clients\"\"\"\n  client: [AlertObjectInput]\n\n  \"\"\"Must filter traffic by group. Only PRODUCT group type is allowed\"\"\"\n  group: [AlertGroupInput]\n\n  \"\"\"Possibility to filter traffic by accesses\"\"\"\n  access: [AlertObjectInput]\n\n  \"\"\"Possibility to filter traffic by operations\"\"\"\n  operation: [AlertObjectInput]\n\n  \"\"\"Possibility to filter traffic by apis\"\"\"\n  api: [AlertObjectInput!]\n\n  \"\"\"\n  Possibility to group by traffic and calculate its parameters separately\n  \"\"\"\n  groupBy: [AlertGroups]\n}\n\ninput AlertUpdateCommonRelativeInput {\n  \"\"\"percentage to be considered status ALERTING\"\"\"\n  percentageToAlert: Int\n}\n\ninput AlertUpdateErrorRateComparativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdateErrorRateComparativeConfigurationByTimeInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdateErrorRateComparativeConfigurationByTimeInput {\n  \"\"\"Error codes to check. By default all error codes are checked\"\"\"\n  toCheck: [Int!]\n\n  \"\"\"Error codes to compare. By defaults all traffic is compared\"\"\"\n  toCompare: [Int!]\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertUpdateCommonByTimeInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n\n  \"\"\"Common configuration of comparative mode type\"\"\"\n  comparative: AlertUpdateCommonComparativeInput\n}\n\ninput AlertUpdateErrorRateRelativeByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdateErrorRateRelativeConfigurationByRequestsInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdateErrorRateRelativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdateErrorRateRelativeConfigurationByTimeInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdateErrorRateRelativeConfigurationByRequestsInput {\n  \"\"\"Error codes to check. By default all error codes are checked\"\"\"\n  toCheck: [Int!]\n\n  \"\"\"Error codes to compare. By defaults all traffic is compared\"\"\"\n  toCompare: [Int!]\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertUpdateCommonByRequestsInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertUpdateCommonRelativeInput\n}\n\ninput AlertUpdateErrorRateRelativeConfigurationByTimeInput {\n  \"\"\"Error codes to check. By default all error codes are checked\"\"\"\n  toCheck: [Int!]\n\n  \"\"\"Error codes to compare. By defaults all traffic is compared\"\"\"\n  toCompare: [Int!]\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertUpdateCommonByTimeInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertUpdateCommonRelativeInput\n}\n\ninput AlertUpdatePeakTrafficAbsoluteByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdatePeakTrafficAbsoluteConfigurationByTimeInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdatePeakTrafficAbsoluteConfigurationByTimeInput {\n  \"\"\"Limits for number of requests\"\"\"\n  bounds: AlertUpdateBoundsInput\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertUpdateCommonByTimeInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n}\n\ninput AlertUpdatePeakTrafficComparativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdatePeakTrafficComparativeConfigurationByTimeInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdatePeakTrafficComparativeConfigurationByTimeInput {\n  \"\"\"Limits for number of requests\"\"\"\n  bounds: AlertUpdateBoundsInput\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertUpdateCommonByTimeInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n\n  \"\"\"Common configuration of comparative mode type\"\"\"\n  comparative: AlertUpdateCommonComparativeInput\n}\n\ninput AlertUpdatePriceAbsoluteByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdatePriceAbsoluteConfigurationByRequestsInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdatePriceAbsoluteByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdatePriceAbsoluteConfigurationByTimeInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdatePriceAbsoluteConfigurationByRequestsInput {\n  \"\"\"Configuration of amount & commission values\"\"\"\n  price: AlertUpdatePriceInput\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertUpdateCommonByRequestsInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n}\n\ninput AlertUpdatePriceAbsoluteConfigurationByTimeInput {\n  \"\"\"Configuration of amount & commission values\"\"\"\n  price: AlertUpdatePriceInput\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertUpdateCommonByTimeInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n}\n\ninput AlertUpdatePriceInput {\n  \"\"\"Specify which field is going to be checked. Amount, commission or both\"\"\"\n  check: AlertCheckPrice\n\n  \"\"\"Low or greater values of amount/commission (value included) \"\"\"\n  range: AlertRangePrice\n\n  \"\"\"Value of amount price\"\"\"\n  amount: Int\n\n  \"\"\"Value of commission price\"\"\"\n  commission: Int\n\n  \"\"\"Amount can be checked by its total value or night\"\"\"\n  amountBy: AlertAmountBy\n}\n\ninput AlertUpdatePriceRelativeByRequestsInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdatePriceRelativeConfigurationByRequestsInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdatePriceRelativeByTimeInput {\n  \"\"\"Name of the alert\"\"\"\n  name: String\n\n  \"\"\"Description of the alert\"\"\"\n  description: String\n\n  \"\"\"Configuration of the alert\"\"\"\n  configuration: AlertUpdatePriceRelativeConfigurationByTimeInput\n\n  \"\"\"To enable or desable the alert\"\"\"\n  isActive: Boolean\n}\n\ninput AlertUpdatePriceRelativeConfigurationByRequestsInput {\n  \"\"\"Configuration of amount & commission values\"\"\"\n  price: AlertUpdatePriceInput\n\n  \"\"\"Common configuration for requests window type\"\"\"\n  windowing: AlertUpdateCommonByRequestsInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertUpdateCommonRelativeInput\n}\n\ninput AlertUpdatePriceRelativeConfigurationByTimeInput {\n  \"\"\"Configuration of amount & commission values\"\"\"\n  price: AlertUpdatePriceInput\n\n  \"\"\"Common configuration for time window type\"\"\"\n  windowing: AlertUpdateCommonByTimeInput\n\n  \"\"\"Common configuration alert\"\"\"\n  common: AlertUpdateCommonConfigurationInput\n\n  \"\"\"Common configuration of relative mode type\"\"\"\n  relative: AlertUpdateCommonRelativeInput\n}\n\ninput AlertErrorTypeInput {\n  \"\"\"Error type code\"\"\"\n  code: ErrorType!\n\n  \"\"\"Can be filtered traffic setting as inclusive or excludent\"\"\"\n  isInclusive: Boolean!\n}\n\n\"\"\"RFC 5322\"\"\"\nscalar AlertEmail\n\nenum AlertAmountBy {\n  NIGHT\n  TOTAL\n}\n\nenum AlertBound {\n  UPPER\n  LOWER\n  BOTH\n}\n\nenum AlertCheckPrice {\n  AMOUNT\n  COMMISSION\n  BOTH\n}\n\nenum AlertComercialType {\n  SELLER\n  BUYER\n}\n\nenum AlertEmailType {\n  BCC\n  TO\n}\n\nenum AlertEventType {\n  OK\n  ALERTING\n}\n\nenum AlertGroups {\n  ACCESS\n  CLIENT\n  SUPPLIER\n  OPERATION\n  HUB_STATUS\n  ERROR_CODE\n  ERROR_TYPE\n  GROUP_ORG_SELLER\n  GROUP_ORG_BUYER\n  GROUP_FOLDER_SELLER\n  GROUP_FOLDER_BUYER\n  GROUP_PRODUCT_SELLER\n  GROUP_PRODUCT_BUYER\n}\n\nenum AlertGroupsInsights {\n  ACCESS\n  CLIENT\n  SUPPLIER\n  OPERATION\n  GROUP_ORG_SELLER\n  GROUP_ORG_BUYER\n  GROUP_FOLDER_SELLER\n  GROUP_FOLDER_BUYER\n  GROUP_PRODUCT_SELLER\n  GROUP_PRODUCT_BUYER\n}\n\nenum AlertMode {\n  RELATIVE\n  ABSOLUTE\n  COMPARATIVE\n}\n\nenum AlertRangePrice {\n  LESS\n  GREATER\n}\n\nenum AlertSharedType {\n  TGX\n  GROUP\n}\n\nenum AlertType {\n  ERROR_RATE\n  AVERAGE_TIME\n  PEAK_TRAFFIC\n  PRICE\n}\n\nenum AlertVariation {\n  INCREASE\n  DECREASE\n  BOTH\n}\n\nenum AlertWindowType {\n  REQUESTS\n  TIME\n}\n\nenum ErrorType {\n  OK\n  PROVIDER\n  TIMEOUT\n  INTEGRATION\n}\n\nenum HubStatus {\n  OK\n  EXCEPTION\n  TIMEOUT\n  UNDEFINED\n}\n\n\"\"\"An amount is a number of monetary units specified in a currency.\"\"\"\ntype AmountType {\n  amount: Float\n  curCode: String\n}\n\n\"\"\"\nAmount added on to a charge for a specific product, purpose, or service.\n\"\"\"\ntype Fee {\n  amount: AmountType\n  descText: TextType\n}\n\n\"\"\"\nInformation about a proposal to sell a specific set of products or Services under specific conditions, for a certain price.\n\"\"\"\ntype FlightOffer implements Node {\n  code: ID!\n  flightOfferData: FlightOfferData\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  adviseMessage(type: [AdviseMessageLevel]): [AdviseMessage]\n}\n\ntype FlightOfferConnection {\n  edges: [FlightOfferEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection.\"\"\"\n  totalCount: Int!\n}\n\ntype FlightOfferData {\n  code: ID!\n  supplier: Supplier\n\n  \"\"\"supplierCode: String!\"\"\"\n  totalPrice: AmountType\n  offerItems: [FlightOfferItem]\n}\n\ntype FlightOfferEdge {\n  node: FlightOffer\n  cursor: String!\n}\n\n\"\"\"\nInformation about a priced grouping of one or more services within an Offer.\n\"\"\"\ntype FlightOfferItem implements Node {\n  code: ID!\n  offerItemData: FlightOfferItemData\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  adviseMessage: [AdviseMessage]\n}\n\ntype FlightOfferItemData {\n  code: ID!\n\n  \"\"\"offerItemID:ID!\"\"\"\n  price: FlightPrice!\n  service: FlightService!\n}\n\n\"\"\"\nA record of the agreement of one party with another to receive products and services under specified terms and conditions. \n\"\"\"\ntype FlightOrder implements Node {\n  code: ID!\n  flightOrderData: FlightOrderData\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  adviseMessage: [AdviseMessage]\n}\n\ntype FlightOrderData {\n  code: ID!\n  status: FlightTicketStatusCode!\n  tickets: [FlightTicket]\n  supplier: Supplier!\n  bookingRefIDs: [String]\n  orderItems: [FlightOrderItem!]\n  totalPrice: FlightPrice!\n}\n\n\"\"\"\nAn individually priced item within an Order, made up of one or more Services.\n\"\"\"\ntype FlightOrderItem implements Node {\n  code: ID!\n  flightOrderItemData: FlightOrderItemData\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  adviseMessage: [AdviseMessage]\n}\n\ntype FlightOrderItemData {\n  code: ID!\n  price: FlightPrice!\n  service: [FlightService!]\n}\n\n\"\"\"Passenger information as age and passegner type\"\"\"\ntype FlightPax {\n  age: Int!\n  type: IATA_PTC_CodeType\n  paxID: ID!\n}\n\n\"\"\"\nThe amount of money expected, required, or given in payment for something.\n\"\"\"\ntype FlightPrice {\n  baseAmount: AmountType\n  fee: [Fee]\n  surcharge: [FlightSurcharge]\n  taxSummary: [TaxSummaryType]\n  totalAmount: AmountType\n}\n\n\"\"\"Transportation of a passenger on a Dated Operating Segment\"\"\"\ntype FlightSegment {\n  arrival: TransportArrival!\n  departure: TransportDeparture!\n  carrier: AirlineCode\n  flightNumber: FlightNumber\n}\n\n\"\"\"\nThe instance of a specific flight or Service Definition as it has been offered (and eventually ordered and consumed) in the context of a specific Offer and/or Order.\n\"\"\"\ntype FlightService implements Node {\n  code: ID!\n  flightServiceData: FlightServiceData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype FlightServiceData {\n  code: ID!\n\n  \"\"\"serviceDefinition\"\"\"\n  type: ID!\n  description: String!\n  pax: [FlightPax]!\n  segments(where: FlightSegmentWhereInput, orderBy: FlightSegmentOrderByInput): [FlightSegment!]!\n}\n\n\"\"\"\nAmount added on to a usual charge for a specific product, purpose, or service.\n\"\"\"\ntype FlightSurcharge {\n  totalAmount: AmountType\n  breakdown: [Fee]\n}\n\n\"\"\"\nInformation corresponding to a ticket for a single origin destination and a single passenger\n\"\"\"\ntype FlightTicket {\n  passenger: Individual!\n  number: ID!\n  status: FlightTicketStatusCode!\n}\n\ntype FlightXMutation {\n  book(data: FlightOrderCreateInput): FlightOrder\n}\n\ntype FlightXQuery {\n  search(where: FlightOfferWhereInput, settings: FlightSettingsInput, orderBy: FlightOfferOrderByInput): FlightOfferConnection\n  audit(code: ID!): AuditData!\n  quote: FlightOffer\n}\n\ntype Individual {\n  code: ID!\n  name: ProperNameType\n  surname: ProperNameType!\n  birthDate: DateTime\n  title: TitleNameType\n}\n\n\"\"\"Tax summary information.\"\"\"\ntype TaxSummaryType {\n  totalTaxAmount: AmountType\n  tax: [TaxType]\n}\n\n\"\"\"\nA compulsory contribution to state revenue, levied by the government on workers' income and business profits or added to the cost of some goods, services, and transactions.\n\"\"\"\ntype TaxType {\n  amount: AmountType\n  descText: TextType\n}\n\n\"\"\"\nText is a character string such as a finite set of characters generally in the form of words of a language.\n\"\"\"\ntype TextType {\n  text: String\n}\n\n\"\"\"\nThe action or process of arriving of a transport vehicle in any place or location.\n\"\"\"\ntype TransportArrival {\n  location: LocationCode\n}\n\n\"\"\"\nThe action or process of leaving of a transport vehicle from any place or location.\n\"\"\"\ntype TransportDeparture {\n  location: LocationCode\n  AircraftScheduled: DateTime\n}\n\n\"\"\"Natural or physical address used for postal service.\"\"\"\ninput Address {\n  street: String!\n  postalCode: String!\n  city: String!\n  country: CountryCodeType!\n}\n\n\"\"\"\nThe electronic or geographic address which a party has provided as the contact channel\n\"\"\"\ninput ContactInfo {\n  email: String!\n  phone: Phone!\n  address: Address!\n}\n\n\"\"\"\nFlightOfferWhereInput are the criteria we set for our query. All offers returned by Search will have those characteristics\nin case there are no offers that meet those requirements an error will be returned.\n\"\"\"\ninput FlightOfferWhereInput {\n  AND: [FlightOfferWhereInput!]\n  OR: [FlightOfferWhereInput!]\n  NOT: [FlightOfferWhereInput!]\n  originDestCriteria_in: [FlightOriginDestCriteriaInput!]\n  age_in: [Int!]\n  discount_in: [Discount!]\n}\n\n\"\"\"Order to be created\"\"\"\ninput FlightOrderCreateInput {\n  selectedOffer_in: [SelectedOffer!]\n  paymentInfo: PaymentInfo!\n}\n\n\"\"\"\nThe Origin and Destination airport/city pair wich restrict a passenger journey or a flight.\n\"\"\"\ninput FlightOriginDestCriteriaInput {\n  departure: Departure!\n  arrival: Arrival!\n  departureAt: DateTime!\n}\n\ninput FlightSegmentWhereInput {\n  isOrigin: Boolean\n  isDestination: Boolean\n}\n\n\"\"\"Configuration of the request\"\"\"\ninput FlightSettingsInput {\n  supplierCode_in: [FlightSupplierInput!]\n  groupCode: ID\n  clientCode_in: ID\n  timeout: Int\n  auditTransactions: Boolean\n}\n\n\"\"\"Supplier to request\"\"\"\ninput FlightSupplierInput {\n  code: ID!\n  accessCode_in: [ID!]\n}\n\n\"\"\"A single human being as distinct from a group, class, or family.\"\"\"\ninput IndividualInput {\n  name: ProperNameType!\n  surname: ProperNameType!\n  birthDate: DateTime!\n  title: TitleNameType\n  IdentityDocID: String!\n  IdentityDocTypeCode: IdentityDocType!\n  CitizenshipCountryCode: CountryCodeType\n  ExpiryDate: DateTime\n  IssueDate: DateTime\n  IssuingCountryCode: CountryCodeType\n  ResidenceCountryCode: CountryCodeType\n}\n\n\"\"\"\nInformation related to the settlement of a transaction through monetary compensation.\n\"\"\"\ninput PaymentInfo {\n  payer: IndividualInput!\n  contact: ContactInfo!\n  paymentMethod_in: [PaymentMethod!]\n  type: PaymentMethodCodeType!\n}\n\n\"\"\"A form of procedure for the payment\"\"\"\ninput PaymentMethod {\n  cash: ClientWhereUniqueInput\n  card: PaymentCardInput\n}\n\n\"\"\"Telephone number with its dialing country code\"\"\"\ninput Phone {\n  dialingCountryCode: String!\n  number: String!\n}\n\n\"\"\"Offer selected by the passenger for requesting an Order to be created.\"\"\"\ninput SelectedOffer {\n  offerCode: ID!\n  selectedOfferItem_in: [SelectedOfferItem!]\n}\n\n\"\"\"\nOfferItem selected by the Passenger for inclusion in the requested Order\n\"\"\"\ninput SelectedOfferItem {\n  offerItemCode: ID!\n  appliedPassengers: [IndividualInput!]\n}\n\n\"\"\"2-letters IATA airline code\"\"\"\nscalar AirlineCode\n\n\"\"\"IATA defined code identifying a city or station.\"\"\"\nscalar Arrival\n\n\"\"\"ISO Country Code.\"\"\"\nscalar CountryCodeType\n\n\"\"\"IATA defined code identifying a city or station.\"\"\"\nscalar Departure\n\n\"\"\"4 digits or less that are unique flight codes in this day \"\"\"\nscalar FlightNumber\n\n\"\"\"IATA Location Code\"\"\"\nscalar LocationCode\n\n\"\"\"Value constraints for proper, regular names\"\"\"\nscalar ProperNameType\n\nenum Discount {\n  BP\n  BI\n  DC\n  RC\n  RM\n  STR\n  ELB\n  SDG\n  SCL\n  RE\n  FAMILY1\n\n  \"\"\"Familia numerosa grado 2\"\"\"\n  FAMILY2\n}\n\nenum FlightOfferOrderByInput {\n  totalPrice_ASC\n  totalPrice_DESC\n}\n\nenum FlightSegmentOrderByInput {\n  date_ASC\n  date_DESC\n}\n\n\"\"\"iso ND2113\"\"\"\nenum FlightTicketStatusCode {\n  \"\"\"open for use (O)\"\"\"\n  OPEN\n\n  \"\"\"checked in (C)\"\"\"\n  CHECKED_IN\n\n  \"\"\"void (V)\"\"\"\n  VOID\n\n  \"\"\"refunded (R)\"\"\"\n  REFUNDED\n}\n\n\"\"\"Type code applying to the Passenger\"\"\"\nenum IATA_PTC_CodeType {\n  ADT\n  CHD\n  INF\n}\n\n\"\"\"\nThe type of passenger identification document. Examples: NATIONAL_ID, PASSPORT \n\"\"\"\nenum IdentityDocType {\n  NATIONAL_ID\n  PASSPORT\n}\n\n\"\"\"The payment method type. Examples: Card, Cash.\"\"\"\nenum PaymentMethodCodeType {\n  CARD\n  CASH\n}\n\n\"\"\"\nConstraint suplementary to the passenger name. Examples: MR (Mister), MRS (Mistress), INF (Infant) CHD (Child)  \n\"\"\"\nenum TitleNameType {\n  MR\n  MRS\n  INF\n  CHD\n}\n\ntype HotelXCommonSettings {\n  settings: HotelXCommonSettingsData\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype HotelXCommonSettingsData {\n  currency: Currency\n  businessRules: BusinessRules\n  timeout: Timeout\n}\n\ntype HotelXDefaultPlugin {\n  step: PluginStepType!\n  type: PluginType!\n  name: String!\n  run: [HotelXParameter!]\n  init: [HotelXParameter!]\n}\n\ntype HotelXDefaultPluginStep {\n  step: String!\n  plugins: [HotelXDefaultPlugin!]!\n}\n\ntype HotelXDefaultSettings {\n  \"\"\"Data\"\"\"\n  settings: HotelXDefaultSettingsData\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype HotelXDefaultSettingsData {\n  \"\"\"Indicates the context of the I/O codes (hotel, board, room and rates)\"\"\"\n  context: String!\n\n  \"\"\"Language to be used in request.\"\"\"\n  language: Language!\n\n  \"\"\"Currency requested if supported by supplier.\"\"\"\n  currency: Currency!\n\n  \"\"\"Nationality of the guest (use ISO3166_1_alfa_2).\"\"\"\n  nationality: Country!\n\n  \"\"\"Targeted zone, country or point of sale to be used in request.\"\"\"\n  market: String @deprecated(reason: \"deprecated from 2019-12-11.\")\n\n  \"\"\"Targeted zones, countries or point-ofsale-to be used in request.\"\"\"\n  markets: [String!]!\n\n  \"\"\"Group of timeouts to be used in the differents services\"\"\"\n  timeout: Timeout!\n\n  \"\"\"Business rules.\"\"\"\n  businessRules: BusinessRules!\n\n  \"\"\"Default acceses\"\"\"\n  accesses: [String!]\n\n  \"\"\"Cache accesses\"\"\"\n  cache: [String!]\n\n  \"\"\"Default plugins\"\"\"\n  plugins: [HotelXDefaultPluginStep!]\n}\n\ntype HotelXParameter {\n  key: String!\n  value: String!\n}\n\ntype HotelXUpdateStatus implements Node {\n  code: ID!\n\n  \"\"\"New value set\"\"\"\n  hotelXUpdateStatusData: HotelXUpdateStatusData\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype HotelXUpdateStatusData {\n  code: ID!\n  isActive: Boolean!\n}\n\n\"\"\"List of business rules to use as filter on the options.\"\"\"\ninput HotelXBusinessRulesInput {\n  \"\"\"\n  Options quota per search. Maximum numbers of options to be returned by the search query.\n  \"\"\"\n  optionsQuota: Int!\n\n  \"\"\"Different business rules to filter the returned options.\"\"\"\n  businessRulesType: BusinessRulesType!\n}\n\ninput HotelXCommonSettingsDataInput {\n  currency: Currency!\n  businessRules: HotelXBusinessRulesInput!\n  timeout: TimeoutInput!\n}\n\ninput HotelXCommonSettingsInput {\n  group: ID!\n  access: ID\n  supplier: ID\n  settings: HotelXCommonSettingsDataInput!\n}\n\ninput HotelXDefaultPluginInput {\n  step: PluginStepType!\n  type: PluginType!\n  name: String!\n  run: [ParameterInput!]\n  init: [ParameterInput!]\n}\n\ninput HotelXDefaultPluginStepInput {\n  step: PluginStepType!\n  plugins: [HotelXDefaultPluginInput!]!\n}\n\n\"\"\"\nInput delta price, indicates the price variation permitted by the client before failing the booking.\n\"\"\"\ninput HotelXDefaultSettingsBusinessRulesInput {\n  \"\"\"\n  Options quota per availability; numbers of options based on availability\n  \"\"\"\n  optionsQuota: Int!\n\n  \"\"\"\n  Different business rules for filtering options that you are interested in\n  \"\"\"\n  businessRulesType: BusinessRulesType!\n}\n\ninput HotelXDefaultSettingsDataInput {\n  \"\"\"Indicates the context of the I/O codes (hotel, board, room and rates)\"\"\"\n  context: String!\n\n  \"\"\"Language to be used in request.\"\"\"\n  language: Language!\n\n  \"\"\"Currency requested if supported by supplier.\"\"\"\n  currency: Currency!\n\n  \"\"\"Nationality of the guest (use ISO3166_1_alfa_2).\"\"\"\n  nationality: Country!\n\n  \"\"\"\n  Targeted zone, country or point of sale to be used in request.\n  @deprecated(reason: \"deprecated from 2019-12-11.\")\n  \"\"\"\n  market: String\n\n  \"\"\"Targeted zones, countries or point-ofsale-to be used in request.\"\"\"\n  markets: [String!]\n\n  \"\"\"Group of timeouts to be used in the differents services\"\"\"\n  timeout: TimeoutInput!\n\n  \"\"\"Business rules.\"\"\"\n  businessRules: HotelXBusinessRulesInput!\n\n  \"\"\"\n  Indicates the default accesses that will added to access list in the Query\n  \"\"\"\n  defaultAccesses: [ID!]\n\n  \"\"\"Indica\"\"\"\n  defaultPlugins: [HotelXDefaultPluginStepInput!]\n}\n\ninput HotelXDefaultSettingsInput {\n  \"\"\"Indicates the group where you will set the default settings\"\"\"\n  group: ID!\n\n  \"\"\"\n  Indicates to the client's name where you will set the default settings, it's optional because you can set settings only to the group level.\n  \"\"\"\n  clientName: ID\n\n  \"\"\"Default Settings\"\"\"\n  settings: HotelXDefaultSettingsDataInput!\n}\n\n\"\"\"Airport Type\"\"\"\ntype Airport implements Node {\n  \"\"\"Airport ID\"\"\"\n  code: ID!\n\n  \"\"\"Airport data\"\"\"\n  airportData: AirportData\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"Information about the airport\"\"\"\ntype AirportData {\n  \"\"\"Airport Code (IATA)\"\"\"\n  code: ID!\n\n  \"\"\"The airport's name\"\"\"\n  name: String\n\n  \"\"\"The airport's location\"\"\"\n  location: Location\n}\n\n\"\"\"\nAn Amenity is defined as something intended to make life more pleasant or comfortable for people. Examples include: swimming pools, shopping centers, etc.\n\"\"\"\ntype AmenityStatic {\n  \"\"\"Code\"\"\"\n  code: String!\n\n  \"\"\"Indicates the type of Amenity.\"\"\"\n  type: ApplicationAreaType!\n\n  \"\"\"Contains the descriptive\"\"\"\n  texts(languages: [Language!]): [Text!]!\n}\n\ntype BedStatic {\n  \"\"\"Specifies the bed type\"\"\"\n  type: String\n\n  \"\"\"Indicates number of beds in a room\"\"\"\n  count: Int\n\n  \"\"\"Specifies if the bed is shared or not\"\"\"\n  shared: Boolean\n}\n\n\"\"\"Board type.\"\"\"\ntype Board implements Node {\n  \"\"\"Board ID\"\"\"\n  code: ID!\n\n  \"\"\"Board data\"\"\"\n  boardData: BoardData\n\n  \"\"\"Errors that abort services.\"\"\"\n  error: [Error!] @deprecated(reason: \"Deprecated from 2019-07-03\")\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"BoardList definition\"\"\"\ntype BoardConnection {\n  edges: [BoardEdge]\n\n  \"\"\"Indicates info about page\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Board data\"\"\"\ntype BoardData {\n  \"\"\"Internal code for checking availability\"\"\"\n  code: ID!\n\n  \"\"\"Code of the hotel in the Supplier selected\"\"\"\n  boardCode: String!\n\n  \"\"\"Label\"\"\"\n  texts(languages: [Language!]): [Text!]\n}\n\n\"\"\"BoardList Edge definition\"\"\"\ntype BoardEdge {\n  node: Board\n  cursor: String!\n}\n\n\"\"\"Category Type\"\"\"\ntype Category implements Node {\n  \"\"\"Category ID\"\"\"\n  code: ID!\n\n  \"\"\"Category data\"\"\"\n  categoryData: CategoryData\n\n  \"\"\"Errors that abort services\"\"\"\n  error: [Error!] @deprecated(reason: \"Deprecated from 2019-07-03\")\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"CategoryList definition\"\"\"\ntype CategoryConnection {\n  edges: [CategoryEdge]\n\n  \"\"\"Indicates info about page\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Category data\"\"\"\ntype CategoryData {\n  \"\"\"Internal code for checking availability\"\"\"\n  code: ID!\n\n  \"\"\"Code of the hotel based on the Supplier selected\"\"\"\n  categoryCode: String!\n\n  \"\"\"Label\"\"\"\n  texts(languages: [Language!]): [Text!]\n}\n\n\"\"\"CategoryList Edge definition\"\"\"\ntype CategoryEdge {\n  node: Category\n  cursor: String!\n}\n\ntype CheckInformation {\n  \"\"\"CheckIn instructions\"\"\"\n  instructions(languages: [Language!]): [Text!]\n\n  \"\"\"CheckIn special instructions\"\"\"\n  specialInstructions(languages: [Language!]): [Text!]\n\n  \"\"\"Minimal age allowed for doing the checkin\"\"\"\n  minAge: Int\n\n  \"\"\"The schedule of checkIn\"\"\"\n  schedule: TimeRange\n}\n\n\"\"\"Contact Data.\"\"\"\ntype Contact {\n  \"\"\"Email\"\"\"\n  email: String\n\n  \"\"\"Telephone\"\"\"\n  telephone: String\n\n  \"\"\"Fax\"\"\"\n  fax: String\n\n  \"\"\"Web\"\"\"\n  web: URI\n}\n\n\"\"\"Geographical coordinates corresponding to a location.\"\"\"\ntype Coordinates {\n  \"\"\"Latitude\"\"\"\n  latitude: Float!\n\n  \"\"\"Longitude\"\"\"\n  longitude: Float!\n}\n\n\"\"\"\nObject description indicates the type and the description about something.\n\"\"\"\ntype Description {\n  \"\"\"Indicates type of description\"\"\"\n  type: DescriptionType!\n\n  \"\"\"Label\"\"\"\n  texts: [Text!]\n}\n\n\"\"\"Destination Type\"\"\"\ntype Destination implements Node {\n  \"\"\"Destination ID\"\"\"\n  code: ID!\n\n  \"\"\"Destination data\"\"\"\n  destinationData: DestinationData\n\n  \"\"\"Errors that abort services\"\"\"\n  error: [AdviseMessage!] @deprecated(reason: \"Deprecated from 2019-07-03\")\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"DestinationList definition\"\"\"\ntype DestinationConnection {\n  edges: [DestinationEdge]\n  token: String!\n\n  \"\"\"Indicates info about page\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Information about destinantion\"\"\"\ntype DestinationData {\n  \"\"\"Destination Code\"\"\"\n  code: ID!\n\n  \"\"\"Indicates if you can search by destination\"\"\"\n  available: Boolean!\n\n  \"\"\"Returns destination leafs of the destination.\"\"\"\n  destinationLeaf: [String!]\n\n  \"\"\"Contains the destination name\"\"\"\n  texts(languages: [Language!]): [Text!]!\n\n  \"\"\"Closest destinations, indicates destinations in proximity\"\"\"\n  closestDestinations: [String!]\n\n  \"\"\"Parent destination code\"\"\"\n  parent: String\n\n  \"\"\"Indicates destination type, zone or city\"\"\"\n  type: DestinationType\n}\n\n\"\"\"DestinationList Edge definition\"\"\"\ntype DestinationEdge {\n  node: Destination\n  cursor: String!\n}\n\nunion DestinationSearchResult = HotelData | DestinationData\n\n\"\"\"Geoname type\"\"\"\ntype Geoname implements Node {\n  \"\"\"Hotel Destination ID\"\"\"\n  code: ID!\n\n  \"\"\"geoname data\"\"\"\n  geonameData: GeonameData\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"Geoname data, which contain a reference to his parent location\"\"\"\ntype GeonameData {\n  \"\"\"location code\"\"\"\n  code: ID!\n\n  \"\"\"name of location\"\"\"\n  name: String!\n\n  \"\"\"Parent location, the top location is itself\"\"\"\n  parent: Geoname!\n\n  \"\"\"\n  ISO 3166-1 alpha-2 format country code with enclosing double quotes \"ES\"\n  \"\"\"\n  country: Country\n\n  \"\"\"\n  Hierarchy returned by geonames' service. It might change depending on the hotel and its location.\n  \"\"\"\n  type: String!\n\n  \"\"\"Geographical coordinates corresponding to a location.\"\"\"\n  coordinates: Coordinates!\n}\n\n\"\"\"Hotel data obtained from Giata System.\"\"\"\ntype GiataData {\n  \"\"\"Giata System ID.\"\"\"\n  id: ID!\n\n  \"\"\"Giata URL for the hotels of the supplier.\"\"\"\n  source: URI!\n\n  \"\"\"Giata url for the hotel info. \"\"\"\n  href: URI!\n\n  \"\"\"Date of last Giata update for this code. \"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"Hotel Type\"\"\"\ntype Hotel implements Node {\n  \"\"\"Hotel ID\"\"\"\n  code: ID!\n\n  \"\"\"Hotel data\"\"\"\n  hotelData: HotelData\n\n  \"\"\"Errors that abort services\"\"\"\n  error: [AdviseMessage!] @deprecated(reason: \"Deprecated from 2019-07-03\")\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"HotelList definition\"\"\"\ntype HotelConnection {\n  edges: [HotelEdge]\n  count: Int!\n  token: String\n\n  \"\"\"Indicates info about page\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Hotel data\"\"\"\ntype HotelData {\n  \"\"\"Internal code.\"\"\"\n  code: ID!\n\n  \"\"\"Code to perform availability.\"\"\"\n  hotelCode: String!\n\n  \"\"\"Native supplier hotel code.\"\"\"\n  hotelCodeSupplier: String\n\n  \"\"\"Giata data stored in giata.\"\"\"\n  giataData: GiataData\n\n  \"\"\"Name of the hotel in the Supplier selected.\"\"\"\n  hotelName: String\n\n  \"\"\"Hotel category (for example number of stars).\"\"\"\n  categoryCode: String\n\n  \"\"\"Indicates property type\"\"\"\n  property: Property @deprecated(reason: \"Deprecated from 2019-10-16. Redundant information\")\n\n  \"\"\"Hotel chain code\"\"\"\n  chainCode: String\n\n  \"\"\"Indicates that the Hotel has an Exclusive Deal.\"\"\"\n  exclusiveDeal: Boolean!\n\n  \"\"\"Indicates the location of the hotel\"\"\"\n  location: Location!\n\n  \"\"\"Contact cotains information about hotel contact.\"\"\"\n  contact: Contact\n\n  \"\"\"Rank indicates the supplier categorization.\"\"\"\n  rank: [Int!]!\n\n  \"\"\"List of credit cards\"\"\"\n  cardTypes: [PaymentCardType!]\n\n  \"\"\"Amenities\"\"\"\n  amenities: [AmenityStatic!]\n\n  \"\"\"Medias\"\"\"\n  medias: [Media!]\n\n  \"\"\"Descriptions\"\"\"\n  descriptions(types: [DescriptionType!], languages: [Language!]): [Description!]\n\n  \"\"\"Rooms\"\"\"\n  rooms: RoomConnection\n\n  \"\"\"Indicates property type.\"\"\"\n  propertyType: PropertyType\n\n  \"\"\"Mandatory fees of property\"\"\"\n  mandatoryFees: [MandatoryFee!]\n\n  \"\"\"CheckIn information\"\"\"\n  checkIn: CheckInformation\n\n  \"\"\"CheckOut information\"\"\"\n  checkOut: CheckInformation\n\n  \"\"\"Amenities with mapping\"\"\"\n  allAmenities(mapOptions: [HotelXMapOptionInput!]): HotelXAmenityConnection\n}\n\n\"\"\"HotelList Edge definition\"\"\"\ntype HotelEdge {\n  node: Hotel\n  cursor: String!\n}\n\ntype HotelXAmenity implements Node {\n  \"\"\"Node Id\"\"\"\n  code: ID!\n\n  \"\"\"Indicates data values of amenity\"\"\"\n  amenityData: HotelXAmenityData\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Indicates the creation date of the node\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Indicates the date of last update of the node\"\"\"\n  updatedAt: DateTime!\n}\n\ntype HotelXAmenityConnection {\n  \"\"\"Amenity edges of amenity connection\"\"\"\n  edges: [HotelXAmenityEdge!]\n\n  \"\"\"Page info of the connection\"\"\"\n  pageInfo: PageInfo!\n}\n\ntype HotelXAmenityData {\n  \"\"\"Amenity code\"\"\"\n  code: ID!\n\n  \"\"\"External amenity code\"\"\"\n  amenityCode: String!\n\n  \"\"\"Indicates the type of Amenity.\"\"\"\n  type: ApplicationAreaType!\n\n  \"\"\"Contains the descriptive\"\"\"\n  texts(languages: [Language!]): [Text!]!\n\n  \"\"\"Indicates the amenity's value in different languages\"\"\"\n  value(languages: [Language!]): [Text!]!\n\n  \"\"\"Mappings of amenity codes in different contexts\"\"\"\n  mappings: [HotelXMappedCode!]\n}\n\ntype HotelXAmenityEdge {\n  \"\"\"Amenity node\"\"\"\n  node: HotelXAmenity!\n\n  \"\"\"Edge's cursor\"\"\"\n  cursor: String!\n}\n\ntype HotelXMappedCode {\n  \"\"\"Context of the mapped code\"\"\"\n  context: String!\n\n  \"\"\"Code in context\"\"\"\n  code: String!\n}\n\n\"\"\"Indicates the location of the hotel\"\"\"\ntype Location {\n  \"\"\"Contains Hotel Address\"\"\"\n  address: String\n\n  \"\"\"Contains the city\"\"\"\n  city: String\n\n  \"\"\"Contains the zipCode.\"\"\"\n  zipCode: String\n\n  \"\"\"Country where is the Hotel.\"\"\"\n  country: Country\n\n  \"\"\"Geographical coordinates corresponding to a location.\"\"\"\n  coordinates: Coordinates\n\n  \"\"\"Closest destination\"\"\"\n  closestDestination: DestinationData\n\n  \"\"\"Airports\"\"\"\n  airports: [Airport!]\n\n  \"\"\"Detailed information about the destinations geonames\"\"\"\n  geoNames: [Geoname!]!\n\n  \"\"\"the state/province of the property\"\"\"\n  state: State\n}\n\ntype MandatoryFee {\n  \"\"\"Fee duration\"\"\"\n  duration: String\n\n  \"\"\"Native supplier Mandatry Fee  \"\"\"\n  mandatoryFeeCode: String!\n\n  \"\"\"Fee price\"\"\"\n  price: PriceStatic!\n\n  \"\"\"The scope of the fee\"\"\"\n  scope: String\n\n  \"\"\"the name of the fee\"\"\"\n  name: String\n\n  \"\"\"Fee description\"\"\"\n  text: String\n\n  \"\"\"Indicates if the fee is included in the price\"\"\"\n  included: Boolean!\n}\n\n\"\"\"Contains media information.\"\"\"\ntype Media {\n  \"\"\"Code.\"\"\"\n  code: String\n\n  \"\"\"Indicates the order priority.\"\"\"\n  order: String\n\n  \"\"\"Indicates the type of the media.\"\"\"\n  type: ApplicationAreaType!\n\n  \"\"\"Date updated.\"\"\"\n  updatedAt: DateTime!\n\n  \"\"\"Url.\"\"\"\n  url: URI!\n\n  \"\"\"Contains the descriptive.\"\"\"\n  texts(languages: [Language!]): [Text!]\n}\n\n\"\"\"Metadata Type\"\"\"\ntype Metadata implements Node {\n  \"\"\"Metadata supplier ID\"\"\"\n  code: ID!\n\n  \"\"\"Metadata data\"\"\"\n  metadataData: MetadataData\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"Contain age range of the passenger\"\"\"\ntype AgeRange {\n  \"\"\"min age allowed\"\"\"\n  min: Int!\n\n  \"\"\"max age allowed\"\"\"\n  max: Int!\n\n  \"\"\"PaxType\"\"\"\n  type: HotelPaxType!\n}\n\n\"\"\"Information about beds.\"\"\"\ntype MetadataBeds {\n  \"\"\"Indicates the number of units available per room.\"\"\"\n  informNumberOfUnits: ReviewedBool!\n\n  \"\"\"Informs in Search response if beds in the room are shared.\"\"\"\n  informSharedBed: ReviewedBool!\n\n  \"\"\"Informs if the supplier returns the beds types.\"\"\"\n  informBedType: ReviewedBool!\n\n  \"\"\"Informs if the supplier returns the number of beds for each room.\"\"\"\n  informNumberOfBeds: ReviewedBool!\n}\n\n\"\"\"Return information about book\"\"\"\ntype MetadataBook {\n  \"\"\"\n  Allows a margin stipulated by the client for booking with a higher price (delta).\n  \"\"\"\n  allowsDeltaPrice: ReviewedBool!\n\n  \"\"\"Required data for all passengers (names and surnames).\"\"\"\n  requiredAllPassengers: ReviewedBool!\n\n  \"\"\"Informs if the supplier allows send remarks.\"\"\"\n  allowsRemarks: ReviewedBool!\n\n  \"\"\"Informs if the supplier billing code.\"\"\"\n  informBillingSupplier: ReviewedBool!\n\n  \"\"\"Informs if the supplier returns the hotel reference number.\"\"\"\n  informHotelReference: ReviewedBool!\n\n  \"\"\"The supplier informs the book price.\"\"\"\n  informPrice: ReviewedBool!\n\n  \"\"\"Informs if the supplier requires nationality\"\"\"\n  requiredNationality: ReviewedBool\n}\n\n\"\"\"Return information about booking\"\"\"\ntype MetadataBooking {\n  \"\"\"Specifies if booking can be permerformed using supplier reference.\"\"\"\n  queryableBySupplierReference: ReviewedBool!\n\n  \"\"\"Specifies if booking can be permerformed using client reference.\"\"\"\n  queryableByClientReference: ReviewedBool!\n\n  \"\"\"Specifies if booking can be permerformed using creation dates.\"\"\"\n  queryableByCreationDate: ReviewedBool!\n\n  \"\"\"Specifies if booking can be permerformed using check in dates.\"\"\"\n  queryableByCheckinDate: ReviewedBool!\n\n  \"\"\"Informs if the supplier returns the hotel reference number.\"\"\"\n  informHotelReference: ReviewedBool\n\n  \"\"\"Informs the cancellation policies.\"\"\"\n  informCancelPolicies: ReviewedBool\n\n  \"\"\"Informs the cancellation price.\"\"\"\n  informPriceCancel: ReviewedBool\n}\n\ntype MetadataCancel {\n  \"\"\"The supplier allows cancellation with supplier reference.\"\"\"\n  mutableBySupplierReference: ReviewedBool!\n\n  \"\"\"The supplier allows cancellation with client reference.\"\"\"\n  mutableByClientReference: ReviewedBool!\n\n  \"\"\"The supplier informs the cancellation price.\"\"\"\n  informPriceCancel: ReviewedBool\n}\n\n\"\"\"Guest restrictions for each candidate type in a room.\"\"\"\ntype MetadataCandidate {\n  \"\"\"Minimum required number of guest of this type.\"\"\"\n  min: Int!\n\n  \"\"\"Maximum number of guest of this type allowed.\"\"\"\n  max: Int!\n\n  \"\"\"Candidate classification type.(Adult, Child, Infant)\"\"\"\n  type: HotelPaxType!\n}\n\n\"\"\"Metadata definition\"\"\"\ntype MetadataConnection {\n  \"\"\"contains informations of each metadata requested\"\"\"\n  edges: [MetadataEdge]\n\n  \"\"\"\n  List of messages, contain error message, such as invalid input, connection error\n  \"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Indicates info about page\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Informs the  content information, return null if not implemented\"\"\"\ntype MetadataContent {\n  languages: [ReviewedText!]!\n}\n\n\"\"\"\nMetadataData provides information about the metadata of the supplier so that it can be effectively configured.\n\"\"\"\ntype MetadataData {\n  \"\"\"Requested supplier code\"\"\"\n  supplierCode: ID!\n\n  \"\"\"Search metadata\"\"\"\n  search: MetadataSearch!\n\n  \"\"\"Quote metadata\"\"\"\n  quote: MetadataQuote!\n\n  \"\"\"Book metadata\"\"\"\n  book: MetadataBook!\n\n  \"\"\"Booking metadata\"\"\"\n  booking: MetadataBooking!\n\n  \"\"\"Cancel metadata\"\"\"\n  cancel: MetadataCancel!\n\n  \"\"\"\n  Contains information regarding Hotels, Hotels returns a list of hotels all information available (code, name,\n  address, phone, etc.) for each hotel. Return null is not implemented\n  \"\"\"\n  hotels: MetadataContent\n\n  \"\"\"\n  Contains information regarding Destinations, Destinations returns the supplier's destination list.\n  Return null is not implemented\n  \"\"\"\n  destinations: MetadataContent\n\n  \"\"\"\n  Contains information regarding Rooms, RoomList aims to return a list of rooms, their codes as well as descriptions.\n  Return null is not implemented\n  \"\"\"\n  rooms: MetadataContent\n\n  \"\"\"\n  Contains information regarding Boards, Boards aims to return a list of the search boards,\n  which will be used in the Search response. Return null is not implemented\n  \"\"\"\n  boards: MetadataContent\n\n  \"\"\"\n  Contains information regarding Categories, Categories returns a list of categories (codes and descriptions)\n  used in Hotels List. Return null is not implemented\n  \"\"\"\n  categories: MetadataContent\n\n  \"\"\"\n  Contains information regarding Markets, Markets return a list of the available Markets, which will be\n  used in the Search request. Return null is not implemented\n  \"\"\"\n  markets: MetadataContent\n\n  \"\"\"\n  Contains information regarding Currencies, Currencies returns a list of currencies the supplier in booking flow.\n  Return null is not implemented\n  \"\"\"\n  currencies: MetadataContent\n\n  \"\"\"\n  Contains information regarding Amenities, Amenities is defined as something intended to make life more\n  pleasant or comfortable for people, Examples include: swimming pools, shopping centers, etc.\n  Return null is not implemented\n  \"\"\"\n  amenities: MetadataContent\n}\n\n\"\"\"Metadata Edge definition, list of metadata requested\"\"\"\ntype MetadataEdge {\n  \"\"\"contain information of each metadata requested\"\"\"\n  node: Metadata\n\n  \"\"\"cursor to the next item, used for pagination\"\"\"\n  cursor: String!\n}\n\ntype MetadataQuote {\n  \"\"\"Informs if the price is binding in Quote response.\"\"\"\n  informBindingPrice: ReviewedBool!\n\n  \"\"\"The supplier can inform in Quote if the rate is non-refundable.\"\"\"\n  informNRFRate: ReviewedBool!\n\n  \"\"\"Returns remarks.\"\"\"\n  informRemarks: ReviewedBool!\n\n  \"\"\"Informs cancellation policies.\"\"\"\n  informCancelPolicies: ReviewedBool!\n\n  \"\"\"Specifies if the supplier informs the cancel policies in free text.\"\"\"\n  informCancelPoliciesDescription: ReviewedBool!\n\n  \"\"\"Informs if the supplier returns surcharges.\"\"\"\n  informSurcharges: ReviewedBool!\n\n  \"\"\"Informs if the supplier requires nationality\"\"\"\n  requiredNationality: ReviewedBool\n}\n\n\"\"\"\nIndicates whether all of the distributions must have the same configuration.\n\"\"\"\ntype RequiredRoomWithSamePaxConfiguration {\n  \"\"\"\n  Indicates whether it is necessary that the number of guests be the same in all of the configurations.\n  \"\"\"\n  samePaxNumber: ReviewedBool!\n\n  \"\"\"\n  Indicates whether all of the guests in a particular distribution must be the same age.\n  \"\"\"\n  samePaxAge: ReviewedBool!\n}\n\n\"\"\"Contain age range information and the review date\"\"\"\ntype ReviewedAgeRanges {\n  \"\"\"Last reviewed date\"\"\"\n  reviewDate: Date!\n\n  \"\"\"list of  type of passenger with the age range\"\"\"\n  ages: [AgeRange!]!\n}\n\n\"\"\"Contain bool value and review date\"\"\"\ntype ReviewedBool {\n  \"\"\"Last reviewed date\"\"\"\n  reviewDate: Date!\n  value: Boolean!\n}\n\n\"\"\"Contain int value and review date\"\"\"\ntype ReviewedInt {\n  \"\"\"Last reviewed date\"\"\"\n  reviewDate: Date!\n  value: Int!\n}\n\n\"\"\"\nContains information about the age restrictions of the guests in a room.\n\"\"\"\ntype ReviwedPaxTypeRangeInRoomCandidates {\n  \"\"\"Last reviewed date\"\"\"\n  reviewDate: Date!\n\n  \"\"\"Guest restrictions for each candidate type in a room.\"\"\"\n  candidates: [MetadataCandidate!]!\n}\n\n\"\"\"Payment types accepted by the supplier.\"\"\"\ntype ReviewedPaymentType {\n  \"\"\"Last reviewed date\"\"\"\n  reviewDate: Date!\n\n  \"\"\"Indicates the types of payment suppoted\"\"\"\n  value: PaymentType!\n}\n\n\"\"\"Rate rules supported by the supplie\"\"\"\ntype ReviewedRateRule {\n  \"\"\"Informs of the date when the field was last reviewed.\"\"\"\n  reviewDate: Date!\n  value: RateRulesType!\n}\n\n\"\"\"Contain text value and review date\"\"\"\ntype ReviewedText {\n  reviewDate: Date!\n  value: String!\n}\n\n\"\"\"Contains information about the restrictions of the rooms.\"\"\"\ntype MetadataRoomCandidates {\n  \"\"\"\n  Maximum number of room candidates that can be requested in the same search request.\n  \"\"\"\n  maxNumberRoomCandidates: ReviewedInt!\n\n  \"\"\"\n  Contains information about the age restrictions of the guests in a room.\n  \"\"\"\n  paxTypeRangeInRoomCandidates: ReviwedPaxTypeRangeInRoomCandidates\n\n  \"\"\"\n  Maximum number paxs in same room that can be requested in the same search request.\n  \"\"\"\n  maxPaxInRoomCandidates: ReviewedInt!\n\n  \"\"\"Total amount of paxs that can be requested in the same search request.\"\"\"\n  maxPaxInAllRooms: ReviewedInt!\n\n  \"\"\"\n  Indicates whether all of the distributions must have the same configuration.\n  \"\"\"\n  requiredRoomWithSamePaxConfiguration: RequiredRoomWithSamePaxConfiguration!\n\n  \"\"\"List of rate rule types supported by the supplie\"\"\"\n  rateRules: [ReviewedRateRule!]!\n\n  \"\"\"Information about beds.\"\"\"\n  beds: MetadataBeds!\n\n  \"\"\"The age range used by the supplier.\"\"\"\n  ageRange: ReviewedAgeRanges!\n}\n\ntype MetadataSearch {\n  \"\"\"Contains information regarding the destinations\"\"\"\n  destinations: MetadataSearchDestinations!\n\n  \"\"\"If true, it is possible to request the currency.\"\"\"\n  allowsCurrency: ReviewedBool!\n\n  \"\"\"Informs whether the integration allows room combination or not.\"\"\"\n  implementsCombination: ReviewedBool!\n\n  \"\"\"Number of markets supported by the supplier in the same request.\"\"\"\n  numMarketsAllowed: ReviewedInt\n\n  \"\"\"\n  Minimum days required in between booking date and checking date ( days in advance ). If the value is zero then there is no limitation.\n  \"\"\"\n  release: ReviewedInt!\n\n  \"\"\"\n  Minimum number of days required for booking. If the value is zero then there is no limitation.\n  \"\"\"\n  minimumStay: ReviewedInt!\n\n  \"\"\"Maximum number of days allowed for booking.\"\"\"\n  maxStay: ReviewedInt!\n\n  \"\"\"Contains information about the restrictions of the rooms.\"\"\"\n  roomCandidates: MetadataRoomCandidates!\n\n  \"\"\"Supplier returns binding PVPs.\"\"\"\n  informBindingPrice: ReviewedBool!\n\n  \"\"\"Returns cancellation policies at search step\"\"\"\n  informCancelPolicies: ReviewedBool!\n\n  \"\"\"Returns cancellation policies at room level.\"\"\"\n  informRoomCancelPolicies: ReviewedBool!\n\n  \"\"\"Space available for any remarks or comments aimed at the client.\"\"\"\n  informRemarks: ReviewedBool!\n\n  \"\"\"\n  List of payment types accepted by the supplier with their reviewed date\n  \"\"\"\n  paymentTypes: [ReviewedPaymentType!]!\n\n  \"\"\"List of languages supported\"\"\"\n  languages: [ReviewedText!]!\n\n  \"\"\"Informs if the supplier returns the daily price\"\"\"\n  informDailyPrice: ReviewedBool!\n\n  \"\"\"Informs if the supplier returns the daily rate.\"\"\"\n  informDailyRatePlan: ReviewedBool!\n\n  \"\"\"If true, the supplier returns the promotions(offers) applied.\"\"\"\n  informPromotions: ReviewedBool!\n\n  \"\"\"The supplier can inform in Search if the room is non-refundable.\"\"\"\n  informNRFRateByRoom: ReviewedBool!\n\n  \"\"\"Informs if the supplier returns surcharges.\"\"\"\n  informSurcharges: ReviewedBool!\n\n  \"\"\"Returns surcharges at room level.\"\"\"\n  informRoomSurcharges: ReviewedBool!\n\n  \"\"\"inform Hotel name at search step\"\"\"\n  informHotelName: ReviewedBool!\n\n  \"\"\"Informs if the supplier requires nationality\"\"\"\n  requiredNationality: ReviewedBool\n}\n\n\"\"\"Contains information regarding the destinations for Search request.\"\"\"\ntype MetadataSearchDestinations {\n  \"\"\"Maximum number of hotels that can be requested.\"\"\"\n  maxNumberHotels: ReviewedInt!\n\n  \"\"\"Recomended number of hotels.\"\"\"\n  recommendedNumberHotels: ReviewedInt!\n}\n\n\"\"\"Occupancy Range definition\"\"\"\ntype OccupancyRange {\n  min: Int\n  max: Int\n}\n\n\"\"\"Information about occupancy\"\"\"\ntype OccupancyStatic {\n  \"\"\"Occupancy Total Pax Range\"\"\"\n  total: OccupancyRange\n\n  \"\"\"Occupancy Infants Pax Range\"\"\"\n  infants: OccupancyRange\n\n  \"\"\"Occupancy Children Pax Range\"\"\"\n  children: OccupancyRange\n\n  \"\"\"Occupancy Adults Pax Range\"\"\"\n  adults: OccupancyRange\n}\n\ntype PriceStatic {\n  \"\"\"Net amount\"\"\"\n  amount: Float!\n\n  \"\"\"Price curency\"\"\"\n  currency: Currency!\n}\n\n\"\"\"Indicates Property type\"\"\"\ntype Property {\n  \"\"\"Indicates property type\"\"\"\n  name: String\n\n  \"\"\"Indicates property type code\"\"\"\n  code: String\n}\n\ntype PropertyType {\n  \"\"\"Native supplier property code.\"\"\"\n  propertyCode: String\n\n  \"\"\"PropertyType name\"\"\"\n  name: String\n}\n\n\"\"\"RoomList definition\"\"\"\ntype RoomConnection {\n  edges: [RoomEdge]\n  token: String\n\n  \"\"\"Indicates info about page\"\"\"\n  pageInfo: PageInfo!\n}\n\n\"\"\"Room data\"\"\"\ntype RoomData {\n  \"\"\"Internal code for checking availability\"\"\"\n  code: ID!\n\n  \"\"\"Code of the hotel in the Supplier selected\"\"\"\n  roomCode: String!\n\n  \"\"\"Label\"\"\"\n  texts(languages: [Language!]): [Text!]\n\n  \"\"\"Room source\"\"\"\n  source: String\n\n  \"\"\"Room occupancies\"\"\"\n  occupancies: OccupancyStatic\n\n  \"\"\"Room amenities\"\"\"\n  amenities: [AmenityStatic!]\n\n  \"\"\"Room views\"\"\"\n  views: [View!]\n\n  \"\"\"Room medias\"\"\"\n  medias: [Media!]\n\n  \"\"\"Room beds\"\"\"\n  beds: [BedStatic!]\n\n  \"\"\"Room area in square meters.\"\"\"\n  area: Area\n\n  \"\"\"Amenities with mapping\"\"\"\n  allAmenities(mapOptions: [HotelXMapOptionInput!]): HotelXAmenityConnection\n}\n\n\"\"\"RoomList Edge definition\"\"\"\ntype RoomEdge {\n  node: RoomStatic\n  cursor: String!\n}\n\n\"\"\"Room Type\"\"\"\ntype RoomStatic implements Node {\n  \"\"\"Room ID\"\"\"\n  code: ID!\n\n  \"\"\"Room data\"\"\"\n  roomData: RoomData\n\n  \"\"\"Errors that abort services.\"\"\"\n  error: [Error!] @deprecated(reason: \"Deprecated from 2019-07-03\")\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Date created\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Date updated\"\"\"\n  updatedAt: DateTime!\n}\n\ntype TimeRange {\n  \"\"\"the start time of range\"\"\"\n  startTime: Time!\n\n  \"\"\"the end time of range\"\"\"\n  endTime: Time!\n}\n\ntype View {\n  \"\"\"Contains the descriptive of view.\"\"\"\n  texts(languages: [Language!]): [Text!]\n\n  \"\"\"Containg the view code\"\"\"\n  viewCode: String!\n}\n\ninput HotelXBoardQueryInput {\n  \"\"\"Indicates the board codes that you want filter.\"\"\"\n  boardCodes: [String!]\n\n  \"\"\"Indicates the access that you want use.\"\"\"\n  access: ID!\n}\n\ninput HotelXCategoryQueryInput {\n  \"\"\"Indicates the category codes that you want filter.\"\"\"\n  categoryCodes: [String!]\n\n  \"\"\"Indicates the access that you want use.\"\"\"\n  access: ID\n\n  \"\"\"Indicates the group that you want to search categories.\"\"\"\n  group: ID\n}\n\ninput HotelXDestinationListInput {\n  \"\"\"Indicates the access\"\"\"\n  access: ID\n\n  \"\"\"The supplier's group. Only available if all permissions allowed\"\"\"\n  group: ID\n\n  \"\"\"Search by hotel codes\"\"\"\n  destinationCodes: [String!]\n\n  \"\"\"Maxium number of items per page\"\"\"\n  maxSize: Int\n}\n\ninput HotelXDestinationSearcherInput {\n  \"\"\"Indicates the access\"\"\"\n  access: ID!\n\n  \"\"\"Search by hotel name or destination name\"\"\"\n  text: String!\n\n  \"\"\"Maxium number of items per type\"\"\"\n  maxSize: Int\n}\n\n\"\"\"\nBy default: Logical AND on all given filters. Hotels data are returned\nonly if match condition\n\"\"\"\ninput HotelXHotelFilterInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [HotelXHotelFilterInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [HotelXHotelFilterInput!]\n\n  \"\"\"Return hotels with creation time in given list.\"\"\"\n  createdAt_in: [DateTime!]\n\n  \"\"\"Return hotels with creation time that are not contained in given list.\"\"\"\n  createdAt_not_in: [DateTime!]\n\n  \"\"\"Return hotels with creation time less than the given value.\"\"\"\n  createdAt_lt: DateTime\n\n  \"\"\"Return hotels with creation time less than or equal the given value.\"\"\"\n  createdAt_lte: DateTime\n\n  \"\"\"Return hotels with creation time greater than the given value.\"\"\"\n  createdAt_gt: DateTime\n\n  \"\"\"\n  Return hotels with creation time greater than or equal the given value.\n  \"\"\"\n  createdAt_gte: DateTime\n\n  \"\"\"Return hotels with update time that are contained in given list.\"\"\"\n  updatedAt_in: [DateTime!]\n\n  \"\"\"Return hotels with update time that are not contained in given list.\"\"\"\n  updatedAt_not_in: [DateTime!]\n\n  \"\"\"Return hotels with update time less than the given value.\"\"\"\n  updatedAt_lt: DateTime\n\n  \"\"\"Return hotels with update time less than or equal the given value.\"\"\"\n  updatedAt_lte: DateTime\n\n  \"\"\"Return hotels with update time greater than the given value.\"\"\"\n  updatedAt_gt: DateTime\n\n  \"\"\"Return hotels with update time greater than or equal the given value.\"\"\"\n  updatedAt_gte: DateTime\n\n  \"\"\"Return hotels with delete time that are contained in given list.\"\"\"\n  deletedAt_in: [DateTime!]\n\n  \"\"\"Return hotels with delete time that are not contained in given list.\"\"\"\n  deletedAt_not_in: [DateTime!]\n\n  \"\"\"Return hotels with delete time less than the given value.\"\"\"\n  deletedAt_lt: DateTime\n\n  \"\"\"Return hotels with delete time less than or equal the given value.\"\"\"\n  deletedAt_lte: DateTime\n\n  \"\"\"Return hotels with delete time greater than the given value.\"\"\"\n  deletedAt_gt: DateTime\n\n  \"\"\"Return hotels with delete time greater than or equal the given value.\"\"\"\n  deletedAt_gte: DateTime\n\n  \"\"\"Hotel Country required for all Hotels\"\"\"\n  country_in: Boolean\n\n  \"\"\"Hotel Category code required for all Hotels\"\"\"\n  category_in: Boolean\n\n  \"\"\"Hotel destination required for all Hotels\"\"\"\n  destination_in: Boolean\n\n  \"\"\"Hotel Name required for all Hotels\"\"\"\n  name_in: Boolean\n\n  \"\"\"Hotel Coordinates required for all Hotels\"\"\"\n  coordinates_in: Boolean\n}\n\ninput HotelXHotelListInput {\n  \"\"\"Indicates the access\"\"\"\n  access: ID\n\n  \"\"\"Search by hotel codes. These hotel codes are used to perform search.\"\"\"\n  hotelCodes: [String!]\n\n  \"\"\"Search by hotel codes in supplier's context.\"\"\"\n  supplierHotelCodes: [String!]\n\n  \"\"\"Search by hotel name\"\"\"\n  hotelName: String\n\n  \"\"\"Search by destination codes, only search by minimal destinations\"\"\"\n  destinationCodes: [String!]\n\n  \"\"\"Filter by country\"\"\"\n  countries: [Country!]\n\n  \"\"\"Filter by supplier rank\"\"\"\n  ranks: [Int!]\n\n  \"\"\"Maxium number of items per page\"\"\"\n  maxSize: Int\n\n  \"\"\"The supplier's group. Only available if all permissions allowed\"\"\"\n  group: ID\n}\n\ninput HotelXMapOptionInput {\n  groupCode: ID!\n  context: String!\n}\n\ninput HotelXMapSettingsInput {\n  mapOptions: [HotelXMapOptionInput!]\n}\n\ninput HotelXMetadataQueryInput {\n  \"\"\"Indicates the supplier code\"\"\"\n  supplierCodes: [ID!]\n}\n\ninput HotelXRoomQueryInput {\n  \"\"\"Indicates the access that you want use.\"\"\"\n  access: ID!\n\n  \"\"\"Indicates the room codes that you want filter.\"\"\"\n  roomCodes: [String!]\n\n  \"\"\"Maxium number of items per page\"\"\"\n  maxSize: Int\n}\n\n\"\"\"Indicates the type of description\"\"\"\nenum DescriptionType {\n  \"\"\"Additional Information\"\"\"\n  ADDITIONAL\n\n  \"\"\"Amenities\"\"\"\n  AMENITY\n\n  \"\"\"Activities\"\"\"\n  ACTIVITY\n\n  \"\"\"Restaurants\"\"\"\n  RESTAURANT\n\n  \"\"\"Rooms\"\"\"\n  ROOM\n\n  \"\"\"General\"\"\"\n  GENERAL\n\n  \"\"\"Pools\"\"\"\n  POOL\n\n  \"\"\"Locations\"\"\"\n  LOCATION\n\n  \"\"\"How to get\"\"\"\n  HOW_TO_GET\n}\n\n\"\"\"Indicates the type of destination\"\"\"\nenum DestinationType {\n  \"\"\"Zone\"\"\"\n  ZONE\n\n  \"\"\"City\"\"\"\n  CITY\n\n  \"\"\"Country\"\"\"\n  COUNTRY\n}\n\n\"\"\"Define type of pax allowed\"\"\"\nenum HotelPaxType {\n  ADULT\n  CHILD\n  INFANT\n}\n\ninterface BookableOptionSearch {\n  \"\"\"Supplier that offers this option.\"\"\"\n  supplierCode: String!\n\n  \"\"\"Access code of this option.\"\"\"\n  accessCode: String!\n\n  \"\"\"Indicates the id to be used on Quote as key\"\"\"\n  id: String!\n}\n\ninterface Priceable {\n  \"\"\"Specifies the currency.\"\"\"\n  currency: Currency!\n\n  \"\"\"Is binding.\"\"\"\n  binding: Boolean!\n\n  \"\"\"Specifies the import net.\"\"\"\n  net: Float!\n\n  \"\"\"Specifies the import gross.\"\"\"\n  gross: Float\n\n  \"\"\"Specifies the exchange.\"\"\"\n  exchange: Exchange!\n}\n\ninterface Response {\n  \"\"\"Application stats\"\"\"\n  stats(token: String!): StatsRequest\n\n  \"\"\"Data sent and received in the supplier\u2019s original format.\"\"\"\n  auditData: AuditData\n\n  \"\"\"Errors that lead the service to stop\"\"\"\n  errors: [Error!]\n\n  \"\"\"Potentially harmful situations or errors that do not stop the service\"\"\"\n  warnings: [Warning!]\n}\n\n\"\"\"Additional information about the option\"\"\"\ntype AddOn {\n  \"\"\"Contains keyword/ID to identify the AddOn.\"\"\"\n  key: String!\n\n  \"\"\"Contains AddOn values.\"\"\"\n  value: JSON!\n}\n\n\"\"\"Additional information about the option\"\"\"\ntype AddOns {\n  \"\"\"Extra information from the distribution layer\"\"\"\n  distribute: JSON @deprecated(reason: \"deprecated from 2018-05-21. You can find it in distribution AddOn\")\n\n  \"\"\"Extra information from the distribution layer\"\"\"\n  distribution: [AddOn!]\n}\n\n\"\"\"\nAn Amenity is defined as something intended to make life more pleasant or comfortable for people. Examples include: swimming pools, shopping centers, etc.\n\"\"\"\ntype Amenity {\n  \"\"\"Code\"\"\"\n  code: String!\n\n  \"\"\"Code in supplier context\"\"\"\n  amenityCodeSupplier: String!\n\n  \"\"\"Indicates the type of Amenity.\"\"\"\n  type: ApplicationAreaType!\n\n  \"\"\"Contains the value of amenity.\"\"\"\n  value: String!\n\n  \"\"\"Contains the descriptive of amenity.\"\"\"\n  texts: String!\n}\n\n\"\"\"Contains information about a bed.\"\"\"\ntype Bed {\n  \"\"\"Specifies the bed type\"\"\"\n  type: String\n\n  \"\"\"Description about the bed\"\"\"\n  description: String @deprecated(reason: \"Deprecated from 2019-07-29\")\n\n  \"\"\"Indicates number of beds in a room\"\"\"\n  count: Int\n\n  \"\"\"Specifies if the bed is shared or not\"\"\"\n  shared: Boolean\n}\n\ntype BookingHotel {\n  \"\"\"\n  Creation date of the booking.\n  Format: YYYY-MM-DD\n  \"\"\"\n  creationDate: Date @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"\n  Check-in date for booking\n  Format: YYYY-MM-DD\n  \"\"\"\n  checkIn: Date @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"\n  Check-out date for the booking.\n  Format: YYYY-MM-DD\n  \"\"\"\n  checkOut: Date @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"\n  Creation date of the booking.\n  Format: YYYY-MM-DD\n  \"\"\"\n  bookingDate: Date\n\n  \"\"\"\n  Check-in date for booking\n  Format: YYYY-MM-DD\n  \"\"\"\n  start: Date\n\n  \"\"\"\n  Check-out date for the booking.\n  Format: YYYY-MM-DD\n  \"\"\"\n  end: Date\n\n  \"\"\"Code of the hotel in the context selected.\"\"\"\n  hotelCode: String\n\n  \"\"\"Name of the hotel.\"\"\"\n  hotelName: String\n\n  \"\"\"Code of the board in the context selected.\"\"\"\n  boardCode: String\n\n  \"\"\"List of occupancies for the request\"\"\"\n  occupancies: [Occupancy!]\n\n  \"\"\"List of rooms.\"\"\"\n  rooms: [BookingRoom!]\n}\n\ntype BookingRoom {\n  \"\"\"ID reference to the occupancy\"\"\"\n  occupancyRefId: Int\n\n  \"\"\"Indicates the room code\"\"\"\n  code: String\n\n  \"\"\"Description about the room\"\"\"\n  description: String\n\n  \"\"\"Total price for all days.\"\"\"\n  price: Price\n}\n\n\"\"\"List of business rules for filtering options based on your interests.\"\"\"\ntype BusinessRules {\n  \"\"\"\n  Options quota per availability; numbers of options based on availability\n  \"\"\"\n  optionsQuota: Int!\n\n  \"\"\"\n  Different business rules for filtering options that you are interested in\n  \"\"\"\n  businessRulesType: BusinessRulesType!\n}\n\n\"\"\"Contains information for cancellation penalities..\"\"\"\ntype CancelPenalty {\n  \"\"\"\n  Cancellation fees will be applicabled between this date and check-in date\n  \"\"\"\n  deadline: DateTime\n\n  \"\"\"\n  Cancellation fees applicable X number of hours before the check-in date\n  \"\"\"\n  hoursBefore: Int!\n\n  \"\"\"Type of penalty; this can be Nights, Percent or Import\"\"\"\n  penaltyType: CancelPenaltyType!\n\n  \"\"\"Currency used in the cancellation policy\"\"\"\n  currency: Currency!\n\n  \"\"\"Value of the cancellation policy\"\"\"\n  value: Float!\n}\n\n\"\"\"Information about a policy cancellation.\"\"\"\ntype CancelPolicy {\n  \"\"\"Indicates if the option is refundable or non-refundable\"\"\"\n  refundable: Boolean!\n\n  \"\"\"List of cancellation penalties\"\"\"\n  cancelPenalties: [CancelPenalty!]\n}\n\n\"\"\"Data related to a connected user and its groups\"\"\"\ntype ConnectUser {\n  \"\"\"Unique connected user of a supplier\"\"\"\n  code: String!\n\n  \"\"\"Indicates whether a connected user is active\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Connected user's related data based on its groups\"\"\"\n  connectUserGroups: [ConnectUserGroup!]\n}\n\n\"\"\"group related to a connect user\"\"\"\ntype ConnectUserGroup {\n  \"\"\"Group code of the group related to this connected user\"\"\"\n  groupCode: String!\n\n  \"\"\"Indicates if the connect user is active for its connected user\"\"\"\n  isActive: Boolean!\n}\n\n\"\"\"\nSearch criteria contains destination, travel dates and the number of pax in each room.\n\"\"\"\ntype CriteriaSearch {\n  \"\"\"\n  Check-in date for booking\n  Format: YYYY-MM-DD\n  \"\"\"\n  checkIn: Date!\n\n  \"\"\"\n  Check-out, booking date\n  Format: YYYY-MM-DD\n  \"\"\"\n  checkOut: Date!\n\n  \"\"\"Contains the list of hotels's ID\"\"\"\n  hotels: [String!]!\n\n  \"\"\"\n  For multi-room bookings, this array will contain multiple elements (rooms).\n  For each room you have to specify its own occupancy.\n  \"\"\"\n  occupancies: [RoomCriteria!]!\n\n  \"\"\"Language to be used in request\"\"\"\n  language: Language\n\n  \"\"\"Currency requested if supported by supplier\"\"\"\n  currency: Currency\n\n  \"\"\"Nationality of the guest (use ISO3166_1_alfa_2)\"\"\"\n  nationality: Country\n\n  \"\"\"Targeted zone, country or point-ofsale-to be used in request.\"\"\"\n  market: String!\n}\n\ntype DefaultSettings {\n  \"\"\"\n  This field is occurs only if the authorization header is of the type JWT.. It is used for to change the user that\n  has been set by default in the preload.\n  \"\"\"\n  connectUser: String\n\n  \"\"\"Indicates the context of the I/O codes (hotel, board, room and rates)\"\"\"\n  context: String\n\n  \"\"\"Language to be used in request\"\"\"\n  language: Language!\n\n  \"\"\"Currency requested if supported by supplier\"\"\"\n  currency: Currency!\n\n  \"\"\"Nationality of the guest (use ISO3166_1_alfa_2)\"\"\"\n  nationality: Country!\n\n  \"\"\"Targeted zone, country or point-ofsale-to be used in request.\"\"\"\n  market: String\n\n  \"\"\"Group of timeouts to be used in the differents services\"\"\"\n  timeouts: Timeout!\n\n  \"\"\"Business rules\"\"\"\n  businessRules: BusinessRules!\n}\n\n\"\"\"\nProvides information about the currency of original, and its rate applied over the results returned by the Supplier.\n\"\"\"\ntype Exchange {\n  \"\"\"Provide information about the currency of origin\"\"\"\n  currency: Currency!\n\n  \"\"\"Provides information about the rate applied over results\"\"\"\n  rate: Float!\n}\n\n\"\"\"Feature of a room.\"\"\"\ntype Feature {\n  \"\"\"Feature code.\"\"\"\n  code: String!\n}\n\n\"\"\"\nPairs of Groups and Accesses. All Accesses returned will belong to all the Groups in groupCodes.\n\"\"\"\ntype GroupAccess {\n  \"\"\"Group identifiers\"\"\"\n  groupCodes: [String!]!\n  accesses: [Access!]\n}\n\ntype HotelBookPayload implements Response {\n  \"\"\"Application stats in string format\"\"\"\n  stats(token: String!): StatsRequest\n\n  \"\"\"Data sent and received in the supplier's native format.\"\"\"\n  auditData: AuditData\n\n  \"\"\"Information about booking\"\"\"\n  booking: HotelBookingDetail\n\n  \"\"\"Errors that abort services\"\"\"\n  errors: [Error!]\n\n  \"\"\"\n  Potentially harmful situations or errors, but ones that will not forcibly abort the service\n  \"\"\"\n  warnings: [Warning!]\n}\n\ntype HotelBooking implements Response {\n  \"\"\"Application stats in string format\"\"\"\n  stats(token: String!): StatsRequest\n\n  \"\"\"Data sent and received in the supplier's native format.\"\"\"\n  auditData: AuditData\n\n  \"\"\"Details about booking\"\"\"\n  bookings: [HotelBookingDetail!]\n\n  \"\"\"Errors that abort services\"\"\"\n  errors: [Error!]\n\n  \"\"\"\n  Potentially harmful situations or errors, but ones that will not forcibly abort the service\n  \"\"\"\n  warnings: [Warning!]\n}\n\n\"\"\"Contains information about booking\"\"\"\ntype HotelBookingDetail {\n  \"\"\"Booking ID in the Supplier's system\"\"\"\n  reference: Reference!\n\n  \"\"\"Holder's name and surname\"\"\"\n  holder: Holder\n\n  \"\"\"Information about the hotel.\"\"\"\n  hotel: BookingHotel\n\n  \"\"\"Specifies the prices (Gross, Net and Amount) of the option returned.\"\"\"\n  price: Price\n\n  \"\"\"\n  Specifies the price of the previous OptionQuote. Returned only if the shown Book price differs from the price shown at the Quote Option. If the price does not change, this field will be returned Null.\n  \"\"\"\n  quotePrice: PriceChange\n\n  \"\"\"Specifies cancel policies of the book returned.\"\"\"\n  cancelPolicy: CancelPolicy\n\n  \"\"\"Additional information about the book.\"\"\"\n  remarks: String\n\n  \"\"\"Booking Status.\"\"\"\n  status: BookStatusType!\n\n  \"\"\"\n  Supplier\u2019s billing code. Will be returned if the supplier has different billing accounts and this is informed in the reservation.\n  \"\"\"\n  billingSupplierCode: String\n\n  \"\"\"Payable.\"\"\"\n  payable: String\n\n  \"\"\"Additional information about the option\"\"\"\n  addOns: AddOns\n\n  \"\"\"\n  Specifies the information of the payment card, and the source of it, that has been generated at Book step\n  \"\"\"\n  paymentCard: PaymentCard\n}\n\n\"\"\"Contains information about cancel\"\"\"\ntype HotelCancelDetail {\n  \"\"\"Booking ID in the Supplier's system\"\"\"\n  reference: Reference\n\n  \"\"\"Cancellation ID in the Supplier's system\"\"\"\n  cancelReference: String\n\n  \"\"\"Booking Status.\"\"\"\n  status: BookStatusType\n\n  \"\"\"Specifies the prices (Gross, Net and Amount) of the cancellation.\"\"\"\n  price: Price\n\n  \"\"\"Information about the booking.\"\"\"\n  booking: HotelBookingDetail\n}\n\ntype HotelCancelPayload implements Response {\n  \"\"\"Application stats in string format\"\"\"\n  stats(token: String!): StatsRequest\n\n  \"\"\"Data sent and received in the supplier's native format.\"\"\"\n  auditData: AuditData\n\n  \"\"\"Information about cancel\"\"\"\n  cancellation: HotelCancelDetail\n\n  \"\"\"Errors that abort services\"\"\"\n  errors: [Error!]\n\n  \"\"\"\n  Potentially harmful situations or errors, but ones that will not forcibly abort the service\n  \"\"\"\n  warnings: [Warning!]\n}\n\ntype HotelCommitDetails {\n  \"\"\"Booking identificators in client and provider systems\"\"\"\n  reference: Reference!\n\n  \"\"\"Booking Status.\"\"\"\n  status: BookStatusType!\n}\n\n\"\"\"contains information about commitment\"\"\"\ntype HotelCommitPayload implements Response {\n  \"\"\"Application stats in string format\"\"\"\n  stats(token: String!): StatsRequest\n\n  \"\"\"Data sent and received in the supplier's native format.\"\"\"\n  auditData: AuditData\n\n  \"\"\"Information about commit\"\"\"\n  commitDetails: HotelCommitDetails\n\n  \"\"\"Errors that abort services\"\"\"\n  errors: [Error!]\n\n  \"\"\"\n  Potentially harmful situations or errors, but ones that will not forcibly abort the service\n  \"\"\"\n  warnings: [Warning!]\n}\n\n\"\"\"Contains information about quote(s)\"\"\"\ntype HotelOptionQuote {\n  \"\"\"Indicates the valuation key\"\"\"\n  optionRefId: String!\n\n  \"\"\"\n  The possible values in status in response are Available (OK) or On Request (RQ).\n  \"\"\"\n  status: StatusType!\n\n  \"\"\"Specifies the prices (Gross, Net and Amount) of the option returned.\"\"\"\n  price: Price!\n\n  \"\"\"Specifies the price of the previous search option\"\"\"\n  searchPrice: PriceChange\n\n  \"\"\"Specifies cancel policies of the option returned.\"\"\"\n  cancelPolicy: CancelPolicy!\n\n  \"\"\"Additional information about the option.\"\"\"\n  remarks: String\n\n  \"\"\"List of surcharges of the option returned.\"\"\"\n  surcharges: [Surcharge!]\n\n  \"\"\"List of credit cards allowed for this option\"\"\"\n  cardTypes: [PaymentCardType!]\n\n  \"\"\"Additional information about the option\"\"\"\n  addOns: AddOns\n\n  \"\"\"List of rooms of the option quoted.\"\"\"\n  rooms: [RoomOptionQuote!]\n}\n\n\"\"\"\nAn option includes hotel information, meal plan, total price, conditions and room description\n\"\"\"\ntype HotelOptionSearch implements BookableOptionSearch {\n  \"\"\"Supplier that offers this option.\"\"\"\n  supplierCode: String!\n\n  \"\"\"Access code of this option.\"\"\"\n  accessCode: String!\n\n  \"\"\"Market of this option.\"\"\"\n  market: String @deprecated(reason: \"deprecated from 2019-12-11.\")\n\n  \"\"\"Markets of this option\"\"\"\n  markets: [String!]!\n\n  \"\"\"Code of the hotel in the context selected.\"\"\"\n  hotelCode: String!\n\n  \"\"\"Supplier's hotel code.\"\"\"\n  hotelCodeSupplier: String!\n\n  \"\"\"Name of the hotel.\"\"\"\n  hotelName: String\n\n  \"\"\"Code of the board in the context selected.\"\"\"\n  boardCode: String!\n\n  \"\"\"Supplier's board code.\"\"\"\n  boardCodeSupplier: String!\n\n  \"\"\"\n  Indicates the payment type of the option returned. Possible options: Merchant, Direct, Card Booking, Card check in and Mixed.\n  \"\"\"\n  paymentType: PaymentType!\n\n  \"\"\"\n  The possible values in status in response are Available (OK) or On Request (RQ).\n  \"\"\"\n  status: StatusType!\n\n  \"\"\"List of occupancies for the request\"\"\"\n  occupancies: [Occupancy!]!\n\n  \"\"\"List of rooms of the option returned.\"\"\"\n  rooms: [Room!]!\n\n  \"\"\"Specifies the prices (Gross, Net and Amount) of the option returned.\"\"\"\n  price: Price!\n\n  \"\"\"List of supplements of the option returned.\"\"\"\n  supplements: [Supplement!]\n\n  \"\"\"List of surcharges of the option returned.\"\"\"\n  surcharges: [Surcharge!]\n\n  \"\"\"\n  Specifies rate rules of the option returned. Note: If the option does not have any rate rule, then the option is NORMAL rate.\n  \"\"\"\n  rateRules: [RateRulesType!]\n\n  \"\"\"Specifies cancel policies of the option returned.\"\"\"\n  cancelPolicy: CancelPolicy\n\n  \"\"\"Additional information about the option.\"\"\"\n  remarks: String\n\n  \"\"\"Additional information about the option\"\"\"\n  addOns: AddOns\n\n  \"\"\"Token for Deep Link\"\"\"\n  token: String! @deprecated(reason: \"deprecated from 2019-02-05.\")\n\n  \"\"\"Indicates the quote key\"\"\"\n  id: String!\n\n  \"\"\"Option level amenities\"\"\"\n  amenities: [Amenity!]\n}\n\ntype HotelQuote implements Response {\n  \"\"\"Application stats in string format\"\"\"\n  stats(token: String!): StatsRequest\n\n  \"\"\"Data sent and received in the supplier's native format.\"\"\"\n  auditData: AuditData\n\n  \"\"\"Information about quote.\"\"\"\n  optionQuote: HotelOptionQuote\n\n  \"\"\"Errors that abort services\"\"\"\n  errors: [Error!]\n\n  \"\"\"\n  Potentially harmful situations or errors, but ones that will not forcibly abort the service\n  \"\"\"\n  warnings: [Warning!]\n}\n\ntype HotelRuntimeConfiguration implements Node {\n  \"\"\"Stored card ID\"\"\"\n  code: ID!\n\n  \"\"\"HotelRuntimeConfigurationData information\"\"\"\n  hotelRuntimeConfigurationData: HotelRuntimeConfigurationData\n\n  \"\"\"Create date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Update date\"\"\"\n  updatedAt: DateTime!\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype HotelRuntimeConfigurationData {\n  \"\"\"List of parameters object\"\"\"\n  hotelRuntimeParameters: [HotelRuntimeParameter!]!\n}\n\n\"\"\"template of all fields used by the supplier\"\"\"\ntype HotelRuntimeParameter {\n  tagRuntime: TagRuntimeType!\n  providerTagName: String!\n  show: Boolean!\n  pattern: String\n  description: String!\n  type: MetadataType!\n  key: String\n  defaultValue: String\n  exampleValue: String\n  possibleValues: [String]!\n  mandatory: Boolean!\n}\n\n\"\"\"\nResults from Avail Hotel; contains all the available options for a given date and itinerary\n\"\"\"\ntype HotelSearch implements Response {\n  \"\"\"Indicates the context of the response.\"\"\"\n  context: String\n\n  \"\"\"Application stats in string format\"\"\"\n  stats(token: String!): StatsRequest\n\n  \"\"\"Data sent and received in the supplier's native format.\"\"\"\n  auditData: AuditData\n\n  \"\"\"Request Criteria\"\"\"\n  requestCriteria: CriteriaSearch\n\n  \"\"\"List of options returned according to the request.\"\"\"\n  options: [HotelOptionSearch!]\n\n  \"\"\"Errors that abort services\"\"\"\n  errors: [Error!]\n\n  \"\"\"\n  Potentially harmful situations or errors that won't force the service to abort\n  \"\"\"\n  warnings: [Warning!]\n}\n\n\"\"\"\nMap codes.\n@deprecated(reason: \"deprecated from 2019-09-10. not operating or being used\")\n\"\"\"\ntype Map {\n  \"\"\"Context code.\"\"\"\n  code: String!\n\n  \"\"\"Equivalences of the supplier for the client code.\"\"\"\n  maps: [String!]\n}\n\n\"\"\"\nReturns the mapping for a group.\n@deprecated(reason: \"deprecated from 2019-09-10. not operating or being used\")\n\"\"\"\ntype Mapping {\n  \"\"\"\n  Returns the differents group contexts, you can filter by some contexts.\n  \"\"\"\n  contexts(codes: [String!]): [MappingContext!]\n\n  \"\"\"Errors that abort services\"\"\"\n  errors: [Error!]\n\n  \"\"\"\n  Potentially harmful situations or errors that won't force the service to abort\n  \"\"\"\n  warnings: [Warning!]\n}\n\n\"\"\"\nReturns the differents group contexts\n@deprecated(reason: \"deprecated from 2019-09-10. not operating or being used\")\n\"\"\"\ntype MappingContext {\n  \"\"\"Code of the context\"\"\"\n  code: String!\n\n  \"\"\"Mapping of hotels, you can filter by hotel code.\"\"\"\n  hotels(codes: [String!]): [MappingEntity!]\n\n  \"\"\"Mapping of rooms, you can filter by room code.\"\"\"\n  rooms(codes: [String!]): [MappingEntity!]\n\n  \"\"\"Mapping of boards, you can filter by board code.\"\"\"\n  boards(codes: [String!]): [MappingEntity!]\n}\n\n\"\"\"\nMapping about client codes with the equivalence per supplier.\n@deprecated(reason: \"deprecated from 2019-09-10. not operating or being used\")\n\"\"\"\ntype MappingEntity {\n  \"\"\"Client code\"\"\"\n  code: String!\n\n  \"\"\"You can filter by output context.\"\"\"\n  contexts(codes: [String!]): [Map!]\n}\n\n\"\"\"Informs markup applied over supplier price.\"\"\"\ntype Markup implements Priceable {\n  \"\"\"channel of markup application.\"\"\"\n  channel: String\n\n  \"\"\"\n  Currency code indicating which currency should be paid.\n  This information is mandatory.\n  \"\"\"\n  currency: Currency!\n\n  \"\"\"\n  It indicates if the price indicated in the gross must be respected.\n  That is, the customer can not sell the room / option at a price lower than that established by the supplier.\n  This information is mandatory.\n  \"\"\"\n  binding: Boolean!\n\n  \"\"\"\n  Indicates the net price that the customer must pay to the supplier plus the markup.\n  This information is mandatory.\n  \"\"\"\n  net: Float!\n\n  \"\"\"\n  Indicates the retail price that the supplier sells to the customer plus the markup.\n  \"\"\"\n  gross: Float\n\n  \"\"\"\n  Informs about the currency of origin, and the rate applied over result.\n  This information is mandatory.\n  \"\"\"\n  exchange: Exchange!\n\n  \"\"\"Breakdown of the applied rules for a markup\"\"\"\n  rules: [Rule!]!\n}\n\n\"\"\"Information about occupancy.\"\"\"\ntype Occupancy {\n  \"\"\"Unique ID room in this option.\"\"\"\n  id: Int!\n\n  \"\"\"List of pax of this occupancy.\"\"\"\n  paxes: [Pax!]!\n}\n\n\"\"\"\nSpecifies the age pax. The range of what is considered an adult, infant or baby is particular to each supplier.\n\"\"\"\ntype Pax {\n  \"\"\"Specifies the age pax.\"\"\"\n  age: Int!\n}\n\n\"\"\"\nPrice indicates the value of the room/option.\nSupplements and/or surcharges can be included into the price, and will be verified with nodes Supplements/Surcharges.\n\"\"\"\ntype Price implements Priceable {\n  \"\"\"\n  Currency code indicating which currency should be paid.\n  This information is mandatory.\n  \"\"\"\n  currency: Currency!\n\n  \"\"\"\n  It indicates if the price indicated in the gross must be respected.\n  That is, the customer can not sell the room / option at a price lower than that established by the supplier.\n  This information is mandatory.\n  \"\"\"\n  binding: Boolean!\n\n  \"\"\"\n  Indicates the net price that the customer must pay to the supplier.\n  This information is mandatory.\n  \"\"\"\n  net: Float!\n\n  \"\"\"Indicates the retail price that the supplier sells to the customer.\"\"\"\n  gross: Float!\n\n  \"\"\"\n  Provides information about the currency of original, and its rate applied over the results returned by the Supplier.\n  This information is mandatory.\n  \"\"\"\n  exchange: Exchange!\n\n  \"\"\"Informs markup applied over supplier price.\"\"\"\n  markups: [Markup!]\n}\n\n\"\"\"Information about daily price.\"\"\"\ntype PriceBreakdown {\n  \"\"\"Start date in which the price becomes effective.\"\"\"\n  effectiveDate: Date! @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"Expire date of price.\"\"\"\n  expireDate: Date! @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"\n  Start date in which the price becomes effective.\n  Format: YYYY-MM-DD\n  \"\"\"\n  start: Date!\n\n  \"\"\"\n  Expire date of price.\n  Format: YYYY-MM-DD\n  \"\"\"\n  end: Date!\n\n  \"\"\"Specifies the daily price.\"\"\"\n  price: Price!\n}\n\n\"\"\"Contains the price of the previous operation\"\"\"\ntype PriceChange {\n  \"\"\"the currency of previous option\"\"\"\n  currency: String!\n\n  \"\"\"the net value of previous option\"\"\"\n  net: Float!\n\n  \"\"\"the gross value of previous option\"\"\"\n  gross: Float!\n\n  \"\"\"Indicates if previous option price was binding or not\"\"\"\n  binding: Boolean!\n}\n\n\"\"\"Information about room promotions(offers).\"\"\"\ntype Promotion {\n  \"\"\"Specifies the promotion code.\"\"\"\n  code: String!\n\n  \"\"\"Specifies the promotion name.\"\"\"\n  name: String\n\n  \"\"\"Specifies the supplier's promotion code.\"\"\"\n  supplierCode: String!\n\n  \"\"\"Promotion effective date.\"\"\"\n  effectiveDate: Date @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"Promotion expire date.\"\"\"\n  expireDate: Date @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"\n  Promotion effective date.\n  Format: YYYY-MM-DD\n  \"\"\"\n  start: Date\n\n  \"\"\"\n  Promotion expire date.\n  Format: YYYY-MM-DD\n  \"\"\"\n  end: Date\n}\n\n\"\"\"Information about the rate of the option returned.\"\"\"\ntype RatePlan {\n  \"\"\"Specifies the rate code.\"\"\"\n  code: String!\n\n  \"\"\"Supplier's rate code.\"\"\"\n  supplierCode: String!\n\n  \"\"\"Specifies the rate name.\"\"\"\n  name: String\n\n  \"\"\"Start date in which the rate becomes effective.\"\"\"\n  effectiveDate: Date @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"Expire date of the rate.\"\"\"\n  expireDate: Date @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"\n  Start date in which the rate becomes effective.\n  Format: YYYY-MM-DD\n  \"\"\"\n  start: Date\n\n  \"\"\"\n  Expire date of the rate.\n  Format: YYYY-MM-DD\n  \"\"\"\n  end: Date\n}\n\n\"\"\"Contains reference codes.\"\"\"\ntype Reference {\n  \"\"\"Client reference booking\"\"\"\n  client: String\n\n  \"\"\"Supplier reference booking\"\"\"\n  supplier: String\n\n  \"\"\"\n  Specifies commit identificator that will be sent in commit operation in order to confirm a reservation if two steps reservation has been chosen. Only will be filled in Book and Commit.\n  \"\"\"\n  commit: String @deprecated(reason: \"deprecated from 2018-10-21. Please, use SupplierReference\")\n\n  \"\"\"Hotel reference booking\"\"\"\n  hotel: String\n\n  \"\"\"HotelX's booking reference\"\"\"\n  bookingID: String\n}\n\n\"\"\"Contains information about the Resort.\"\"\"\ntype Resort {\n  \"\"\"Specifies the resort code.\"\"\"\n  code: String!\n\n  \"\"\"Specifies the resort name.\"\"\"\n  name: String\n\n  \"\"\"Specifies the resort description.\"\"\"\n  description: String\n}\n\n\"\"\"Contains the room information of the option returned.\"\"\"\ntype Room {\n  \"\"\"ID reference to the occupancy\"\"\"\n  occupancyRefId: Int!\n\n  \"\"\"Identifies the Legacy Room Id\"\"\"\n  legacyRoomId: String!\n\n  \"\"\"Indicates the room code\"\"\"\n  code: String!\n\n  \"\"\"Supplier's room code.\"\"\"\n  supplierCode: String!\n\n  \"\"\"Description about the room\"\"\"\n  description: String\n\n  \"\"\"Identifies if the room is refundable or not.\"\"\"\n  refundable: Boolean\n\n  \"\"\"Number of rooms available with the same type.\"\"\"\n  units: Int\n\n  \"\"\"Specifies the room price.\"\"\"\n  roomPrice: RoomPrice!\n\n  \"\"\"List of beds.\"\"\"\n  beds: [Bed!]\n\n  \"\"\"Daily break downs rate plan.\"\"\"\n  ratePlans: [RatePlan!]\n\n  \"\"\"Daily break downs promotions.\"\"\"\n  promotions: [Promotion!]\n\n  \"\"\"List of surcharges of the option returned.\"\"\"\n  surcharges: [Surcharge!]\n\n  \"\"\"List of features of this room \"\"\"\n  features: [Feature!]\n  amenities: [Amenity!]\n}\n\n\"\"\"Occupancy for a room. It contains a list of pax ages.\"\"\"\ntype RoomCriteria {\n  \"\"\"\n  Array of pax ages. The number of items in the array will indicate the pax occupancy.\n  \"\"\"\n  paxes: [Pax!]!\n}\n\ntype RoomOptionQuote {\n  \"\"\"ID reference to the occupancy\"\"\"\n  occupancyRefId: ID!\n\n  \"\"\"Identifies the Legacy Room Id\"\"\"\n  legacyRoomId: ID!\n\n  \"\"\"Indicates the room code\"\"\"\n  code: String!\n\n  \"\"\"Supplier's room code.\"\"\"\n  supplierCode: String!\n\n  \"\"\"Description about the room\"\"\"\n  description: String\n\n  \"\"\"Room features\"\"\"\n  features: [Feature!]\n}\n\n\"\"\"Specifies the room price.\"\"\"\ntype RoomPrice {\n  \"\"\"Total price for all days.\"\"\"\n  price: Price!\n\n  \"\"\"Daily break downs price.\"\"\"\n  breakdown: [PriceBreakdown!]\n}\n\ntype Rule {\n  \"\"\"rule identifier\"\"\"\n  id: String!\n\n  \"\"\"rule name\"\"\"\n  name: String\n\n  \"\"\"type of the value\"\"\"\n  type: MarkupRuleType!\n\n  \"\"\"value applied by this rule\"\"\"\n  value: Float!\n}\n\n\"\"\"Indicates the status of the service\"\"\"\ntype ServiceStatus {\n  \"\"\"Status code\"\"\"\n  code: String\n\n  \"\"\"Status type\"\"\"\n  type: String\n\n  \"\"\"Status description\"\"\"\n  description: String\n}\n\ntype Stat {\n  \"\"\"Start UTC\"\"\"\n  start: DateTime!\n\n  \"\"\"End UTC\"\"\"\n  end: DateTime!\n\n  \"\"\"Difference between start and end in miliseconds\"\"\"\n  duration: Float\n}\n\ntype StatAccess {\n  \"\"\"Access name\"\"\"\n  name: String!\n\n  \"\"\"Total access time\"\"\"\n  total: Stat!\n\n  \"\"\"Static configuration time\"\"\"\n  staticConfiguration: Stat\n\n  \"\"\"Number of hotels\"\"\"\n  hotels: Int!\n\n  \"\"\"Number of zones\"\"\"\n  zones: Int!\n\n  \"\"\"Number of cities\"\"\"\n  cities: Int!\n\n  \"\"\"Access request time\"\"\"\n  requestAccess: StatPlugin\n\n  \"\"\"Access response time\"\"\"\n  responseAccess: StatPlugin\n\n  \"\"\"Detail transaction time\"\"\"\n  transactions: [StatTransaction!]!\n\n  \"\"\"Plugin execution time\"\"\"\n  plugins: [StatPlugin!]\n}\n\ntype StatPlugin {\n  \"\"\"Plugin name\"\"\"\n  name: String!\n\n  \"\"\"total plugin time\"\"\"\n  total: Stat!\n}\n\ntype StatTransaction {\n  \"\"\"Extra information about transaction.\"\"\"\n  reference: String!\n\n  \"\"\"Total transaction time\"\"\"\n  total: Stat!\n\n  \"\"\"Build request time\"\"\"\n  buildRequest: Stat!\n\n  \"\"\"Worker connection time\"\"\"\n  workerCommunication: Stat!\n\n  \"\"\"Parse response time\"\"\"\n  parseResponse: Stat!\n}\n\n\"\"\"Contains internal information.\"\"\"\ntype StatsRequest {\n  \"\"\"Total transaction time\"\"\"\n  total: Stat!\n\n  \"\"\"Request validation time\"\"\"\n  validation: Stat!\n\n  \"\"\"Process time. Contains communication time, parse time and plugin time.\"\"\"\n  process: Stat!\n\n  \"\"\"Build access time\"\"\"\n  configuration: Stat!\n\n  \"\"\"Request time\"\"\"\n  request: Stat!\n\n  \"\"\"Response time\"\"\"\n  response: Stat!\n\n  \"\"\"Plugin execution time\"\"\"\n  requestPlugin: StatPlugin\n\n  \"\"\"Plugin execution time\"\"\"\n  responsePlugin: StatPlugin\n\n  \"\"\"Number of hotels\"\"\"\n  hotels: Int!\n\n  \"\"\"Number of zones\"\"\"\n  zones: Int!\n\n  \"\"\"Number of cities\"\"\"\n  cities: Int!\n\n  \"\"\"Docker Id\"\"\"\n  dockerID: String!\n\n  \"\"\"Detail access time\"\"\"\n  Accesses: [StatAccess!]!\n}\n\n\"\"\"\nSupplement that it can be or its already added to the option returned. Contains all the information about the supplement.\n\"\"\"\ntype Supplement {\n  \"\"\"Specifies the supplement code.\"\"\"\n  code: String!\n\n  \"\"\"Specifies the supplement name.\"\"\"\n  name: String\n\n  \"\"\"Specifies the supplement description.\"\"\"\n  description: String\n\n  \"\"\"\n  Indicates the supplement type. Possible types: Fee, Ski_pass, Lessons, Meals, Equipment, Ticket, Transfers, Gla, Activity or Null.\n  \"\"\"\n  supplementType: SupplementType!\n\n  \"\"\"\n  Indicates the charge types. We need to know whether the supplements have to be paid when the consumer gets to the hotel or beforehand.\n  Possible charge types: Include or Exclude.\n  when include: this supplement is mandatory and included in the option's price\n  when exclude: this supplement is not included in the option's price\n  \"\"\"\n  chargeType: ChargeType!\n\n  \"\"\"\n  Indicates if the supplement is mandatory or not. If mandatory, this supplement will be applied to this option\n  if the chargeType is excluded the customer will have to pay it directly at the hotel\n  \"\"\"\n  mandatory: Boolean!\n\n  \"\"\"\n  Specifies the duration type. Possible duration types: Range (specified dates) or Open. This field is mandatory for PDI.\n  \"\"\"\n  durationType: DurationType\n\n  \"\"\"Indicates the quantity of field in the element \"unit\".\"\"\"\n  quantity: Int\n\n  \"\"\"Indicates the unit type. Possible unit types: Day or Hour.\"\"\"\n  unit: UnitTimeType\n\n  \"\"\"Indicates the effective date of the supplement.\"\"\"\n  effectiveDate: Date @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"Indicates the expire date of the supplement.\"\"\"\n  expireDate: Date @deprecated(reason: \"deprecated from 2018-02-28. Incorrect date format.\")\n\n  \"\"\"\n  Indicates the effective date of the supplement.\n  Format: YYYY-MM-DD\n  \"\"\"\n  start: Date\n\n  \"\"\"\n  Indicates the expire date of the supplement.\n  Format: YYYY-MM-DD\n  \"\"\"\n  end: Date\n\n  \"\"\"Contains information about the resort\"\"\"\n  resort: Resort\n\n  \"\"\"Indicates the supplement price.\"\"\"\n  price: Price\n}\n\n\"\"\"\nSurcharge that it can be or it is already added to the option returned. Contains all the information about the surcharge.\n\"\"\"\ntype Surcharge {\n  \"\"\"Indicates the surcharge code\"\"\"\n  code: String\n\n  \"\"\"\n  Indicates the charge types. We need to know whether the supplements have to be paid when the consumer gets to the hotel or beforehand.\n  Possible charge types: Include or Exclude.\n  when include: this surcharge is mandatory and included in the option's price\n  when exclude: this surcharge is not included in the option's price\n  \"\"\"\n  chargeType: ChargeType!\n\n  \"\"\"\n  Indicates if the surcharge is mandatory or not. If mandatory, this surcharge will be applied to this option\n  if the chargeType is excluded the customer will have to pay it directly at the hotel\n  \"\"\"\n  mandatory: Boolean!\n\n  \"\"\"Indicates the surcharge price.\"\"\"\n  price: Price!\n\n  \"\"\"Specifies the surcharge description.\"\"\"\n  description: String\n}\n\ntype Timeout {\n  \"\"\"Milliseconds before the search connection is closed.\"\"\"\n  search: Int!\n\n  \"\"\"Milliseconds before the quote connection is closed.\"\"\"\n  quote: Int!\n\n  \"\"\"Milliseconds before the book connection is closed.\"\"\"\n  book: Int!\n}\n\n\"\"\"The information required to access the supplier's system.\"\"\"\ninput AccessConfigurationInput {\n  \"\"\"Indicates if Access is active\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Arbitrary not unique identifier\"\"\"\n  code: String!\n\n  \"\"\"Supplier to which this access belongs\"\"\"\n  supplier: String!\n\n  \"\"\"Information required to access the supplier's system.\"\"\"\n  configuration: ConfigurationInput\n}\n\n\"\"\"Connect user input for data access management API\"\"\"\ninput AccessConnectUserInput {\n  \"\"\"connect user code\"\"\"\n  code: String!\n\n  \"\"\"Indicates if the connect user is active.\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups related to this connect user\"\"\"\n  groups: [ConnectUserGroupInput!]\n}\n\n\"\"\"\nInclude *OR* exclude accesses in this specific search query. If not specified, default accesses will be used.\nOnly one list (includes or excludes) *MUST* be used.\n\"\"\"\ninput AccessFilterInput {\n  \"\"\"\n  These Access IDs will overwrite the default configuration. Only the IDs on this list will be used in the search query.\n  \"\"\"\n  includes: [ID!]\n\n  \"\"\"\n  These Access IDs will overwrite the default configuration. The IDs on this list will be excluded from the search query.\n  \"\"\"\n  excludes: [ID!]\n}\n\n\"\"\"Supplier input for data access management API\"\"\"\ninput AccessSupplierInput {\n  \"\"\"supplier code\"\"\"\n  code: String!\n\n  \"\"\"supplier instance\"\"\"\n  dll: String!\n\n  \"\"\"Indicates if the supplier is active.\"\"\"\n  isActive: Boolean!\n\n  \"\"\"groups related to this supplier\"\"\"\n  groups: [SupplierGroupInput!]\n}\n\n\"\"\"\nInput BookPax contains basic information abaout pax suach as name, surname and age.\n\"\"\"\ninput BookPaxInput {\n  \"\"\"The guest's first  name\"\"\"\n  name: String!\n\n  \"\"\"The guest's last name\"\"\"\n  surname: String!\n\n  \"\"\"The guest's age\"\"\"\n  age: Int!\n\n  \"\"\"Pax title.\"\"\"\n  title: PersonalTitleType\n}\n\n\"\"\"\nReference object that contains the client reference and/or supplier reference.\n\"\"\"\ninput BookReferenceInput {\n  \"\"\"The client's reference\"\"\"\n  client: String\n\n  \"\"\"The Supplier's reference\"\"\"\n  supplier: String\n}\n\n\"\"\"Input BookRoom contains list of pax and the room's reference.\"\"\"\ninput BookRoomInput {\n  \"\"\"The room's reference in the booking\"\"\"\n  occupancyRefId: Int!\n\n  \"\"\"The list or lists of paxes of the room\"\"\"\n  paxes: [BookPaxInput!]!\n}\n\n\"\"\"List of business rules to use as filter on the options.\"\"\"\ninput BusinessRulesInput {\n  \"\"\"\n  Options quota per search. Maximum numbers of options to be returned by the search query.\n  @deprecated(reason: \"deprecated from 2019-12-04. This option will be only configurable by settings.\")\n  \"\"\"\n  optionsQuota: Int\n\n  \"\"\"Different business rules to filter the returned options.\"\"\"\n  businessRulesType: BusinessRulesType\n}\n\n\"\"\"\nThe information and credentials required to access the supplier\u2019s system.\n\"\"\"\ninput ConfigurationInput {\n  \"\"\"User name for the connection.\"\"\"\n  username: String\n\n  \"\"\"Password for the connection\"\"\"\n  password: String\n\n  \"\"\"URL or endpoint for the connection.\"\"\"\n  urls: UrlsInput!\n\n  \"\"\"List of parameters with additional required information.\"\"\"\n  parameters: [ParameterInput!]\n\n  \"\"\"Source Markets allowed for the Access\"\"\"\n  markets: [String!]\n\n  \"\"\"RateRules allowed for the access.\"\"\"\n  rateRules: [RateRulesType!]\n}\n\n\"\"\"group related to a connect user\"\"\"\ninput ConnectUserGroupInput {\n  \"\"\"Group code of the group related to this connected user\"\"\"\n  groupCode: String!\n\n  \"\"\"Indicates if the connect user is active for its connected user\"\"\"\n  isActive: Boolean!\n}\n\n\"\"\"Criteria by dates\"\"\"\ninput CriteriaBookingDatesInput {\n  \"\"\"Type of date. Can be Arrival or Booking date.\"\"\"\n  dateType: DateType!\n\n  \"\"\"\n  Start date.\n  Format: YYYY-MM-DD.\n  \"\"\"\n  start: Date!\n\n  \"\"\"\n  End date.\n  Format: YYYY-MM-DD.\n  \"\"\"\n  end: Date!\n}\n\n\"\"\"Criteria by references\"\"\"\ninput CriteriaBookingReferencesInput {\n  \"\"\"The hotel code.\"\"\"\n  hotelCode: String!\n\n  \"\"\"\n  The requested currency. The API will convert to this currency if supplier returns a different one.\n  \"\"\"\n  currency: Currency!\n\n  \"\"\"Contains the client reference and/or supplier reference.\"\"\"\n  references: [BookReferenceInput!]!\n}\n\n\"\"\"\nInput delta price, indicates the price variation permitted by the client before failing the booking.\n\"\"\"\ninput DefaultSettingsBusinessRulesInput {\n  \"\"\"\n  Options quota per availability; numbers of options based on availability\n  \"\"\"\n  optionsQuota: Int!\n\n  \"\"\"\n  Different business rules for filtering options that you are interested in\n  \"\"\"\n  businessRulesType: BusinessRulesType!\n}\n\ninput DefaultSettingsInput {\n  \"\"\"Unique Id\"\"\"\n  groupCode: String!\n\n  \"\"\"\n  This field is occurs only if the authorization header is of the type JWT.. It is used for to change the user that\n  has been set by default in the preload.\n  \"\"\"\n  connectUser: String!\n\n  \"\"\"Indicates the context of the I/O codes (hotel, board, room and rates)\"\"\"\n  context: String\n\n  \"\"\"Language to be used in request\"\"\"\n  language: Language!\n\n  \"\"\"Currency requested if supported by supplier\"\"\"\n  currency: Currency!\n\n  \"\"\"Nationality of the guest (use ISO3166_1_alfa_2)\"\"\"\n  nationality: Country!\n\n  \"\"\"Targeted zone, country or point-ofsale-to be used in request.\"\"\"\n  market: String!\n\n  \"\"\"Group of timeouts to be used in the differents services\"\"\"\n  timeout: TimeoutInput!\n\n  \"\"\"Business rules\"\"\"\n  businessRules: DefaultSettingsBusinessRulesInput!\n\n  \"\"\"Indicates if the book will be confirmed in 1 or 2 steps\"\"\"\n  commitRequired: Boolean\n}\n\n\"\"\"\nInput delta price, indicates price variation permitted by the client\nAn error will be returned if the new price does not abide to DeltaPrice. If DeltaPrice is not sent and the integration implements it, we assume that the price range is 0 and the process will continue \n(price is lower or equal to the price showed in valuation).\nThis field is implemented if it\u2019s native to the supplier or if another availability/valuation request needs to be done in Reservation. In case the supplier blocks the option in valuation, reservation \nwill be done automatically in reservation method.\n\"\"\"\ninput DeltaPriceInput {\n  \"\"\"\n  The amount in the currency returned by the option that will be accepted by the client to be higher than the valuation price.\n  \"\"\"\n  amount: Float\n\n  \"\"\"\n  The percentage accepted by the client to be higher than the valuation price.\n  \"\"\"\n  percent: Float\n\n  \"\"\"\n  Depending on the value of applyBoth:\n  applyBoth = false: Indicates that one of the conditions (amount or percentage) has to meet the criteria before reservation.\n  applyBoth = true: Indicates that the new price cannot exceed the amount or percentage indicated by the client.\n  \"\"\"\n  applyBoth: Boolean!\n}\n\n\"\"\"\n Filter that selects the filter criteria which will be used in this availability. Currently you can only choose the accesses.\n You must choose one of them, include or exclude, or the other alternative isn't specified anything.\n If input both, you will receive a validation error that indicates this error.\n@deprecated(reason: \"deprecated from 2018-08-20. Please, use filterSearch\")\n\"\"\"\ninput FilterInput {\n  \"\"\"\n  You can specify one of the filters or any of them. In this latter case, all the configurated accesses will be executed.\n  \"\"\"\n  access: AccessFilterInput\n\n  \"\"\"\n  If requested, only options with the specified rateRules will be returned\n  \"\"\"\n  rateRules: RateRulesFilterInput\n}\n\ninput GroupAccessInput {\n  \"\"\"groups identifiers in which the access will be associated\"\"\"\n  groupCodes: [String!]\n\n  \"\"\"access related data\"\"\"\n  accesses: [AccessConfigurationInput!]!\n}\n\n\"\"\"Criteria of book.\"\"\"\ninput HotelBookInput {\n  \"\"\"Option ID\"\"\"\n  optionRefId: String!\n\n  \"\"\"Language to be used in request\"\"\"\n  language: Language\n\n  \"\"\"Booking ID in client's system.\"\"\"\n  clientReference: String!\n\n  \"\"\"Indicates price variation permitted by the client.\"\"\"\n  deltaPrice: DeltaPriceInput\n\n  \"\"\"\n  If the payment is done by credit card, it's mandatory to specify the payment type and the credit card information.\n  \"\"\"\n  paymentCard: PaymentCardInput\n\n  \"\"\"Any customer comments for the supplier to consider.\"\"\"\n  remarks: String\n\n  \"\"\"Holder's basic information.\"\"\"\n  holder: HolderInput!\n\n  \"\"\"Rooms within this option.\"\"\"\n  rooms: [BookRoomInput!]!\n}\n\n\"\"\"Cancellation Criteria.\"\"\"\ninput HotelCancelInput {\n  \"\"\"\n  The name of the access to use in the request.\n  @deprecated(reason: \"deprecated from 2020-02-20. Use bookingID instead).\n  \"\"\"\n  accessCode: String\n\n  \"\"\"\n  The language code.\n  @deprecated(reason: \"deprecated from 2020-02-20. Use bookingID instead).\n  \"\"\"\n  language: Language\n\n  \"\"\"\n  The hotel code.\n  @deprecated(reason: \"deprecated from 2020-02-20. Use bookingID instead).\n  \"\"\"\n  hotelCode: String\n\n  \"\"\"\n  Contains the client reference and/or supplier reference.\n  @deprecated(reason: \"deprecated from 2020-02-20. Use bookingID instead).\n  \"\"\"\n  reference: BookReferenceInput\n\n  \"\"\"HotelX's booking reference\"\"\"\n  bookingID: String\n}\n\ninput HotelCommitInput {\n  \"\"\"The name of the access to use in the request.\"\"\"\n  accessCode: String!\n\n  \"\"\"The language code.\"\"\"\n  language: Language\n\n  \"\"\"\n  Contains the commit reference that has been returned in Book response.\n  @deprecated(reason: \"deprecated from 2018-10-21. Please, use reference\")\n  \"\"\"\n  commitReference: String\n\n  \"\"\"\n  Contains the supplier reference that has been returned in Book response.\n  \"\"\"\n  reference: HotelXCommitReferenceInput\n}\n\n\"\"\"\nCriteria of book contains basic information to find a book or books.\nIf you are using our Hotelx locator (bookingID) you don't need to indicate any of the other fields\n\"\"\"\ninput HotelCriteriaBookingInput {\n  \"\"\"\n  Name of the access that have to use in the request. Necessary if your search if by references or by dates.\n  @deprecated(reason: \"deprecated from 2020-02-20. Use bookingID instead).\n  \"\"\"\n  accessCode: String\n\n  \"\"\"\n  The language code.\n  @deprecated(reason: \"deprecated from 2020-02-20. Use bookingID instead).\n  \"\"\"\n  language: Language\n\n  \"\"\"\n  The search type criteria. Necessary if your search if by references or by dates.\n  @deprecated(reason: \"deprecated from 2020-02-20. Use bookingID instead).\n  \"\"\"\n  typeSearch: BookingCriteriaType\n\n  \"\"\"\n  The references criteria.\n  @deprecated(reason: \"deprecated from 2020-02-20. Use bookingID instead).\n  \"\"\"\n  references: CriteriaBookingReferencesInput\n\n  \"\"\"\n  The dates criteria.\n  @deprecated(reason: \"deprecated from 2020-02-20. Use bookingID instead).\n  \"\"\"\n  dates: CriteriaBookingDatesInput\n\n  \"\"\"HotelX's booking reference\"\"\"\n  bookingID: String\n}\n\n\"\"\"\nThe quote criteria contains the option reference id, block and language.\n\"\"\"\ninput HotelCriteriaQuoteInput {\n  \"\"\"Identifier of the option chosen in the search.\"\"\"\n  optionRefId: String!\n\n  \"\"\"Language to be used in request\"\"\"\n  language: Language\n}\n\n\"\"\"\nSearch criteria contains destination, travel dates and the number of pax in each room.\nYou must preload the other fields in our system by complete the fields absents.\n\"\"\"\ninput HotelCriteriaSearchInput {\n  \"\"\"\n  Check-in date for booking\n  Format: YYYY-MM-DD\n  \"\"\"\n  checkIn: Date!\n\n  \"\"\"\n  Check-out, booking date\n  Format: YYYY-MM-DD\n  \"\"\"\n  checkOut: Date!\n\n  \"\"\"Hotel Codes.\"\"\"\n  hotels: [String!]\n\n  \"\"\"Destination codes.\"\"\"\n  destinations: [String!]\n\n  \"\"\"\n  For multi-room bookings, this array will contain multiple elements (rooms).\n  For each room you have to specify its own occupancy.\n  \"\"\"\n  occupancies: [RoomInput!]!\n\n  \"\"\"Language to be used in request\"\"\"\n  language: Language\n\n  \"\"\"Currency requested if supported by supplier\"\"\"\n  currency: Currency\n\n  \"\"\"Nationality of the guest (use ISO3166_1_alfa_2)\"\"\"\n  nationality: Country\n\n  \"\"\"\n  Targeted zone, country or point-ofsale-to be used in request.\n  @deprecated(reason: \"deprecated from 2019-12-11.\")\n  \"\"\"\n  market: String\n\n  \"\"\"Targeted zones, countries or point-ofsale-to be used in request.\"\"\"\n  markets: [String!]\n}\n\n\"\"\"\nSettings that you can edit for this avail. Values are loaded by default in our Back Office.\n\"\"\"\ninput HotelSettingsInput {\n  \"\"\"Indicates the context of the I/O codes (hotel, board, room and rates)\"\"\"\n  context: String\n\n  \"\"\"\n  Indicates if you want use context, or not, by default is true.\n  @deprecated(reason: \"deprecated from 2017-12-12. Redundant.\")\n  \"\"\"\n  useContext: Boolean\n\n  \"\"\"\n   This field is occurs only if the authorization header is of the type JWT.. It is used to change the user that has been set by default in the preload.\n  @deprecated(reason: \"deprecated from 2018-03-19. Redundant.\")\n  \"\"\"\n  connectUser: String\n\n  \"\"\"\n  Client name, this field is occurs only if the authorization header is of the type JWT.. It is used to change the user that has been set by default in the preload.\n  \"\"\"\n  client: ID\n\n  \"\"\"Group whose resources want to be used\"\"\"\n  group: ID\n\n  \"\"\"\n  Timeout in milliseconds that will be applied to the connection with supplier/s. If more than one supplier is requested, timeout will be applied to all suppliers and cut the connection with those suppliers that exceed this timeout. Travelgate will not close the connection with the client if this timeout is exceeded.\n  \"\"\"\n  timeout: Int\n\n  \"\"\"Returns all the transactions exchanged with the supplier.\"\"\"\n  auditTransactions: Boolean\n\n  \"\"\"Business rules\"\"\"\n  businessRules: BusinessRulesInput\n\n  \"\"\"\n  Array of suppliers. Each one contains its own code, settings and accesses.\n  \"\"\"\n  suppliers: [HotelXSupplierInput!]\n\n  \"\"\"Array of plugins to execute.\"\"\"\n  plugins: [PluginStepInput!]\n\n  \"\"\"\n  This flag allows only the accesses checked as test. By default is production.\n  \"\"\"\n  testMode: Boolean\n\n  \"\"\"\n  Used to identify the origin of the request, this is only used in plugins. \n  \"\"\"\n  clientTokens: [String!]\n\n  \"\"\"\n  Indicates if the book will be confirmed in 1 or 2 steps. It only should be used in Book.\n  \"\"\"\n  commitRequired: Boolean\n}\n\n\"\"\"\nAccessInput overwrites an existent access in our Back Office or creates a new\none to be used in this search query only. An access object contains its own code, configuration and settings.\n\"\"\"\ninput HotelXAccessInput {\n  \"\"\"\n  The accessID used to identify the existing access in our Back Office in order to\n  overwrite it. Acts as an identifier in this search. It can either exist or not.\n  \"\"\"\n  accessId: ID!\n\n  \"\"\"Information required to access the supplier's system.\"\"\"\n  configuration: ConfigurationInput\n\n  \"\"\"\n  You can configure an special settings for any access. This level overwrites the search and supplier settings levels.\n  \"\"\"\n  settings: SettingsBaseInput\n}\n\ninput HotelXCommitReferenceInput {\n  \"\"\"Supplier reference returned in Book response\"\"\"\n  supplier: String\n\n  \"\"\"Client reference sent in Book request\"\"\"\n  client: String\n}\n\ninput HotelXFilterInput {\n  \"\"\"\n  Only is possible to specify one of this filters, it allows to filter which plugins have to be executed or excluded\n  \"\"\"\n  plugin: HotelXPluginFilterInput\n}\n\ninput HotelXFilterPluginTypeInput {\n  \"\"\"The Step of the plugin to filter\"\"\"\n  step: PluginStepType!\n\n  \"\"\"The Type of the plugin to filter\"\"\"\n  type: String!\n\n  \"\"\"The Name of the plugin to filter\"\"\"\n  name: String!\n}\n\ninput HotelXFilterSearchInput {\n  \"\"\"\n  You can specify one of the filters or any of them. In this latter case, all the configurated accesses will be executed.\n  \"\"\"\n  access: AccessFilterInput\n\n  \"\"\"\n  If requested, only options with the specified rateRules will be returned\n  \"\"\"\n  rateRules: RateRulesFilterInput\n\n  \"\"\"\n  Only is possible to specify one of this filters, it allows to filter which plugins have to be executed or excluded\n  \"\"\"\n  plugin: HotelXPluginFilterInput\n}\n\ninput HotelXPluginFilterInput {\n  \"\"\"Plugins to include (only these plugins will be executed)\"\"\"\n  includes: [HotelXFilterPluginTypeInput!]\n\n  \"\"\"Plugins to exclude\"\"\"\n  excludes: [HotelXFilterPluginTypeInput!]\n}\n\n\"\"\"Supplier object. Contains its own settings, code and access.\"\"\"\ninput HotelXSupplierInput {\n  \"\"\"\n  You can configure an special settings for any supplier. This level overwrites the avail settings level but not the\n  access settings level.\n  \"\"\"\n  settings: SettingsBaseInput\n\n  \"\"\"\n  Code that represents a supplier in our system.\n  This information is mandatory.\n  \"\"\"\n  code: String!\n\n  \"\"\"\n  Array of accesses that can overwrite an existing access information or include a new access for this avail.\n  \"\"\"\n  accesses: [HotelXAccessInput!]\n}\n\ninput IdAccessConfigurationInput {\n  \"\"\"access unique identifier\"\"\"\n  id: ID!\n\n  \"\"\"Indicates if Access is active\"\"\"\n  isActive: Boolean!\n\n  \"\"\"Arbitrary not unique identifier\"\"\"\n  code: String!\n\n  \"\"\"Supplier to which this access belongs\"\"\"\n  supplier: String!\n\n  \"\"\"Information required to access the supplier's system.\"\"\"\n  configuration: ConfigurationInput\n}\n\ninput IdGroupAccessInput {\n  \"\"\"identifier of the groups in which the access will be associated\"\"\"\n  groupCodes: [String!]\n  accesses: [IdAccessConfigurationInput!]!\n}\n\n\"\"\"Pax object that contains the pax age.\"\"\"\ninput PaxInput {\n  \"\"\"Pax age.\"\"\"\n  age: Int!\n}\n\n\"\"\"Plugin to execute.\"\"\"\ninput PluginStepInput {\n  \"\"\"Indicates where the plugin will be executed.\"\"\"\n  step: PluginStepType!\n\n  \"\"\"Indicates the plugin that will be executed.\"\"\"\n  pluginsType: [PluginsInput!]\n}\n\n\"\"\"Plugin to execute.\"\"\"\ninput PluginsInput {\n  \"\"\"type of the plugins to execute\"\"\"\n  type: PluginType!\n\n  \"\"\"name of plugin to execute\"\"\"\n  name: String!\n\n  \"\"\"Plugin's parameters\"\"\"\n  parameters: [ParameterInput!]\n}\n\n\"\"\"\nIf requested, only options with the specified rateRules will be returned\n\"\"\"\ninput RateRulesFilterInput {\n  \"\"\"\n  if includes not nil: only options without rate rules and options with rate rules found in includes will be returned\n  \"\"\"\n  includes: [RateRulesType!]\n\n  \"\"\"\n  if excludes not nil: only options without rate rules and options with rate rules that haven't been sent in excludes will be returned\n  \"\"\"\n  excludes: [RateRulesType!]\n}\n\n\"\"\"Occupancy for a room. It contains a list of pax ages.\"\"\"\ninput RoomInput {\n  \"\"\"\n  Array of pax ages. The number of items in the array will indicate the pax occupancy.\n  \"\"\"\n  paxes: [PaxInput!]!\n}\n\n\"\"\"Contains the time out and business rules of a supplier or an access.\"\"\"\ninput SettingsBaseInput {\n  \"\"\"Milliseconds before the connection is closed.\"\"\"\n  timeout: Int\n\n  \"\"\"\n  Specifies if transactions exchanged with the supplier have to be logged or not.\n  \"\"\"\n  auditTransactions: Boolean\n\n  \"\"\"Business rules\"\"\"\n  businessRules: BusinessRulesInput\n\n  \"\"\"The currency\"\"\"\n  currency: Currency\n\n  \"\"\"Indicates if the book will be confirmed in 1 or 2 steps\"\"\"\n  commitRequired: Boolean\n}\n\n\"\"\"group related to a supplier\"\"\"\ninput SupplierGroupInput {\n  \"\"\"group code of the group related to this supplier\"\"\"\n  groupCode: String!\n\n  \"\"\"Indicates if the supplier is active for its supplier\"\"\"\n  isActive: Boolean!\n}\n\ninput TimeoutInput {\n  \"\"\"Milliseconds before the search connection is closed.\"\"\"\n  search: Int!\n\n  \"\"\"Milliseconds before the quote connection is closed.\"\"\"\n  quote: Int!\n\n  \"\"\"Milliseconds before the book connection is closed.\"\"\"\n  book: Int!\n}\n\n\"\"\"Book status\"\"\"\nenum BookStatusType {\n  \"\"\"The reservation was completed with no problems.\"\"\"\n  OK\n\n  \"\"\"The status of the booking is KO\"\"\"\n  KO @deprecated(reason: \"Deprecated from 2019-07-29\")\n\n  \"\"\"\n  The reservation was completed but the product is still not available, so the reservation goes into a waiting list.\n  It is the client\u2019s responsibility to check if the booking is OK.\n  \"\"\"\n  ON_REQUEST\n\n  \"\"\"The status of the booking is cancelled.\"\"\"\n  CANCELLED\n\n  \"\"\"\n  The reservation process through TGX was completed but due to a supplier error or a timeout, the reservation status is unknown.\n  It is the client\u2019s responsibility to check if the booking is OK.\n  \"\"\"\n  UNKNOWN\n\n  \"\"\"\n  The payment has been confirmed in provider's side, but is necessary make a commit in order to confirm the reservation.\n  \"\"\"\n  PENDING_COMMIT\n}\n\n\"\"\"Indicates the type of criteria in the request of the booking list\"\"\"\nenum BookingCriteriaType {\n  \"\"\"Search by date range\"\"\"\n  DATES\n\n  \"\"\"Search by reference codes\"\"\"\n  REFERENCES\n}\n\n\"\"\"Business rules type\"\"\"\nenum BusinessRulesType {\n  \"\"\"\n  The cheapest options is returned without exceeding the optionsQuota limit.\n  \"\"\"\n  CHEAPER_AMOUNT\n\n  \"\"\"\n  Groups the option by room type without exceeding the optionsQuota limit.\n  \"\"\"\n  ROOM_TYPE\n}\n\n\"\"\"Options type\"\"\"\nenum CancelPenaltyType {\n  \"\"\"Indicates the number of nights to be penalized.\"\"\"\n  NIGHTS\n\n  \"\"\"Indicates the percentage to pay based on the option price.\"\"\"\n  PERCENT\n\n  \"\"\"Indicates the exact amount payable.\"\"\"\n  IMPORT\n}\n\n\"\"\"Charge Type\"\"\"\nenum ChargeType {\n  \"\"\"The charge is included.\"\"\"\n  INCLUDE\n\n  \"\"\"The charge is excluded.\"\"\"\n  EXCLUDE\n}\n\n\"\"\"Duration Type\"\"\"\nenum DurationType {\n  \"\"\"Date range is set.\"\"\"\n  RANGE\n\n  \"\"\"Not restricted by date.\"\"\"\n  OPEN\n}\n\n\"\"\"\nIndicates what type of value is the markup, by percentage or is an import.\n\"\"\"\nenum MarkupRuleType {\n  \"\"\"Indicates the percentage applied by a rule.\"\"\"\n  PERCENT\n\n  \"\"\"Indicates the exact amount applied by a rule.\"\"\"\n  IMPORT\n}\n\n\"\"\"Indicates value type of current paramter\"\"\"\nenum MetadataType {\n  STRING\n  NUMERIC\n  BOOLEAN\n  XML\n  URI\n}\n\n\"\"\"\nPlugin Step Type. https://docs.travelgatex.com/hotelx/plugins/overview/\n\"\"\"\nenum PluginStepType {\n  \"\"\"Plugins executed after Buyer requests message to HotelX\"\"\"\n  REQUEST\n\n  \"\"\"\n  Plugins executed before sending request to Supplier using Access and after Accesses have been calculated\n  \"\"\"\n  REQUEST_ACCESS\n\n  \"\"\"\n  Plugins executed after Supplier responds message. For every option returned\n  \"\"\"\n  RESPONSE_OPTION\n\n  \"\"\"Plugins executed after all Access options has been responded\"\"\"\n  RESPONSE_ACCESS\n\n  \"\"\"Plugins executed before HotelX responds message to to Buyer\"\"\"\n  RESPONSE\n}\n\n\"\"\"Plugin Type. https://docs.travelgatex.com/hotelx/plugins/overview/\"\"\"\nenum PluginType {\n  \"\"\"\n  PRE_STEP is the first plugin that a step will execute, allows a full range of operations:\n  split arrays, join arrays, modify object values, add or remove object instances\n  \"\"\"\n  PRE_STEP\n\n  \"\"\"\n  HOTEL_MAP allows to match Seller and Buyer hotel codes based on contexts\n  \"\"\"\n  HOTEL_MAP\n\n  \"\"\"\n  BOARD_MAP allows to match Seller and Buyer board codes based on contexts\n  \"\"\"\n  BOARD_MAP\n\n  \"\"\"ROOM_MAP allows to match Seller and Buyer room codes based on contexts\"\"\"\n  ROOM_MAP\n\n  \"\"\"\n  CURRENCY_CONVERSION allows to match Seller and Buyer hotel codes based on contexts\n  \"\"\"\n  CURRENCY_CONVERSION\n\n  \"\"\"MARKUP allows to apply markup over price\"\"\"\n  MARKUP\n\n  \"\"\"AGGREGATION allows to aggregate multiple supplier options\"\"\"\n  AGGREGATION\n\n  \"\"\"\n  POST_STEP is the last plugin that a step will execute, allows a full range of operations:\n  split arrays, join arrays, modify object values, add or remove object instances\n  \"\"\"\n  POST_STEP\n\n  \"\"\"\n  COMMISSION plugin allows the user to apply the rule to calculate the commission\n  \"\"\"\n  COMMISSION\n\n  \"\"\"\n  MARKETS_GROUP plugin allows the user to group the Search result by markets that share the same Options\n  \"\"\"\n  MARKETS_GROUP\n\n  \"\"\"\n  AMENITY_MAP allows to match Seller and Buyer amenities codes based on contexts\n  \"\"\"\n  AMENITY_MAP\n\n  \"\"\"\n  PROMOTION_MAP allows to match Seller and Buyer promotion codes based on contexts\n  \"\"\"\n  PROMOTION_MAP\n}\n\n\"\"\"Price Type\"\"\"\nenum PriceType {\n  \"\"\"Price without deductions.\"\"\"\n  GROSS\n\n  \"\"\"Price after deducting all discounts and rebates.\"\"\"\n  NET\n\n  \"\"\"Final quantity. Sum of multiple quantities.\"\"\"\n  AMOUNT\n}\n\n\"\"\"Service Type\"\"\"\nenum ServiceType {\n  \"\"\"\n  A ticket or pass authorizing the holder to ski in a certain place or resort. Gross.\n  \"\"\"\n  SKI_PASS\n}\n\n\"\"\"Indicartes options status\"\"\"\nenum StatusType {\n  \"\"\"The status of the avail is available\"\"\"\n  OK\n\n  \"\"\"The status of the avail is On request\"\"\"\n  RQ\n}\n\n\"\"\"Supplement Type\"\"\"\nenum SupplementType {\n  \"\"\"\n  A ticket or pass authorizing the holder to ski in a certain place or resort.\n  \"\"\"\n  SKI_PASS\n\n  \"\"\"Lessons of any type that the costumer can take.\"\"\"\n  LESSONS\n\n  \"\"\"Supplement of a determined meal plan.\"\"\"\n  MEALS\n\n  \"\"\"Extra equipment for a specific purpose.\"\"\"\n  EQUIPMENT\n\n  \"\"\"Admission to some service.\"\"\"\n  TICKET\n\n  \"\"\"Transfers used by the costumer.\"\"\"\n  TRANSFERS\n\n  \"\"\"Gala: A festive occasion, celebration or special entertainment.\"\"\"\n  GALA\n\n  \"\"\"Activities that the costumer can do.\"\"\"\n  ACTIVITY\n}\n\n\"\"\"Indicates xml tag used by the current parameter\"\"\"\nenum TagRuntimeType {\n  USER\n  PASSWORD\n  URLAVAIL\n  URLVALUATION\n  URLRESERVATION\n  URLGENERIC\n  PARAMETER\n}\n\n\"\"\"Unit Time Type\"\"\"\nenum UnitTimeType {\n  \"\"\"Day\"\"\"\n  DAY\n\n  \"\"\"Hour\"\"\"\n  HOUR\n}\n\ntype Aggregate {\n  sum: AggregateSum\n  max: AggregateMax\n}\n\ntype AggregateMax {\n  nights: Int\n  bookingWindow: Int\n}\n\ntype AggregateSum {\n  amount: Float\n  amountEur: Float\n  bookings: Int\n  nights: Int\n  bookingWindow: Int\n  destinationCountry: Int\n  originMarket: Int\n  supplierCode: Int\n  clientCode: Int\n  supplierOrganization: Int\n  clientOrganization: Int\n}\n\ntype AmountCancelPenalty {\n  currency: String\n  amount: Float\n  amountEur: Float\n}\n\ntype BookingAggregation {\n  status: BookStatusType\n  client: Client\n  supplier: Supplier\n  currency: String\n  bookingAt: Date\n  checkInAt: Date\n  cancelAt: Date\n  originMarket: String\n  destinationCountry: String\n  paxType: PaxTypeType\n  bookingWindow: BookingWindowType\n  lengthOfStay: Int\n  hotelName: String\n  amount: Float\n  amountEur: Float\n  amountCancelPenalties: [AmountCancelPenalty]\n  numBookings: Int\n  aggregate: Aggregate\n}\n\ntype BookingDetail {\n  \"\"\"Booking ID in the Supplier's system\"\"\"\n  reference: Reference!\n\n  \"\"\"Holder's name and surname\"\"\"\n  holder: Holder\n\n  \"\"\"Information about the hotel.\"\"\"\n  hotel: BookingHotel\n\n  \"\"\"Specifies the prices (Gross, Net and Amount) of the option returned.\"\"\"\n  price: Price\n\n  \"\"\"Specifies cancel policies of the book returned.\"\"\"\n  cancelPolicy: CancelPolicy\n\n  \"\"\"Additional information about the book.\"\"\"\n  remarks: String\n\n  \"\"\"Booking Status.\"\"\"\n  status: BookStatusType!\n\n  \"\"\"Payable.\"\"\"\n  payable: String\n\n  \"\"\"Quote Session id \"\"\"\n  sessionIdQuote: String\n\n  \"\"\"Booking Session id \"\"\"\n  sessionIdBooking: String\n\n  \"\"\"Cancel Session id \"\"\"\n  sessionIdCancel: String\n\n  \"\"\"Client Code\"\"\"\n  client: Client\n\n  \"\"\"Supplier Code\"\"\"\n  supplier: Supplier\n\n  \"\"\"Access ID\"\"\"\n  access: Access\n\n  \"\"\"Execution Time\"\"\"\n  executionTime: Int\n\n  \"\"\"Timeout\"\"\"\n  timeout: Int\n\n  \"\"\"Error Code\"\"\"\n  errorCode: String\n}\n\n\"\"\"## HOTELX MAPPING REPORT // Response\"\"\"\ntype HotelXMappingReportResponse {\n  data: RetrieveHotelXMappingReport\n  error: [AdviseMessage]\n}\n\ntype InsightsXBookingAggregation implements Node {\n  code: ID!\n  InsightsXBookingAggregationData: BookingAggregation\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\n\"\"\"## Booking Aggregation\"\"\"\ntype InsightsXBookingAggregationConnection {\n  edges: [InsightsXBookingAggregationEdge]\n  pageInfo: PageInfo!\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype InsightsXBookingAggregationEdge {\n  node: InsightsXBookingAggregation\n  cursor: String!\n}\n\ntype InsightsXBookingDetail implements Node {\n  code: ID!\n  InsightsXBookingDetailData: BookingDetail\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\n\"\"\"## Booking Details\"\"\"\ntype InsightsXBookingDetailConnection {\n  edges: [InsightsXBookingDetailEdge]\n  pageInfo: PageInfo!\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype InsightsXBookingDetailEdge {\n  node: InsightsXBookingDetail\n  cursor: String!\n}\n\n\"\"\"## BOOKING REPORT // Response\"\"\"\ntype InsightsXBookingReport {\n  bookingsDetails: InsightsXBookingDetailConnection\n  bookingsAggregation: InsightsXBookingAggregationConnection\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype RetrieveHotelXMappingReport {\n  url: String\n}\n\n\"\"\"## BOOKING REPORT // Where Input\"\"\"\ninput BookingsReportWhereInput {\n  bookingAt: DateRange\n  checkInAt: DateRange\n  cancelAt: DateRange\n  reference: References\n  requestMode: ModeType!\n  ownerCode_in: [ID!]\n  groupCode_in: [ID!]\n  accessCode_in: [ID!]\n  supplierCode_in: [ID!]\n  clientCode_in: [ID!]\n\n  \"\"\"List of markets\"\"\"\n  marketCode_in: [String!]\n\n  \"\"\"List of destinations\"\"\"\n  countryCode_in: [String!]\n\n  \"\"\"List of booking status\"\"\"\n  bookingStatus_in: [BookStatusType!]\n}\n\ninput DateRange {\n  lte: DateTime!\n  gte: DateTime!\n}\n\n\"\"\"## HOTELX MAPPING REPORT // Where Input\"\"\"\ninput HotelXMappingReportWhereInput {\n  requestDate: DateRange!\n  mappingReport: MappingType!\n  supplierCode_in: [ID!]\n  clientCode_in: [ID!]\n  accessCode_in: [ID!]\n}\n\ninput References {\n  \"\"\"Client reference booking\"\"\"\n  client: [String!]\n\n  \"\"\"Supplier reference booking\"\"\"\n  supplier: [String!]\n\n  \"\"\"Hotelier reference booking\"\"\"\n  hotel: [String!]\n\n  \"\"\"TGX reference booking\"\"\"\n  sessionID: [String!]\n}\n\n\"\"\"BookingWindow\"\"\"\nenum BookingWindowType {\n  LAST_SECOND\n  LAST_MINUTE\n  ABOUT_ONE_WEEK\n  ABOUT_TWO_WEEKS\n  ABOUT_ONE_MONTH\n  ABOUT_TWO_MONTHS\n  ABOUT_THREE_MONTHS\n  MORE_THAN_THREE_MONTHS\n}\n\n\"\"\"## BOOKING REPORT // Group By Input\"\"\"\nenum BookingsReportGroupByInput {\n  status\n  clientCode\n  clientOrganization\n  supplierCode\n  supplierOrganization\n  currency\n  bookingAt\n  checkInAt\n  cancelAt\n  originMarket\n  destinationCountry\n  paxType\n  lengthOfStay\n  bookingWindow\n  hotel\n}\n\n\"\"\"## BOOKING REPORT // Order By Input\"\"\"\nenum BookingsReportOrderByInput {\n  bookingAt_ASC\n  checkInAt_ASC\n  cancelAt_ASC\n  numBookings_ASC\n  amountEur_ASC\n  bookingAt_DES\n  checkInAt_DES\n  cancelAt_DES\n  numBookings_DES\n  amountEur_DES\n}\n\nenum MappingType {\n  \"\"\"HOTEL - Comming soon\"\"\"\n  AMENITY\n  BOARD\n  RATE\n  ROOM\n  PROMOTION\n  HOTEL_ROOM\n}\n\n\"\"\"PaxType\"\"\"\nenum PaxTypeType {\n  SOLO\n  COUPLE\n  FAMILY\n  GROUP\n  OTHER\n}\n\n\"\"\"\nThe service used to access the stats of every connection that uses the HUB\n\"\"\"\ntype AuditRule implements Node {\n  code: ID!\n  auditRuleData: AuditRuleData\n\n  \"\"\"Errors that will lead the service to abort\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Create date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Update date\"\"\"\n  updatedAt: DateTime!\n}\n\ntype AuditRuleConnection {\n  edges: [AuditRuleEdge]\n  pageInfo: PageInfo!\n  AdviseMessage(level: [AdviseMessageLevel]): AdviseMessage\n}\n\ntype AuditRuleData {\n  product: Product!\n  group: Group\n  access: Access\n  client: Client\n  error: AdviseMessage\n  ttl: Int!\n  remainingTTL: Int!\n  percentageToAudit: Int!\n  auditStatus: AuditRuleStatus!\n}\n\ntype AuditRuleEdge {\n  cursor: String!\n  node: AuditRule\n}\n\ninput AuditRuleCreateInput {\n  group: ID\n  access: ID\n  clientName: ID\n  errorCode: ID\n  percentageToAudit: Int!\n  product: AuditRuleProductInput!\n  supplier: ID\n  ttl: Int!\n\n  \"\"\"\n  If startTime is null, the audit initalization time will be te current time.\n  \"\"\"\n  startTime: String\n}\n\ninput AuditRuleWhereInput {\n  product: AuditRuleProductInput!\n  auditStatus: AuditRuleStatus!\n}\n\ninput AuditRuleWhereUniqueInput {\n  code: ID!\n}\n\nenum AuditRuleProductInput {\n  legacy\n  hotelX\n}\n\nenum AuditRuleStatus {\n  Scheduled\n  InProcess\n  Finalized\n  Deleted\n  ALL\n}\n\ntype Environment {\n  code: EnvironmentName!\n  type: CloudEnvironment!\n\n  \"\"\"Return hubMachine\"\"\"\n  worker: Worker!\n}\n\n\"\"\"\nThe service used to access the stats of every connection that uses the HUB\n\"\"\"\ntype Logging implements Node {\n  code: ID!\n  LoggingData: LoggingData\n\n  \"\"\"Errors that will lead the service to abort\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Create date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Update date\"\"\"\n  updatedAt: DateTime!\n}\n\ntype LoggingConnection {\n  edges: [LoggingEdge]\n  pageInfo: PageInfo!\n}\n\ntype LoggingData {\n  \"\"\"Index or Product of the Log\"\"\"\n  product: String!\n\n  \"\"\"Date of log\"\"\"\n  timestamp: DateTime!\n\n  \"\"\"Level of log\"\"\"\n  level: ID!\n\n  \"\"\"Message of log\"\"\"\n  message: String!\n\n  \"\"\"Mandatory fields of log\"\"\"\n  tgx: TGX!\n\n  \"\"\"Document JSON\"\"\"\n  document: String!\n}\n\ntype LoggingEdge {\n  cursor: String!\n  node: Logging\n}\n\n\"\"\"\nThe service used to access the stats of every connection that uses the HUB\n\"\"\"\ntype LoggingLegacy implements Node {\n  code: ID!\n  LoggingLegacyData: LoggingLegacyData\n\n  \"\"\"Errors that will lead the service to abort\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Create date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Update date\"\"\"\n  updatedAt: DateTime!\n}\n\ntype LoggingLegacyConnection {\n  edges: [LoggingLegacyEdge]\n  pageInfo: PageInfo!\n}\n\ntype LoggingLegacyData {\n  code: ID!\n\n  \"\"\"Date of search\"\"\"\n  timestamp: DateTime!\n\n  \"\"\"Return session id\"\"\"\n  sessionID: ID!\n\n  \"\"\"Owner access\"\"\"\n  access: Access!\n\n  \"\"\"Owner client\"\"\"\n  client: Client!\n\n  \"\"\"Return group operation\"\"\"\n  operation: Operation!\n\n  \"\"\"\n  Responsible for the execution of the this stats. If TRUE then cache, else client\n  \"\"\"\n  trafficType: TrafficType!\n\n  \"\"\"Return environment\"\"\"\n  cloudEnvironment: Environment!\n\n  \"\"\"return hub status\"\"\"\n  statusType: StatsInfoTypes!\n\n  \"\"\"Return if exist error code\"\"\"\n  errorCode: ID!\n\n  \"\"\"Return execTime\"\"\"\n  execTime: Int!\n\n  \"\"\"Return the URL to download\"\"\"\n  url: URI!\n\n  \"\"\"Return the unencrypted URL to download\"\"\"\n  unencryptedURL: URI!\n}\n\ntype LoggingLegacyEdge {\n  cursor: String!\n  node: LoggingLegacy\n}\n\ntype TGX {\n  member_id: ID!\n  layer: Int!\n  is_private: Boolean!\n  included_groups: [String!]!\n  excluded_groups: [String!]!\n  tgx_correlation_id: ID!\n  tgx_origin: ID!\n  tgx_origin_ip: ID!\n  gstorage_url: ID!\n  transaction_type: ID!\n}\n\ntype TGXFilter {\n  member_id: ID\n  layer: Int\n  is_private: Boolean\n  included_groups: [String]\n  excluded_groups: [String]\n  tgx_correlation_id: ID\n  tgx_origin: ID\n  tgx_origin_ip: ID\n  transaction_type: String\n  gstorage_url: String\n}\n\ninput ErrorFilter {\n  type: StatsInfoTypes!\n  code: [ID!]\n}\n\n\"\"\"\nFilters needed to do a search.\nFrom (Start date of search - YYYY-MM-DD HH:mm:ss), To (End date of search - YYYY-MM-DD HH:mm:ss), Product (Ex. mappeaapi)\n\"\"\"\ninput LoggingFilterInput {\n  \"\"\"From date of search\"\"\"\n  from: DateTime!\n\n  \"\"\"To date of search\"\"\"\n  to: DateTime!\n\n  \"\"\"Product to search\"\"\"\n  products: [String!]!\n  message: String\n  level: ID\n\n  \"\"\"TODO CHANGE STRING\"\"\"\n  dynamic_filter: String\n}\n\n\"\"\"\nFilters needed to do a search.\nFrom (Start date of search - YYYY-MM-DD HH:mm:ss), To (End date of search - YYYY-MM-DD HH:mm:ss), \n\"\"\"\ninput LoggingLegacyFilterInput {\n  \"\"\"From date of search\"\"\"\n  from: DateTime\n\n  \"\"\"To date of search\"\"\"\n  to: DateTime\n\n  \"\"\"Range of the time\"\"\"\n  timeRange: TimeRangeInput\n\n  \"\"\"Buyer or Seller\"\"\"\n  requestMode: ModeType!\n\n  \"\"\"To serch in Speed\"\"\"\n  trafficType: [TrafficType!]\n\n  \"\"\"List of environments\"\"\"\n  cloudEnvironments: [CloudEnvironment!]\n\n  \"\"\"List of API codes\"\"\"\n  apiCode: ID!\n\n  \"\"\"List of operation codes\"\"\"\n  operationCodes: [ID!]\n\n  \"\"\"List of operation types\"\"\"\n  operationTypes: [OperationType!]\n\n  \"\"\"List of sessions\"\"\"\n  sessionIDs: [String!]\n\n  \"\"\"List of access codes\"\"\"\n  accessCodes: [ID!]\n\n  \"\"\"List of client codes\"\"\"\n  clientCodes: [ID!]\n\n  \"\"\"List of client names\"\"\"\n  clientNames: [ID!]\n\n  \"\"\"List of supplier codes\"\"\"\n  supplierCodes: [ID!]\n\n  \"\"\"List of groups\"\"\"\n  groups: [ID!]\n\n  \"\"\"List of error codes\"\"\"\n  errors: [ErrorFilter!]\n\n  \"\"\"Works like LIMIT of SQL\"\"\"\n  first: Int\n\n  \"\"\"Locator to search in Insights\"\"\"\n  reference: ReferenceFilter\n\n  \"\"\"Filter of the execution time\"\"\"\n  rangeFilters: [RangeFilter!]\n}\n\ninput RangeFilter {\n  term: TermType!\n  value: Int!\n  condition: ConditionType!\n}\n\ninput ReferenceFilter {\n  client: [String!]\n  supplier: [String!]\n  hotel: [String!]\n  quoteRequired: Boolean\n  cancelRequired: Boolean\n}\n\n\"\"\"## Scalars types\"\"\"\nscalar EnvironmentName\n\nscalar Worker\n\nenum CloudEnvironment {\n  AZURE\n  GOOGLE\n  HETZNER\n  TOTAL_UPTIME\n  BLUEKIRI\n}\n\nenum ConditionType {\n  \"\"\">=\"\"\"\n  GTE\n\n  \"\"\">\"\"\"\n  GT\n\n  \"\"\"<=\"\"\"\n  LTE\n\n  \"\"\"<\"\"\"\n  LT\n}\n\nenum EnvironmentType {\n  TEST\n  LOCAL\n  DEV\n  PROD\n}\n\nenum TermType {\n  \"\"\"Total execution time\"\"\"\n  TEXECT\n}\n\ntype File {\n  fileName: String!\n  fileId: Int!\n  uploadTime: String!\n}\n\ntype GetMappeaStatsData {\n  supplierMapped: String\n  startTime: String\n  endTime: String\n  organizationHotels: Int\n  contextHotels: Int\n  suggestedHotels: Int\n}\n\ntype GetMappeaStatsResponse {\n  data: [GetMappeaStatsData]\n  error: Error\n  warnings: [Warning]\n}\n\ntype GetUploadedFilesData {\n  files: [File]\n}\n\n\"\"\"## GetUploadedFiles\"\"\"\ntype GetUploadedFilesResponse {\n  data: GetUploadedFilesData\n  error: Error\n  warnings: [Warning]\n}\n\n\"\"\"## Common Items\"\"\"\ntype OnlyStatusResponse {\n  error: Error\n  warnings: [Warning]\n}\n\ntype SupplierDetected {\n  code: ID!\n  supplier: Supplier\n  numberOfHotels: Int!\n}\n\ntype UploadFileData {\n  fileId: String!\n  suppliers: [SupplierDetected!]\n  numberOfLines: Int\n  numberOfHotels: Int\n}\n\ntype UploadFileResponse {\n  data: UploadFileData\n  error: Error\n  warnings: [Warning]\n}\n\n\"\"\"# AddOrganization\"\"\"\ninput MappeaAddOrganizationInput {\n  name: String!\n  isActive: Boolean!\n  isTest: Boolean!\n}\n\n\"\"\"## ConfirmUpload\"\"\"\ninput MappeaConfirmUploadInput {\n  fileId: Int!\n  suppliers: [MappeaSupplierConfirmedInput!]!\n}\n\n\"\"\"# EditOrganization\"\"\"\ninput MappeaEditOrganizationInput {\n  name: String!\n  isActive: Boolean\n  isTest: Boolean\n}\n\n\"\"\"# GetMappeaStats\"\"\"\ninput MappeaGetMappeaStatsInput {\n  organizationName: String!\n  supplierMapped: String\n}\n\n\"\"\"# MapSupplier\"\"\"\ninput MappeaMapSupplierInput {\n  requestId: ID!\n  access: ID!\n  fileId: Int!\n}\n\ninput MappeaSupplierConfirmedInput {\n  code: ID!\n  supplier: ID!\n}\n\n\"\"\"## UploadFile\"\"\"\ninput MappeaUploadFileInput {\n  requestId: String!\n  fileName: String\n  delimiter: String!\n  fileContent: String!\n}\n\n\"\"\"The card expiration date\"\"\"\ntype PaymentXExpireDate {\n  \"\"\"Month MM\"\"\"\n  month: Int!\n\n  \"\"\"Year yy\"\"\"\n  year: Int!\n}\n\ntype PaymentXStoredCard implements Node {\n  \"\"\"Stored card ID\"\"\"\n  code: ID!\n\n  \"\"\"Stored card information\"\"\"\n  storedCardData: PaymentXStoredCardData\n\n  \"\"\"Create date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Update date\"\"\"\n  updatedAt: DateTime!\n\n  \"\"\"List of messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype PaymentXStoredCardConnection {\n  edges: [PaymentXStoredCardEdge]\n  pageInfo: PageInfo!\n}\n\ntype PaymentXStoredCardData {\n  \"\"\"Asigned instance of PaymentX of the booked property.\"\"\"\n  instance: Group!\n\n  \"\"\"Physical point of sale where the card was registered.\"\"\"\n  pointOfSale: PointOfSale!\n\n  \"\"\"Indicates the referece of the booking\"\"\"\n  bookingReference: String!\n\n  \"\"\"Check-out, booking date Format: YYYY-MM-DD\"\"\"\n  checkOut: Date\n\n  \"\"\"Check-in, booking date Format: YYYY-MM-DD\"\"\"\n  checkIn: Date\n\n  \"\"\"Indicates the card type.\"\"\"\n  cardType: String\n\n  \"\"\"Contains owner's name\"\"\"\n  holder: Holder\n\n  \"\"\"Card Number (16 digits typically)\"\"\"\n  number: CardNumber\n\n  \"\"\"Contains credit card CVC\"\"\"\n  CVC: CVC\n\n  \"\"\"Contains credit card expiration date\"\"\"\n  expire: PaymentXExpireDate\n}\n\ntype PaymentXStoredCardEdge {\n  cursor: String!\n  node: PaymentXStoredCard\n}\n\ninput PaymentXStoredCardFilterInput {\n  \"\"\"Logical AND on all given filters.\"\"\"\n  AND: [PaymentXStoredCardFilterInput!]\n\n  \"\"\"Logical OR on all given filters.\"\"\"\n  OR: [PaymentXStoredCardFilterInput!]\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  checkIn_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  checkIn_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  checkIn_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  checkIn_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  checkIn_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  checkIn_gte: DateTime\n\n  \"\"\"All values that are contained in given list.\"\"\"\n  checkOut_in: [DateTime!]\n\n  \"\"\"All values that are not contained in given list.\"\"\"\n  checkOut_not_in: [DateTime!]\n\n  \"\"\"All values less than the given value.\"\"\"\n  checkOut_lt: DateTime\n\n  \"\"\"All values less than or equal the given value.\"\"\"\n  checkOut_lte: DateTime\n\n  \"\"\"All values greater than the given value.\"\"\"\n  checkOut_gt: DateTime\n\n  \"\"\"All values greater than or equal the given value.\"\"\"\n  checkOut_gte: DateTime\n\n  \"\"\"All values with holder like the given value.\"\"\"\n  holder_like: HolderInput\n}\n\ninput PaymentXStoredCardIDInput {\n  \"\"\"Asigned instance of PaymentX of the booked property.\"\"\"\n  instanceCode: ID\n\n  \"\"\"Indicates the code of the booked property\"\"\"\n  pointOfSaleCode: ID\n\n  \"\"\"Indicates the referece of the booking\"\"\"\n  bookingReference: String\n\n  \"\"\"Stored card ID returned in allStoredCards query\"\"\"\n  code: ID\n}\n\ninput PaymentXStoredCardInput {\n  \"\"\"Asigned instance of PaymentX of the booked property.\"\"\"\n  instanceCode: ID!\n\n  \"\"\"Indicates the code of the booked property\"\"\"\n  pointOfSaleCode: ID!\n\n  \"\"\"Indicates the referece of the booking\"\"\"\n  bookingReference: String!\n\n  \"\"\"Check-out, booking date Format: YYYY-MM-DD\"\"\"\n  checkOut: Date\n\n  \"\"\"Check-in, booking date Format: YYYY-MM-DD\"\"\"\n  checkIn: Date\n\n  \"\"\"Indicates the card type.\"\"\"\n  cardType: String\n\n  \"\"\"Contains owner's name\"\"\"\n  holder: HolderInput\n\n  \"\"\"Contains credit card number\"\"\"\n  number: CardNumber!\n\n  \"\"\"Contains credit card CVC\"\"\"\n  CVC: CVC!\n\n  \"\"\"Contains credit card expiration date\"\"\"\n  expire: ExpireDateInput!\n}\n\ntype ConnectionConnection {\n  edges: [ConnectionEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype ConnectionEdge {\n  node: Connection\n  cursor: String!\n}\n\n\"\"\"Stats information per operation\"\"\"\ntype OperationDetailed {\n  \"\"\"Operation information\"\"\"\n  operation: Operation!\n\n  \"\"\"Total hits.\"\"\"\n  totalHits: Int64!\n\n  \"\"\"Hits grouped depending on their status\"\"\"\n  detailedHits(type: [StatsInfoTypes!], code: [Int!]): [StatsInfo!]\n\n  \"\"\"\n  Responsible for the execution of the this stats. If TRUE then cache, else client\n  \"\"\"\n  cache: Boolean! @deprecated(reason: \"deprecated from 2019-04-03. Added new field trafficType.\")\n\n  \"\"\"\n  Responsible for the execution of the this stats. If TRUE then cache, else client\n  \"\"\"\n  trafficType: TrafficType!\n}\n\n\"\"\"Ratios details\"\"\"\ntype Ratios {\n  \"\"\"Searches needed to do a quote\"\"\"\n  lookToQuote: Int!\n\n  \"\"\"Searches needed to do a booking\"\"\"\n  lookToBook: Int!\n\n  \"\"\"Quotes needed to do a booking\"\"\"\n  quoteToBook: Int!\n}\n\n\"\"\"\nThe service used to access the stats of every connection that uses the HUB\n\"\"\"\ntype Stats implements Node {\n  code: ID!\n\n  \"\"\"The data returned by a Stats query.\"\"\"\n  statsData: StatsData\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Create date\"\"\"\n  createdAt: DateTime!\n\n  \"\"\"Update date\"\"\"\n  updatedAt: DateTime!\n}\n\n\"\"\"Asset of an specific error\"\"\"\ntype StatsAsset {\n  \"\"\"Start time of the request\"\"\"\n  startTime: DateTime!\n\n  \"\"\"Execution time of the request\"\"\"\n  execTime: Int!\n\n  \"\"\"Endpoint to download the full XML of the request with its response\"\"\"\n  url: URI!\n\n  \"\"\"\n  Endpoint to download the full unencrypted XML of the request with its response\n  \"\"\"\n  unencryptedURL: URI!\n}\n\ntype StatsConnection {\n  edges: [StatsEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages.\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n}\n\ntype StatsData {\n  \"\"\"Owner access\"\"\"\n  access: Access!\n\n  \"\"\"Owner client\"\"\"\n  client: Client!\n\n  \"\"\"From date of search\"\"\"\n  from: DateTime!\n\n  \"\"\"To date of search\"\"\"\n  to: DateTime!\n\n  \"\"\"Ratios details\"\"\"\n  ratios(trafficType: TrafficType!): Ratios! @deprecated(reason: \"deprecated from 2019-04-08. Added hits fields to be able to calculate ratios at client side.\")\n\n  \"\"\"Stats information per operation\"\"\"\n  operations(type: [ServiceOperationType!]): [OperationDetailed!]\n\n  \"\"\"Summarized Stats\"\"\"\n  hits(trafficType: TrafficType!, statusType: StatsInfoTypes!, operationType: OperationType!): Int64!\n}\n\ntype StatsEdge {\n  node: Stats\n  cursor: String!\n}\n\n\"\"\"Details of an specific error\"\"\"\ntype StatsInfo {\n  code: ID!\n\n  \"\"\"Stats type\"\"\"\n  type: StatsInfoTypes!\n\n  \"\"\"Total hits\"\"\"\n  hits: Int64!\n\n  \"\"\"Average time (ms)\"\"\"\n  time: Int! @deprecated(reason: \"deprecated from 2019-04-03. Added new fields averageTime and totalTime.\")\n\n  \"\"\"Average time (ms)\"\"\"\n  averageTime: Int64!\n\n  \"\"\"Total time (ms)\"\"\"\n  totalTime: Int64!\n\n  \"\"\"Details about errors.\"\"\"\n  assets: [StatsAsset!]\n}\n\n\"\"\"Filters needed to do a search.\"\"\"\ninput ActiveFilterInput {\n  \"\"\"Buyer or Seller\"\"\"\n  requestMode: ModeType!\n\n  \"\"\"List of suppliers or clients\"\"\"\n  codes: [ID!]!\n\n  \"\"\"ServiceApi\"\"\"\n  serviceApi: ServiceApiType\n}\n\n\"\"\"\nFilters needed to do a search.\nUsers (List of users), Suppliers (List of suppliers), ServiceApis (List of service apis), From (Start date of search - YYYY-MM-DD HH:mm:ss), To (End date of search - YYYY-MM-DD HH:mm:ss)\n\"\"\"\ninput StatsFilterInput {\n  \"\"\"List of owners\"\"\"\n  owners: [ID!]\n\n  \"\"\"Groups codes list\"\"\"\n  groups: [ID!]\n\n  \"\"\"List of accesses\"\"\"\n  accesses: [ID!]\n\n  \"\"\"List of suppliers\"\"\"\n  suppliers: [ID!]\n\n  \"\"\"List of clients\"\"\"\n  clients: [ID!]\n\n  \"\"\"\n   Buyer or Seller\n  @deprecated(reason: \"deprecated from 2019-04-11. Superfluous field.\")\n  \"\"\"\n  mode: ModeType!\n\n  \"\"\"List of services apis\"\"\"\n  serviceApis: [ServiceApiType!]\n\n  \"\"\"List of services operations\"\"\"\n  operation: [ServiceOperationType!]\n  serviceOperations: [ID!]\n\n  \"\"\"List of traffic types\"\"\"\n  trafficType: [TrafficType!]\n\n  \"\"\"\n  From date of search\n  @deprecated(reason: \"deprecated from 2019-07-19. Added new field timeRange.\")\n  \"\"\"\n  from: DateTime\n\n  \"\"\"\n   To date of search\n  @deprecated(reason: \"deprecated from 2019-07-19. Added new field timeRange.\")\n  \"\"\"\n  to: DateTime\n\n  \"\"\"Input time\"\"\"\n  timeRange: TimeRangeInput\n\n  \"\"\"If true assets will be retrieved.\"\"\"\n  retrieveAssets: Boolean\n}\n\n\"\"\"Mode to select which kind of stats do you want query\"\"\"\nenum ModeType {\n  \"\"\"When the request has been send as a buyer\"\"\"\n  BUYER\n\n  \"\"\"When the request has been send as a seller\"\"\"\n  SELLER\n}\n\n\"\"\"Services Api available.\"\"\"\nenum ServiceApiType {\n  \"\"\"When the request has been done against the Hotel API\"\"\"\n  HOTEL\n\n  \"\"\"When the request has been done against the Transportation API\"\"\"\n  TRANSPORTATION\n\n  \"\"\"When the request has been done against the Car API\"\"\"\n  CAR\n\n  \"\"\"When the request has been done against the Transfers API\"\"\"\n  TRANSFERS\n\n  \"\"\"When the request has been done against the Activities API\"\"\"\n  ACTIVITIES\n\n  \"\"\"When the request has been done against the Virtual Account API\"\"\"\n  VIRTUALACCOUNT\n\n  \"\"\"When the request has been done against the Payment API\"\"\"\n  PAYMENT\n\n  \"\"\"When the request has been done against the Package API\"\"\"\n  PACKAGE\n}\n\nenum ServiceOperationType {\n  ALL\n\n  \"\"\"When the type of the request is Search\"\"\"\n  SEARCH\n\n  \"\"\"When the type of the request is Quote\"\"\"\n  QUOTE\n\n  \"\"\"When the type of the request is Booking\"\"\"\n  BOOKING\n\n  \"\"\"When the type of the request is Other\"\"\"\n  OTHER\n}\n\nenum StatsInfoTypes {\n  ALL\n\n  \"\"\"Stats in OK state\"\"\"\n  OK\n\n  \"\"\"Stats in NOK state caused by integration issues\"\"\"\n  INTEGRATION\n\n  \"\"\"Stats in NOK state caused by supplier issues\"\"\"\n  PROVIDER\n\n  \"\"\"Stats in NOK state caused by Timeout\"\"\"\n  COMMUNICATION\n\n  \"\"\"Stats in NOK state caused by HUB issues\"\"\"\n  HUB\n\n  \"\"\"Stats in NOK state caused by other causes\"\"\"\n  OTHER\n}\n\n\"\"\"Posible source of ratios\"\"\"\nenum TrafficType {\n  \"\"\"Ratios calculated from traffic between buyer and seller\"\"\"\n  BASIC\n\n  \"\"\"Ratios calculated from traffic between buyer and Speed\"\"\"\n  SPEED\n\n  \"\"\"\n  Ratios calculated from traffic between buyer and Static information cache\n  \"\"\"\n  SCHEDULER\n\n  \"\"\"Ratios calculated from traffic between TGX's caches and seller\"\"\"\n  OPTIMIZED\n}\n\n\"\"\"\nThe admin query root of TravelgateX's for implementing GraphQL mutations.\n\"\"\"\ntype AdminMutation {\n  \"\"\"Creates an Access\"\"\"\n  createAccess(input: AccessInput!): Access\n\n  \"\"\"Updates an Access\"\"\"\n  updateAccess(input: AccessInput!): Access\n\n  \"\"\"Grants Access visibility to a group\"\"\"\n  grantAccessToGroup(input: GroupInput!): Access\n\n  \"\"\"Removes Access visibility to groups\"\"\"\n  deleteAccessFromGroup(input: GroupInput!): Access\n\n  \"\"\"Grants Supplier visibility to a group\"\"\"\n  grantSupplierToGroup(input: GroupInput!): Supplier\n\n  \"\"\"Removes Supplier visibility to groups\"\"\"\n  deleteSupplierFromGroup(input: GroupInput!): Supplier\n\n  \"\"\"Grants Client visibility to a group.\"\"\"\n  grantClientToGroup(input: GroupInput!): Client\n\n  \"\"\"Removes Client visibility to groups.\"\"\"\n  deleteClientFromGroup(input: GroupInput!): Client\n\n  \"\"\"Creates a Client.\"\"\"\n  createClient(input: CreateClientInput!): Client\n\n  \"\"\"Updates a Client.\"\"\"\n  updateClient(input: UpdateClientInput!): Client\n\n  \"\"\"Creates a Profile.\"\"\"\n  createProfile(input: CreateProfileInput!): Profile\n\n  \"\"\"Updates a Profile.\"\"\"\n  updateProfile(input: UpdateProfileInput!): Profile\n\n  \"\"\"Delete a Profile\"\"\"\n  deleteProfile(input: DeleteProfileInput!): Profile\n\n  \"\"\"Adds entities to a Profile.\"\"\"\n  addEntitiesToProfile(input: UpdateEntitiesInput!): Profile\n\n  \"\"\"Removes entities from a Profile.\"\"\"\n  removeEntitiesFromProfile(input: UpdateEntitiesInput!): Profile\n\n  \"\"\"Grants Profile visibility to groups\"\"\"\n  grantProfileToGroup(input: GroupInput!): Profile\n\n  \"\"\"Creates a System.\"\"\"\n  createSystem(input: CreateSystemInput!): System\n\n  \"\"\"Updates a System.\"\"\"\n  updateSystem(input: UpdateSystemInput!): System\n\n  \"\"\"Set supplier mantainer\"\"\"\n  setSupplierMaintainer(supplierID: ID!, maintainer: ID!): Member\n  setProviderMaintainer(providerID: ID!, maintainer: ID!): Member\n\n  \"\"\"\n  Create organization. Require an user to be specified as the owner of the group.\n  \"\"\"\n  createOrganization(organization: CreateOrganizationInput!): Organization!\n\n  \"\"\"Updates organization information.\"\"\"\n  updateOrganization(organization: UpdateOrganizationInput!): Organization!\n\n  \"\"\"\n  Suit Organization. Requires an existing organization and a specific template.\n  \"\"\"\n  suitOrganization(organization: SuitOrganizationInput!): Organization!\n\n  \"\"\"Create folder.Requires an existing folder and a template\"\"\"\n  createFolder(folder: CreateFolderInput!): Group!\n\n  \"\"\"Create member; requires specific group and role\"\"\"\n  createMember(member: CreateMemberInput!): Member!\n\n  \"\"\"Create group; group \"owner\" is optional\"\"\"\n  createGroup(group: CreateGroupInput!): Group!\n\n  \"\"\"Update member additions or remove roles\"\"\"\n  updateMember(member: UpdateMemberInput!): Member!\n\n  \"\"\"Grant permissions to member.\"\"\"\n  grantPermissions(member: GrantPermissionsInput!): Member!\n\n  \"\"\"Revoke permissions to member.\"\"\"\n  revokePermissions(member: GrantPermissionsInput!): Member!\n\n  \"\"\"Clone member. Requires source and destination member.\"\"\"\n  clonePermissions(member: ClonePermissionsInput!): Member!\n\n  \"\"\"Update group additions or remove APIs\"\"\"\n  updateGroup(group: UpdateGroupInput!): Group!\n\n  \"\"\"Delete a member from specific group\"\"\"\n  deleteMember(member: [DeleteMemberInput!]!): Member!\n\n  \"\"\"Delete group and members from this group\"\"\"\n  deleteGroup(group: DeleteGroupInput!): Group!\n\n  \"\"\"Grant API to an existing group\"\"\"\n  grantApiToGroup(group: UpdateGroupAPISInput): Group!\n\n  \"\"\"Remove API from an existing group\"\"\"\n  revokeApiFromGroup(group: UpdateGroupAPISInput): Group!\n\n  \"\"\"Grant macro permission.\"\"\"\n  grantMacroPermissionsToMember(input: GrantMacroPermissionInput!): Member!\n\n  \"\"\"Revoke macro permission\"\"\"\n  revokeMacroPermissionsFromMember(input: GrantMacroPermissionInput!): Member!\n  addContact(organizationCode: ID!, type: OrganizationContactType!, user: ID!): Organization!\n  deleteContact(organizationCode: ID!, user: ID!): Organization!\n\n  \"\"\"Creates a Partner.\"\"\"\n  createPartner(data: PartnerCreateInput!): Partner!\n\n  \"\"\"Update a Partner.\"\"\"\n  updatePartner(data: PartnerUpdateInput!, where: PartnerWhereUniqueInput!): Partner!\n\n  \"\"\"Delete a Partner, from all groups\"\"\"\n  deletePartner(where: PartnerWhereUniqueInput!): Partner!\n\n  \"\"\"Add Partner to a group\"\"\"\n  addPartnerToOrganization(organizationCode: ID!, where: PartnerWhereUniqueInput!): Partner!\n\n  \"\"\"Delete Partner from a group\"\"\"\n  deletePartnerFromOrganization(organizationCode: ID!, where: PartnerWhereUniqueInput!): Partner!\n\n  \"\"\"set the primary Partner for an organizationCode\"\"\"\n  setPrimaryPartner(organizationCode: ID!, where: PartnerWhereUniqueInput!): Partner!\n\n  \"\"\"@intern\"\"\"\n  addAgent(PartnerCode: ID!, type: CustomerAgentType!, user: ID!): Partner!\n\n  \"\"\"@intern\"\"\"\n  deleteAgent(PartnerCode: ID!, user: ID!): Partner!\n}\n\n\"\"\"The admin query root of TravelgateX's GraphQL interface.\"\"\"\ntype AdminQuery {\n  \"\"\"Get JSON Web Token (JWT) linked to Member\"\"\"\n  jwt: JWT\n\n  \"\"\"Obtain a list of accesses for a filter\"\"\"\n  accesses(first: Int, last: Int, before: String, after: String, filter: AccessFilter): AccessConnection\n\n  \"\"\"Obtain all suppliers for a filter.\"\"\"\n  suppliers(first: Int, last: Int, before: String, after: String, filter: SupplierFilter): SupplierConnection\n\n  \"\"\"Obtain all clients for a filter.\"\"\"\n  clients(first: Int, last: Int, before: String, after: String, filter: ClientFilter): ClientConnection\n\n  \"\"\"Obtain a ServiceAPI\"\"\"\n  serviceApi(filter: ServiceApiFilter): ServiceApi\n\n  \"\"\"Obtain all Points of Sale for the filters\"\"\"\n  pointsOfSale(filter: PointOfSaleFilter): PointOfSaleConnection\n\n  \"\"\"Obtain all Profiles for the filters\"\"\"\n  profiles(filter: ProfileFilter): ProfileConnection\n\n  \"\"\"Obtain a set of entities\"\"\"\n  entities(filter: EntityFilter): EntityConnection @deprecated(reason: \"deprecated from 2019-08-21. Only for statsX product. Use client, supplier, accesess queries\")\n\n  \"\"\"Obtain all clients for a filter.\"\"\"\n  systems(first: Int, last: Int, before: String, after: String, filter: SystemFilter): SystemConnection\n\n  \"\"\"Get supplier mantainer\"\"\"\n  getSupplierMaintainer(supplierID: ID!): Member\n\n  \"\"\"Get provider mantainer\"\"\"\n  getProviderMaintainer(providerID: ID!): Member\n\n  \"\"\"Organizations list; specify organization codes to filter organizations\"\"\"\n  organizations(codes: [ID!], domains: [DomainName!], label: String, contains: String, crmID: String, first: Int, last: Int, before: String, after: String, orderBy: OrganizationOrderByInput): OrganizationConnection!\n\n  \"\"\"Product catalog; specify products codes to filter\"\"\"\n  products(codes: [ID!], first: Int, last: Int, before: String, after: String): ProductConnection!\n\n  \"\"\"Members list; specify member codes to filter members.\"\"\"\n  members(codes: [ID!], type: MemberType, first: Int, last: Int, before: String, after: String): MemberConnection!\n\n  \"\"\"Groups list; specify group codes to filter groups.\"\"\"\n  groups(codes: [ID!], contains: String, api: [ID!], codeStartsWith: String, type: GroupType, parentCode: ID, first: Int, last: Int, before: String, after: String): GroupConnection!\n\n  \"\"\"Apis list; specify api codes to filter apis.\"\"\"\n  apis(codes: [ID!], first: Int, last: Int, before: String, after: String): APIConnection!\n\n  \"\"\"Resources list; specify resource codes to filter resources.\"\"\"\n  resources(codes: [ID!], first: Int, last: Int, before: String, after: String): ResourceConnection!\n\n  \"\"\"Roles list; specify role codes to filter roles.\"\"\"\n  roles(codes: [ID!], type: RoleType, first: Int, last: Int, before: String, after: String): RoleConnection!\n\n  \"\"\"Operations list; specify operations codes to filter operations.\"\"\"\n  operations(codes: [ID!], type: OperationType, types: [OperationType!], first: Int, last: Int, before: String, after: String): OperationConnection!\n\n  \"\"\"Partners\"\"\"\n  partner(code: ID!): Partner!\n  allPartners(where: PartnerWhereInput, orderBy: PartnerOrderByInput, relay: RelayInput): PartnerConnection!\n}\n\n\"\"\"\nThe root query for implementing GraphQL mutations. Mutations are operations that change or update data on the server\n\"\"\"\ntype Mutation {\n  admin: AdminMutation\n  hotelX: HotelXMutation\n  mappea: MappeaMutation\n  paymentX: PaymentXMutation\n  alertsX: AlertsXMutation\n  flightX: FlightXMutation\n  logging: LoggingMutation\n  activation: ActivationMutation\n}\n\ntype HotelXMutation {\n  \"\"\"Saves defaults settings to HotelX\"\"\"\n  createDefaultSettings(group: ID!, clientName: ID, settings: HotelXDefaultSettingsDataInput!): HotelXDefaultSettings\n\n  \"\"\"Updates defaults settings to HotelX\"\"\"\n  updateDefaultSettings(group: ID!, clientName: ID, settings: HotelXDefaultSettingsDataInput!): HotelXDefaultSettings\n\n  \"\"\"Updates status of an entity of HotelX\"\"\"\n  updateStatus(group: ID!, access: ID, supplier: ID, clientName: ID, isActive: Boolean!): HotelXUpdateStatus\n  createCommonSettings(group: ID!, access: ID, supplier: ID, settings: HotelXCommonSettingsDataInput!): HotelXCommonSettings\n  updateCommonSettings(group: ID!, access: ID, supplier: ID, settings: HotelXCommonSettingsDataInput!): HotelXCommonSettings\n\n  \"\"\"\n  Creates a new hotel booking consisting of an option of 1 or more rooms.\n  \"\"\"\n  book(input: HotelBookInput!, settings: HotelSettingsInput, filter: HotelXFilterInput): HotelBookPayload\n\n  \"\"\"\n  Cancels an existing hotel booking consisting of an option of 1 or more rooms.\n  \"\"\"\n  cancel(input: HotelCancelInput!, settings: HotelSettingsInput, filter: HotelXFilterInput): HotelCancelPayload\n\n  \"\"\"Commits an existing booking\"\"\"\n  commit(input: HotelCommitInput!, settings: HotelSettingsInput): HotelCommitPayload\n  loadFile(input: String!): String! @deprecated(reason: \"deprecated from 2018-06-06\")\n}\n\ntype HotelXQuery {\n  \"\"\"Returns status of the hotelX configuration service.\"\"\"\n  hotelConfigurationStatusService: ServiceStatus!\n\n  \"\"\"Obtains the default settings of a group or of the client in the group.\"\"\"\n  defaultSettings(group: ID!, clientName: ID): HotelXDefaultSettings\n  commonSettings(group: ID!, access: ID, supplier: ID): HotelXCommonSettings\n\n  \"\"\"Query to obtain Boards\"\"\"\n  boards(criteria: HotelXBoardQueryInput!, relay: RelayInput!): BoardConnection!\n\n  \"\"\"Query to obtain Categories\"\"\"\n  categories(criteria: HotelXCategoryQueryInput!, relay: RelayInput!): CategoryConnection!\n\n  \"\"\"Query to obtain Hotels\"\"\"\n  hotels(criteria: HotelXHotelListInput!, relay: RelayInput!, token: String, filter: HotelXHotelFilterInput): HotelConnection!\n\n  \"\"\"Query to obtain rooms\"\"\"\n  rooms(criteria: HotelXRoomQueryInput!, relay: RelayInput!, token: String): RoomConnection!\n\n  \"\"\"Query to obtain Destinations\"\"\"\n  destinations(criteria: HotelXDestinationListInput!, relay: RelayInput!, token: String): DestinationConnection!\n\n  \"\"\"Returns hotels and destinations that contains the indicated text.\"\"\"\n  destinationSearcher(criteria: HotelXDestinationSearcherInput!): [DestinationSearchResult]!\n\n  \"\"\"\n  Return a list of the available MealPlans, which will be used in the availability response.\n  \"\"\"\n  metadata(criteria: HotelXMetadataQueryInput!, relay: RelayInput!): MetadataConnection!\n\n  \"\"\"\n  Available options of an hotel for a given date and itinerary. It does not filter different classes, times or\n  fares. It will always retrieve all results returned by the suppliers. The availability request is very straight\n  forward. It only requires the criteria of search (destination, travel dates and the number of pax in each room).\n  But you must preload the other fields in our system by complete the fields absents.\n  \"\"\"\n  search(criteria: HotelCriteriaSearchInput, settings: HotelSettingsInput, filter: FilterInput, filterSearch: HotelXFilterSearchInput): HotelSearch\n\n  \"\"\"\n  Returns the total price and cancellation policies of the Option selected in the previous step (Search).\n  \"\"\"\n  quote(criteria: HotelCriteriaQuoteInput!, settings: HotelSettingsInput, filter: HotelXFilterInput): HotelQuote\n\n  \"\"\"\n  Returns detailed information about books, you can search this books by indicating a list of locators, our HotelX booking ID or a range dates.\n  \"\"\"\n  booking(criteria: HotelCriteriaBookingInput!, settings: HotelSettingsInput, filter: HotelXFilterInput): HotelBooking\n\n  \"\"\"Returns status of the search service.\"\"\"\n  searchStatusService: ServiceStatus!\n\n  \"\"\"Returns status of the quote service.\"\"\"\n  quoteStatusService: ServiceStatus!\n\n  \"\"\"Returns status of the new booking service.\"\"\"\n  bookStatusService: ServiceStatus!\n\n  \"\"\"Returns status of the cancellation service.\"\"\"\n  cancelStatusService: ServiceStatus!\n\n  \"\"\"Returns status of the booking service.\"\"\"\n  bookingStatusService: ServiceStatus!\n\n  \"\"\"Returns status of the commit service.\"\"\"\n  commitStatusService: ServiceStatus!\n\n  \"\"\"\n  Returns map codes of a group. You can get hotel map, room map, and board map.\n  @deprecated(reason: \"deprecated from 2019-09-10. not operating or being used\")\n  \"\"\"\n  mapping(groupCode: String!): Mapping!\n\n  \"\"\"Returns a configuration teamplate of the supplier\"\"\"\n  runtimeConfiguration(supplierCode: ID!): HotelRuntimeConfiguration\n}\n\ntype InsightsQuery {\n  \"\"\"Retrieve Bookings Details and Summary\"\"\"\n  bookingsReport(where: BookingsReportWhereInput, orderBy: BookingsReportOrderByInput, groupBy: [BookingsReportGroupByInput!], limit: Int, relay: RelayInput): InsightsXBookingReport\n\n  \"\"\"Retrieve Mapping Report for HotelX\"\"\"\n  hotelXMappingReport(where: HotelXMappingReportWhereInput!): HotelXMappingReportResponse!\n}\n\ntype LoggingMutation {\n  createAuditRule(data: AuditRuleCreateInput!): AuditRuleConnection!\n  deleteAuditRule(where: AuditRuleWhereUniqueInput!): AuditRule!\n}\n\ntype LoggingQuery {\n  allAuditRules(where: AuditRuleWhereInput!): AuditRuleConnection!\n\n  \"\"\"retrieveLogsService(filter: LoggingFilterInput!): LoggingConnection!\"\"\"\n  retrieveStats(filter: LoggingLegacyFilterInput!): LoggingLegacyConnection!\n}\n\n\"\"\"The query root of TravelgateX's GraphQL interface.\"\"\"\ntype Query {\n  \"\"\"The admin query root of TravelgateX's for implementing GraphQL query.\"\"\"\n  admin: AdminQuery\n\n  \"\"\"The hotelX product query root for implementing GraphQL query.\"\"\"\n  hotelX: HotelXQuery\n\n  \"\"\"The Mappea product query root for implementing GraphQL query.\"\"\"\n  mappea: MappeaQuery\n\n  \"\"\"The PaymentX product query root for implementing GraphQL query.\"\"\"\n  paymentX: PaymentXQuery\n\n  \"\"\"The Stats product query root for implementing GraphQL query.\"\"\"\n  stats: StatsQuery\n\n  \"\"\"The Insights product query root for implementing GraphQL query.\"\"\"\n  insights: InsightsQuery\n\n  \"\"\"The alertsX product query root for implementing GraphQL query.\"\"\"\n  alertsX: AlertsXQuery\n  flightX: FlightXQuery\n  logging: LoggingQuery\n\n  \"\"\"The Activation query root for implementing GraphQL query.\"\"\"\n  activation: ActivationQuery\n}\n\ntype MappeaMutation {\n  confirmUpload(input: MappeaConfirmUploadInput!): OnlyStatusResponse!\n  uploadFile(input: MappeaUploadFileInput!): UploadFileResponse!\n  mapSupplier(input: MappeaMapSupplierInput!): OnlyStatusResponse!\n}\n\ntype MappeaQuery {\n  getUploadedFiles: GetUploadedFilesResponse!\n  getMappeaStats(input: MappeaGetMappeaStatsInput!): GetMappeaStatsResponse!\n}\n\ntype PaymentXMutation {\n  \"\"\"Store Card\"\"\"\n  storeCard(input: PaymentXStoredCardInput!): PaymentXStoredCard!\n\n  \"\"\"Delete Card\"\"\"\n  deleteStoredCard(criteria: PaymentXStoredCardIDInput!): PaymentXStoredCard!\n}\n\ntype PaymentXQuery {\n  \"\"\"Returns status of the vault service.\"\"\"\n  vaultStatusService: AdviseMessage!\n\n  \"\"\"\n  Returns the stored card list. For security, this query never will return clear card information. \n  \"\"\"\n  allStoredCards(filter: PaymentXStoredCardFilterInput!, instanceCode: String!): PaymentXStoredCardConnection!\n\n  \"\"\"Returns a stored card information. \"\"\"\n  storedCard(criteria: PaymentXStoredCardIDInput!): PaymentXStoredCard!\n}\n\ntype StatsQuery {\n  \"\"\"\n  The report query, represents all of the entry points into our object graph\n  \"\"\"\n  report(filter: StatsFilterInput!, first: Int, last: Int, before: String, after: String): StatsConnection!\n\n  \"\"\"Returns the active connections between a Client and Supplier\"\"\"\n  getActiveConnection(filter: ActiveFilterInput!): ConnectionConnection!\n}\n\n\"\"\"Indicates the authentication status of the transaction\"\"\"\nenum PayerResponseStatusType {\n  \"\"\"Successful Authentication\"\"\"\n  AUTHENTICATION_SUCCESS\n\n  \"\"\"Failed Authentication\"\"\"\n  AUTHENTICATION_FAILED\n\n  \"\"\"Unable to Complete Authentication\"\"\"\n  AUTHENTICATION_INCOMPLETE\n\n  \"\"\"Successful Attempts Transaction\"\"\"\n  TRANSACTION_ATTEMPT_SUCCESS_A\n\n  \"\"\"Successful Attempts Transaction\"\"\"\n  TRANSACTION_ATTEMPT_SUCCESS_B\n\n  \"\"\"Authentication Rejected (Merchant must not submit for authorisation)\"\"\"\n  AUTHENTICATION_REJECTED\n}\n\nenum ThreeDSCardEnrolledStatusType {\n  \"\"\"Card enrolled\"\"\"\n  CARD_ENROLLED\n\n  \"\"\"Card not enrolled\"\"\"\n  CARD_NOT_ENROLLED\n\n  \"\"\"Can not authenticate\"\"\"\n  CANT_AUTHENTICATE\n}\n\nenum ThreeDSSignatureStatusType {\n  \"\"\"Signature of the payer response has been validated successfully\"\"\"\n  SIGNATURE_VALIDATED\n\n  \"\"\"Signature of the payer response could not be validated\"\"\"\n  SIGNATURE_NOT_VALIDATED\n}\n\ninput ThreeDomainSecurityInput {\n  \"\"\"Three Domain Security Version\"\"\"\n  version: String\n\n  \"\"\"\n  Universally unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction.\n  \"\"\"\n  DSTransactionID: String\n\n  \"\"\"\n  Transaction identifier resulting from authentication processing. Uniquely identifies a 3D Secure check request.\n  \"\"\"\n  XID: String\n\n  \"\"\"Electronic Commerce Indicator\"\"\"\n  ECI: String\n\n  \"\"\"Cardholder Authentication Verification Value\"\"\"\n  CAVV: String\n\n  \"\"\"\n  Payer Authentication Response. It is the response to the Payer Authentication Request. The Payer Authentication Response has an XML structure with the information from the response of the authentication, and it contains a digital certificate as a sign of authenticity.\n  \"\"\"\n  payerResponse: String\n\n  \"\"\"Payer Authentication Response status\"\"\"\n  payerResponseStatus: PayerResponseStatusType\n\n  \"\"\"Result of enrollment status of the service request\"\"\"\n  cardEnrolledStatus: ThreeDSCardEnrolledStatusType\n\n  \"\"\"Merchant Name\"\"\"\n  merchantName: String\n\n  \"\"\"Signature value \"\"\"\n  signatureStatus: ThreeDSSignatureStatusType\n}\n\n\"\"\"Virtual credit card data\"\"\"\ninput VirtualCreditCardInput {\n  \"\"\"The Date from when the card can be charged\"\"\"\n  activationDate: Date\n\n  \"\"\"The date from when the card will no longer be chargeable.\"\"\"\n  deactivationDate: Date\n\n  \"\"\"The amount which can be charged to the card. \"\"\"\n  currentBalance: Float\n\n  \"\"\"The ISO currency code of the CurrentBalance.\"\"\"\n  currencyCode: Currency\n}\n\nunion Connection = Supplier | Client | Access\n\ntype ActivationMutation {\n  \"\"\"Connect mutation allows to connect a buyer against a seller\"\"\"\n  connect(data: ActivationConnectInput!): Activation!\n\n  \"\"\"\n  Validate mutation allows to validate a connection between a buyer and a seller\n  \"\"\"\n  validate(data: ActivationValidateInput!): Activation\n}\n\ntype ActivationQuery {\n  \"\"\"Activations query allows to return all activations filtered by input\"\"\"\n  activations(data: ActivationReadInput!): ActivationConnection!\n}\n\nenum ActivationStatus {\n  PENDING\n  AVAILABLE\n  MANUAL\n}\n\ninput ActivationConnectInput {\n  \"\"\"Buyer's organization code\"\"\"\n  organizationBuyerCode: ID\n\n  \"\"\"Buyer's HotelX Instance code\"\"\"\n  group: ID\n\n  \"\"\"Supplier configuration for this connection with buyer\"\"\"\n  accessConfiguration: AccessInput!\n}\n\ninput ActivationReadInput {\n  \"\"\"Buyer's organization code\"\"\"\n  organizationBuyerCode: ID\n\n  \"\"\"Seller's organization code\"\"\"\n  organizationSellerCode: ID\n}\n\ninput ActivationValidateInput {\n  \"\"\"Access code to be validated\"\"\"\n  accessCode: ID!\n\n  \"\"\"Client names of buyer organization to be validated\"\"\"\n  clientNames: [ID!]!\n}\n\ntype Activation implements Node {\n  code: ID!\n  activationData: ActivationData\n  createdAt: DateTime!\n  updatedAt: DateTime!\n  adviseMessage: [AdviseMessage]\n}\n\ntype ActivationConnection {\n  edges: [ActivationEdge]\n  pageInfo: PageInfo!\n\n  \"\"\"List of advise messages\"\"\"\n  adviseMessage(level: [AdviseMessageLevel]): [AdviseMessage!]\n\n  \"\"\"Identifies the total count of items in the connection\"\"\"\n  totalCount: Int!\n}\n\ntype ActivationData {\n  code: ID!\n  access: AccessData!\n  buyer: OrganizationData!\n  seller: OrganizationData!\n  requester: RequesterInfo\n  status: ActivationStatus!\n\n  \"\"\"Informs if the content information has been downloaded correctly\"\"\"\n  contentInfoDownloaded: Boolean!\n  createdAt: DateTime!\n  updatedAt: DateTime!\n}\n\ntype ActivationEdge {\n  node: Activation\n  cursor: String!\n}\n\ntype RequesterInfo {\n  organization: OrganizationData!\n  member: MemberData!\n}",
    "Universe": "type Query {\n  addOn(id: ID!): AddOn\n  calendarWidget(id: ID!, startingDate: String!): CalendarWidget!\n  calendarWidgets(hostId: ID!, startingDate: String!): [CalendarWidget]!\n  categories(keywords: String): [Category!]!\n  commissionCodes(code: PricingPlan, currencies: [CurrencyCode!]!): [CommissionCode!]!\n  discount(id: ID!): Discount!\n  event(id: ID!): Event!\n  eventSet(id: ID!): EventSet!\n  host(id: ID!): Host!\n  manageBasics(id: ID!): ManageBasics!\n  manageCustomize(id: ID!): ManageCustomize!\n  manageCustomizeTickets(id: ID!, startingDate: String!): ManageCustomizeTickets!\n  manageTickets(id: ID!): ManageTickets!\n  manageWhenRegularEntry(id: ID!): ManageWhenRegularEntry!\n  manageWhenTimedEntry(id: ID!): ManageWhenTimedEntry!\n  order(id: ID!): Order!\n  orderItem(id: ID!): OrderItem!\n  orderItems(\n    \"\"\"Select order items on a given order\"\"\"\n    id: ID!\n  ): [OrderItem!]!\n  profile(id: ID, slug: String): Profile!\n  settlementCurrency(latitude: Float!, longitude: Float!): CurrencyCode\n  timeSlotSelect(id: ID!): TimeSlotSelect!\n  timezone(latitude: Float!, longitude: Float!): String\n  transactionCurrency(latitude: Float!, longitude: Float!): CurrencyCode\n  transfer(token: String!): Transfer!\n  upgradableOrder(id: ID!, orderItemId: ID): UpgradableOrder!\n  viewer: Viewer!\n  whitelistedCountries: [Country!]!\n}\n\n\"\"\"A user who is selling tickets to Events on Universe\"\"\"\ntype Host implements User {\n  \"\"\"Add on order items\"\"\"\n  addOnOrderItems(\n    \"\"\"Search query for add on order items\"\"\"\n    search: String\n\n    \"\"\"Only returns add on order items after this date.\"\"\"\n    from: Date\n\n    \"\"\"Only returns add on order items for this state\"\"\"\n    checkInState: CheckInState\n    states: [OrderItemState!]\n    page: Int = 1\n    perPage: Int = 10\n  ): OrderItemConnection\n\n  \"\"\"Account level rates that belong to this host.\"\"\"\n  addOns(\n    \"\"\"state of add-ons to return\"\"\"\n    state: String\n    listingId: ID\n    currency: CurrencyCode\n  ): AddOnConnection!\n  admin: Boolean!\n\n  \"\"\"\n  Analytics data for this host (have to be the host or have membership to the host's organization)\n  \"\"\"\n  analytics: Analytics!\n\n  \"\"\"\n  A list of all attendees for all Events and all TimeSlots for which this host has sold tickets on Universe. Includes tickets from all states, including invalid.\n  \"\"\"\n  attendees: AttendeeConnection!\n\n  \"\"\"The avatar URL, 160x160 pixels\"\"\"\n  avatarUrl: String\n\n  \"\"\"\n  The user has configured their account as a business - does not have a last name\n  \"\"\"\n  business: Boolean!\n\n  \"\"\"\n  The Commission Codes (pricing details) the host is set to for any currency/countries they have sold tickets for - does not include any event or rate specific custom overrides\n  \"\"\"\n  commissionCodes: [CommissionCode!]!\n\n  \"\"\"\n  the settlement currencies of the host (have to be the host or have membership to the host's organization)\n  \"\"\"\n  currencies: [CurrencyCode!]!\n\n  \"\"\"An account level custom report belonging to this host\"\"\"\n  customReport(id: ID!): CustomReport!\n\n  \"\"\"All account level custom reports created by this host\"\"\"\n  customReports(\n    \"\"\"Search query for custom reports\"\"\"\n    search: String\n  ): CustomReportConnection!\n\n  \"\"\"A list of dates with future / ongoing events\"\"\"\n  datesCalendar: [Date!]!\n\n  \"\"\"A user-defined description\"\"\"\n  description: String\n\n  \"\"\"\n  Account level discounts that belong to this host. Sorted by state (ascending), then code name\n  \"\"\"\n  discounts(search: String): DiscountConnection!\n\n  \"\"\"Returns calculated all in pricing for a single rate\"\"\"\n  displayPrice(settlementCurrency: String!, country: String!, price: Float!, rateId: ID): Float\n\n  \"\"\"The settlement currencies used on events by the host\"\"\"\n  eventCurrencies: [CurrencyCode!]!\n\n  \"\"\"\n  All Events by this host (have to be the host or have membership to the host's organization)\n  \"\"\"\n  events(slugs: [String!], currency: CurrencyCode, states: [EventState!], search: String): EventConnection!\n\n  \"\"\"\n  All Events (events that have sales) by this host (sorted by live Events (ascending order), then expired / archived events  (have to be the host or have membership to the host's organization).\n  \"\"\"\n  eventsWithTickets(\n    currency: CurrencyCode\n\n    \"\"\"Only return Events within the specified time frame\"\"\"\n    from: Date\n\n    \"\"\"Only return Events within the specified time frame\"\"\"\n    to: Date\n\n    \"\"\"Include events that have sales (not free tickets)\"\"\"\n    paid: Boolean\n\n    \"\"\"Include events that have free ticket sales\"\"\"\n    free: Boolean\n  ): EventConnection!\n\n  \"\"\"\n  All non-hidden Events within the given range that were hosted by this user.\n  \"\"\"\n  eventsWithTicketsInRange(\n    currency: CurrencyCode\n\n    \"\"\"Only return Events within the specified time frame\"\"\"\n    from: Date\n\n    \"\"\"Only return Events within the specified time frame\"\"\"\n    to: Date\n  ): EventConnection!\n\n  \"\"\"The first name of the type implementing a User interface\"\"\"\n  firstName: String\n\n  \"\"\"\n  Whether the host can choose to pass on Universe service fees to the buyer.\n  \"\"\"\n  forceHostToPayCommission: Boolean\n\n  \"\"\"Google Analytics Ecommerce\"\"\"\n  googleAnalyticsEcommerce: Boolean\n\n  \"\"\"Google Analytics Id\"\"\"\n  googleAnalyticsId: String\n  hasLiveEvents: Boolean\n\n  \"\"\"\n  Events hosted by this host with past Time Slots sorted by their most recently ended timeslot endAt, unique by Event (have to be the host or have membership to the host's organization)\n  \"\"\"\n  hosted(state: EventState): EventConnection!\n\n  \"\"\"\n  Events hosted by this host with future Time Slots (have to be the host or have membership to the host's organization)\n  \"\"\"\n  hosting(states: [EventState!], currency: CurrencyCode, transactionalCurrency: CurrencyCode, slugs: [String!], addOnId: ID): EventConnection!\n  id: ID\n\n  \"\"\"The last name of the type implementing a User interface\"\"\"\n  lastName: String\n\n  \"\"\"User locale\"\"\"\n  locale: Locale\n\n  \"\"\"A single field concatenating firstName and lastName\"\"\"\n  name: String\n\n  \"\"\"Orders created for inventory owned by this host\"\"\"\n  orders: OrderConnection\n  organization: Organization!\n\n  \"\"\"Whether the organization has rebate functionality enabled.\"\"\"\n  rebates: Boolean\n\n  \"\"\"All events for this host ordered by the most recently updated\"\"\"\n  recentlyUpdatedEvents(states: [EventState!]): EventConnection!\n  report(\n    \"\"\"type of report\"\"\"\n    name: String = \"AttendeesReport\"\n\n    \"\"\"columns to return\"\"\"\n    columns: [String] = []\n\n    \"\"\"array of {key: value} or 'string' where clauses\"\"\"\n    clauses: [JSON] = []\n  ): Report!\n\n  \"\"\"The type of the viewer account (Admin, User, Spammer, etc)\"\"\"\n  role: UserRole!\n\n  \"\"\"\n  The seats designer key from Seats.io. Used to embed the seats.io floor plan designer.\n  \"\"\"\n  seatsDesignerKey: String\n\n  \"\"\"\n  A unique identifier, shorter version of the ID. Should be used for URI construction.\n  \"\"\"\n  slug: String\n\n  \"\"\"The avatar URL, 50x50 pixels\"\"\"\n  smallAvatarUrl: String\n\n  \"\"\"\n  Events hosted by this host with Time Slots sorted by their starting timeslot startAt\n  \"\"\"\n  sortedEvents(states: [EventState!]): EventConnection!\n\n  \"\"\"Linked stripe connect accounts\"\"\"\n  stripeConnectAccounts: [StripeConnectAccount]!\n  superAdmin: Boolean!\n\n  \"\"\"Taxes created by this host\"\"\"\n  taxes: TaxConnection\n\n  \"\"\"\n  A list of ongoing / future TimeSlots, sorted by startAt, unique by startDate and Event.\n  \"\"\"\n  timeSlotsCalendar(\n    \"\"\"Supply an ISO8601-formatted date string to filter time slots by date\"\"\"\n    date: Date\n  ): TimeSlotConnection!\n\n  \"\"\"The transactional currencies used on events by the host\"\"\"\n  transactionalCurrencies: [CurrencyCode!]!\n}\n\n\"\"\"The most common 'person'-level interface in Universe\"\"\"\ninterface User {\n  admin: Boolean!\n\n  \"\"\"The avatar URL, 160x160 pixels\"\"\"\n  avatarUrl: String\n\n  \"\"\"A user-defined description\"\"\"\n  description: String\n\n  \"\"\"The first name of the type implementing a User interface\"\"\"\n  firstName: String\n  id: ID\n\n  \"\"\"The last name of the type implementing a User interface\"\"\"\n  lastName: String\n\n  \"\"\"User locale\"\"\"\n  locale: Locale\n\n  \"\"\"A single field concatenating firstName and lastName\"\"\"\n  name: String\n\n  \"\"\"The type of the viewer account (Admin, User, Spammer, etc)\"\"\"\n  role: UserRole!\n\n  \"\"\"\n  A unique identifier, shorter version of the ID. Should be used for URI construction.\n  \"\"\"\n  slug: String\n\n  \"\"\"The avatar URL, 50x50 pixels\"\"\"\n  smallAvatarUrl: String\n  superAdmin: Boolean!\n}\n\n\"\"\"Possible roles a user can have\"\"\"\nenum UserRole {\n  \"\"\"The user has the default account type\"\"\"\n  USER\n\n  \"\"\"The user has been marked as a spammer\"\"\"\n  SPAMMER\n\n  \"\"\"The user has an admin account\"\"\"\n  ADMIN\n\n  \"\"\"The user has a super admin account\"\"\"\n  SUPER_ADMIN\n\n  \"\"\"The user has a developer account\"\"\"\n  DEVELOPER\n\n  \"\"\"The user has a sales account\"\"\"\n  SALES\n\n  \"\"\"The user has a sales admin account\"\"\"\n  SALES_ADMIN\n\n  \"\"\"The user has a (tm) finance account\"\"\"\n  FINANCE\n\n  \"\"\"The user has an Agent (call centre) account\"\"\"\n  AGENT\n}\n\n\"\"\"Supported locales\"\"\"\nenum Locale {\n  \"\"\"English\"\"\"\n  EN\n\n  \"\"\"Deutsch\"\"\"\n  DE\n\n  \"\"\"Espa\u00f1ol\"\"\"\n  ES\n\n  \"\"\"Fran\u00e7ais\"\"\"\n  FR\n\n  \"\"\"Nederlands\"\"\"\n  NL\n\n  \"\"\"Dansk\"\"\"\n  DA\n\n  \"\"\"Svenska\"\"\"\n  SV\n\n  \"\"\"Norsk Bokm\u00e5l\"\"\"\n  NB\n\n  \"\"\"Nederlands (Belgi\u00eb)\"\"\"\n  NL_BE\n\n  \"\"\"\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac\"\"\"\n  EL\n\n  \"\"\"Suomen kieli\"\"\"\n  FI\n}\n\n\"\"\"the organization owned by a particular user\"\"\"\ntype Organization {\n  commissionCode: String!\n\n  \"\"\"In UTC\"\"\"\n  createdAt: Time!\n  id: ID!\n  name: String\n\n  \"\"\"In UTC\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"\nTime string with timezone in ISO 8601 format. eg. 2017-09-15T17:50:00-04:00\n\"\"\"\nscalar Time\n\n\"\"\"Date string in ISO 8601 format: YYYY-mm-dd\"\"\"\nscalar Date\n\ntype CommissionCode {\n  brokerFee: Float!\n  code: String!\n  country: CountryCode\n  currency: CurrencyCode!\n  flat: Float\n  id: ID!\n  max: Float\n  percent: Float\n}\n\n\"\"\"ISO 3166-1 alpha-2 country codes\"\"\"\nenum CountryCode {\n  \"\"\"Andorra\"\"\"\n  AD\n\n  \"\"\"United Arab Emirates\"\"\"\n  AE\n\n  \"\"\"Afghanistan\"\"\"\n  AF\n\n  \"\"\"Antigua and Barbuda\"\"\"\n  AG\n\n  \"\"\"Anguilla\"\"\"\n  AI\n\n  \"\"\"Albania\"\"\"\n  AL\n\n  \"\"\"Armenia\"\"\"\n  AM\n\n  \"\"\"Angola\"\"\"\n  AO\n\n  \"\"\"Argentina\"\"\"\n  AR\n\n  \"\"\"American Samoa\"\"\"\n  AS\n\n  \"\"\"Austria\"\"\"\n  AT\n\n  \"\"\"Australia\"\"\"\n  AU\n\n  \"\"\"Aruba\"\"\"\n  AW\n\n  \"\"\"\u00c5land Islands\"\"\"\n  AX\n\n  \"\"\"Azerbaijan\"\"\"\n  AZ\n\n  \"\"\"Bosnia and Herzegovina\"\"\"\n  BA\n\n  \"\"\"Barbados\"\"\"\n  BB\n\n  \"\"\"Bangladesh\"\"\"\n  BD\n\n  \"\"\"Belgium\"\"\"\n  BE\n\n  \"\"\"Burkina Faso\"\"\"\n  BF\n\n  \"\"\"Bulgaria\"\"\"\n  BG\n\n  \"\"\"Bahrain\"\"\"\n  BH\n\n  \"\"\"Burundi\"\"\"\n  BI\n\n  \"\"\"Benin\"\"\"\n  BJ\n\n  \"\"\"Saint Barth\u00e9lemy\"\"\"\n  BL\n\n  \"\"\"Bermuda\"\"\"\n  BM\n\n  \"\"\"Brunei Darussalam\"\"\"\n  BN\n\n  \"\"\"Bolivia\"\"\"\n  BO\n\n  \"\"\"Brazil\"\"\"\n  BR\n\n  \"\"\"Bahamas\"\"\"\n  BS\n\n  \"\"\"Bhutan\"\"\"\n  BT\n\n  \"\"\"Botswana\"\"\"\n  BW\n\n  \"\"\"Belarus\"\"\"\n  BY\n\n  \"\"\"Belize\"\"\"\n  BZ\n\n  \"\"\"Canada\"\"\"\n  CA\n\n  \"\"\"Cocos (Keeling) Islands\"\"\"\n  CC\n\n  \"\"\"Congo\"\"\"\n  CD\n\n  \"\"\"Central African Republic\"\"\"\n  CF\n\n  \"\"\"Congo\"\"\"\n  CG\n\n  \"\"\"Switzerland\"\"\"\n  CH\n\n  \"\"\"C\u00f4te d'Ivoire\"\"\"\n  CI\n\n  \"\"\"Cook Islands\"\"\"\n  CK\n\n  \"\"\"Chile\"\"\"\n  CL\n\n  \"\"\"Cameroon\"\"\"\n  CM\n\n  \"\"\"China\"\"\"\n  CN\n\n  \"\"\"Colombia\"\"\"\n  CO\n\n  \"\"\"Costa Rica\"\"\"\n  CR\n\n  \"\"\"Cuba\"\"\"\n  CU\n\n  \"\"\"Cape Verde\"\"\"\n  CV\n\n  \"\"\"Cura\u00e7ao\"\"\"\n  CW\n\n  \"\"\"Christmas Island\"\"\"\n  CX\n\n  \"\"\"Cyprus\"\"\"\n  CY\n\n  \"\"\"Czech Republic\"\"\"\n  CZ\n\n  \"\"\"Germany\"\"\"\n  DE\n\n  \"\"\"Djibouti\"\"\"\n  DJ\n\n  \"\"\"Denmark\"\"\"\n  DK\n\n  \"\"\"Dominica\"\"\"\n  DM\n\n  \"\"\"Dominican Republic\"\"\"\n  DO\n\n  \"\"\"Algeria\"\"\"\n  DZ\n\n  \"\"\"Ecuador\"\"\"\n  EC\n\n  \"\"\"Estonia\"\"\"\n  EE\n\n  \"\"\"Egypt\"\"\"\n  EG\n\n  \"\"\"Western Sahara\"\"\"\n  EH\n\n  \"\"\"Eritrea\"\"\"\n  ER\n\n  \"\"\"Spain\"\"\"\n  ES\n\n  \"\"\"Ethiopia\"\"\"\n  ET\n\n  \"\"\"Finland\"\"\"\n  FI\n\n  \"\"\"Fiji\"\"\"\n  FJ\n\n  \"\"\"Falkland Islands (Malvinas)\"\"\"\n  FK\n\n  \"\"\"Micronesia\"\"\"\n  FM\n\n  \"\"\"Faroe Islands\"\"\"\n  FO\n\n  \"\"\"France\"\"\"\n  FR\n\n  \"\"\"Gabon\"\"\"\n  GA\n\n  \"\"\"United Kingdom\"\"\"\n  GB\n\n  \"\"\"Grenada\"\"\"\n  GD\n\n  \"\"\"Georgia\"\"\"\n  GE\n\n  \"\"\"French Guiana\"\"\"\n  GF\n\n  \"\"\"Guernsey\"\"\"\n  GG\n\n  \"\"\"Ghana\"\"\"\n  GH\n\n  \"\"\"Gibraltar\"\"\"\n  GI\n\n  \"\"\"Greenland\"\"\"\n  GL\n\n  \"\"\"Gambia\"\"\"\n  GM\n\n  \"\"\"Guinea\"\"\"\n  GN\n\n  \"\"\"Guadeloupe\"\"\"\n  GP\n\n  \"\"\"Equatorial Guinea\"\"\"\n  GQ\n\n  \"\"\"Greece\"\"\"\n  GR\n\n  \"\"\"South Georgia and the South Sandwich Islands\"\"\"\n  GS\n\n  \"\"\"Guatemala\"\"\"\n  GT\n\n  \"\"\"Guam\"\"\"\n  GU\n\n  \"\"\"Guinea-Bissau\"\"\"\n  GW\n\n  \"\"\"Guyana\"\"\"\n  GY\n\n  \"\"\"Hong Kong\"\"\"\n  HK\n\n  \"\"\"Honduras\"\"\"\n  HN\n\n  \"\"\"Croatia\"\"\"\n  HR\n\n  \"\"\"Haiti\"\"\"\n  HT\n\n  \"\"\"Hungary\"\"\"\n  HU\n\n  \"\"\"Indonesia\"\"\"\n  ID\n\n  \"\"\"Ireland\"\"\"\n  IE\n\n  \"\"\"Israel\"\"\"\n  IL\n\n  \"\"\"Isle of Man\"\"\"\n  IM\n\n  \"\"\"India\"\"\"\n  IN\n\n  \"\"\"Iraq\"\"\"\n  IQ\n\n  \"\"\"Iran\"\"\"\n  IR\n\n  \"\"\"Iceland\"\"\"\n  IS\n\n  \"\"\"Italy\"\"\"\n  IT\n\n  \"\"\"Jersey\"\"\"\n  JE\n\n  \"\"\"Jamaica\"\"\"\n  JM\n\n  \"\"\"Jordan\"\"\"\n  JO\n\n  \"\"\"Japan\"\"\"\n  JP\n\n  \"\"\"Kenya\"\"\"\n  KE\n\n  \"\"\"Kyrgyzstan\"\"\"\n  KG\n\n  \"\"\"Cambodia\"\"\"\n  KH\n\n  \"\"\"Kiribati\"\"\"\n  KI\n\n  \"\"\"Comoros\"\"\"\n  KM\n\n  \"\"\"Saint Kitts and Nevis\"\"\"\n  KN\n\n  \"\"\"North Korea\"\"\"\n  KP\n\n  \"\"\"South Korea\"\"\"\n  KR\n\n  \"\"\"Kuwait\"\"\"\n  KW\n\n  \"\"\"Cayman Islands\"\"\"\n  KY\n\n  \"\"\"Kazakhstan\"\"\"\n  KZ\n\n  \"\"\"Lao\"\"\"\n  LA\n\n  \"\"\"Lebanon\"\"\"\n  LB\n\n  \"\"\"Saint Lucia\"\"\"\n  LC\n\n  \"\"\"Liechtenstein\"\"\"\n  LI\n\n  \"\"\"Sri Lanka\"\"\"\n  LK\n\n  \"\"\"Liberia\"\"\"\n  LR\n\n  \"\"\"Lesotho\"\"\"\n  LS\n\n  \"\"\"Lithuania\"\"\"\n  LT\n\n  \"\"\"Luxembourg\"\"\"\n  LU\n\n  \"\"\"Latvia\"\"\"\n  LV\n\n  \"\"\"Libya\"\"\"\n  LY\n\n  \"\"\"Morocco\"\"\"\n  MA\n\n  \"\"\"Monaco\"\"\"\n  MC\n\n  \"\"\"Moldova\"\"\"\n  MD\n\n  \"\"\"Montenegro\"\"\"\n  ME\n\n  \"\"\"Saint Martin\"\"\"\n  MF\n\n  \"\"\"Madagascar\"\"\"\n  MG\n\n  \"\"\"Marshall Islands\"\"\"\n  MH\n\n  \"\"\"Macedonia\"\"\"\n  MK\n\n  \"\"\"Mali\"\"\"\n  ML\n\n  \"\"\"Myanmar\"\"\"\n  MM\n\n  \"\"\"Mongolia\"\"\"\n  MN\n\n  \"\"\"Macao\"\"\"\n  MO\n\n  \"\"\"Northern Mariana Islands\"\"\"\n  MP\n\n  \"\"\"Martinique\"\"\"\n  MQ\n\n  \"\"\"Mauritania\"\"\"\n  MR\n\n  \"\"\"Montserrat\"\"\"\n  MS\n\n  \"\"\"Malta\"\"\"\n  MT\n\n  \"\"\"Mauritius\"\"\"\n  MU\n\n  \"\"\"Maldives\"\"\"\n  MV\n\n  \"\"\"Malawi\"\"\"\n  MW\n\n  \"\"\"Mexico\"\"\"\n  MX\n\n  \"\"\"Malaysia\"\"\"\n  MY\n\n  \"\"\"Mozambique\"\"\"\n  MZ\n\n  \"\"\"Namibia\"\"\"\n  NA\n\n  \"\"\"New Caledonia\"\"\"\n  NC\n\n  \"\"\"Niger\"\"\"\n  NE\n\n  \"\"\"Norfolk Island\"\"\"\n  NF\n\n  \"\"\"Nigeria\"\"\"\n  NG\n\n  \"\"\"Nicaragua\"\"\"\n  NI\n\n  \"\"\"Netherlands\"\"\"\n  NL\n\n  \"\"\"Norway\"\"\"\n  NO\n\n  \"\"\"Nepal\"\"\"\n  NP\n\n  \"\"\"Nauru\"\"\"\n  NR\n\n  \"\"\"Niue\"\"\"\n  NU\n\n  \"\"\"New Zealand\"\"\"\n  NZ\n\n  \"\"\"Oman\"\"\"\n  OM\n\n  \"\"\"Panama\"\"\"\n  PA\n\n  \"\"\"Peru\"\"\"\n  PE\n\n  \"\"\"French Polynesia\"\"\"\n  PF\n\n  \"\"\"Papua New Guinea\"\"\"\n  PG\n\n  \"\"\"Philippines\"\"\"\n  PH\n\n  \"\"\"Pakistan\"\"\"\n  PK\n\n  \"\"\"Poland\"\"\"\n  PL\n\n  \"\"\"Saint Pierre and Miquelon\"\"\"\n  PM\n\n  \"\"\"Pitcairn\"\"\"\n  PN\n\n  \"\"\"Puerto Rico\"\"\"\n  PR\n\n  \"\"\"Palestine\"\"\"\n  PS\n\n  \"\"\"Portugal\"\"\"\n  PT\n\n  \"\"\"Palau\"\"\"\n  PW\n\n  \"\"\"Paraguay\"\"\"\n  PY\n\n  \"\"\"Qatar\"\"\"\n  QA\n\n  \"\"\"R\u00e9union\"\"\"\n  RE\n\n  \"\"\"Romania\"\"\"\n  RO\n\n  \"\"\"Serbia\"\"\"\n  RS\n\n  \"\"\"Russia\"\"\"\n  RU\n\n  \"\"\"Rwanda\"\"\"\n  RW\n\n  \"\"\"Saudi Arabia\"\"\"\n  SA\n\n  \"\"\"Solomon Islands\"\"\"\n  SB\n\n  \"\"\"Seychelles\"\"\"\n  SC\n\n  \"\"\"Sudan\"\"\"\n  SD\n\n  \"\"\"Sweden\"\"\"\n  SE\n\n  \"\"\"Singapore\"\"\"\n  SG\n\n  \"\"\"Saint Helena, Ascension and Tristan da Cunha\"\"\"\n  SH\n\n  \"\"\"Slovenia\"\"\"\n  SI\n\n  \"\"\"Svalbard and Jan Mayen\"\"\"\n  SJ\n\n  \"\"\"Slovakia\"\"\"\n  SK\n\n  \"\"\"Sierra Leone\"\"\"\n  SL\n\n  \"\"\"San Marino\"\"\"\n  SM\n\n  \"\"\"Senegal\"\"\"\n  SN\n\n  \"\"\"Somalia\"\"\"\n  SO\n\n  \"\"\"Suriname\"\"\"\n  SR\n\n  \"\"\"South Sudan\"\"\"\n  SS\n\n  \"\"\"Sao Tome and Principe\"\"\"\n  ST\n\n  \"\"\"El Salvador\"\"\"\n  SV\n\n  \"\"\"Sint Maarten\"\"\"\n  SX\n\n  \"\"\"Syrian Arab Republic\"\"\"\n  SY\n\n  \"\"\"Swaziland\"\"\"\n  SZ\n\n  \"\"\"Turks and Caicos Islands\"\"\"\n  TC\n\n  \"\"\"Chad\"\"\"\n  TD\n\n  \"\"\"French Southern Territories\"\"\"\n  TF\n\n  \"\"\"Togo\"\"\"\n  TG\n\n  \"\"\"Thailand\"\"\"\n  TH\n\n  \"\"\"Tajikistan\"\"\"\n  TJ\n\n  \"\"\"Timor-Leste\"\"\"\n  TL\n\n  \"\"\"Turkmenistan\"\"\"\n  TM\n\n  \"\"\"Tunisia\"\"\"\n  TN\n\n  \"\"\"Tonga\"\"\"\n  TO\n\n  \"\"\"Turkey\"\"\"\n  TR\n\n  \"\"\"Trinidad and Tobago\"\"\"\n  TT\n\n  \"\"\"Tuvalu\"\"\"\n  TV\n\n  \"\"\"Taiwan\"\"\"\n  TW\n\n  \"\"\"Tanzania\"\"\"\n  TZ\n\n  \"\"\"Ukraine\"\"\"\n  UA\n\n  \"\"\"Uganda\"\"\"\n  UG\n\n  \"\"\"United States\"\"\"\n  US\n\n  \"\"\"Uruguay\"\"\"\n  UY\n\n  \"\"\"Uzbekistan\"\"\"\n  UZ\n\n  \"\"\"Vatican City\"\"\"\n  VA\n\n  \"\"\"Saint Vincent and the Grenadines\"\"\"\n  VC\n\n  \"\"\"Venezuela\"\"\"\n  VE\n\n  \"\"\"British Virgin Islands\"\"\"\n  VG\n\n  \"\"\"US Virgin Islands\"\"\"\n  VI\n\n  \"\"\"Viet Nam\"\"\"\n  VN\n\n  \"\"\"Vanuatu\"\"\"\n  VU\n\n  \"\"\"Wallis and Futuna\"\"\"\n  WF\n\n  \"\"\"Samoa\"\"\"\n  WS\n\n  \"\"\"Kosovo\"\"\"\n  XK\n\n  \"\"\"Yemen\"\"\"\n  YE\n\n  \"\"\"Mayotte\"\"\"\n  YT\n\n  \"\"\"South Africa\"\"\"\n  ZA\n\n  \"\"\"Zambia\"\"\"\n  ZM\n\n  \"\"\"Zimbabwe\"\"\"\n  ZW\n}\n\n\"\"\"ISO 4217 currency codes\"\"\"\nenum CurrencyCode {\n  \"\"\"\u062f.\u0625 AED\"\"\"\n  AED\n\n  \"\"\"\u060b AFN\"\"\"\n  AFN\n\n  \"\"\"L ALL\"\"\"\n  ALL\n\n  \"\"\"\u0564\u0580. AMD\"\"\"\n  AMD\n\n  \"\"\"\u0192 ANG\"\"\"\n  ANG\n\n  \"\"\"Kz AOA\"\"\"\n  AOA\n\n  \"\"\"$ ARS\"\"\"\n  ARS\n\n  \"\"\"$ AUD\"\"\"\n  AUD\n\n  \"\"\"\u0192 AWG\"\"\"\n  AWG\n\n  \"\"\"AZN\"\"\"\n  AZN\n\n  \"\"\"\u041a\u041c BAM\"\"\"\n  BAM\n\n  \"\"\"$ BBD\"\"\"\n  BBD\n\n  \"\"\"\u09f3 BDT\"\"\"\n  BDT\n\n  \"\"\"\u043b\u0432 BGN\"\"\"\n  BGN\n\n  \"\"\"\u0628.\u062f BHD\"\"\"\n  BHD\n\n  \"\"\"Fr BIF\"\"\"\n  BIF\n\n  \"\"\"$ BMD\"\"\"\n  BMD\n\n  \"\"\"$ BND\"\"\"\n  BND\n\n  \"\"\"Bs. BOB\"\"\"\n  BOB\n\n  \"\"\"R$ BRL\"\"\"\n  BRL\n\n  \"\"\"$ BSD\"\"\"\n  BSD\n\n  \"\"\"B\u20e6 BTC\"\"\"\n  BTC\n\n  \"\"\"Nu. BTN\"\"\"\n  BTN\n\n  \"\"\"P BWP\"\"\"\n  BWP\n\n  \"\"\"Br BYN\"\"\"\n  BYN\n\n  \"\"\"$ BZD\"\"\"\n  BZD\n\n  \"\"\"$ CAD\"\"\"\n  CAD\n\n  \"\"\"Fr CDF\"\"\"\n  CDF\n\n  \"\"\"Fr CHF\"\"\"\n  CHF\n\n  \"\"\"UF CLF\"\"\"\n  CLF\n\n  \"\"\"$ CLP\"\"\"\n  CLP\n\n  \"\"\"\u00a5 CNY\"\"\"\n  CNY\n\n  \"\"\"$ COP\"\"\"\n  COP\n\n  \"\"\"\u20a1 CRC\"\"\"\n  CRC\n\n  \"\"\"$ CUC\"\"\"\n  CUC\n\n  \"\"\"$ CUP\"\"\"\n  CUP\n\n  \"\"\"$ CVE\"\"\"\n  CVE\n\n  \"\"\"K\u010d CZK\"\"\"\n  CZK\n\n  \"\"\"Fdj DJF\"\"\"\n  DJF\n\n  \"\"\"kr DKK\"\"\"\n  DKK\n\n  \"\"\"$ DOP\"\"\"\n  DOP\n\n  \"\"\"\u062f.\u062c DZD\"\"\"\n  DZD\n\n  \"\"\"\u062c.\u0645 EGP\"\"\"\n  EGP\n\n  \"\"\"Nfk ERN\"\"\"\n  ERN\n\n  \"\"\"Br ETB\"\"\"\n  ETB\n\n  \"\"\"\u20ac EUR\"\"\"\n  EUR\n\n  \"\"\"$ FJD\"\"\"\n  FJD\n\n  \"\"\"\u00a3 FKP\"\"\"\n  FKP\n\n  \"\"\"\u00a3 GBP\"\"\"\n  GBP\n\n  \"\"\"\u10da GEL\"\"\"\n  GEL\n\n  \"\"\"GGP\"\"\"\n  GGP\n\n  \"\"\"\u20b5 GHS\"\"\"\n  GHS\n\n  \"\"\"\u00a3 GIP\"\"\"\n  GIP\n\n  \"\"\"D GMD\"\"\"\n  GMD\n\n  \"\"\"Fr GNF\"\"\"\n  GNF\n\n  \"\"\"Q GTQ\"\"\"\n  GTQ\n\n  \"\"\"$ GYD\"\"\"\n  GYD\n\n  \"\"\"$ HKD\"\"\"\n  HKD\n\n  \"\"\"L HNL\"\"\"\n  HNL\n\n  \"\"\"kn HRK\"\"\"\n  HRK\n\n  \"\"\"G HTG\"\"\"\n  HTG\n\n  \"\"\"Ft HUF\"\"\"\n  HUF\n\n  \"\"\"Rp IDR\"\"\"\n  IDR\n\n  \"\"\"\u20aa ILS\"\"\"\n  ILS\n\n  \"\"\"IMP\"\"\"\n  IMP\n\n  \"\"\"<U+20B9> INR\"\"\"\n  INR\n\n  \"\"\"\u0639.\u062f IQD\"\"\"\n  IQD\n\n  \"\"\"\ufdfc IRR\"\"\"\n  IRR\n\n  \"\"\"kr ISK\"\"\"\n  ISK\n\n  \"\"\"\u00a3 JEP\"\"\"\n  JEP\n\n  \"\"\"$ JMD\"\"\"\n  JMD\n\n  \"\"\"\u062f.\u0627 JOD\"\"\"\n  JOD\n\n  \"\"\"\u00a5 JPY\"\"\"\n  JPY\n\n  \"\"\"KSh KES\"\"\"\n  KES\n\n  \"\"\"som KGS\"\"\"\n  KGS\n\n  \"\"\"\u17db KHR\"\"\"\n  KHR\n\n  \"\"\"Fr KMF\"\"\"\n  KMF\n\n  \"\"\"\u20a9 KPW\"\"\"\n  KPW\n\n  \"\"\"\u20a9 KRW\"\"\"\n  KRW\n\n  \"\"\"\u062f.\u0643 KWD\"\"\"\n  KWD\n\n  \"\"\"$ KYD\"\"\"\n  KYD\n\n  \"\"\"\u3012 KZT\"\"\"\n  KZT\n\n  \"\"\"\u20ad LAK\"\"\"\n  LAK\n\n  \"\"\"\u0644.\u0644 LBP\"\"\"\n  LBP\n\n  \"\"\"\u20a8 LKR\"\"\"\n  LKR\n\n  \"\"\"$ LRD\"\"\"\n  LRD\n\n  \"\"\"L LSL\"\"\"\n  LSL\n\n  \"\"\"\u0644.\u062f LYD\"\"\"\n  LYD\n\n  \"\"\"\u062f.\u0645. MAD\"\"\"\n  MAD\n\n  \"\"\"L MDL\"\"\"\n  MDL\n\n  \"\"\"Ar MGA\"\"\"\n  MGA\n\n  \"\"\"\u0434\u0435\u043d MKD\"\"\"\n  MKD\n\n  \"\"\"K MMK\"\"\"\n  MMK\n\n  \"\"\"\u20ae MNT\"\"\"\n  MNT\n\n  \"\"\"P MOP\"\"\"\n  MOP\n\n  \"\"\"UM MRO\"\"\"\n  MRO\n\n  \"\"\"\u20a8 MUR\"\"\"\n  MUR\n\n  \"\"\"MVR MVR\"\"\"\n  MVR\n\n  \"\"\"MK MWK\"\"\"\n  MWK\n\n  \"\"\"$ MXN\"\"\"\n  MXN\n\n  \"\"\"RM MYR\"\"\"\n  MYR\n\n  \"\"\"MTn MZN\"\"\"\n  MZN\n\n  \"\"\"$ NAD\"\"\"\n  NAD\n\n  \"\"\"\u20a6 NGN\"\"\"\n  NGN\n\n  \"\"\"C$ NIO\"\"\"\n  NIO\n\n  \"\"\"kr NOK\"\"\"\n  NOK\n\n  \"\"\"\u20a8 NPR\"\"\"\n  NPR\n\n  \"\"\"$ NZD\"\"\"\n  NZD\n\n  \"\"\"\u0631.\u0639. OMR\"\"\"\n  OMR\n\n  \"\"\"B/. PAB\"\"\"\n  PAB\n\n  \"\"\"S/. PEN\"\"\"\n  PEN\n\n  \"\"\"K PGK\"\"\"\n  PGK\n\n  \"\"\"\u20b1 PHP\"\"\"\n  PHP\n\n  \"\"\"\u20a8 PKR\"\"\"\n  PKR\n\n  \"\"\"z\u0142 PLN\"\"\"\n  PLN\n\n  \"\"\"\u20b2 PYG\"\"\"\n  PYG\n\n  \"\"\"\u0631.\u0642 QAR\"\"\"\n  QAR\n\n  \"\"\"Lei RON\"\"\"\n  RON\n\n  \"\"\"\u0420\u0421\u0414 RSD\"\"\"\n  RSD\n\n  \"\"\"\u0440. RUB\"\"\"\n  RUB\n\n  \"\"\"FRw RWF\"\"\"\n  RWF\n\n  \"\"\"\u0631.\u0633 SAR\"\"\"\n  SAR\n\n  \"\"\"$ SBD\"\"\"\n  SBD\n\n  \"\"\"\u20a8 SCR\"\"\"\n  SCR\n\n  \"\"\"\u00a3 SDG\"\"\"\n  SDG\n\n  \"\"\"kr SEK\"\"\"\n  SEK\n\n  \"\"\"$ SGD\"\"\"\n  SGD\n\n  \"\"\"\u00a3 SHP\"\"\"\n  SHP\n\n  \"\"\"Le SLL\"\"\"\n  SLL\n\n  \"\"\"Sh SOS\"\"\"\n  SOS\n\n  \"\"\"$ SRD\"\"\"\n  SRD\n\n  \"\"\"Db STD\"\"\"\n  STD\n\n  \"\"\"\u20a1 SVC\"\"\"\n  SVC\n\n  \"\"\"\u00a3S SYP\"\"\"\n  SYP\n\n  \"\"\"L SZL\"\"\"\n  SZL\n\n  \"\"\"\u0e3f THB\"\"\"\n  THB\n\n  \"\"\"\u0405\u041c TJS\"\"\"\n  TJS\n\n  \"\"\"m TMT\"\"\"\n  TMT\n\n  \"\"\"\u062f.\u062a TND\"\"\"\n  TND\n\n  \"\"\"T$ TOP\"\"\"\n  TOP\n\n  \"\"\"TL TRY\"\"\"\n  TRY\n\n  \"\"\"$ TTD\"\"\"\n  TTD\n\n  \"\"\"$ TWD\"\"\"\n  TWD\n\n  \"\"\"Sh TZS\"\"\"\n  TZS\n\n  \"\"\"\u20b4 UAH\"\"\"\n  UAH\n\n  \"\"\"USh UGX\"\"\"\n  UGX\n\n  \"\"\"$ USD\"\"\"\n  USD\n\n  \"\"\"$ UYU\"\"\"\n  UYU\n\n  \"\"\" UZS\"\"\"\n  UZS\n\n  \"\"\"BsF VEF\"\"\"\n  VEF\n\n  \"\"\"\u20ab VND\"\"\"\n  VND\n\n  \"\"\"Vt VUV\"\"\"\n  VUV\n\n  \"\"\"T WST\"\"\"\n  WST\n\n  \"\"\"Fr XAF\"\"\"\n  XAF\n\n  \"\"\"ozt XAG\"\"\"\n  XAG\n\n  \"\"\"ozt XAU\"\"\"\n  XAU\n\n  \"\"\"$ XCD\"\"\"\n  XCD\n\n  \"\"\"SDR XDR\"\"\"\n  XDR\n\n  \"\"\"Fr XOF\"\"\"\n  XOF\n\n  \"\"\"XPD\"\"\"\n  XPD\n\n  \"\"\"Fr XPF\"\"\"\n  XPF\n\n  \"\"\"XPT\"\"\"\n  XPT\n\n  \"\"\"\ufdfc YER\"\"\"\n  YER\n\n  \"\"\"R ZAR\"\"\"\n  ZAR\n\n  \"\"\"ZK ZMK\"\"\"\n  ZMK\n\n  \"\"\"ZK ZMW\"\"\"\n  ZMW\n\n  \"\"\"$ ZWL\"\"\"\n  ZWL\n}\n\ntype TimeSlotConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [TimeSlot!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"\nA range of time with a start and an end, for which tickets are sellable. A single Event may have one or many TimeSlots. For example, a three day Event could be configured either with one TimeSlot (say Friday to Monday), or with three Timeslots (one for each of Friday, Saturday, and Sunday). \n\"\"\"\ntype TimeSlot {\n  \"\"\"\n  A list of all attendees for the Event, includes tickets from all states, including invalid.\n  \"\"\"\n  attendees: AttendeeConnection!\n\n  \"\"\"\n  Available capacity count for Time Slot. Returns null if no capacityAlert or maxQuantity set for Event.\n  \"\"\"\n  availableCapacity: Int @deprecated(reason: \"Prefer using capacityAlert on the Event and state on the TimeSlot to determine if timeslot is FULL.\")\n\n  \"\"\"In UTC\"\"\"\n  createdAt: Time!\n\n  \"\"\"In Event's time zone\"\"\"\n  endAt: TimeWithoutTz!\n\n  \"\"\"In Event's time zone\"\"\"\n  endDate: Date!\n\n  \"\"\"UNIX Timestamp\"\"\"\n  endStamp: Int!\n  event: Event!\n  id: ID!\n\n  \"\"\"Orders created for this Event\"\"\"\n  orders: OrderConnection!\n\n  \"\"\"Rate capacities for the Event\"\"\"\n  rateCapacities: RateCapacityConnection!\n  rates: [Rate!]\n  report(\n    \"\"\"type of report\"\"\"\n    name: String = \"AttendeesReport\"\n\n    \"\"\"columns to return\"\"\"\n    columns: [String] = []\n\n    \"\"\"array of {key: value} or 'string' where clauses\"\"\"\n    clauses: [JSON] = []\n  ): Report!\n\n  \"\"\"Future or ongoing TimeSlots for the same Event within the same day\"\"\"\n  sameDayTimeSlots: TimeSlotConnection!\n\n  \"\"\"In Event's time zone\"\"\"\n  startAt: TimeWithoutTz!\n\n  \"\"\"In Event's time zone\"\"\"\n  startDate: Date!\n\n  \"\"\"UNIX Timestamp\"\"\"\n  startStamp: Int!\n  state: TimeSlotState!\n  timeSlotReport: TimeSlotReport!\n\n  \"\"\"An IANA Time Zone string\"\"\"\n  tz: String!\n\n  \"\"\"In UTC\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"The state an Event can be in\"\"\"\nenum TimeSlotState {\n  \"\"\"No valid tickets have been sold for the event\"\"\"\n  UNBOOKED\n\n  \"\"\"The event has valid tickets associated with it\"\"\"\n  NORMAL\n\n  \"\"\"The event is sold out, no capacity remains\"\"\"\n  FULL\n\n  \"\"\"The event has been removed\"\"\"\n  HIDDEN\n}\n\n\"\"\"Time string without timezone. E.g. 2017-09-15T17:50:00\"\"\"\nscalar TimeWithoutTz\n\n\"\"\"\nThe root-level inventory object. Events are entitites for which tickets can be sold. Events support multiple dates/times for which tickets can be sold separately as TimeSlots. In previous APIs, Universe has referred to this as a Listing.\n\"\"\"\ntype Event implements BaseEvent {\n  \"\"\"Access Keys created for this Event\"\"\"\n  accessKeys: AccessKeyConnection\n\n  \"\"\"Event has sold tickets for timeslots in the future\"\"\"\n  active: Boolean!\n\n  \"\"\"Add-on sales by day\"\"\"\n  addOnSalesByDay(from: Date!, to: Date!): [DailySales!]!\n  addOns: [AddOn]!\n\n  \"\"\"\n  Optional additional images for the event (promotional photos, venue photos)\n  \"\"\"\n  additionalImages: [Image!]!\n\n  \"\"\"Street-level address\"\"\"\n  address: String!\n\n  \"\"\"All future or ongoing TimeSlots for which tickets can be purchased\"\"\"\n  allAvailableTimeSlots: [TimeSlot]!\n\n  \"\"\"All Additional Images\"\"\"\n  allImages: [Image!]!\n\n  \"\"\"\n  All dates/times for which tickets can be purchased sorted chronologically. Each Event can define one or many TimeSlots\n  \"\"\"\n  allTimeSlots: [TimeSlot]!\n\n  \"\"\"Whether to enable waitlist for the Event\"\"\"\n  allowWaitlist: Boolean!\n\n  \"\"\"\n  A list of all attendees for the Event, includes tickets from all states, including invalid.\n  \"\"\"\n  attendees(after: Time, before: Time, externalMetadata: String, state: OrderItemState, timeSlotIds: [ID!], match: String): AttendeeConnection!\n\n  \"\"\"A list of countries in which tickets to this event may be purchased\"\"\"\n  availableCountries: [CountryCode]!\n\n  \"\"\"Future or ongoing TimeSlots for which tickets can be purchased\"\"\"\n  availableTimeSlots: TimeSlotConnection!\n\n  \"\"\"Total event capacity of the event\"\"\"\n  capacity: Int\n\n  \"\"\"Whether to show an alert that the Event is almost sold out\"\"\"\n  capacityAlert: Boolean\n\n  \"\"\"The category assigned for this Event\"\"\"\n  category: Category\n\n  \"\"\"\n  Seats chart information regarding if the listing's chart is in a DRAFT state and if its events have yet been linked\n  \"\"\"\n  chartStatus: JSON\n\n  \"\"\"Name of the city\"\"\"\n  cityName: String\n\n  \"\"\"Optional field that the host sets for additional contact information\"\"\"\n  contactDetails: String\n\n  \"\"\"\n  Cover photo for the event (min 100x100px, max 2MB). Auto-generated if no initial entry.\n  \"\"\"\n  coverPhoto: Image!\n\n  \"\"\"In UTC\"\"\"\n  createdAt: Time!\n\n  \"\"\"The currency specified by Host\"\"\"\n  currency: CurrencyCode!\n\n  \"\"\"A detailed description of the event\"\"\"\n  description(format: ContentFormat = null): String!\n\n  \"\"\"Discounts created for this Event\"\"\"\n  discounts: DiscountConnection\n\n  \"\"\"\n  Event photo for the event (min 1110x444px, max 5MB). Auto-generated if no initial entry.\n  \"\"\"\n  eventPhoto: Image!\n\n  \"\"\"The number of future time slots\"\"\"\n  futureTimeSlotCount: Int!\n\n  \"\"\"\n  Total sales amount for future timeslots only (returns null if no future timeslots)\n  \"\"\"\n  futureTimeslotsSalesAmount: Money\n\n  \"\"\"\n  Total tickets sold for upcoming timeslots only (returns null if no future timeslots)\n  \"\"\"\n  futureTimeslotsTicketsSold: Int\n\n  \"\"\"The ticket purchase button text\"\"\"\n  getTicketsText: String!\n\n  \"\"\"\n  the 'send_to' field for a GoogleAds conversion to be tracked. Has the form: AW-123456789/AbC-D_efG-h12_34-567\n  \"\"\"\n  googleAdsSendTos: GoogleAdsSendTos\n\n  \"\"\"Whether the Event is sells Passes\"\"\"\n  hasPasses: Boolean!\n\n  \"\"\"Whether the Event uses reserved seating\"\"\"\n  hasSeats: Boolean!\n\n  \"\"\"\n  A user-configurable setting determining whether the TimeSlot of the Event should be disclosed to the Buyer\n  \"\"\"\n  hiddenDate: Boolean!\n\n  \"\"\"\n  Whether to show or hide this Event from our Calendar / Listings widgets.\n  \"\"\"\n  hideFromWidgets: Boolean\n  host: Host!\n  id: ID!\n\n  \"\"\"A URL to the event image. Custom height and width can be supplied\"\"\"\n  imageUrl(\n    \"\"\"Height of the image\"\"\"\n    height: Int = 160\n\n    \"\"\"Width of the image\"\"\"\n    width: Int = 160\n  ): String\n\n  \"\"\"Other Images\"\"\"\n  images: ImageConnection!\n\n  \"\"\"Date that the event was last updated\"\"\"\n  lastUpdated: Date!\n  latitude: Float!\n  longitude: Float!\n\n  \"\"\"Maximum Price of an event. If provided, indicates a range\"\"\"\n  maxPrice: Float\n\n  \"\"\"\n  Maximum number of items which are sellable for Event.The value depends on Rates' maxQuantity.\n  \"\"\"\n  maxQuantity: Int\n\n  \"\"\"Minimum Price of an event\"\"\"\n  minPrice: Float\n\n  \"\"\"The next active time slot of future time slots\"\"\"\n  nextFutureTimeSlot: TimeSlot\n\n  \"\"\"Orders created for this Event\"\"\"\n  orders(state: OrderState, paymentMethod: PaymentMethod, timeSlotIds: [ID!], match: String): OrderConnection\n\n  \"\"\"Whether payment plans are disabled for this listing\"\"\"\n  paymentPlanDisabled: Boolean!\n  paymentSettings: PaymentSettings!\n\n  \"\"\"The privacy setting for the Event\"\"\"\n  privacy: EventPrivacy!\n\n  \"\"\"Content that will be provided to buyer's only\"\"\"\n  privateNote(format: ContentFormat = null): String\n\n  \"\"\"\n  When the draft event is scheduled to be published (not set if not scheduled)\n  \"\"\"\n  publishLaterAt: Time\n\n  \"\"\"Listing questions on checkout\"\"\"\n  questions: [Question]!\n  rateStateExists: RateStateExists!\n\n  \"\"\"Product types (Tickets or Passes) that can be sold for this Event\"\"\"\n  rates(states: [RateState!], clientGroups: [RateClientGroup!]): RateConnection!\n\n  \"\"\"Whether the Event uses rebates\"\"\"\n  rebates: Boolean!\n\n  \"\"\"\n  Time (in seconds) setting how long refunds are available for - pairs with refundOffsetType\n  \"\"\"\n  refundOffset: Int!\n\n  \"\"\"\n  Refund will be available either within refundOffset units of purchase or until refundOffset units before the event\n  \"\"\"\n  refundOffsetType: String!\n\n  \"\"\"Describes a policy on ticket refunds\"\"\"\n  refundPolicy: RefundPolicy\n\n  \"\"\"Region where the event is being hosted\"\"\"\n  region: String\n  report(\n    \"\"\"type of report\"\"\"\n    name: String = \"AttendeesReport\"\n\n    \"\"\"columns to return\"\"\"\n    columns: [String] = []\n\n    \"\"\"array of {key: value} or 'string' where clauses\"\"\"\n    clauses: [JSON] = []\n  ): Report!\n\n  \"\"\"Total sales amount for this Event\"\"\"\n  salesAmount: Money\n\n  \"\"\"Sales by day\"\"\"\n  salesByDay(from: Date!, to: Date!): [DailySales!]!\n\n  \"\"\"Whether the Event Saved by the Viewer\"\"\"\n  saved: Boolean!\n\n  \"\"\"List of all Savers who saved the Event\"\"\"\n  savers: SaversConnection\n\n  \"\"\"The schedules assigned to this Event\"\"\"\n  schedules: ScheduleConnection\n\n  \"\"\"Whether the Seats.io chart has been published for its first time\"\"\"\n  seatingMapPublished: Boolean!\n\n  \"\"\"The seats chart key from Seats.io\"\"\"\n  seatsChartKey: String\n\n  \"\"\"\n  A unique identifier, shorter version of the ID. Should be used for URI construction.\n  \"\"\"\n  slug: String!\n\n  \"\"\"A parameterized version of slug used for URI construction\"\"\"\n  slugParam: String!\n\n  \"\"\"Whether the Social Buttons will be active on unlisted events\"\"\"\n  socialButtons: Boolean!\n\n  \"\"\"Tickets are sold out for this Event\"\"\"\n  soldOut: Boolean!\n\n  \"\"\"The Event state\"\"\"\n  state: EventState!\n\n  \"\"\"The tags added to this Event\"\"\"\n  tags: [Tag]!\n\n  \"\"\"Ticket sales by day\"\"\"\n  ticketSalesByDay(from: Date!, to: Date!): [DailySales!]!\n\n  \"\"\"Total tickets sold for this Event\"\"\"\n  ticketsSold: Int\n  timeSlotReport: TimeSlotReport!\n\n  \"\"\"\n  A date/time for which tickets can be purchased sorted chronologically. Each Event can define one or many TimeSlots\n  \"\"\"\n  timeSlots(\n    ids: [String!] = []\n\n    \"\"\"Start time of event before end of day\"\"\"\n    startTimeBefore: Date\n\n    \"\"\"Start time of event after beginning of day\"\"\"\n    startTimeAfter: Date\n\n    \"\"\"End time of event before end of day\"\"\"\n    endTimeBefore: Date\n\n    \"\"\"End time of event after beginning of day\"\"\"\n    endTimeAfter: Date\n  ): TimeSlotConnection!\n\n  \"\"\"\n  Determines whether or not an event admits visitors to an event between a set time\n  \"\"\"\n  timedEntry: Boolean!\n\n  \"\"\"Timezone of the event location\"\"\"\n  timezone: String!\n\n  \"\"\"A brief description\"\"\"\n  title: String!\n\n  \"\"\"Currency that is displayed and charged in\"\"\"\n  transactionCurrency: CurrencyCode!\n\n  \"\"\"\n  The total number of tickets which are sellable for upcoming TimeslotsThe value is the lowest of the upcoming Rates maxQuantity and upcoming Timeslots capacities\n  \"\"\"\n  upcomingTotalCapacity: Int\n\n  \"\"\"In UTC\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Event URL\"\"\"\n  url: String!\n\n  \"\"\"Event or EventSet creator\"\"\"\n  user: Profile!\n\n  \"\"\"Name of the venue\"\"\"\n  venueName: String\n\n  \"\"\"Is the event virtual?\"\"\"\n  virtual: Boolean!\n\n  \"\"\"Virtual connection info\"\"\"\n  virtualInfo: String!\n}\n\n\"\"\"\nThe most low level version of an event, representing both events and event sets\n\"\"\"\ninterface BaseEvent {\n  \"\"\"Street-level address\"\"\"\n  address: String!\n\n  \"\"\"All Additional Images\"\"\"\n  allImages: [Image!]!\n\n  \"\"\"Cover Photo\"\"\"\n  coverPhoto: Image!\n\n  \"\"\"A detailed description of the event\"\"\"\n  description(format: ContentFormat = null): String!\n  id: ID!\n\n  \"\"\"Other Images\"\"\"\n  images: ImageConnection!\n  latitude: Float!\n  longitude: Float!\n\n  \"\"\"\n  A unique identifier, shorter version of the ID. Should be used for URI construction.\n  \"\"\"\n  slug: String!\n\n  \"\"\"A brief description\"\"\"\n  title: String!\n\n  \"\"\"Event or EventSet creator\"\"\"\n  user: Profile!\n\n  \"\"\"Name of the venue\"\"\"\n  venueName: String\n}\n\n\"\"\"Supported content formats.\"\"\"\nenum ContentFormat {\n  TEXT\n  HTML\n}\n\n\"\"\"\nA Profile for a Universe account - an interface into a User as a Host or Buyer\n\"\"\"\ntype Profile implements User {\n  admin: Boolean!\n\n  \"\"\"\n  Public-visibility Events in the past associated with Orders purchased by this account\n  \"\"\"\n  attended: EventConnection\n\n  \"\"\"\n  Public-visiblity Events in the future associated with Orders purchased by this account\n  \"\"\"\n  attending: EventConnection\n\n  \"\"\"The avatar URL, 160x160 pixels\"\"\"\n  avatarUrl: String\n\n  \"\"\"\n  The Profile is for a user who has configured their account as a business\n  \"\"\"\n  business: Boolean\n\n  \"\"\"The cover photo URL in the original size\"\"\"\n  coverPhotoUrl: String\n\n  \"\"\"A user-defined description\"\"\"\n  description: String\n\n  \"\"\"Facebook account URI\"\"\"\n  facebook: String\n\n  \"\"\"The first name of the type implementing a User interface\"\"\"\n  firstName: String\n\n  \"\"\"The Profile is for a user hosting events on Universe\"\"\"\n  host: Boolean\n\n  \"\"\"\n  Public-visibility Events with no future Time Slots hosted by this account\n  \"\"\"\n  hosted: EventConnection\n\n  \"\"\"Public-visibility Events with future Time Slots hosted by this account\"\"\"\n  hosting: EventConnection\n  id: ID\n\n  \"\"\"Instagram account URI\"\"\"\n  instagram: String\n\n  \"\"\"The last name of the type implementing a User interface\"\"\"\n  lastName: String\n\n  \"\"\"User locale\"\"\"\n  locale: Locale\n\n  \"\"\"\n  A plain-text user-inputed string referring to their self-defined location\n  \"\"\"\n  location: String\n\n  \"\"\"Determines if a user is messageable\"\"\"\n  messageable: Boolean\n\n  \"\"\"A single field concatenating firstName and lastName\"\"\"\n  name: String\n\n  \"\"\"The type of the viewer account (Admin, User, Spammer, etc)\"\"\"\n  role: UserRole!\n\n  \"\"\"\n  A unique identifier, shorter version of the ID. Should be used for URI construction.\n  \"\"\"\n  slug: String\n\n  \"\"\"The avatar URL, 50x50 pixels\"\"\"\n  smallAvatarUrl: String\n  superAdmin: Boolean!\n\n  \"\"\"Twitter account URI\"\"\"\n  twitter: String\n\n  \"\"\"The Profile URI\"\"\"\n  url: String!\n  visibility: ProfileVisibility!\n\n  \"\"\"A stringified URI, user-inputed\"\"\"\n  website: String\n}\n\n\"\"\"Possible visibility states a Profile can be in\"\"\"\nenum ProfileVisibility {\n  \"\"\"Public (recommended)\"\"\"\n  PUBLIC\n\n  \"\"\"Hidden from search engines\"\"\"\n  HIDDEN\n\n  \"\"\"Private\"\"\"\n  PRIVATE\n}\n\ntype EventConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Event!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"A raw all-or-nothing JSON object\"\"\"\nscalar JSON\n\n\"\"\"Image for events, avatars, and add on options\"\"\"\ntype Image {\n  cropHeight: Int\n  cropWidth: Int\n  cropX: Int\n  cropY: Int\n  isGif: Boolean\n  uploadId: String!\n\n  \"\"\"Image URL. Custom height and width can be supplied\"\"\"\n  url(\n    \"\"\"Height of the image\"\"\"\n    height: Int = 160\n\n    \"\"\"Width of the image\"\"\"\n    width: Int = 160\n\n    \"\"\"Blur images by the strength factor. Default: '500'\"\"\"\n    blur: Int\n\n    \"\"\"Adjust image quality. Default: 'NORMAL'\"\"\"\n    quality: ImageQuality\n\n    \"\"\"Convert an image to one of the supported output formats\"\"\"\n    format: ImageFormat\n\n    \"\"\"Resize or crop the image.\"\"\"\n    cropMode: ImageCropMode = null\n  ): String!\n}\n\n\"\"\"Adjust image quality. Works with JPEG and WEBP formats.\"\"\"\nenum ImageQuality {\n  \"\"\"\u224850% file size compared to 'NORMAL'\"\"\"\n  LIGHTEST\n\n  \"\"\"\u224880% file size\"\"\"\n  LIGHTER\n\n  \"\"\"\u2248100% file size\"\"\"\n  NORMAL\n\n  \"\"\"\u2248125% file size\"\"\"\n  BETTER\n\n  \"\"\"\u2248170% file size\"\"\"\n  BEST\n}\n\n\"\"\"Supported output formats.\"\"\"\nenum ImageFormat {\n  JPEG\n  PNG\n  WEBP\n}\n\n\"\"\"Set the image crop mode.\"\"\"\nenum ImageCropMode {\n  \"\"\"Resize Image Proportionally\"\"\"\n  PREVIEW\n\n  \"\"\"Resize Image\"\"\"\n  RESIZE\n\n  \"\"\"Crop Image\"\"\"\n  CROP\n\n  \"\"\"Downscale and Crop Image\"\"\"\n  SCALE_CROP\n}\n\ntype ImageConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Image!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"The privacy setting for an Event\"\"\"\nenum EventPrivacy {\n  \"\"\"The default privacy setting - publicly searchable\"\"\"\n  PUBLIC\n\n  \"\"\"The Event is private, not publicly searchable\"\"\"\n  PRIVATE\n}\n\n\"\"\"\nThe Event state determines whether Orders can be created (assuming available inventory). To be sellable, the Event MUST be in the POSTED state.\n\"\"\"\nenum EventState {\n  \"\"\"The Event is not complete, default state\"\"\"\n  DRAFT\n\n  \"\"\"\n  The Event is complete, but the Host's account has not been confirmed (i.e. email ownership has been confirmed)\n  \"\"\"\n  PRESUMBITTED\n\n  \"\"\"The Event is complete, and available to sell tickets for\"\"\"\n  POSTED\n  EXPIRED\n  ARCHIVED\n\n  \"\"\"The Event has been disabled by a moderator\"\"\"\n  DECLINED\n  INACTIVE\n}\n\n\"\"\"Settings related to means of payment on an Event.\"\"\"\ntype PaymentSettings {\n  \"\"\"Payment methods available to pay for an Order.\"\"\"\n  methodsAvailable: [PaymentMethod!]!\n\n  \"\"\"Payment methods available to pay for an Order.\"\"\"\n  methodsEnabled: [PaymentMethod!]!\n\n  \"\"\"\n  Sales can be performed where the Credit Card payment method only accepts specific card brands (i.e. an Amex only presale). If empty, there are no restrictions. Note that these brand restrictions will only be applied to the Credit Card payment method. If other payment methods are enabled on the Event, they will not be brand restricted.\n  \"\"\"\n  restrictedCardBrands: [CardBrand!]!\n\n  \"\"\"Security methods available to pay for an Order.\"\"\"\n  securityMethodsAvailable: [PaymentMethod!]!\n\n  \"\"\"Security methods enabled to pay for an Order.\"\"\"\n  securityMethodsEnabled: [PaymentMethod!]!\n}\n\nenum PaymentMethod {\n  ALIPAY\n  BANCONTACT\n  EPS\n  GIROPAY\n  GLOBEE\n  IDEAL\n  KLARNA\n  INVOICE\n  MASTERPASS\n  MULTIBANCO\n  SEPA\n  SOFORT\n  PRZELEWY\n  WECHAT\n  VISACHECKOUT\n  OFFLINE\n  CARD\n}\n\n\"\"\"Credit Card brands supported by our payment systems\"\"\"\nenum CardBrand {\n  AMERICAN_EXPRESS\n  DINERS_CLUB\n  DISCOVER\n  JCB\n  MASTERCARD\n  UNIONPAY\n  VISA\n  UNKNOWN\n}\n\n\"\"\"Rule describing when ticket refunds should be allowed\"\"\"\ntype RefundPolicy {\n  offset: RefundOffset!\n  type: RefundOffsetType!\n}\n\n\"\"\"What is the time of your refund policy?\"\"\"\nenum RefundOffset {\n  \"\"\"Your refund policy will affect 1 day\"\"\"\n  ONE_DAY\n\n  \"\"\"Your refund policy will affect 2 days\"\"\"\n  TWO_DAYS\n\n  \"\"\"Your refund policy will affect 3 days\"\"\"\n  THREE_DAYS\n\n  \"\"\"Your refund policy will affect 7 days\"\"\"\n  ONE_WEEK\n\n  \"\"\"Your refund policy will affect 30 days\"\"\"\n  THIRTY_DAYS\n\n  \"\"\"Your refund policy will affect 60 days\"\"\"\n  SIXTY_DAYS\n\n  \"\"\"Your refund policy will affect 90 days\"\"\"\n  NINETY_DAYS\n\n  \"\"\"Tickets can never be refunded\"\"\"\n  NEVER\n}\n\n\"\"\"What is the scope of your refund policy?\"\"\"\nenum RefundOffsetType {\n  \"\"\"Your refund policy will be calculated from the event date\"\"\"\n  EVENT\n\n  \"\"\"Your refund policy will be calculated from the ticket purchase date\"\"\"\n  PURCHASE\n}\n\ntype AttendeeConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Attendee!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"A ticket-holder\"\"\"\ntype Attendee {\n  \"\"\"\n  Attendee-speicific answers to checkout questions on the OrderItem level (i.e. Ticket)\n  \"\"\"\n  answers: [Answer]!\n  email: String!\n\n  \"\"\"The Event the attendee is attending\"\"\"\n  event: Event!\n  firstName: String!\n  id: ID!\n  lastName: String\n\n  \"\"\"The Order which generated this attendee\"\"\"\n  order: Order!\n\n  \"\"\"The individual OrderItem on the Order which is for this attendee\"\"\"\n  orderItem: OrderItem!\n\n  \"\"\"Typically, the ticket-type belonging to the attendee.\"\"\"\n  rate: Rate!\n\n  \"\"\"\n  The state of the Order this attendee's ticket was purchased via - note, importantly, that this can be an invalid state. If you are using this information to validate a guest list, you should filter your results for only those tickets you consider valid.\n  \"\"\"\n  state: OrderItemState!\n\n  \"\"\"The TimeSlot of the Event the attendee is attending\"\"\"\n  timeSlot: TimeSlot!\n\n  \"\"\"\n  The token that the individual will present in order to gain access to the event. Typically in the form of a QRCode.\n  \"\"\"\n  token: String!\n}\n\n\"\"\"OrderItemState describes the possible states an OrderItem may be in.\"\"\"\nenum OrderItemState {\n  \"\"\"\n  The OrderItem has been created and a charge has been authorized but not yet processed - the default state\n  \"\"\"\n  UNPAID\n\n  \"\"\"\n  The OrderItem has been created, but requires approval by the Host to process\n  \"\"\"\n  UNAPPROVED\n\n  \"\"\"This state has been deprecated, and will be removed soon\"\"\"\n  CHECKOUT\n\n  \"\"\"\n  The OrderItem has been created but a charge has not yet been authorized\n  \"\"\"\n  PENDING\n\n  \"\"\"\n  The OrderItem has been successfully processed, and payment methods have been charged\n  \"\"\"\n  PAID\n\n  \"\"\"The OrderItem has been processed, and processing failed\"\"\"\n  FAILED\n\n  \"\"\"\n  The OrderItem has been processed, but the payment method was declined by the upstream gateway\n  \"\"\"\n  DECLINED\n\n  \"\"\"\n  The OrderItem was created and processed, but has since been cancelled and any associated transactions have been reverted\n  \"\"\"\n  CANCELLED\n\n  \"\"\"\n  The OrderItem was created and processed, and 48 hours has passed since the Event. The funds associated with this OrderItem are now pending a transfer to the Host\n  \"\"\"\n  ENDED\n\n  \"\"\"\n  The OrderItem has been processed, and funds captured by the charge have been transferred to the Event Host\n  \"\"\"\n  CLOSED\n\n  \"\"\"\n  The OrderItem was created but not processed for any reason, and can no longer be processed because the Event has happened\n  \"\"\"\n  EXPIRED\n\n  \"\"\"\n  The OrderItem could not be processed due to internal service disruption inside of\n  \"\"\"\n  ERROR\n\n  \"\"\"\n  The OrderItem has been processed and processed, but an outstanding balance remainds. This state is used specifically for our Payment Plans product. In general, exercise care in dealing with OrderItems in this state, because a default on future payments remains possible.\n  \"\"\"\n  PARTIALLY_PAID\n\n  \"\"\"\n  The OrderItem was created and, but requires authorizeation by the Buyer.\n  \"\"\"\n  UNAUTHORIZED\n\n  \"\"\"The OrderItem was created and was transferred to another buyer.\"\"\"\n  TRANSFERRED\n\n  \"\"\"\n  The OrderItem was created and was upgraded to a new ticket type. This OrderItem is no longer valid for entry.\n  \"\"\"\n  UPGRADED\n}\n\n\"\"\"\nRates are product types available for sale - most typically these are tickets, but they are also configurable as Passes, and in the future other meta product types may be added\n\"\"\"\ntype Rate {\n  \"\"\"Optional capacity for this rate\"\"\"\n  capacity: Int\n  clientGroup: RateClientGroup!\n\n  \"\"\"Optional description for this rate\"\"\"\n  description: String\n\n  \"\"\"\n  Displays a price that contains taxes and fees if the listing has all-in pricing enabled. If the listing does not have it enabled, this is identical to price.\n  \"\"\"\n  displayPrice: Float!\n  endStamp: Int\n  exclusionRules: [JSON!]\n  id: ID!\n\n  \"\"\"\n  A limit of the number of tickets of this type sellable for each TimeSlot on an Event\n  \"\"\"\n  maxQuantity: Int\n\n  \"\"\"Optional amount of maximum tickets allowed when purchasing this rate\"\"\"\n  maxTickets: Int\n\n  \"\"\"\n  The minimum price of this type of ticket, used only in PWYW/donation tickets\n  \"\"\"\n  minPrice: Float!\n\n  \"\"\"Optional amount of minimum tickets required when purchasing this rate\"\"\"\n  minTickets: Int\n  name: String!\n  optionName: String\n\n  \"\"\"Confirmed OrderItems in the Order, don't include transfers\"\"\"\n  orderItems: OrderItemConnection!\n\n  \"\"\"The price of this type of ticket - 0.0 if free\"\"\"\n  price: Float!\n\n  \"\"\"\n  Time (in seconds) setting when purchased orders on this rate will be released to the fan\n  \"\"\"\n  releaseOffset: Int\n\n  \"\"\"Total net sales\"\"\"\n  sales: Money!\n\n  \"\"\"Total net sales amount\"\"\"\n  salesAmount: Float! @deprecated(reason: \"Use new 'sales' field for more detail\")\n  startStamp: Int\n  state: RateState!\n\n  \"\"\"Rate type I.E Ticket, Pass, or Add-on\"\"\"\n  type: RateType\n}\n\n\"\"\"The state a rate can be in\"\"\"\nenum RateState {\n  \"\"\"The rate is available for purchase, if capacity is available\"\"\"\n  ACTIVE\n\n  \"\"\"The rate is only available if the user provides a key\"\"\"\n  LOCKED\n  INACTIVE\n\n  \"\"\"The rate has been removed\"\"\"\n  HIDDEN\n}\n\n\"\"\"A state representing which places a rate can be sold.\"\"\"\nenum RateClientGroup {\n  \"\"\"The rate can be sold both online and at-the-door\"\"\"\n  EVERYWHERE\n\n  \"\"\"The rate can only be sold online\"\"\"\n  ONLINE_ONLY\n\n  \"\"\"The rate can only be sold at the door\"\"\"\n  AT_THE_DOOR\n}\n\ntype OrderItemConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [OrderItem!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"An item in the order\"\"\"\ntype OrderItem {\n  \"\"\"The AddOn for this OrderItem, if the rate is an AddOnRate\"\"\"\n  addOn: AddOn\n  amount: Float!\n\n  \"\"\"\n  Buyer's answers to checkout questions on the OrderItem level (i.e. Ticket)\n  \"\"\"\n  answers: [Answer]!\n\n  \"\"\"\n  The person that owns this OrderItem, who is not always the primary buyer\n  \"\"\"\n  buyer: Buyer!\n\n  \"\"\"Whether or not the OrderItem was scanned in\"\"\"\n  checkInState: CheckInState!\n\n  \"\"\"Whether this order item is in a confirmed state\"\"\"\n  confirmed: Boolean\n\n  \"\"\"Cost breakdown for the Order Item\"\"\"\n  costBreakdown: OrderCostItemBreakdown!\n\n  \"\"\"In UTC\"\"\"\n  createdAt: Time!\n\n  \"\"\"Partially refunded amount\"\"\"\n  discountPrice: Float\n\n  \"\"\"Redemption objects for any Discount applied during checkout\"\"\"\n  discountRedemption: DiscountRedemption\n\n  \"\"\"\n  Whether there are questions or answers on this order item that can be edited\n  \"\"\"\n  editable: Boolean\n\n  \"\"\"Custom attribute associated with this OrderItem, settable by the Host\"\"\"\n  externalMetadata: String\n\n  \"\"\"Users first name\"\"\"\n  firstName: String\n\n  \"\"\"\n  Determines if the OrderItem has been fully refunded, meaning the entire monetary amount has been returned to the buyer\n  \"\"\"\n  fullyRefunded: Boolean\n  id: ID!\n\n  \"\"\"Users first name\"\"\"\n  lastName: String\n  name: String!\n  optionName: String\n\n  \"\"\"The parent transaction for this Order Item\"\"\"\n  order: Order!\n\n  \"\"\"The state the Order is in\"\"\"\n  orderState: OrderState!\n\n  \"\"\"\n  Determines if the OrderItem has been partially refunded. Partially refunded meaning a partial monetary amount has been returned to the buyer\n  \"\"\"\n  partiallyRefunded: Boolean\n\n  \"\"\"\n  The person that paid for this OrderItem, but does not necessarily own it\n  \"\"\"\n  primaryBuyer: Buyer!\n  qrCode: String\n\n  \"\"\"The rate associated with this OrderItem\"\"\"\n  rate: Rate!\n\n  \"\"\"The label of the seat if the Event sells seats\"\"\"\n  seatLabel: String\n\n  \"\"\"The state the OrderItem is in\"\"\"\n  state: OrderItemState!\n\n  \"\"\"In UTC\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Whether this order item can be upgraded\"\"\"\n  upgradeable: Boolean\n\n  \"\"\"Whether this order item can be voided\"\"\"\n  voidable: Boolean!\n}\n\n\"\"\"OrderState describes the possible states an Order may be in.\"\"\"\nenum OrderState {\n  \"\"\"\n  The Order has been created and a charge has been authorized but not yet processed - the default state\n  \"\"\"\n  UNPAID\n\n  \"\"\"\n  The Order has been created, but requires approval by the Host to process\n  \"\"\"\n  UNAPPROVED\n\n  \"\"\"This state has been deprecated, and will be removed soon\"\"\"\n  CHECKOUT\n\n  \"\"\"The Order has been created but a charge has not yet been authorized\"\"\"\n  PENDING\n\n  \"\"\"\n  The Order has been successfully processed, and payment methods have been charged\n  \"\"\"\n  PAID\n\n  \"\"\"The Order has been processed, and processing failed\"\"\"\n  FAILED\n\n  \"\"\"\n  The Order has been processed, but the payment method was declined by the upstream gateway\n  \"\"\"\n  DECLINED\n\n  \"\"\"\n  The Order was created and processed, but has since been cancelled and any associated transactions have been reverted\n  \"\"\"\n  CANCELLED\n\n  \"\"\"\n  The Order was created and processed, and 48 hours has passed since the Event. The funds associated with this Order are now pending a transfer to the Host\n  \"\"\"\n  ENDED\n\n  \"\"\"\n  The Order has been processed, and funds captured by the charge have been transferred to the Event Host\n  \"\"\"\n  CLOSED\n\n  \"\"\"\n  The Order was created but not processed for any reason, and can no longer be processed because the Event has happened\n  \"\"\"\n  EXPIRED\n\n  \"\"\"\n  The Order could not be processed due to internal service disruption inside of\n  \"\"\"\n  ERROR\n\n  \"\"\"\n  The Order has been processed and processed, but an outstanding balance remainds. This state is used specifically for our Payment Plans product. In general, exercise care in dealing with Orders in this state, because a default on future payments remains possible.\n  \"\"\"\n  PARTIALLY_PAID\n\n  \"\"\"The Order was created and, but requires authorizeation by the Buyer.\"\"\"\n  UNAUTHORIZED\n\n  \"\"\"\n  The Order was disputed. Ticket is invalid for entry, but counts towards capacity until resolved.\n  \"\"\"\n  DISPUTED\n}\n\n\"\"\"An order item cost breakdown\"\"\"\ntype OrderCostItemBreakdown {\n  \"\"\"The total commission paid for this Order\"\"\"\n  commission: Float\n\n  \"\"\"The total commission included paid for this Order\"\"\"\n  commissionIncluded: Float\n  createdAt: String\n\n  \"\"\"The currency used either for transactions or for settlement\"\"\"\n  currency: CurrencyCode\n  description: String\n\n  \"\"\"The total discount for this Order\"\"\"\n  discount: Float\n\n  \"\"\"The total fees paid for this Order\"\"\"\n  fee: Float\n  fees: [CostItemBreakdownFee!]\n\n  \"\"\"The total fulfillment paid for this Order\"\"\"\n  fulfillment: Float\n  id: String\n  mongoId: String\n\n  \"\"\"The total payment for this Order\"\"\"\n  payment: Float\n\n  \"\"\"The plan fees paid for this Order\"\"\"\n  planFee: Float\n\n  \"\"\"The price paid for this Order\"\"\"\n  price: Float\n  rateId: String\n\n  \"\"\"The settlement cost breakdown\"\"\"\n  settlement: OrderCostBreakdown\n\n  \"\"\"The subtotal paid for this Order\"\"\"\n  subtotal: Float\n  taxes: [CostItemBreakdownTax!]\n\n  \"\"\"The total taxes paid for this Order\"\"\"\n  taxesTotal: Float\n\n  \"\"\"The transactional cost breakdown\"\"\"\n  transactional: OrderCostBreakdown\n\n  \"\"\"Has this Order Item been voided\"\"\"\n  voided: Boolean\n\n  \"\"\"The total commission voided for this Order\"\"\"\n  voidedCommission: Float\n\n  \"\"\"The total commission included voided for this Order\"\"\"\n  voidedCommissionIncluded: Float\n\n  \"\"\"The total discount voided for this Order\"\"\"\n  voidedDiscount: Float\n\n  \"\"\"The total fees voided for this Order\"\"\"\n  voidedFee: Float\n  voidedFees: [CostItemBreakdownFee!]\n\n  \"\"\"The total payment voided for this Order\"\"\"\n  voidedPayment: Float\n\n  \"\"\"The plan fees voided for this Order\"\"\"\n  voidedPlanFee: Float\n\n  \"\"\"The price voided for this Order\"\"\"\n  voidedPrice: Float\n\n  \"\"\"The subtotal voided for this Order\"\"\"\n  voidedSubtotal: Float\n  voidedTaxes: [CostItemBreakdownTax!]\n\n  \"\"\"The total taxes voided for this Order\"\"\"\n  voidedTaxesTotal: Float\n}\n\n\"\"\"\"\"\"\ntype CostItemBreakdownTax {\n  amount: Float\n  description: String\n  percent: Float\n\n  \"\"\"The settlement cost breakdown\"\"\"\n  settlement: CostItemBreakdownTax\n  taxId: String\n\n  \"\"\"The transactional cost breakdown\"\"\"\n  transactional: CostItemBreakdownTax\n}\n\n\"\"\"\"\"\"\ntype CostItemBreakdownFee {\n  amount: Float\n  description: String\n  flat: Float\n  percent: Float\n\n  \"\"\"The settlement cost breakdown\"\"\"\n  settlement: CostItemBreakdownFee\n  src_flat: Float\n\n  \"\"\"The transactional cost breakdown\"\"\"\n  transactional: CostItemBreakdownFee\n}\n\n\"\"\"An order cost breakdown by default, the transactional cost breakdown\"\"\"\ntype OrderCostBreakdown {\n  \"\"\"The total commission paid for this Order\"\"\"\n  commission: Float\n\n  \"\"\"The total commission included paid for this Order\"\"\"\n  commissionIncluded: Float\n\n  \"\"\"The currency used either for transactions or for settlement\"\"\"\n  currency: CurrencyCode!\n\n  \"\"\"The total discount for this Order\"\"\"\n  discount: Float\n\n  \"\"\"The total fees paid for this Order\"\"\"\n  fee: Float\n\n  \"\"\"The fees paid for this Order\"\"\"\n  fees: [CostBreakdownItem!]\n\n  \"\"\"The total fulfillment paid for this Order\"\"\"\n  fulfillment: Float\n\n  \"\"\"The total payment for this Order\"\"\"\n  payment: Float\n\n  \"\"\"The date the payment was made at for this Order\"\"\"\n  paymentMadeAt: String!\n\n  \"\"\"The plan fees paid for this Order\"\"\"\n  planFee: Float\n\n  \"\"\"The price paid for this Order\"\"\"\n  price: Float\n\n  \"\"\"The settlement cost breakdown\"\"\"\n  settlement: OrderCostBreakdown\n\n  \"\"\"The subtotal paid for this Order\"\"\"\n  subtotal: Float\n\n  \"\"\"The taxes paid for this Order\"\"\"\n  taxes: [CostBreakdownItem!]\n\n  \"\"\"The total taxes paid for this Order\"\"\"\n  taxesTotal: Float\n\n  \"\"\"The transactional cost breakdown\"\"\"\n  transactional: OrderCostBreakdown\n\n  \"\"\"The total commission voided for this Order\"\"\"\n  voidedCommission: Float\n\n  \"\"\"The total commission included voided for this Order\"\"\"\n  voidedCommissionIncluded: Float\n\n  \"\"\"The total discount voided for this Order\"\"\"\n  voidedDiscount: Float\n\n  \"\"\"The total fees voided for this Order\"\"\"\n  voidedFee: Float\n\n  \"\"\"The fees that were voided on this Order\"\"\"\n  voidedFees: [CostBreakdownItem!]\n\n  \"\"\"The total payment voided for this Order\"\"\"\n  voidedPayment: Float\n\n  \"\"\"The date the payment was voided at\"\"\"\n  voidedPaymentAt: String!\n\n  \"\"\"The plan fees voided for this Order\"\"\"\n  voidedPlanFee: Float\n\n  \"\"\"The price voided for this Order\"\"\"\n  voidedPrice: Float\n\n  \"\"\"The subtotal voided for this Order\"\"\"\n  voidedSubtotal: Float\n\n  \"\"\"The taxes that were voided on this Order\"\"\"\n  voidedTaxes: [CostBreakdownItem!]\n\n  \"\"\"The total taxes voided for this Order\"\"\"\n  voidedTaxesTotal: Float\n}\n\n\"\"\"\"\"\"\ntype CostBreakdownItem {\n  amount: Float\n  description: String\n\n  \"\"\"The settlement cost breakdown\"\"\"\n  settlement: CostBreakdownItem\n\n  \"\"\"The transactional cost breakdown\"\"\"\n  transactional: CostBreakdownItem\n}\n\n\"\"\"\nDiscount Redemptions represent unique uses of a Discount on an Order Item\n\"\"\"\ntype DiscountRedemption {\n  discount: Discount!\n  id: ID!\n  orderItem: OrderItem!\n}\n\n\"\"\"Discounts allow Buyers to redeem a discount on their purchase\"\"\"\ntype Discount {\n  \"\"\"The literal value a Buyer needs to provide to redeem the discount\"\"\"\n  code: String!\n\n  \"\"\"In UTC\"\"\"\n  createdAt: Time!\n\n  \"\"\"The event to which the discount code is restricted, if applicable\"\"\"\n  event: Event\n\n  \"\"\"The redemption value of the Discount - as a fixed amount\"\"\"\n  fixed: Float\n  id: ID!\n\n  \"\"\"\n  The redemption value of the Discount - as a percent (represented in the range 0..1)\n  \"\"\"\n  percent: Float\n\n  \"\"\"The total number of Order Items that a Discount can be applied to\"\"\"\n  quantity: Int\n\n  \"\"\"\n  The type of redemption value, dictates which field the redemption value should be read from (either `percent` or `fixed`)\n  \"\"\"\n  redemptionType: DiscountRedemptionType!\n\n  \"\"\"Redemption objects for this Discount\"\"\"\n  redemptions: DiscountRedemptionConnection!\n\n  \"\"\"The total number of possible uses remaining\"\"\"\n  remaining: Int\n  state: DiscountState!\n\n  \"\"\"In UTC\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"Possible states a Discount can be in\"\"\"\nenum DiscountState {\n  \"\"\"The Discount is available for use\"\"\"\n  ACTIVE\n\n  \"\"\"The Discount is not available for use\"\"\"\n  INACTIVE\n\n  \"\"\"\n  The Discount has been fully used (no quantity remaining) and cannot be redeemed\n  \"\"\"\n  USED\n}\n\n\"\"\"Possible redemption value types of Discounts\"\"\"\nenum DiscountRedemptionType {\n  \"\"\"If percent, the value of the Discount is a percentage off\"\"\"\n  PERCENT\n\n  \"\"\"If fixed, the value of the Discount is a fixed amount off\"\"\"\n  FIXED\n}\n\ntype DiscountRedemptionConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [DiscountRedemption!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"\nA transaction made by a Buyer for Order Items (frequently, but not exclusively, tickets for an Event)\n\"\"\"\ntype Order {\n  \"\"\"The access keys used for this Order\"\"\"\n  accessKeys: [AccessKey]\n\n  \"\"\"Add Ons in the order\"\"\"\n  addOnItems: OrderItemConnection!\n\n  \"\"\"Buyer's answers to checkout question, on the level of the Order itself\"\"\"\n  answers: [Answer]!\n\n  \"\"\"The Buyer who created the Order\"\"\"\n  buyer: Buyer!\n\n  \"\"\"Whether this order is in a confirmed state\"\"\"\n  confirmed: Boolean\n\n  \"\"\"Cost breakdown for the Order\"\"\"\n  costBreakdown: OrderCostBreakdown!\n\n  \"\"\"In UTC\"\"\"\n  createdAt: Time!\n\n  \"\"\"\n  Whether there are questions or answers on this order that can be edited\n  \"\"\"\n  editable: Boolean\n\n  \"\"\"Each Order has one Event - the event the tickets are for\"\"\"\n  event: Event!\n  historical: Boolean\n\n  \"\"\"The Host of the Event the tickets on the Order are for\"\"\"\n  host: Host!\n  hostPurchased: Boolean!\n  id: ID!\n\n  \"\"\"The invoice for an order\"\"\"\n  invoice: Invoice\n\n  \"\"\"Number of accepted transfers for this order\"\"\"\n  numberOfAcceptedTransfers: Int\n\n  \"\"\"Items in the order\"\"\"\n  orderItems(externalMetadata: String): OrderItemConnection!\n\n  \"\"\"Where the Buyer purchased the order from\"\"\"\n  origin: String\n  paymentDeclineCode: PaymentDeclineCode\n\n  \"\"\"\n  A private note created by the Host of the Event, made available to Buyers. Often contains information important to the Buyer.\n  \"\"\"\n  privateNote: String\n  providerSourceClient: String\n  providerSourceType: ProviderSourceType\n\n  \"\"\"Collection of rate ids for the order items in this order\"\"\"\n  rateIds: [ID!]\n\n  \"\"\"\n  If the Buyer clicked a link containing a `ref` parameter, this string will return the same value. You can use this to track purchases from specific links.\n  \"\"\"\n  ref: String\n\n  \"\"\"Gets a refund estimate on this order\"\"\"\n  refundEstimate(orderItemRefundDatas: [OrderItemRefundData]!): Float\n  state: OrderState!\n\n  \"\"\"The TimeSlot the tickets on the Order are for\"\"\"\n  timeSlot: TimeSlot!\n\n  \"\"\"In UTC\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Whether an order item on this order can be upgraded\"\"\"\n  upgradeable: Boolean\n\n  \"\"\"Whether the order was purchased using Klarna\"\"\"\n  usedKlarna: Boolean\n\n  \"\"\"Whether the order was purchased using a payment plan\"\"\"\n  usedPaymentPlan: Boolean\n\n  \"\"\"Whether an order item on this order can be voided\"\"\"\n  voidable: Boolean\n}\n\ntype Answer {\n  id: ID!\n  question: Question!\n\n  \"\"\"\n  Value of the Answer - the actual 'answer' to the question asked to the user. Note that this field returns a string, but the content will contain stringified versions of other types like arrays. This behavior exists because GraphQL does not currently support union scalar field types. Universe recommends parsing these values as JSON in whatever consuming application you are writing.\n  \"\"\"\n  value: JSON\n}\n\ntype Question {\n  context: AnswerContext!\n  editable: String!\n  hasOther: Boolean!\n  id: ID!\n  included: Boolean!\n  index: Int!\n  multiple: Boolean!\n\n  \"\"\"Question\"\"\"\n  question: String!\n\n  \"\"\"Rate ids for which this question is set\"\"\"\n  rateIds: [ID]!\n\n  \"\"\"Rates which this question needs to be set\"\"\"\n  rates: [Rate]!\n  required: Boolean!\n  selectOptions: JSON\n  subType: String\n\n  \"\"\"Type of the question, have no idea which values it can have\"\"\"\n  type: AnswerType!\n}\n\n\"\"\"Question types\"\"\"\nenum AnswerType {\n  \"\"\"Regular text\"\"\"\n  TEXT\n\n  \"\"\"Single choice from many\"\"\"\n  SELECT\n\n  \"\"\"Multiple choices from many\"\"\"\n  MULTI_SELECT\n\n  \"\"\"Yes or no\"\"\"\n  CHECKBOX\n}\n\n\"\"\"Answer context\"\"\"\nenum AnswerContext {\n  \"\"\"Once per order item question\"\"\"\n  ORDER_ITEM\n\n  \"\"\"Once per order question\"\"\"\n  ORDER\n}\n\n\"\"\"A user who has created an Order on Universe\"\"\"\ntype Buyer implements User {\n  admin: Boolean!\n\n  \"\"\"The avatar URL, 160x160 pixels\"\"\"\n  avatarUrl: String\n\n  \"\"\"A user-defined description\"\"\"\n  description: String\n\n  \"\"\"\n  A (potentially unconfirmed) email address - uniquely tied to the Buyer ID\n  \"\"\"\n  email: String!\n\n  \"\"\"The first name of the type implementing a User interface\"\"\"\n  firstName: String\n  id: ID\n\n  \"\"\"The last name of the type implementing a User interface\"\"\"\n  lastName: String\n\n  \"\"\"User locale\"\"\"\n  locale: Locale\n\n  \"\"\"A single field concatenating firstName and lastName\"\"\"\n  name: String\n\n  \"\"\"Orders created for this Event\"\"\"\n  orders: OrderConnection\n\n  \"\"\"The type of the viewer account (Admin, User, Spammer, etc)\"\"\"\n  role: UserRole!\n\n  \"\"\"\n  A unique identifier, shorter version of the ID. Should be used for URI construction.\n  \"\"\"\n  slug: String\n\n  \"\"\"The avatar URL, 50x50 pixels\"\"\"\n  smallAvatarUrl: String\n  superAdmin: Boolean!\n}\n\ntype OrderConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Order!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"\nWhen a card issuer declines a payment, they will provide a reason through the use of a decline code\n\"\"\"\nenum PaymentDeclineCode {\n  \"\"\"translation missing: en.misc.bank_decline_codes.approve_with_id\"\"\"\n  APPROVE_WITH_ID\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.call_issuer\"\"\"\n  CALL_ISSUER\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.card_declined\"\"\"\n  CARD_DECLINED\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.card_not_supported\"\"\"\n  CARD_NOT_SUPPORTED\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.card_velocity_exceeded\"\"\"\n  CARD_VELOCITY_EXCEEDED\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.currency_not_supported\"\"\"\n  CURRENCY_NOT_SUPPORTED\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.do_not_honor\"\"\"\n  DO_NOT_HONOR\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.do_not_try_again\"\"\"\n  DO_NOT_TRY_AGAIN\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.duplicate_transaction\"\"\"\n  DUPLICATE_TRANSACTION\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.expired_card\"\"\"\n  EXPIRED_CARD\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.fraudulent\"\"\"\n  FRAUDULENT\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.generic_decline\"\"\"\n  GENERIC_DECLINE\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.incorrect_number\"\"\"\n  INCORRECT_NUMBER\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.incorrect_cvc\"\"\"\n  INCORRECT_CVC\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.insufficient_funds\"\"\"\n  INSUFFICIENT_FUNDS\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.invalid_account\"\"\"\n  INVALID_ACCOUNT\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.invalid_amount\"\"\"\n  INVALID_AMOUNT\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.invalid_cvc\"\"\"\n  INVALID_CVC\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.invalid_expiry_year\"\"\"\n  INVALID_EXPIRY_YEAR\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.issuer_not_available\"\"\"\n  ISSUER_NOT_AVAILABLE\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.lost_card\"\"\"\n  LOST_CARD\n\n  \"\"\"\n  translation missing: en.misc.bank_decline_codes.new_account_information_available\n  \"\"\"\n  NEW_ACCOUNT_INFORMATION_AVAILABLE\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.no_action_taken\"\"\"\n  NO_ACTION_TAKEN\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.not_permitted\"\"\"\n  NOT_PERMITTED\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.pickup_card\"\"\"\n  PICKUP_CARD\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.processing_error\"\"\"\n  PROCESSING_ERROR\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.restricted_card\"\"\"\n  RESTRICTED_CARD\n\n  \"\"\"\n  translation missing: en.misc.bank_decline_codes.revocation_of_all_authorizations\n  \"\"\"\n  REVOCATION_OF_ALL_AUTHORIZATIONS\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.stolen_card\"\"\"\n  STOLEN_CARD\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.stop_payment_order\"\"\"\n  STOP_PAYMENT_ORDER\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.testmode_decline\"\"\"\n  TESTMODE_DECLINE\n\n  \"\"\"translation missing: en.misc.bank_decline_codes.try_again_later\"\"\"\n  TRY_AGAIN_LATER\n\n  \"\"\"\n  translation missing: en.misc.bank_decline_codes.withdrawal_count_limit_exceeded\n  \"\"\"\n  WITHDRAWAL_COUNT_LIMIT_EXCEEDED\n}\n\n\"\"\"Payment methods supported by our payment systems\"\"\"\nenum ProviderSourceType {\n  BCH\n  BTC\n  DCR\n  DOGE\n  ETH\n  LNBT\n  LTC\n  XMR\n  XRP\n  ALIPAY\n  BANCONTACT\n  EPS\n  GIROPAY\n  GLOBEE\n  IDEAL\n  INVOICE\n  KLARNA\n  MASTERPASS\n  MULTIBANCO\n  PRZELEWY\n  SEPA\n  SOFORT\n  VISACHECKOUT\n  WECHAT\n  CARD\n  APPLE_PAY\n  ANDROID_PAY\n  GOOGLE_PAY\n  OFFLINE\n}\n\n\"\"\"\nAccess Keys allow you to password protect tickets so you can sell tickets to a certain group of patrons. Perfect for offering special rates for members or VIPs.\n\"\"\"\ntype AccessKey {\n  id: ID!\n  key: String!\n\n  \"\"\"\n  The total number of locked tickets that can be purchased with a given key.\n  \"\"\"\n  quantity: Int\n  state: AccessKeyState!\n}\n\n\"\"\"The state an access key can be in\"\"\"\nenum AccessKeyState {\n  \"\"\"The Access Key is available for use\"\"\"\n  ACTIVE\n\n  \"\"\"The Access Key is not available for use\"\"\"\n  INACTIVE\n\n  \"\"\"The Access Key has been fully used and cannot be redeemed\"\"\"\n  USED\n}\n\n\"\"\"The invoice for an order\"\"\"\ntype Invoice {\n  address1: String\n  address2: String\n  city: String\n  company: String\n  country: String\n  fullName: String\n  id: ID!\n  number: Int\n  state: String\n  zip: String\n}\n\n\"\"\"Refund arguments related to a single OrderItem\"\"\"\ninput OrderItemRefundData {\n  id: ID!\n  amount: Float!\n  refundType: RefundType!\n  void: Boolean!\n}\n\n\"\"\"Specifies if a refund is flat or in percentage of the amount\"\"\"\nenum RefundType {\n  FLAT\n  PERCENT\n}\n\n\"\"\"CheckInState describes if an OrderItem was checked in or not.\"\"\"\nenum CheckInState {\n  \"\"\"The initial check in state\"\"\"\n  CHECKED_OUT\n\n  \"\"\"Check in done by the host\"\"\"\n  MANUALLY_CHECKED_IN\n\n  \"\"\"QR Code was scanned at the door\"\"\"\n  SCANNED_IN\n\n  \"\"\"QR Code was scanned out\"\"\"\n  SCANNED_OUT\n}\n\n\"\"\"A product or service that can be sold at any of your events\"\"\"\ntype AddOn {\n  \"\"\"The currency in which the add-on is sold\"\"\"\n  currency: CurrencyCode\n\n  \"\"\"A detailed description of the add-on\"\"\"\n  description: String\n\n  \"\"\"Events where this add on is available. Set to [] for all events.\"\"\"\n  eventIds: [ID]\n  events: [Event]\n\n  \"\"\"The creator of the add-on\"\"\"\n  host: Host\n\n  \"\"\"Determines who pays the Universe service fee.\"\"\"\n  hostPaysCommission: Boolean\n  id: ID\n\n  \"\"\"The name of add-on item being sold\"\"\"\n  name: String\n\n  \"\"\"The rates associated with the add-on\"\"\"\n  rates: [AddOnRate]\n\n  \"\"\"The taxes associated with the add-on\"\"\"\n  taxes: [Tax]\n}\n\n\"\"\"\nRates are product types available for sale - most typically these are tickets, in this case configured for add-on\n\"\"\"\ntype AddOnRate {\n  \"\"\"Associated add-on for this rate\"\"\"\n  addOn: AddOn\n\n  \"\"\"Amount available after considering claims and sold items\"\"\"\n  availability: Int\n\n  \"\"\"Capacities for add on rate\"\"\"\n  capacities: [RateCapacity!]\n\n  \"\"\"Number of add-on items available in stock\"\"\"\n  capacity: Int\n\n  \"\"\"Description of rate\"\"\"\n  description: String\n\n  \"\"\"The displayed price of this specific rate with all in pricing\"\"\"\n  displayPrice: Float\n  eventId: String\n  id: ID!\n\n  \"\"\"A URL to the event image. Custom height and width can be supplied\"\"\"\n  imageUrl(\n    \"\"\"Height of the image\"\"\"\n    height: Int = 160\n\n    \"\"\"Width of the image\"\"\"\n    width: Int = 160\n  ): String\n\n  \"\"\"Images of the add on option\"\"\"\n  images: [Image!]\n\n  \"\"\"Maximum number of add-ons allowed per order\"\"\"\n  maxQuantity: Int\n\n  \"\"\"Minimum number of add-ons required per order\"\"\"\n  minQuantity: Int\n\n  \"\"\"The name of the rate\"\"\"\n  name: String!\n  optionName: String\n\n  \"\"\"The sale price of this specific rate\"\"\"\n  price: Float\n\n  \"\"\"Product number of this specific add-on rate\"\"\"\n  sku: String\n\n  \"\"\"The currency the buyer must purchase the rate in\"\"\"\n  srcCurrency: String!\n\n  \"\"\"The state of a specific add-on rate\"\"\"\n  state: RateState\n\n  \"\"\"The type of rate\"\"\"\n  type: String!\n\n  \"\"\"Whether an add on rate has sold add-ons or not\"\"\"\n  used: Boolean!\n}\n\n\"\"\"Capacity for a Rate within a Time Slot\"\"\"\ntype RateCapacity {\n  \"\"\"\n  Available capacity count for a Rate within a Time Slot. It depends on the Event and Rate maxQuantity. Returns null if there is no maxQuantity set for Event and Rate. \n  \"\"\"\n  available: Int\n  countAttending: Int\n  countAvailable: Int\n  id: ID!\n\n  \"\"\"Rate for the capacity in a Time Slot\"\"\"\n  rate: Rate!\n  rateId: ID!\n  timeSlotId: ID\n  type: String!\n}\n\n\"\"\"A tax rate that can be applied to cost items\"\"\"\ntype Tax {\n  \"\"\"The add ons that use this tax\"\"\"\n  addOns: [AddOn]\n\n  \"\"\"The creator of the tax\"\"\"\n  host: Host\n  id: ID\n\n  \"\"\"The name of tax\"\"\"\n  name: String\n\n  \"\"\"The percentage of tax rate\"\"\"\n  percent: Float\n\n  \"\"\"Tax registration number if available\"\"\"\n  taxId: String\n}\n\n\"\"\"Monetary amounts (includes a currency and sales $)\"\"\"\ntype Money {\n  \"\"\"The currency of the money\"\"\"\n  currency: CurrencyCode!\n\n  \"\"\"\n  The exponent of the currency, the number of digits used after the decimal place\n  \"\"\"\n  exponent: Int!\n\n  \"\"\"\n  Monetary amount returned as an integer in the lowest denomination (cents) to reduce floating point errors\n  \"\"\"\n  monetaryAmount: Int!\n}\n\n\"\"\"Possible Rate types.\"\"\"\nenum RateType {\n  \"\"\"The rate is for a paid ticket\"\"\"\n  PAID_TICKET\n\n  \"\"\"The rate is for a free ticket\"\"\"\n  FREE_TICKET\n\n  \"\"\"The rate is for a pay what you can ticket\"\"\"\n  PWYW_TICKET\n\n  \"\"\"The rate is for an add-on\"\"\"\n  ADD_ON\n}\n\n\"\"\"Sales per specific day\"\"\"\ntype DailySales {\n  \"\"\"Day\"\"\"\n  day: Date!\n\n  \"\"\"Sales\"\"\"\n  salesAmount: Float!\n}\n\n\"\"\"The conversion tracking labels a host as set for their Event\"\"\"\ntype GoogleAdsSendTos {\n  \"\"\"the send_to field to fire on checkout modal is loaded\"\"\"\n  checkout: [String]!\n\n  \"\"\"the send_to field to fire on an event pageview\"\"\"\n  pageview: [String]!\n\n  \"\"\"the send_to field to fire on an event purhcase\"\"\"\n  purchase: [String]!\n}\n\ntype RateConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Rate!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"\nTrue if rate with state exists and false if rate with state does not exist\n\"\"\"\ntype RateStateExists {\n  inactive: Boolean!\n  locked: Boolean!\n  soldAtDoor: Boolean\n}\n\ntype SaversConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Saver!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"Represents a Saver who Saved an Event\"\"\"\ntype Saver implements User {\n  admin: Boolean!\n\n  \"\"\"The avatar URL, 160x160 pixels\"\"\"\n  avatarUrl: String\n\n  \"\"\"A user-defined description\"\"\"\n  description: String\n\n  \"\"\"The first name of the type implementing a User interface\"\"\"\n  firstName: String\n  id: ID\n\n  \"\"\"The last name of the type implementing a User interface\"\"\"\n  lastName: String\n\n  \"\"\"User locale\"\"\"\n  locale: Locale\n\n  \"\"\"A single field concatenating firstName and lastName\"\"\"\n  name: String\n\n  \"\"\"The type of the viewer account (Admin, User, Spammer, etc)\"\"\"\n  role: UserRole!\n\n  \"\"\"\n  A unique identifier, shorter version of the ID. Should be used for URI construction.\n  \"\"\"\n  slug: String\n\n  \"\"\"The avatar URL, 50x50 pixels\"\"\"\n  smallAvatarUrl: String\n  superAdmin: Boolean!\n}\n\ntype AccessKeyConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [AccessKey!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\ntype DiscountConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Discount!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"WIP\"\"\"\ntype Report {\n  columns: JSON!\n  preview(\n    \"\"\"number of rows to return in the preview\"\"\"\n    limit: Int = 10\n\n    \"\"\"number of rows to skip in the preview\"\"\"\n    offset: Int = 0\n  ): JSON!\n}\n\n\"\"\"Event category\"\"\"\ntype Category {\n  id: ID!\n  key: CategoryKey!\n\n  \"\"\"The name of the category in English\"\"\"\n  name: String!\n}\n\n\"\"\"List of potential event categories\"\"\"\nenum CategoryKey {\n  \"\"\"Other\"\"\"\n  OTHER\n\n  \"\"\"Business\"\"\"\n  BUSINESS\n\n  \"\"\"Music\"\"\"\n  MUSIC\n\n  \"\"\"Sports\"\"\"\n  SPORTS\n\n  \"\"\"Comedy\"\"\"\n  COMEDY\n\n  \"\"\"Film\"\"\"\n  FILM\n\n  \"\"\"Crafts\"\"\"\n  CRAFTS\n\n  \"\"\"Food & Drink\"\"\"\n  FOOD_DRINK\n\n  \"\"\"Fashion\"\"\"\n  FASHION\n\n  \"\"\"Social\"\"\"\n  SOCIAL\n\n  \"\"\"Performances\"\"\"\n  PERFORMING_ARTS\n\n  \"\"\"Tech\"\"\"\n  TECH\n\n  \"\"\"Galleries\"\"\"\n  GALLERIES_MUSEUMS\n}\n\n\"\"\"A label on an Event indicating an interest the Event includes\"\"\"\ntype Tag {\n  \"\"\"The name of the tag\"\"\"\n  name: String!\n\n  \"\"\"The slug for the tag\"\"\"\n  slug: String!\n\n  \"\"\"Whether the tag is suggestable or not\"\"\"\n  suggestable: Boolean\n}\n\ntype ScheduleConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Schedule!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"The object that controls the creation of batch timeslots\"\"\"\ntype Schedule {\n  \"\"\"End date in YYYY/MM/DD\"\"\"\n  endDate: String\n  id: ID!\n\n  \"\"\"The timeslot intervals assigned to this Schedule\"\"\"\n  intervals: [ScheduleInterval!]!\n\n  \"\"\"Current progress of this schedule\"\"\"\n  progress: Int!\n\n  \"\"\"Start date in YYYY/MM/DD\"\"\"\n  startDate: String!\n\n  \"\"\"The state this schedule is in\"\"\"\n  state: ScheduleState!\n\n  \"\"\"Weekdays available in the schedule, represented by 0-6\"\"\"\n  weekdaysAvailable: [Days!]!\n}\n\n\"\"\"Days\"\"\"\nenum Days {\n  \"\"\"Sunday\"\"\"\n  SUNDAY\n\n  \"\"\"Monday\"\"\"\n  MONDAY\n\n  \"\"\"Tuesday\"\"\"\n  TUESDAY\n\n  \"\"\"Wednesday\"\"\"\n  WEDNESDAY\n\n  \"\"\"Thursday\"\"\"\n  THURSDAY\n\n  \"\"\"Friday\"\"\"\n  FRIDAY\n\n  \"\"\"Saturday\"\"\"\n  SATURDAY\n}\n\n\"\"\"Each individual timeslot rule within a schedule\"\"\"\ntype ScheduleInterval {\n  \"\"\"The timeslot intervals assigned to this Schedule\"\"\"\n  datesToSkip: [Date]!\n\n  \"\"\"How long a timeslot will last from the startHour and startMinute\"\"\"\n  duration: Int!\n  id: ID!\n\n  \"\"\"The hour when a timeslot will begin\"\"\"\n  startHour: Int!\n\n  \"\"\"The minute when a timeslot will begin\"\"\"\n  startMinute: Int!\n}\n\n\"\"\"The state a schedule is in\"\"\"\nenum ScheduleState {\n  \"\"\"This schedule is currently manipulating timeslots\"\"\"\n  IN_SYNC\n\n  \"\"\"This schedule is done manipulating timeslots\"\"\"\n  SYNC_DONE\n}\n\n\"\"\"Report that provides overview information on order item sales\"\"\"\ntype TimeSlotReport {\n  addOnsByDate: [JSON]\n\n  \"\"\"Number of add-ons sold\"\"\"\n  addonItemsSold: Int!\n\n  \"\"\"Number of order items and add-ons sold\"\"\"\n  costItemsSold: Int!\n  id: ID!\n  invitationsByDate: [JSON]\n\n  \"\"\"Number of invitations sent out to potential buyers\"\"\"\n  invitationsSent: Int\n\n  \"\"\"\n  The monetary value that represents the total of tickets sold in-person before Universe has made its deductions\n  \"\"\"\n  offlineAmountGross: Float\n  salesByDate: [JSON]\n\n  \"\"\"Number of order items sold\"\"\"\n  ticketItemsSold: Int!\n  ticketsAvailableByRate: [JSON]\n  ticketsByDate: [JSON]\n\n  \"\"\"Number of orders processed\"\"\"\n  ticketsSold: Int!\n  totalAddonItemsGross: Float\n\n  \"\"\"Monetary amount of discounts applied to order items\"\"\"\n  totalAmountDiscount: Float\n\n  \"\"\"Commission amount given to Universe as payment per ticket\"\"\"\n  totalCommissionIncluded: Float\n\n  \"\"\"Fees on on order items\"\"\"\n  totalFee: Float\n\n  \"\"\"\n  The monetary value that represents the total before Universe has made its deductions\n  \"\"\"\n  totalGross: Float\n\n  \"\"\"\n  The monetary value that represents the total after Universe has made its deductions such as Service Charge\n  \"\"\"\n  totalNet: Float\n\n  \"\"\"Taxes on order items\"\"\"\n  totalTaxes: Float\n  totalTicketItemsGross: Float\n\n  \"\"\"Taxes on Universe fees or Value Added Tax\"\"\"\n  totalVatIncluded: Float\n}\n\ntype RateCapacityConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [RateCapacity!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"Analytics data for Viewer\"\"\"\ntype Analytics {\n  \"\"\"Add-on revenue amount by this currency\"\"\"\n  addOnSalesAmount(slugs: [String!], from: Date!, to: Date!, currency: CurrencyCode!): Float!\n\n  \"\"\"Add-on sales by day\"\"\"\n  addOnSalesByDay(slugs: [String!], from: Date!, to: Date!, currency: CurrencyCode!): [DailySales!]!\n\n  \"\"\"Average OrderItem count per Order\"\"\"\n  averageOrderItemCountPerOrder(from: Date!, to: Date!, currency: CurrencyCode!, slugs: [String!]): Float\n\n  \"\"\"Average OrderItem price\"\"\"\n  averageOrderItemPrice(from: Date!, to: Date!, currency: CurrencyCode!, slugs: [String!]): Float\n\n  \"\"\"Average Order price\"\"\"\n  averageOrderPrice(from: Date!, to: Date!, currency: CurrencyCode!, slugs: [String!]): Float\n\n  \"\"\"Aggregate top buyers' locations\"\"\"\n  buyersLocations(from: Date!, to: Date!, currency: CurrencyCode!, slugs: [String!]): [BuyersLocation!]!\n\n  \"\"\"Revenue amount by this currency\"\"\"\n  salesAmount(slugs: [String!], from: Date!, to: Date!, currency: CurrencyCode!): Float!\n\n  \"\"\"Sales by day\"\"\"\n  salesByDay(slugs: [String!], from: Date!, to: Date!, currency: CurrencyCode!): [DailySales!]!\n\n  \"\"\"Aggregate sales information by channels\"\"\"\n  salesChannels(from: Date!, to: Date!, currency: CurrencyCode!, slugs: [String!]): [SalesChannel!]!\n\n  \"\"\"Ticket revenue amount by this currency\"\"\"\n  ticketSalesAmount(slugs: [String!], from: Date!, to: Date!, currency: CurrencyCode!): Float!\n\n  \"\"\"Ticket sales by day\"\"\"\n  ticketSalesByDay(slugs: [String!], from: Date!, to: Date!, currency: CurrencyCode!): [DailySales!]!\n\n  \"\"\"Total tickets sold per currency\"\"\"\n  ticketsSold(slugs: [String!], from: Date!, to: Date!, currency: CurrencyCode!): Int!\n\n  \"\"\"The most popular hour of Order purchase\"\"\"\n  topHourOfPurchase(from: Date!, to: Date!, currency: CurrencyCode!, slugs: [String!]): Int\n}\n\n\"\"\"Sales data through channel\"\"\"\ntype SalesChannel {\n  \"\"\"Channel name\"\"\"\n  channelName: String\n\n  \"\"\"Sales amount\"\"\"\n  salesAmount: Int\n\n  \"\"\"Sales count\"\"\"\n  salesCount: Int\n}\n\n\"\"\"Number of Buyers per Location\"\"\"\ntype BuyersLocation {\n  \"\"\"Number of Buyers per Location\"\"\"\n  buyerCount: Int!\n\n  \"\"\"Buyers' Location\"\"\"\n  location: Location!\n}\n\ntype Location {\n  \"\"\"City name\"\"\"\n  city: String!\n\n  \"\"\"Country name\"\"\"\n  country: String!\n}\n\n\"\"\"Stripe connect account properties\"\"\"\ntype StripeConnectAccount {\n  currency: CurrencyCode!\n\n  \"\"\"Stripe Connect Account Id\"\"\"\n  id: String!\n\n  \"\"\"Payment methods associated with stripe connect account\"\"\"\n  paymentMethods: [String!]\n}\n\ntype CustomReportConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [CustomReport!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"Account level custom report\"\"\"\ntype CustomReport {\n  _id: ID! @deprecated(reason: \"Prefer camelCase to snake case. Please use the id field instead\")\n  columns: [String!]!\n  createdAt: String!\n  created_at: String! @deprecated(reason: \"Prefer camelCase to snake case. Please use the createdAt field instead\")\n\n  \"\"\"Currency parameter for filtering events in event select modal\"\"\"\n  currencyFilter: String\n\n  \"\"\"The day of the week when the scheduler should send report on.\"\"\"\n  days: [Days]\n  description: String\n\n  \"\"\"Whether the scheduler is enabled or not\"\"\"\n  enabled: Boolean\n\n  \"\"\"\n  Custom date range parameter (from) for filtering events in event select modal\n  \"\"\"\n  eventRangeFrom: String\n\n  \"\"\"\n  Custom date range parameter (to) for filtering events in event select modal\n  \"\"\"\n  eventRangeTo: String\n  events: [String!]\n  filters: [JSON!]\n\n  \"\"\"The starting date of the scheduler\"\"\"\n  from: Date\n\n  \"\"\"\n  The speicific hour of the day when the report should be sent. Value must be between 0 and 23\n  \"\"\"\n  hour: Int\n  id: ID!\n  name: String!\n\n  \"\"\"\n  The ordering column and direction of order prior to exporting to a CSV/XLS file. Value must be in '{COLUMN} {DIRECTION}' format\n  \"\"\"\n  order: String\n  reportType: String!\n  report_type: String! @deprecated(reason: \"Prefer camelCase to snake case. Please use the reportType field instead\")\n\n  \"\"\"Time parameter for filtering events in event select modal\"\"\"\n  timeFilter: String\n\n  \"\"\"The ending date of the scheduler\"\"\"\n  to: Date\n  updatedAt: String!\n  updated_at: String! @deprecated(reason: \"Prefer camelCase to snake case. Please use the updatedAt field instead\")\n}\n\ntype AddOnConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [AddOn!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\ntype TaxConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Tax!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"Set of Events\"\"\"\ntype EventSet implements BaseEvent {\n  \"\"\"Street-level address\"\"\"\n  address: String!\n\n  \"\"\"All Events in the EventSet\"\"\"\n  allEvents: [Event]!\n\n  \"\"\"All Additional Images\"\"\"\n  allImages: [Image!]!\n\n  \"\"\"EventSet calendar fields\"\"\"\n  calendar: Calendar!\n\n  \"\"\"Cover Photo\"\"\"\n  coverPhoto: Image!\n\n  \"\"\"In UTC\"\"\"\n  createdAt: Time!\n\n  \"\"\"A detailed description of the event\"\"\"\n  description(format: ContentFormat = null): String!\n\n  \"\"\"Detailed description with html\"\"\"\n  descriptionHtml: String! @deprecated(reason: \"Deprecated in favor of description field with argument[:format] equal to 'html'\")\n\n  \"\"\"Events in the EventSet\"\"\"\n  events: EventConnection!\n  id: ID!\n\n  \"\"\"Other Images\"\"\"\n  images: ImageConnection!\n  latitude: Float!\n  longitude: Float!\n\n  \"\"\"\n  A unique identifier, shorter version of the ID. Should be used for URI construction.\n  \"\"\"\n  slug: String!\n\n  \"\"\"A brief description\"\"\"\n  title: String!\n\n  \"\"\"In UTC\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Event or EventSet creator\"\"\"\n  user: Profile!\n\n  \"\"\"Name of the venue\"\"\"\n  venueName: String\n}\n\n\"\"\"Calendar namespace for widgets\"\"\"\ntype Calendar {\n  \"\"\"List of dates with future / ongoing Events\"\"\"\n  dates: [Date!]!\n\n  \"\"\"\n  List of ongoing / future TimeSlots, sorted by startAt, unique by startDate and Event.\n  \"\"\"\n  timeSlots(\n    \"\"\"Supply an ISO8601-formatted date string to filter time slots by date\"\"\"\n    date: Date\n  ): TimeSlotConnection!\n}\n\n\"\"\"\nTransfers represents the act of transferring one ticket from an user to another one\n\"\"\"\ntype Transfer {\n  \"\"\"In UTC\"\"\"\n  createdAt: Time!\n  email: String\n  firstName: String\n  id: ID!\n  lastName: String\n  orderItem: OrderItem\n  originalOrderItem: OrderItem\n  state: TransferState!\n  token: String\n\n  \"\"\"In UTC\"\"\"\n  updatedAt: Time!\n}\n\n\"\"\"The state a transfer can be in\"\"\"\nenum TransferState {\n  \"\"\"The transfer has been sent to the new owner to be accepted\"\"\"\n  PENDING\n\n  \"\"\"The transfer expires once event begins\"\"\"\n  EXPIRED\n\n  \"\"\"The new ticket owner has accepted this transfer\"\"\"\n  ACCEPTED\n\n  \"\"\"The transfer recipient declined the transfer\"\"\"\n  DECLINED\n\n  \"\"\"The transfer has been cancelled\"\"\"\n  CANCELLED\n}\n\n\"\"\"The user making the current GraphQL operation\"\"\"\ntype Viewer implements User {\n  admin: Boolean!\n\n  \"\"\"The avatar URL, 160x160 pixels\"\"\"\n  avatarUrl: String\n\n  \"\"\"The user has configured their account as a business\"\"\"\n  business: Boolean\n\n  \"\"\"\n  The approximate city of the location of Viewer either by saved location or IP address\n  \"\"\"\n  cityName: String\n\n  \"\"\"The user has configured email\"\"\"\n  confirmed: Boolean\n\n  \"\"\"\n  The approximate country of the location of Viewer either by saved location or IP address\n  \"\"\"\n  countryName: String\n\n  \"\"\"the currencies of the viewer's organizations\"\"\"\n  currencies: [CurrencyCode!]\n\n  \"\"\"A user-defined description\"\"\"\n  description: String\n\n  \"\"\"The base currency for the event\"\"\"\n  displayCurrency: String\n\n  \"\"\"A (potentially unconfirmed) email address belong to the Viewer\"\"\"\n  email: String\n\n  \"\"\"All Events by this Viewer\"\"\"\n  events(slugs: [String!], currency: CurrencyCode, states: [EventState!]): EventConnection!\n\n  \"\"\"The first name of the type implementing a User interface\"\"\"\n  firstName: String\n\n  \"\"\"The user is hosting events on Universe\"\"\"\n  host: Boolean\n  id: ID\n\n  \"\"\"The last name of the type implementing a User interface\"\"\"\n  lastName: String\n\n  \"\"\"\n  The approximate latitude of the location of Viewer either by saved location or IP address\n  \"\"\"\n  latitude: Float\n\n  \"\"\"User locale\"\"\"\n  locale: Locale\n\n  \"\"\"\n  The approximate longitude of the location of Viewer either by saved location or IP address\n  \"\"\"\n  longitude: Float\n\n  \"\"\"Viewers memberships organization information\"\"\"\n  memberships: MembershipConnection\n\n  \"\"\"A single field concatenating firstName and lastName\"\"\"\n  name: String\n\n  \"\"\"The type of the viewer account (Admin, User, Spammer, etc)\"\"\"\n  role: UserRole!\n\n  \"\"\"\n  A unique identifier, shorter version of the ID. Should be used for URI construction.\n  \"\"\"\n  slug: String\n\n  \"\"\"The avatar URL, 50x50 pixels\"\"\"\n  smallAvatarUrl: String\n  superAdmin: Boolean!\n\n  \"\"\"The predicted TimeSlot duration from startAt to endAt in seconds\"\"\"\n  timeSlotDuration: Int\n\n  \"\"\"The predicted TimeSlot startAt time\"\"\"\n  timeSlotStartAt: TimeWithoutTz!\n\n  \"\"\"The transacted currency for the event\"\"\"\n  transactedCurrency: String\n}\n\ntype MembershipConnection {\n  nodes(limit: Int = 10, offset: Int = 0): [Membership!]!\n  pagination: JSON\n  totalCount: Int!\n}\n\n\"\"\"\nMemberships are the groups that the user is a part of through different accessibility / permission levels\n\"\"\"\ntype Membership {\n  \"\"\"Check if the membership applies to all listings\"\"\"\n  allEvents: Boolean!\n\n  \"\"\"Listings that the membership applies to\"\"\"\n  eventIds: String\n  id: ID!\n\n  \"\"\"The owner of the group in which the user has membership\"\"\"\n  owner: Host!\n\n  \"\"\"Check the membership against a specific permission type\"\"\"\n  permission(for: Permission!): Boolean!\n\n  \"\"\"Check the membership against some or all of a list of permission types\"\"\"\n  permissions(\n    for: [Permission!]!\n\n    \"\"\"Check whether any of the permission types apply to the membership\"\"\"\n    any: Boolean = false\n  ): Boolean!\n}\n\n\"\"\"\nPossible permission types on a team membership (dashboard/organization)\n\"\"\"\nenum Permission {\n  \"\"\"\n  Edit event details such as description, dates, checkout questions, etc., and advanced settings such as ticket transfers and waitlist options\n  \"\"\"\n  EDIT\n\n  \"\"\"Ability to delete events\"\"\"\n  DELETABLE\n\n  \"\"\"Ability to publish events\"\"\"\n  TRANSITION\n\n  \"\"\"Ability to customize the \"Get Tickets\" button\"\"\"\n  DESIGN\n\n  \"\"\"Ability to manage events\"\"\"\n  MANAGE\n\n  \"\"\"\n  Promote the event using social deals, discount codes, social integrations, etc.\n  \"\"\"\n  PROMOTE\n\n  \"\"\"\n  Access to At-the-Door (via the BoxOffice app) to scan and sell tickets onsite\n  \"\"\"\n  CHECK_IN\n\n  \"\"\"\n  Access sales and ticket data on the event and account dashboards, and through integrations\n  \"\"\"\n  MANAGE_OVERVIEW\n\n  \"\"\"Access to account level Reports\"\"\"\n  REPORT\n\n  \"\"\"Ability to view orders, contact buyers, refund and cancel orders\"\"\"\n  ORDERS\n\n  \"\"\"Ability view and contact attendees, and resend tickets\"\"\"\n  ATTENDEES\n\n  \"\"\"Ability to add or upload attendees\"\"\"\n  ADD_ATTENDEES\n\n  \"\"\"\n  Ability to export Guestlists Report (ideal for checking people in at the door)\n  \"\"\"\n  GUESTS_REPORT\n\n  \"\"\"\n  Ability to export Attendee's Report (includes data collected during checkout)\n  \"\"\"\n  ATTENDEES_REPORT\n\n  \"\"\"Access to Order Reports (includes a cost breakdown of each order)\"\"\"\n  ORDERS_REPORT\n\n  \"\"\"\n  Ability to export Check-in Report (list of all the check-ins and check-outs)\n  \"\"\"\n  CHECK_INS_REPORT\n\n  \"\"\"Ability to export Cancellations and Refunds Report\"\"\"\n  CANCELLATIONS_REPORT\n\n  \"\"\"Access to Tickets Report (cost breakdown for each ticket)\"\"\"\n  TICKETS_REPORT\n\n  \"\"\"\n  Ability to export Requires Approval Report (identifies all orders that have not been approved yet)\n  \"\"\"\n  APPROVALS_REPORT\n\n  \"\"\"\n  Ability to export Audit Reports (shows a high-level daily summary of ticket sales)\n  \"\"\"\n  AUDIT_REPORT\n\n  \"\"\"Receive all emails regarding account activity\"\"\"\n  RECEIVES_EMAILS\n\n  \"\"\"Full access to all events and ability to create events\"\"\"\n  CREATABLE\n\n  \"\"\"Access to Universe Service Invoices\"\"\"\n  SERVICE_INVOICE\n\n  \"\"\"Ability to manage all Add-ons\"\"\"\n  MANAGE_ADD_ONS\n\n  \"\"\"\n  Access to Add-ons Reports (includes the cost breakdown for each add-on)\n  \"\"\"\n  ADD_ONS_REPORT\n\n  \"\"\"\n  Access to Account Activity Reports (financial summary of all money that came into and out of your account)\n  \"\"\"\n  ACTIVITY_REPORT\n\n  \"\"\"\n  Access to Event Reports (A summary of tickets sold by ticket type on the event level)\n  \"\"\"\n  EVENTS_REPORT\n\n  \"\"\"\n  Access to Timeslot Reports (summary of tickets sold by ticket type on the timeslot level)\n  \"\"\"\n  TIMESLOTS_REPORT\n\n  \"\"\"\n  Access to Chargeback Reports (all chargebacks for orders processed on Universe Payments)\n  \"\"\"\n  CHARGEBACKS_REPORT\n\n  \"\"\"Access to Rebate Reports (all rebates received)\"\"\"\n  REBATES_REPORT\n\n  \"\"\"Access to Rebate Invoice Reports (all rebates received)\"\"\"\n  REBATE_INVOICE\n\n  \"\"\"Access to Invoice Reports\"\"\"\n  INVOICE_REPORT\n}\n\n\"\"\"The pricing plan that a host is on.\"\"\"\nenum PricingPlan {\n  \"\"\"The starter pricing plan.\"\"\"\n  STARTER\n\n  \"\"\"The standard pricing plan.\"\"\"\n  STANDARD\n\n  \"\"\"A custom pricing plan.\"\"\"\n  PRO\n}\n\ntype Country {\n  code: CountryCode!\n  continent: Continent!\n  currency: CurrencyCode!\n  geonameId: String!\n  id: ID!\n  name: String!\n  universeAvailable: Boolean!\n}\n\n\"\"\"Two letter continent code\"\"\"\nenum Continent {\n  \"\"\"Africa\"\"\"\n  AF\n\n  \"\"\"Antarctica\"\"\"\n  AN\n\n  \"\"\"Asia\"\"\"\n  AS\n\n  \"\"\"Europe\"\"\"\n  EU\n\n  \"\"\"North America\"\"\"\n  NA\n\n  \"\"\"Oceania\"\"\"\n  OC\n\n  \"\"\"South America\"\"\"\n  SA\n}\n\n\"\"\"Calendar namespace for the new single widgets\"\"\"\ntype CalendarWidget {\n  \"\"\"Whether to enable waitlist for the Event\"\"\"\n  allowWaitlist: Boolean!\n\n  \"\"\"Available months for the event grouped by year\"\"\"\n  availableMonths: [AvailableMonths]!\n\n  \"\"\"Available Timeslots\"\"\"\n  calendarDates: [CalendarWidgetDate]!\n\n  \"\"\"Calendar timeslots\"\"\"\n  calendarTimeslots: [CalendarWidgetTimeslot]!\n\n  \"\"\"A detailed description of the event\"\"\"\n  description(format: ContentFormat = null): String!\n  hostId: ID!\n  id: ID!\n\n  \"\"\"Tickets are sold out for this Event\"\"\"\n  soldOut: Boolean!\n\n  \"\"\"Sold out dates\"\"\"\n  soldOutDates: [String]!\n\n  \"\"\"Determines if a given event is timed entry based\"\"\"\n  timedEntry: Boolean!\n\n  \"\"\"Timezone of the event location\"\"\"\n  timezone: String!\n\n  \"\"\"A brief description\"\"\"\n  title: String!\n\n  \"\"\"Currency that is displayed and charged in\"\"\"\n  transactionCurrency: CurrencyCode!\n}\n\n\"\"\"Available months for an event grouped by year.\"\"\"\ntype AvailableMonths {\n  \"\"\"Event month\"\"\"\n  months: [Int]!\n\n  \"\"\"Event year\"\"\"\n  year: Int!\n}\n\n\"\"\"CalendarWidgetTimeslot\"\"\"\ntype CalendarWidgetTimeslot {\n  \"\"\"Timeslot end date and time in UTC\"\"\"\n  endAt: String!\n\n  \"\"\"Determines if the end date has passed or not\"\"\"\n  endDatePassed: Boolean!\n\n  \"\"\"Extended timeslot end date and time in UTC\"\"\"\n  extendedEndAt: String!\n  id: ID!\n\n  \"\"\"max price\"\"\"\n  maxPrice: Float\n\n  \"\"\"min price\"\"\"\n  minPrice: Float\n\n  \"\"\"Tickets are sold out for this timeslot\"\"\"\n  soldOut: Boolean!\n\n  \"\"\"Timeslot start date and time in UTC\"\"\"\n  startAt: String!\n}\n\n\"\"\"CalendarWidgetDate\"\"\"\ntype CalendarWidgetDate {\n  \"\"\"calendar timeslots\"\"\"\n  calendarTimeslotIds: [ID]!\n\n  \"\"\"date\"\"\"\n  date: String\n\n  \"\"\"totalCount\"\"\"\n  totalCount: Int\n}\n\n\"\"\"\nThis type provides data necessary for Upgrade Tickets modal to function on manage panel\n\"\"\"\ntype UpgradableOrder {\n  \"\"\"Buyer's answers to checkout questions on the Order level\"\"\"\n  answers: [Answer]!\n  id: ID!\n\n  \"\"\"Collection of rate ids for the upgradable order items in this order\"\"\"\n  rateIds: [ID!]\n\n  \"\"\"Whether the order has upgradable items\"\"\"\n  upgradable: Boolean!\n\n  \"\"\"Order items that can be upgraded to a different rate\"\"\"\n  upgradableOrderItems: [UpgradableOrderItem!]!\n}\n\n\"\"\"An order item in the order that is upgradable to another rate\"\"\"\ntype UpgradableOrderItem {\n  \"\"\"\n  Buyer's answers to checkout questions on the OrderItem level (i.e. CostItem)\n  \"\"\"\n  answers: [Answer]!\n\n  \"\"\"In UTC\"\"\"\n  createdAt: Time!\n  id: ID!\n  name: String!\n\n  \"\"\"Owner of upgradable order item\"\"\"\n  owner: OrderItemOwner!\n  rateId: ID!\n\n  \"\"\"In UTC\"\"\"\n  updatedAt: Time!\n\n  \"\"\"Determines wether OrderItem is upgradable\"\"\"\n  upgradable: Boolean!\n\n  \"\"\"Rates to which an oder item can be upgraded to\"\"\"\n  upgradableToRates: [Rate]!\n}\n\n\"\"\"Information about a user that owns an order item(s)\"\"\"\ntype OrderItemOwner {\n  email: String!\n  name: String!\n}\n\n\"\"\"Serves the Event Information Tickets tab on the Manage Panel\"\"\"\ntype ManageTickets {\n  \"\"\"The currency the host receives funds in\"\"\"\n  baseCurrency: String!\n\n  \"\"\"Capacity number for the event\"\"\"\n  capacity: Int\n\n  \"\"\"\n  Flag to show a warning to the fan when capacity is close to reaching capacity\n  \"\"\"\n  capacityAlert: Boolean!\n  country: Country\n  hostId: ID!\n  id: ID!\n  rates: [ManageTicketsRate!]!\n  refundOffset: RefundOffset!\n  refundOffsetType: RefundOffsetType!\n\n  \"\"\"The currency the buyer must purchase in\"\"\"\n  srcCurrency: String!\n\n  \"\"\"The timeSlots assigned to this Event\"\"\"\n  timeSlots: [ManageWhenTimeslot!]!\n\n  \"\"\"\n  Determines whether or not an event admits visitors to an event between a set time\n  \"\"\"\n  timedEntry: Boolean!\n\n  \"\"\"Timezone of the event location\"\"\"\n  timezone: String!\n\n  \"\"\"Determines whether or not an event is virtual\"\"\"\n  virtual: Boolean!\n}\n\ntype ManageTicketsRate {\n  \"\"\"The default access key for a given locked rate\"\"\"\n  accessKey: String\n\n  \"\"\"\n  Optional number for the ticket capacity on this rate - default is unlimited\n  \"\"\"\n  capacity: Int\n  clientGroup: RateClientGroup\n\n  \"\"\"Description for the rate\"\"\"\n  description: String\n  displayPrice: Float\n\n  \"\"\"UNIX Timestamp\"\"\"\n  endStamp: Int\n\n  \"\"\"\n  List of rules that exclude a rate from displaying against given timeslot(s)\n  \"\"\"\n  exclusionRules: [JSON!]\n  id: ID!\n\n  \"\"\"\n  Optional number for the maximum amount of tickets to be sold on this rate\n  \"\"\"\n  maxTickets: Int\n\n  \"\"\"\n  The minimum price of this type of ticket, used only in PWYW/donation tickets\n  \"\"\"\n  minPrice: Float!\n\n  \"\"\"\n  Optional number for the minimum amount of tickets to be sold on this rate\n  \"\"\"\n  minTickets: Int\n\n  \"\"\"Name for the rate\"\"\"\n  name: String!\n\n  \"\"\"The price of this type of ticket - 0.0 if free\"\"\"\n  price: Float!\n\n  \"\"\"Seconds before event to release the tickets\"\"\"\n  releaseOffset: Int\n\n  \"\"\"The currency the buyer must purchase the rate in\"\"\"\n  srcCurrency: String!\n\n  \"\"\"UNIX Timestamp\"\"\"\n  startStamp: Int\n  state: RateState!\n  type: RateType!\n\n  \"\"\"If rate has sold order items\"\"\"\n  used: Boolean!\n}\n\ntype ManageWhenTimeslot {\n  \"\"\"Timeslot end date and time in UTC\"\"\"\n  endAt: TimeWithoutTz!\n  id: ID!\n\n  \"\"\"Whether the timeslot can be modified or not\"\"\"\n  readOnly: Boolean!\n\n  \"\"\"Timeslot start date and time in UTC\"\"\"\n  startAt: TimeWithoutTz!\n}\n\n\"\"\"\nServes the Event Information When (Timed Entry) tab on the Manage Panel\n\"\"\"\ntype ManageWhenTimedEntry {\n  id: ID!\n\n  \"\"\"The schedules assigned to this Event\"\"\"\n  schedules: [Schedule!]!\n\n  \"\"\"Timezone of the event location\"\"\"\n  timezone: String!\n\n  \"\"\"Determines whether or not an event is virtual\"\"\"\n  virtual: Boolean!\n}\n\n\"\"\"\nServes the Event Information When (Regular Entry) tab on the Manage Panel\n\"\"\"\ntype ManageWhenRegularEntry {\n  address: String!\n  country: Country\n  id: ID!\n  latitude: Float!\n  longitude: Float!\n\n  \"\"\"The timeSlots assigned to this Event\"\"\"\n  timeSlots: [ManageWhenTimeslot!]!\n\n  \"\"\"Timezone of the event location\"\"\"\n  tz: String!\n  venueName: String\n\n  \"\"\"Determines whether or not an event is virtual\"\"\"\n  virtual: Boolean!\n\n  \"\"\"Virtual connection info\"\"\"\n  virtualInfo: String\n}\n\n\"\"\"Serves the Event Information Customize tab on the Manage Panel\"\"\"\ntype ManageCustomize {\n  \"\"\"\n  Optional additional images for the event (promotional photos, venue photos)\n  \"\"\"\n  additionalImages: [Image!]!\n\n  \"\"\"Optional field that the host sets for additional contact information\"\"\"\n  contactDetails: String\n\n  \"\"\"\n  Cover photo for the event (min 100x100px, max 2MB). Auto-generated if no initial entry.\n  \"\"\"\n  coverPhoto: Image!\n\n  \"\"\"\n  Event photo for the event (min 1110x444px, max 5MB). Auto-generated if no initial entry.\n  \"\"\"\n  eventPhoto: Image!\n  id: ID!\n\n  \"\"\"Content that will be provided to buyer's only\"\"\"\n  privateNote: String\n}\n\n\"\"\"Serves the Customize Tickets tab on the Event Manage Panel\"\"\"\ntype ManageCustomizeTickets {\n  \"\"\"Date objects for the ticket customization calendar\"\"\"\n  calendarDates: [CustomizeTicketsDate!]!\n\n  \"\"\"First available month\"\"\"\n  firstMonthWithEvents: String!\n\n  \"\"\"Last available month\"\"\"\n  lastMonthWithEvents: String!\n\n  \"\"\"Ticket types in original state for all timeslots\"\"\"\n  rates: [Rate!]!\n\n  \"\"\"All timeslots for the listing\"\"\"\n  timeslots: [CustomizeTicketsTimeslot!]!\n\n  \"\"\"Timezone of the event location\"\"\"\n  timezone: String!\n}\n\n\"\"\"Date objects for the Customize Tickets calendar\"\"\"\ntype CustomizeTicketsDate {\n  \"\"\"Calendar timeslots for the tickets customization page\"\"\"\n  calendarTimeslotIds: [ID]!\n\n  \"\"\"date\"\"\"\n  date: String\n}\n\n\"\"\"Timeslot objects for the Customize Tickets tab\"\"\"\ntype CustomizeTicketsTimeslot {\n  \"\"\"Timeslot end date and time\"\"\"\n  endAt: String!\n  id: ID!\n  rateIds: [ID]!\n\n  \"\"\"Timeslot start date and time\"\"\"\n  startAt: String!\n}\n\n\"\"\"Serves the Event Information Basics tab on the Manage Panel\"\"\"\ntype ManageBasics {\n  address: String!\n  categoryId: String!\n  country: Country\n  description: String!\n  id: ID!\n  latitude: Float!\n  longitude: Float!\n  privacy: String!\n\n  \"\"\"The timeSlots assigned to this Event\"\"\"\n  timeSlots: [ManageWhenTimeslot!]!\n  timedEntry: Boolean!\n  title: String!\n\n  \"\"\"Timezone of the event location\"\"\"\n  tz: String!\n  venueName: String\n}\n\n\"\"\"Returns fields required for TimeSlotSelect modal to function\"\"\"\ntype TimeSlotSelect {\n  \"\"\"Dates on which there are time slots\"\"\"\n  datesWithTimeSlots: [String!]\n}\n\ntype Mutation {\n  \"\"\"Accept Transfer\"\"\"\n  acceptTransfer(input: TransferAcceptInput!): TransferAcceptPayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `transferAccept`\")\n\n  \"\"\"Create AddOn\"\"\"\n  addOnCreate(input: AddOnCreateInput!): AddOnCreatePayload\n\n  \"\"\"Delete AddOn\"\"\"\n  addOnDelete(input: AddOnDeleteInput!): AddOnDeletePayload\n\n  \"\"\"Update Addon\"\"\"\n  addOnUpdate(input: AddOnUpdateInput!): AddOnUpdatePayload\n\n  \"\"\"Message event attendees\"\"\"\n  attendeesMessage(input: AttendeesMessageInput!): AttendeesMessagePayload\n\n  \"\"\"Create AddOn\"\"\"\n  createAddOn(input: AddOnCreateInput!): AddOnCreatePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `addOnCreate`\")\n\n  \"\"\"Create Custom Report\"\"\"\n  createCustomReport(input: CustomReportCreateInput!): CustomReportCreatePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `customReportCreate`\")\n\n  \"\"\"Create Event\"\"\"\n  createEvent(input: EventCreateInput!): EventCreatePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `eventCreate`\")\n\n  \"\"\"Create Tax\"\"\"\n  createTax(input: TaxCreateInput!): TaxCreatePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `taxCreate`\")\n\n  \"\"\"Create Custom Report\"\"\"\n  customReportCreate(input: CustomReportCreateInput!): CustomReportCreatePayload\n\n  \"\"\"Delete Custom Report\"\"\"\n  customReportDelete(input: CustomReportDeleteInput!): CustomReportDeletePayload\n\n  \"\"\"Update Custom Report\"\"\"\n  customReportUpdate(input: CustomReportUpdateInput!): CustomReportUpdatePayload\n\n  \"\"\"Decline Transfer\"\"\"\n  declineTransfer(input: TransferDeclineInput!): TransferDeclinePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `transferDecline`\")\n\n  \"\"\"Delete AddOn\"\"\"\n  deleteAddOn(input: AddOnDeleteInput!): AddOnDeletePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `addOnDelete`\")\n\n  \"\"\"Delete Custom Report\"\"\"\n  deleteCustomReport(input: CustomReportDeleteInput!): CustomReportDeletePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `customReportDelete`\")\n\n  \"\"\"Delete Event\"\"\"\n  deleteEvent(input: EventDeleteInput!): EventDeletePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `eventDelete`\")\n\n  \"\"\"Create Discount belonging to this user\"\"\"\n  discountCreate(input: DiscountCreateInput!): DiscountCreatePayload\n\n  \"\"\"Delete Discount\"\"\"\n  discountDelete(input: DiscountDeleteInput!): DiscountDeletePayload\n\n  \"\"\"Bulk create account level discount codes\"\"\"\n  discountsCreate(input: DiscountsCreateInput!): DiscountsCreatePayload\n\n  \"\"\"Update many Discounts at once\"\"\"\n  discountsUpdate(input: DiscountsUpdateInput!): DiscountsUpdatePayload\n\n  \"\"\"Duplicate Event\"\"\"\n  duplicateEvent(input: EventDuplicateInput!): EventDuplicatePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `eventDuplicate`\")\n\n  \"\"\"Create Event\"\"\"\n  eventCreate(input: EventCreateInput!): EventCreatePayload\n\n  \"\"\"Delete Event\"\"\"\n  eventDelete(input: EventDeleteInput!): EventDeletePayload\n\n  \"\"\"Duplicate Event\"\"\"\n  eventDuplicate(input: EventDuplicateInput!): EventDuplicatePayload\n\n  \"\"\"Publish Event\"\"\"\n  eventPublish(input: EventPublishInput!): EventPublishPayload\n\n  \"\"\"Report Event\"\"\"\n  eventReport(input: EventReportInput!): EventReportPayload\n\n  \"\"\"Save Event\"\"\"\n  eventSave(input: EventSaveInput!): EventSavePayload\n\n  \"\"\"Report Event Set\"\"\"\n  eventSetReport(input: EventSetReportInput!): EventSetReportPayload\n\n  \"\"\"Unpublish Event\"\"\"\n  eventUnpublish(input: EventUnpublishInput!): EventUnpublishPayload\n\n  \"\"\"Update Event\"\"\"\n  eventUpdate(input: EventUpdateInput!): EventUpdatePayload\n\n  \"\"\"Update host google analytics integration\"\"\"\n  hostGaIntegrationUpdate(input: HostGaIntegrationUpdateInput!): HostGaIntegrationUpdatePayload\n\n  \"\"\"Change locale for current Viewer\"\"\"\n  localeChange(input: LocaleChangeInput!): LocaleChangePayload\n\n  \"\"\"Approves a pending order\"\"\"\n  orderApprove(input: OrderApproveInput!): OrderApprovePayload\n\n  \"\"\"Change the buyer info for an order\"\"\"\n  orderBuyerInfoChange(input: OrderBuyerInfoChangeInput!): OrderBuyerInfoChangePayload\n\n  \"\"\"Declines a pending order\"\"\"\n  orderDecline(input: OrderDeclineInput!): OrderDeclinePayload\n\n  \"\"\"Change the attendee info for an order item\"\"\"\n  orderItemAttendeeInfoChange(input: OrderItemAttendeeInfoChangeInput!): OrderItemAttendeeInfoChangePayload\n\n  \"\"\"Check in an order item\"\"\"\n  orderItemCheckIn(input: OrderItemCheckInInput!): OrderItemCheckInPayload\n\n  \"\"\"Check out an order item\"\"\"\n  orderItemCheckOut(input: OrderItemCheckOutInput!): OrderItemCheckOutPayload\n\n  \"\"\"Update external metadata field on OrderItem\"\"\"\n  orderItemExternalMetadataUpdate(input: ExternalMetadataUpdateInput!): ExternalMetadataUpdatePayload\n\n  \"\"\"Resend email with order item details\"\"\"\n  orderItemResend(input: OrderItemResendInput!): OrderItemResendPayload\n\n  \"\"\"Marks an order that was purchased using an invoice as 'Paid'\"\"\"\n  orderMarkInvoiceAsPaid(input: MarkInvoiceAsPaidInput!): MarkInvoiceAsPaidPayload\n\n  \"\"\"Refund order items\"\"\"\n  orderRefund(input: OrderRefundInput!): OrderRefundPayload\n\n  \"\"\"Resend email with order details\"\"\"\n  orderResend(input: OrderResendInput!): OrderResendPayload\n\n  \"\"\"Update the time slot for an order\"\"\"\n  orderTimeSlotUpdate(input: OrderTimeSlotUpdateInput!): OrderTimeSlotUpdatePayload\n\n  \"\"\"Upgrade order items\"\"\"\n  orderUpgrade(input: OrderUpgradeInput!): OrderUpgradePayload\n\n  \"\"\"Publish Event\"\"\"\n  publishEvent(input: EventPublishInput!): EventPublishPayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `eventPublish`\")\n\n  \"\"\"Create a ticket\"\"\"\n  rateCreate(input: RateCreateInput!): RateCreatePayload\n\n  \"\"\"Update a single rate\"\"\"\n  rateUpdate(input: RateUpdateInput!): RateUpdatePayload\n\n  \"\"\"Update multiple rates\"\"\"\n  ratesUpdate(input: RatesUpdateInput!): RatesUpdatePayload\n\n  \"\"\"Save Event\"\"\"\n  saveEvent(input: EventSaveInput!): EventSavePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `eventSave`\")\n\n  \"\"\"Makes API call to Seats.io to publish a seating map\"\"\"\n  seatsPublishDraft(input: SeatsPublishDraftInput!): SeatsPublishDraftPayload\n\n  \"\"\"Synchronize rates with seats chart for reserved seated events\"\"\"\n  seatsSyncRates(input: SeatsSyncRatesInput!): SeatsSyncRatesPayload\n\n  \"\"\"Create Tax\"\"\"\n  taxCreate(input: TaxCreateInput!): TaxCreatePayload\n\n  \"\"\"Updates a TimeSlot\"\"\"\n  timeSlotUpdate(input: TimeSlotUpdateInput!): TimeSlotUpdatePayload\n\n  \"\"\"Accept Transfer\"\"\"\n  transferAccept(input: TransferAcceptInput!): TransferAcceptPayload\n\n  \"\"\"Decline Transfer\"\"\"\n  transferDecline(input: TransferDeclineInput!): TransferDeclinePayload\n\n  \"\"\"Update Addon\"\"\"\n  updateAddOn(input: AddOnUpdateInput!): AddOnUpdatePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `addOnUpdate`\")\n\n  \"\"\"Update Custom Report\"\"\"\n  updateCustomReport(input: CustomReportUpdateInput!): CustomReportUpdatePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `customReportUpdate`\")\n\n  \"\"\"Update a single rate\"\"\"\n  updateRate(input: RateUpdateInput!): RateUpdatePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `rateUpdate`\")\n\n  \"\"\"Update multiple rates\"\"\"\n  updateRates(input: RatesUpdateInput!): RatesUpdatePayload @deprecated(reason: \"Mutations should conform to the `subjectAction` format, please use `ratesUpdate`\")\n}\n\n\"\"\"Autogenerated return type of DiscountCreate\"\"\"\ntype DiscountCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  discount: Discount\n  errors: [String!]\n}\n\n\"\"\"Autogenerated input type of DiscountCreate\"\"\"\ninput DiscountCreateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  code: String!\n  state: DiscountState!\n  redemptionType: DiscountRedemptionType!\n  quantity: Int\n  percent: Float\n  fixed: Float\n  userId: ID!\n}\n\n\"\"\"Autogenerated return type of DiscountDelete\"\"\"\ntype DiscountDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  discount: Discount\n  errors: [String!]\n}\n\n\"\"\"Autogenerated input type of DiscountDelete\"\"\"\ninput DiscountDeleteInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  user_id: ID\n}\n\n\"\"\"Autogenerated return type of DiscountsUpdate\"\"\"\ntype DiscountsUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  discounts: [Discount]!\n  errors: [[Error!]]!\n}\n\n\"\"\"Error message with the corresponding key it belongs to\"\"\"\ntype Error {\n  key: String!\n  message: String!\n}\n\n\"\"\"Autogenerated input type of DiscountsUpdate\"\"\"\ninput DiscountsUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  discounts: [Discount_UpdateDiscount!]!\n}\n\ninput Discount_UpdateDiscount {\n  id: ID!\n  code: String\n  state: DiscountState\n  redemptionType: DiscountRedemptionType\n  quantity: Int\n  percent: Float\n  fixed: Float\n}\n\n\"\"\"Autogenerated return type of DiscountsCreate\"\"\"\ntype DiscountsCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  discounts: [Discount!]\n  errors: [String!]\n}\n\n\"\"\"Autogenerated input type of DiscountsCreate\"\"\"\ninput DiscountsCreateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  codes: [String!]!\n  state: DiscountState!\n  redemptionType: DiscountRedemptionType!\n  quantity: Int\n  percent: Float\n  fixed: Float\n  userId: ID!\n}\n\n\"\"\"Autogenerated return type of HostGaIntegrationUpdate\"\"\"\ntype HostGaIntegrationUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  host: Host\n}\n\n\"\"\"Autogenerated input type of HostGaIntegrationUpdate\"\"\"\ninput HostGaIntegrationUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  hostGaIntegration: Host_GaIntegration!\n}\n\ninput Host_GaIntegration {\n  hostId: ID!\n  googleAnalyticsId: String!\n  googleAnalyticsEcommerce: Boolean!\n}\n\n\"\"\"Autogenerated return type of LocaleChange\"\"\"\ntype LocaleChangePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [Error!]!\n  viewer: Viewer\n}\n\n\"\"\"Autogenerated input type of LocaleChange\"\"\"\ninput LocaleChangeInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  locale: Locale!\n}\n\n\"\"\"Autogenerated return type of SeatsSyncRates\"\"\"\ntype SeatsSyncRatesPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  event: Event\n}\n\n\"\"\"Autogenerated input type of SeatsSyncRates\"\"\"\ninput SeatsSyncRatesInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of SeatsPublishDraft\"\"\"\ntype SeatsPublishDraftPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  event: Event\n}\n\n\"\"\"Autogenerated input type of SeatsPublishDraft\"\"\"\ninput SeatsPublishDraftInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of RateCreate\"\"\"\ntype RateCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [Error!]\n  rate: Rate\n}\n\n\"\"\"Autogenerated input type of RateCreate\"\"\"\ninput RateCreateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  eventId: ID!\n  rate: RateCreateInputType!\n}\n\n\"\"\"Properties for RateCreate mutation\"\"\"\ninput RateCreateInputType {\n  attributes: RateCreateAttributes!\n}\n\n\"\"\"Attributes that define a template for a ticket offering\"\"\"\ninput RateCreateAttributes {\n  \"\"\"Name of the ticket\"\"\"\n  name: String\n\n  \"\"\"Description of the ticket\"\"\"\n  description: String\n\n  \"\"\"Price of the ticket\"\"\"\n  price: Float\n\n  \"\"\"Min price of the ticket (For PWYW_TICKET only)\"\"\"\n  minPrice: Float\n\n  \"\"\"Number of tickets available\"\"\"\n  capacity: Int\n\n  \"\"\"Where this ticket is available\"\"\"\n  clientGroup: RateClientGroup\n\n  \"\"\"Used to specify tickets as being locked, hidden, active, etc\"\"\"\n  state: RateState\n\n  \"\"\"When the ticket is available for sale\"\"\"\n  saleStart: Time\n\n  \"\"\"When the ticket is no longer available for sale\"\"\"\n  saleEnd: Time\n\n  \"\"\"Minimum number of tickets required per order\"\"\"\n  minQuantity: Int\n\n  \"\"\"Maximum number of tickets allowed per order\"\"\"\n  maxQuantity: Int\n\n  \"\"\"When to release purchased tickets to attendees\"\"\"\n  releaseOffset: ReleaseOffset\n\n  \"\"\"Ticket type\"\"\"\n  type: RateCreateType\n\n  \"\"\"Access key for locked rates\"\"\"\n  accessKey: AccessKeyInputType\n\n  \"\"\"Rate exclusion rules\"\"\"\n  exclusionRules: [JSON!]\n}\n\n\"\"\"How long before the event would you like to release the ticket?\"\"\"\nenum ReleaseOffset {\n  \"\"\"Tickets will be released to attendees immediately\"\"\"\n  IMMEDIATELY\n\n  \"\"\"Tickets will be released to attendees 1 day before the event\"\"\"\n  ONE_DAY\n\n  \"\"\"Tickets will be released to attendees 2 days before the event\"\"\"\n  TWO_DAYS\n\n  \"\"\"Tickets will be released to attendees 3 days before the event\"\"\"\n  THREE_DAYS\n\n  \"\"\"Tickets will be released to attendees 7 days before the event\"\"\"\n  ONE_WEEK\n\n  \"\"\"Tickets will never be released to attendees\"\"\"\n  NEVER\n}\n\n\"\"\"Possible types to set on the createRate mutation.\"\"\"\nenum RateCreateType {\n  \"\"\"The rate is for a paid ticket\"\"\"\n  PAID_TICKET\n\n  \"\"\"The rate is for a free ticket\"\"\"\n  FREE_TICKET\n\n  \"\"\"The rate is for a pay what you can ticket\"\"\"\n  PWYW_TICKET\n}\n\n\"\"\"Properties for AccessKey creation\"\"\"\ninput AccessKeyInputType {\n  \"\"\"Access key\"\"\"\n  key: String!\n}\n\n\"\"\"Autogenerated return type of RateUpdate\"\"\"\ntype RateUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String]\n  rate: Rate\n}\n\n\"\"\"Autogenerated input type of RateUpdate\"\"\"\ninput RateUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  rate: RateUpdateInputType!\n}\n\n\"\"\"Properties for RateUpdate mutation\"\"\"\ninput RateUpdateInputType {\n  id: ID\n  attributes: RateUpdateAttributes!\n}\n\n\"\"\"Shared updatable Rate attributes\"\"\"\ninput RateUpdateAttributes {\n  \"\"\"Name of the ticket\"\"\"\n  name: String\n\n  \"\"\"Description of the ticket\"\"\"\n  description: String\n\n  \"\"\"Price of the ticket\"\"\"\n  price: Float\n\n  \"\"\"Min price of the ticket (For PWYW_TICKET only)\"\"\"\n  minPrice: Float\n\n  \"\"\"Number of tickets available\"\"\"\n  capacity: Int\n\n  \"\"\"Where this ticket is available\"\"\"\n  clientGroup: RateClientGroup\n\n  \"\"\"When the ticket is available for sale\"\"\"\n  saleStart: Time\n\n  \"\"\"When the ticket is no longer available for sale\"\"\"\n  saleEnd: Time\n\n  \"\"\"Minimum number of tickets required per order\"\"\"\n  minQuantity: Int\n\n  \"\"\"Maximum number of tickets allowed per order\"\"\"\n  maxQuantity: Int\n\n  \"\"\"When to release purchased tickets to attendees\"\"\"\n  releaseOffset: ReleaseOffset\n\n  \"\"\"Ticket type\"\"\"\n  type: RateCreateType\n\n  \"\"\"Access key for locked rates\"\"\"\n  accessKey: AccessKeyInputType\n\n  \"\"\"Used to specify tickets as being locked, hidden, active, etc\"\"\"\n  state: RateState\n  sku: String\n\n  \"\"\"Rate exclusion rules\"\"\"\n  exclusionRules: [JSON!]\n}\n\n\"\"\"Autogenerated return type of RatesUpdate\"\"\"\ntype RatesUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String]\n  rates: [Rate!]\n}\n\n\"\"\"Autogenerated input type of RatesUpdate\"\"\"\ninput RatesUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  rates: [RateUpdateInputType]!\n}\n\n\"\"\"Autogenerated return type of EventSave\"\"\"\ntype EventSavePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  event: Event\n}\n\n\"\"\"Autogenerated input type of EventSave\"\"\"\ninput EventSaveInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  eventId: ID!\n}\n\n\"\"\"Autogenerated return type of EventUpdate\"\"\"\ntype EventUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  event: Event\n}\n\n\"\"\"Autogenerated input type of EventUpdate\"\"\"\ninput EventUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  attributes: Event_EventUpdate!\n}\n\ninput Event_EventUpdate {\n  title: String\n  descriptionHtml: String\n  address: String\n  latitude: Float\n  longitude: Float\n  country: String\n  tz: String\n  transactionCurrency: String\n  settlementCurrency: String\n  contactDetails: String\n  allInPricing: Boolean\n  privacy: String\n  venueName: String\n  socialButtons: Boolean\n  hiddenDate: Boolean\n  maxQuantity: Int\n  capacityAlert: Boolean\n  privateNote: String\n  virtual: Boolean\n  virtualInfo: String\n  refundPolicy: RefundPolicyInputType\n  coverPhoto: ImageInputType\n  eventPhoto: ImageInputType\n  additionalPhotos: [ImageUpdateInputType!]\n  getTicketsText: String\n  category: Category_EventUpdate\n  rates: [RateUpdateInputType!]\n  timeSlots: [TimeSlot_EventUpdate!]\n  schedules: [Schedule_EventUpdate!]\n}\n\n\"\"\"Properties for a Refund policy on event creation\"\"\"\ninput RefundPolicyInputType {\n  attributes: RefundPolicyAttributes!\n}\n\n\"\"\"Attributes that define a template for a refund policy\"\"\"\ninput RefundPolicyAttributes {\n  \"\"\"Time offset\"\"\"\n  offset: RefundOffset\n\n  \"\"\"Time scope\"\"\"\n  type: RefundOffsetType\n}\n\n\"\"\"Image for listings, avatars, and add on options\"\"\"\ninput ImageInputType {\n  uploadId: String!\n  isGif: Boolean\n  cropWidth: Int\n  cropHeight: Int\n  cropX: Int\n  cropY: Int\n}\n\n\"\"\"Image for listings, avatars, and add on options\"\"\"\ninput ImageUpdateInputType {\n  id: ID\n  uploadId: String\n  isGif: Boolean\n  cropWidth: Int\n  cropHeight: Int\n  cropX: Int\n  cropY: Int\n}\n\ninput Category_EventUpdate {\n  id: ID!\n}\n\ninput TimeSlot_EventUpdate {\n  id: ID\n  startAt: TimeWithoutTz\n  endAt: TimeWithoutTz\n}\n\n\"\"\"\nUsed to bulk update recurring timeslots based on certain rules and intervals\n\"\"\"\ninput Schedule_EventUpdate {\n  id: ID\n  startDate: Date\n  endDate: Date\n\n  \"\"\"Days of the week timeslots will be available\"\"\"\n  weekdaysAvailable: [Days!]\n  intervals: [Schedule_Intervals_EventUpdate!]\n}\n\n\"\"\"Each recurring timeslots start time and duration\"\"\"\ninput Schedule_Intervals_EventUpdate {\n  id: ID\n  startHour: Int\n  startMinute: Int\n\n  \"\"\"The length of the interval in seconds\"\"\"\n  duration: Int\n  datesToSkip: [Date!]\n}\n\n\"\"\"Autogenerated return type of EventCreate\"\"\"\ntype EventCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  event: Event\n}\n\n\"\"\"Autogenerated input type of EventCreate\"\"\"\ninput EventCreateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  event: Event_EventCreate!\n  publish: Boolean\n}\n\ninput Event_EventCreate {\n  category: Category_EventCreate!\n  rates: [RateCreateInputType!]!\n  timeSlots: [TimeSlot_EventCreate!]\n  schedules: [Schedule_EventCreate!]\n  title: String!\n  descriptionHtml: String!\n  address: String!\n  longitude: Float!\n  latitude: Float!\n  transactionCurrency: String\n  settlementCurrency: String\n  contactDetails: String\n  allInPricing: Boolean\n  coverPhoto: ImageInputType\n  eventPhoto: ImageInputType\n  additionalPhotos: [ImageInputType!]\n  privacy: String\n  userId: ID\n  venueName: String\n  socialButtons: Boolean\n  hiddenDate: Boolean\n  maxQuantity: Int\n  capacityAlert: Boolean\n  privateNote: String\n  refundPolicy: RefundPolicyInputType\n  publishLaterAt: Time\n  virtual: Boolean\n  virtualInfo: String\n  availableCountries: [CountryCode]\n}\n\ninput Category_EventCreate {\n  id: ID!\n}\n\ninput TimeSlot_EventCreate {\n  startAt: TimeWithoutTz!\n  endAt: TimeWithoutTz!\n}\n\n\"\"\"\nUsed to bulk create recurring timeslots based on certain rules and intervals\n\"\"\"\ninput Schedule_EventCreate {\n  startDate: Date!\n  endDate: Date\n\n  \"\"\"Days of the week timeslots will be available\"\"\"\n  weekdaysAvailable: [Days!]\n  intervals: [Schedule_Intervals_EventCreate!]!\n}\n\n\"\"\"Each recurring timeslots start time and duration\"\"\"\ninput Schedule_Intervals_EventCreate {\n  startHour: Int!\n  startMinute: Int!\n\n  \"\"\"The length of the interval in seconds\"\"\"\n  duration: Int!\n  datesToSkip: [Date!]\n}\n\n\"\"\"Autogenerated return type of EventDuplicate\"\"\"\ntype EventDuplicatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  event: Event\n}\n\n\"\"\"Autogenerated input type of EventDuplicate\"\"\"\ninput EventDuplicateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  startAt: TimeWithoutTz!\n  endAt: TimeWithoutTz!\n  title: String\n  accessKeys: Boolean\n  discountCodes: Boolean\n}\n\n\"\"\"Autogenerated return type of EventPublish\"\"\"\ntype EventPublishPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  event: Event\n}\n\n\"\"\"Autogenerated input type of EventPublish\"\"\"\ninput EventPublishInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of EventUnpublish\"\"\"\ntype EventUnpublishPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  event: Event\n}\n\n\"\"\"Autogenerated input type of EventUnpublish\"\"\"\ninput EventUnpublishInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of EventDelete\"\"\"\ntype EventDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  event: Event\n}\n\n\"\"\"Autogenerated input type of EventDelete\"\"\"\ninput EventDeleteInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of EventReport\"\"\"\ntype EventReportPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  event: Event\n}\n\n\"\"\"Autogenerated input type of EventReport\"\"\"\ninput EventReportInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of AttendeesMessage\"\"\"\ntype AttendeesMessagePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  event: Event\n}\n\n\"\"\"Autogenerated input type of AttendeesMessage\"\"\"\ninput AttendeesMessageInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  messageType: MessageType!\n  message: String!\n  timeSlotIds: [ID!]\n  rateIds: [ID!]\n  datetime: Time\n}\n\n\"\"\"Types of filters by which to send messages\"\"\"\nenum MessageType {\n  AFTER_DATE\n  BY_RATE\n  CHECKED_IN\n  UNAPPROVED\n  DECLINED\n  ALL\n}\n\n\"\"\"Autogenerated return type of TimeSlotUpdate\"\"\"\ntype TimeSlotUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  timeSlot: TimeSlot\n}\n\n\"\"\"Autogenerated input type of TimeSlotUpdate\"\"\"\ninput TimeSlotUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  startTime: Time\n  endTime: Time\n  sendEmail: Boolean!\n}\n\n\"\"\"Autogenerated return type of EventSetReport\"\"\"\ntype EventSetReportPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  eventSet: EventSet\n}\n\n\"\"\"Autogenerated input type of EventSetReport\"\"\"\ninput EventSetReportInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of CustomReportCreate\"\"\"\ntype CustomReportCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  custom_report: CustomReport\n  errors: [String!]\n}\n\n\"\"\"Autogenerated input type of CustomReportCreate\"\"\"\ninput CustomReportCreateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  name: String!\n  description: String\n  reportType: String!\n  columns: [String!]!\n  filters: [JSON!]\n  events: [String!]\n  from: Date\n  to: Date\n  days: [Days!]\n  hour: Int\n  enabled: Boolean!\n  order: String\n  timeFilter: String\n  eventRangeFrom: Date\n  eventRangeTo: Date\n  currencyFilter: String\n}\n\n\"\"\"Autogenerated return type of CustomReportDelete\"\"\"\ntype CustomReportDeletePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  custom_report: CustomReport\n  errors: [String!]\n}\n\n\"\"\"Autogenerated input type of CustomReportDelete\"\"\"\ninput CustomReportDeleteInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of CustomReportUpdate\"\"\"\ntype CustomReportUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  custom_report: CustomReport\n  errors: [String!]\n}\n\n\"\"\"Autogenerated input type of CustomReportUpdate\"\"\"\ninput CustomReportUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  name: String\n  description: String\n  reportType: String\n  columns: [String!]\n  filters: [JSON!]\n  events: [String!]\n  from: Date\n  to: Date\n  days: [Days!]\n  hour: Int\n  enabled: Boolean!\n  order: String\n  timeFilter: String\n  eventRangeFrom: Date\n  eventRangeTo: Date\n  currencyFilter: String\n}\n\n\"\"\"Autogenerated return type of TransferDecline\"\"\"\ntype TransferDeclinePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [Error!]\n  transfer: Transfer\n}\n\n\"\"\"Autogenerated input type of TransferDecline\"\"\"\ninput TransferDeclineInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  token: String!\n}\n\n\"\"\"Autogenerated return type of TransferAccept\"\"\"\ntype TransferAcceptPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [Error!]\n  transfer: Transfer\n}\n\n\"\"\"Autogenerated input type of TransferAccept\"\"\"\ninput TransferAcceptInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  token: String!\n  answers: [JSON!]\n}\n\n\"\"\"Autogenerated return type of AddOnCreate\"\"\"\ntype AddOnCreatePayload {\n  addOn: AddOn\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [Error!]\n}\n\n\"\"\"Autogenerated input type of AddOnCreate\"\"\"\ninput AddOnCreateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  addOn: AddOnInputType!\n}\n\ninput AddOnInputType {\n  id: ID\n  hostId: ID\n  taxIds: [ID]\n  eventIds: [ID]\n  attributes: AddOnAttributes\n}\n\ninput AddOnAttributes {\n  name: String\n  description: String\n  currency: CurrencyCode\n  hostPaysCommission: Boolean\n  rates: [AddOnRateInputType]\n  images: [ImageInputType]\n}\n\n\"\"\"Properties for AddOnRate mutation\"\"\"\ninput AddOnRateInputType {\n  id: ID\n  attributes: AddOnRateAttributes\n}\n\n\"\"\"Shared updatable AddOnRate attributes\"\"\"\ninput AddOnRateAttributes {\n  name: String\n  description: String\n  state: RateState\n  price: Float\n  sku: String\n  optionName: String\n  capacity: Int\n  minQuantity: Int\n  maxQuantity: Int\n}\n\n\"\"\"Autogenerated return type of AddOnDelete\"\"\"\ntype AddOnDeletePayload {\n  addOn: AddOn\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n}\n\n\"\"\"Autogenerated input type of AddOnDelete\"\"\"\ninput AddOnDeleteInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  hostId: ID\n}\n\n\"\"\"Autogenerated return type of AddOnUpdate\"\"\"\ntype AddOnUpdatePayload {\n  addOn: AddOn\n\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [Error!]\n}\n\n\"\"\"Autogenerated input type of AddOnUpdate\"\"\"\ninput AddOnUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  addOn: AddOnInputType!\n}\n\n\"\"\"Autogenerated return type of TaxCreate\"\"\"\ntype TaxCreatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  tax: Tax\n}\n\n\"\"\"Autogenerated input type of TaxCreate\"\"\"\ninput TaxCreateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  tax: TaxInputType!\n}\n\n\"\"\"Properties for Tax mutation\"\"\"\ninput TaxInputType {\n  id: ID\n  attributes: TaxAttributesType\n}\n\n\"\"\"Attributes for Tax mutation\"\"\"\ninput TaxAttributesType {\n  name: String\n  percent: Float\n  taxId: String\n  userId: ID\n}\n\n\"\"\"Autogenerated return type of OrderItemCheckIn\"\"\"\ntype OrderItemCheckInPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String]\n  orderItem: OrderItem\n}\n\n\"\"\"Autogenerated input type of OrderItemCheckIn\"\"\"\ninput OrderItemCheckInInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of OrderItemCheckOut\"\"\"\ntype OrderItemCheckOutPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String]\n  orderItem: OrderItem\n}\n\n\"\"\"Autogenerated input type of OrderItemCheckOut\"\"\"\ninput OrderItemCheckOutInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of ExternalMetadataUpdate\"\"\"\ntype ExternalMetadataUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String]\n  orderItem: OrderItem\n}\n\n\"\"\"Autogenerated input type of ExternalMetadataUpdate\"\"\"\ninput ExternalMetadataUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  externalMetadata: String!\n}\n\n\"\"\"Autogenerated return type of OrderItemResend\"\"\"\ntype OrderItemResendPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  orderItem: OrderItem!\n}\n\n\"\"\"Autogenerated input type of OrderItemResend\"\"\"\ninput OrderItemResendInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of OrderItemAttendeeInfoChange\"\"\"\ntype OrderItemAttendeeInfoChangePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String]\n  orderItem: OrderItem\n}\n\n\"\"\"Autogenerated input type of OrderItemAttendeeInfoChange\"\"\"\ninput OrderItemAttendeeInfoChangeInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  firstName: String\n  lastName: String\n  email: String\n  answers: [AnswerInputType!]!\n  newAnswers: [NewAnswerInputType!]!\n}\n\n\"\"\"Input type for an answer.\"\"\"\ninput AnswerInputType {\n  id: ID!\n  value: Any\n}\n\n\"\"\"Any type. Should only be used for checkout questions\"\"\"\nscalar Any\n\n\"\"\"Input type for a new answer.\"\"\"\ninput NewAnswerInputType {\n  questionId: ID!\n  value: Any\n}\n\n\"\"\"Autogenerated return type of OrderResend\"\"\"\ntype OrderResendPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  order: Order!\n}\n\n\"\"\"Autogenerated input type of OrderResend\"\"\"\ninput OrderResendInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  receiptOnly: Boolean = false\n}\n\n\"\"\"Autogenerated return type of OrderBuyerInfoChange\"\"\"\ntype OrderBuyerInfoChangePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  order: Order\n}\n\n\"\"\"Autogenerated input type of OrderBuyerInfoChange\"\"\"\ninput OrderBuyerInfoChangeInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  firstName: String\n  lastName: String\n  email: String\n  answers: [AnswerInputType!]!\n  newAnswers: [NewAnswerInputType!]!\n}\n\n\"\"\"Autogenerated return type of MarkInvoiceAsPaid\"\"\"\ntype MarkInvoiceAsPaidPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  order: Order!\n}\n\n\"\"\"Autogenerated input type of MarkInvoiceAsPaid\"\"\"\ninput MarkInvoiceAsPaidInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of OrderRefund\"\"\"\ntype OrderRefundPayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  order: Order\n}\n\n\"\"\"Autogenerated input type of OrderRefund\"\"\"\ninput OrderRefundInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  orderItemRefundDatas: [OrderItemRefundData!]!\n  totalReturning: Int!\n  transactionRefund: Boolean!\n  cancelNoRefund: Boolean!\n}\n\n\"\"\"Autogenerated return type of OrderTimeSlotUpdate\"\"\"\ntype OrderTimeSlotUpdatePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  order: Order\n}\n\n\"\"\"Autogenerated input type of OrderTimeSlotUpdate\"\"\"\ninput OrderTimeSlotUpdateInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  timeSlotId: ID!\n}\n\n\"\"\"Autogenerated return type of OrderUpgrade\"\"\"\ntype OrderUpgradePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  order: Order\n}\n\n\"\"\"Autogenerated input type of OrderUpgrade\"\"\"\ninput OrderUpgradeInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n  answers: [QuestionInputType!]!\n  upgrades: [UpgradeInputType!]!\n}\n\n\"\"\"Input type for an question.\"\"\"\ninput QuestionInputType {\n  name: String!\n  value: Any\n}\n\n\"\"\"Properties for OrderUpgrade mutation\"\"\"\ninput UpgradeInputType {\n  orderItemId: ID!\n  newRateId: ID!\n  answers: [QuestionInputType!]!\n}\n\n\"\"\"Autogenerated return type of OrderApprove\"\"\"\ntype OrderApprovePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  order: Order\n}\n\n\"\"\"Autogenerated input type of OrderApprove\"\"\"\ninput OrderApproveInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}\n\n\"\"\"Autogenerated return type of OrderDecline\"\"\"\ntype OrderDeclinePayload {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  errors: [String!]\n  order: Order\n}\n\n\"\"\"Autogenerated input type of OrderDecline\"\"\"\ninput OrderDeclineInput {\n  \"\"\"A unique identifier for the client performing the mutation.\"\"\"\n  clientMutationId: String\n  id: ID!\n}",
    "Weather API": "directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE\n\ntype City {\n  id: ID\n  name: String\n  country: String\n  coord: Coordinates\n  weather: Weather\n}\n\ntype Coordinates {\n  lon: Float\n  lat: Float\n}\n\ntype Summary {\n  title: String\n  description: String\n  icon: String\n}\n\ntype Temperature {\n  actual: Float\n  feelsLike: Float\n  min: Float\n  max: Float\n}\n\ntype Wind {\n  speed: Float\n  deg: Int\n}\n\ntype Clouds {\n  all: Int\n  visibility: Int\n  humidity: Int\n}\n\ntype Weather {\n  summary: Summary\n  temperature: Temperature\n  wind: Wind\n  clouds: Clouds\n  timestamp: Int\n}\n\ninput ConfigInput {\n  units: Unit\n  lang: Language\n}\n\ntype Query {\n  getCityByName(name: String!, country: String, config: ConfigInput): City\n  getCityById(id: [String!], config: ConfigInput): [City]\n}\n\nenum Unit {\n  metric\n  imperial\n  kelvin\n}\n\nenum Language {\n  af\n  al\n  ar\n  az\n  bg\n  ca\n  cz\n  da\n  de\n  el\n  en\n  eu\n  fa\n  fi\n  fr\n  gl\n  he\n  hi\n  hr\n  hu\n  id\n  it\n  ja\n  kr\n  la\n  lt\n  mk\n  no\n  nl\n  pl\n  pt\n  pt_br\n  ro\n  ru\n  sv\n  se\n  sk\n  sl\n  sp\n  es\n  sr\n  th\n  tr\n  ua\n  uk\n  vi\n  zh_cn\n  zh_tw\n  zu\n}\n\nenum CacheControlScope {\n  PUBLIC\n  PRIVATE\n}\n\n\"\"\"The `Upload` scalar type represents a file upload.\"\"\"\nscalar Upload",
    "melodyRepo": "\"\"\"Dependency specification for a package\"\"\"\ntype Dependency {\n  \"\"\"Package name\"\"\"\n  name: String!\n\n  \"\"\"Range for allowed versions\"\"\"\n  versionRange: String!\n\n  \"\"\"Scope of dependency (BUILD, TEST, etc)\"\"\"\n  scope: DependencyScope!\n}\n\n\"\"\"Dependency type corresponding to Imports vs. TestImports\"\"\"\nenum DependencyScope {\n  BUILD\n  TEST\n}\n\n\"\"\"A single package inside of a project\"\"\"\ntype Package {\n  \"\"\"Canonical name for this package\"\"\"\n  name: String!\n\n  \"\"\"If it's a \"main\" package\"\"\"\n  isMain: Boolean!\n\n  \"\"\"List of available versions\"\"\"\n  versionList: [Version]!\n\n  \"\"\"Request specific version\"\"\"\n  version(version: String, revision: String): Version\n}\n\n\"\"\"The Query type, represents all of the entry points\"\"\"\ntype Query {\n  package(name: String!): Package\n  repository(name: String!): Repository\n}\n\n\"\"\"Installable version of project\"\"\"\ntype Release {\n  \"\"\"Project name\"\"\"\n  name: String!\n\n  \"\"\"Semantic Version number\"\"\"\n  version: String!\n\n  \"\"\"Revision in VCS\"\"\"\n  revision: String!\n\n  \"\"\"Download URL\"\"\"\n  url: String!\n\n  \"\"\"Release timestamp\"\"\"\n  createdAt: Time\n}\n\n\"\"\"A repository/project\"\"\"\ntype Repository {\n  \"\"\"Canonical name for this repo\"\"\"\n  name: String!\n\n  \"\"\"List of available releases\"\"\"\n  releaseList: [Release]!\n\n  \"\"\"List of available packages\"\"\"\n  packageList: [Package]!\n}\n\n\"\"\"Time (GraphQL internal)\"\"\"\nscalar Time\n\n\"\"\"A package version\"\"\"\ntype Version {\n  \"\"\"Name for the parent package\"\"\"\n  name: String!\n\n  \"\"\"Semantic version number\"\"\"\n  version: String!\n\n  \"\"\"Dependency list (filtered by scope)\"\"\"\n  dependencyList(scope: DependencyScope): [Dependency]!\n\n  \"\"\"Installable release for this package\"\"\"\n  release: Release\n}"
}
